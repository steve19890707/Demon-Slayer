{"version":3,"sources":["reducer/chess.js","reducer/enemyChess.js","reducer/map.js","components/Common/Checkerboard.js","components/Common/ConfirmTips.js","components/DataLoader.js","components/Chess/ChessUIBoard.js","components/Common/ChessStatus.js","components/Chess/Chess.js","components/EnemyChess/EnemyChessUIBoard.js","components/EnemyChess/EnemyChess.js","constants/stageRule.js","components/Canvas.js","components/App.js","reportWebVitals.js","reducer/index.js","index.js"],"names":["basicCommon","x","y","checkStatus","boardStatus","debut","roundAttack","chess","createSlice","name","initialState","cn","step","attack","hp","sp","fullValue","skill","atk","reducers","stageDebut","state","actions","isDebutChess","payload","map","value","key","v","get","chessMove","changeX","changeY","chessSelected","chessCheckStatus","enemyChess","enemyStageDebut","enemyChessSelected","enemyChessCheckStatus","mapLimit","createInitialState","method","list","i","push","createStraightLine","traverse","color","alpha","zIndex","isInteractive","chessMap","MoveSelect","action","position","changeColor","alphaVal","GetMove","currentChessPositions","GetAttack","texture","PIXI","WHITE","CreateCheckerboard","reduxProps","currentChess","dispatch","setTipStatus","setMoveStep","Fragment","k","interactive","buttonMode","width","height","tint","pointertap","type","title","status","isMatch","checkMatchAttackPosition","acttack","ConfirmTip","props","tipStatus","draw","g","lineStyle","beginFill","drawRoundedRect","endFill","text","anchor","style","fontFamily","fontSize","fill","prev","loader","hostname","window","location","add","load","ChessUIBoard","ChessData","ChessVal","ChessKey","EnemyChessData","positionX","positionY","setCurrentChess","specialPosition","forMoveArray","forAttackArray","useState","fromJS","id","textColor","textInforArray","setTextInforArray","CreateText","noop","isAttack","chessX","chessY","chessAtk","isDebutEnemy","filter","limitPosition","positionRange","getaddX","getaddY","getlessX","getlessY","val","compareAttack","toJS","pointerover","setIn","pointerout","e","console","log","target","ChessStatus","CheckStatus","CreateSkillList","length","image","resources","data","Chess","chessProps","moveStep","Boolean","EnemyChessUIBoard","EnemyChess","enemyChessProps","stageRule","stageOne","debutChess","debutEnemyChess","stageTwo","Canvas","stageStatus","useSelector","useDispatch","useEffect","getIn","options","autoDensity","antialias","backgroundColor","sortableChildren","GlobalStyle","createGlobalStyle","StyledApp","styled","div","App","dataIsDone","setDataIsDone","onComplete","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.794de0a7.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nconst basicCommon = {\n  x:0,\n  y:0,\n  checkStatus:false,\n  boardStatus:false,\n  debut:false,\n  roundAttack:false,\n};\nconst chess = createSlice({\n  name:'chess',\n  initialState:[\n    {\n      name:'Tanjirou',\n      cn:'竃門 碳治郎',\n      step:3,\n      attack:2,\n      hp:1500,\n      sp:100,\n      fullValue:{\n        hp:1500,\n        sp:100\n      },\n      skill:[{ \n        name:'斬擊',\n        atk:50,\n        sp:0\n      },{ \n        name:'叄之型―流流舞',\n        atk:200,\n        sp:5\n      },{ \n        name:'捌之型―滝壺',\n        atk:200,\n        sp:5\n      },{\n        name:'拾之型―生生流轉',\n        atk:500,\n        sp:10\n      }],\n      ...basicCommon\n    },{\n      name:'Nezuko',\n      step:2,\n      attack:1,\n      hp:2200,\n      sp:200,\n      fullValue:{\n        hp:2200,\n        sp:200\n      },\n      skill:[{ \n        name:'爪擊',\n        atk:50,\n        sp:0\n      },{ \n        name:'踢擊',\n        atk:120,\n        sp:5\n      },{ \n        name:'血鬼術',\n        atk:800,\n        sp:150\n      }],\n      ...basicCommon\n    },{\n      name:'Inosuke',\n      cn:'嘴平 伊之助',\n      step:4,\n      attack:3,\n      hp:1800,\n      sp:80,\n      fullValue:{\n        hp:1800,\n        sp:80\n      },\n      skill:[{ \n        name:'斬擊',\n        atk:50,\n        sp:0\n      },{ \n        name:'壹之牙―穿透刺射',\n        atk:120,\n        sp:2\n      },{ \n        name:'貳之牙―利刃對劈',\n        atk:200,\n        sp:5\n      },{\n        name:'叄之牙―獠牙撕扯',\n        atk:400,\n        sp:8\n      }],\n      ...basicCommon\n    }\n  ],\n  reducers:{\n    stageDebut:(state, actions)=> {\n      const { isDebutChess } = actions.payload;\n      state.map((value,key)=>{\n        return isDebutChess.map(v=>{\n          if(value.name===v.get('name')){\n            return (\n              state[key].debut = true,\n              state[key].x = v.get('x'),\n              state[key].y = v.get('y')\n            );\n          }else return null;\n        })\n      })\n    },\n    chessMove: (state, actions)=>{\n      const { key, changeX, changeY } = actions.payload;\n      state[key].x = changeX;\n      state[key].y = changeY;\n    },\n    chessSelected: (state, actions)=>{\n      const { key } = actions.payload;\n      state[key].boardStatus = !state[key].boardStatus;\n    },\n    chessCheckStatus: (state, actions)=> {\n      const { key } = actions.payload;\n      state[key].checkStatus = !state[key].checkStatus;\n    }\n  }\n});\nexport default chess.reducer;\nexport const { \n  stageDebut, chessMove, chessSelected, chessCheckStatus \n} = chess.actions;","import { createSlice } from '@reduxjs/toolkit';\nconst basicCommon = {\n  x:0,\n  y:0,\n  checkStatus:false,\n  boardStatus:false,\n  debut:false,\n  roundAttack:false,\n};\nconst enemyChess = createSlice({\n  name:'enemyChess',\n  initialState:[\n    {\n      name:'Teoni',\n      cn:'手鬼',\n      hp:2000,\n      sp:100,\n      fullValue:{\n        hp:2000,\n        sp:100\n      },\n      skill:[{ \n        name:'胡亂毆打',\n        atk:50,\n        sp:0\n      },{ \n        name:'你是第十四個',\n        atk:300,\n        sp:10\n      }],\n      ...basicCommon\n    },{\n      name:'Nomanooni',\n      cn:'沼鬼',\n      hp:1500,\n      sp:200,\n      fullValue:{\n        hp:1500,\n        sp:200\n      },\n      skill:[{ \n        name:'爪擊',\n        atk:70,\n        sp:0\n      },{ \n        name:'分身攻擊',\n        atk:600,\n        sp:15\n      }],\n      ...basicCommon\n    }\n  ],\n  reducers:{\n    enemyStageDebut:(state, actions)=> {\n      const { isDebutChess } = actions.payload;\n      state.map((value,key)=>{\n        return isDebutChess.map(v=>{\n          if(value.name===v.get('name')){\n            return (\n              state[key].debut = true,\n              state[key].x = v.get('x'),\n              state[key].y = v.get('y')\n            );\n          }else return null;\n        })\n      })\n    },\n    enemyChessSelected: (state, actions)=>{\n      const { key } = actions.payload;\n      state[key].boardStatus = !state[key].boardStatus;\n    },\n    enemyChessCheckStatus: (state, actions)=> {\n      const { key } = actions.payload;\n      state[key].checkStatus = !state[key].checkStatus;\n    }\n  }\n});\nexport default enemyChess.reducer;\nexport const { enemyStageDebut, enemyChessSelected, enemyChessCheckStatus } = enemyChess.actions;","import { createSlice } from '@reduxjs/toolkit';\nconst mapLimit = { x:20, y:15 };\nconst createTraverseLine = (traverse=0,color='')=>{\n  const list = [];\n  for(let i=0;i<mapLimit.x;i++){\n    list.push({\n      x:i,\n      y:traverse,\n      color:color,\n      alpha:1,\n      zIndex:1,\n      isInteractive:false\n    });\n  };\n  return list;\n};\nconst createStraightLine = ( method=()=>{} )=>{\n  const list = [];\n  for(let i=0;i<mapLimit.y;i++){\n    list.push(method(i,'0x383838'));\n  };\n  return list;\n};\nconst createInitialState = createStraightLine(createTraverseLine);\nconst chessMap = createSlice({\n  name:'chessMap',\n  initialState: createInitialState,\n  reducers:{\n    MoveSelect:(state, action)=>{\n      const { position, step, changeColor, alphaVal=1} = action.payload;\n      for(let i=0;i<(step+1);i++){\n        if(position.x+i<=(mapLimit.x-1)){\n          state[position.y][position.x+i].color=changeColor;\n          state[position.y][position.x+i].isInteractive=false;\n          state[position.y][position.x+i].alpha=alphaVal;\n          state[position.y][position.x+i].zIndex=1;\n        };\n        if(position.y+i<=(mapLimit.y-1)){\n          state[position.y+i][position.x].color=changeColor;\n          state[position.y+i][position.x].isInteractive=false;\n          state[position.y+i][position.x].alpha=alphaVal;\n          state[position.y+i][position.x].zIndex=1;\n        };\n        if(position.x-i>=0){\n          state[position.y][position.x-i].color=changeColor;\n          state[position.y][position.x-i].isInteractive=false;\n          state[position.y][position.x-i].alpha=alphaVal;\n          state[position.y][position.x-i].zIndex=1;\n        };\n        if(position.y-i>=0){\n          state[position.y-i][position.x].color=changeColor;\n          state[position.y-i][position.x].isInteractive=false;\n          state[position.y-i][position.x].alpha=alphaVal;\n          state[position.y-i][position.x].zIndex=1;\n        };\n      }\n    },\n    GetMove:(state, action)=>{\n      const { position, step, changeColor, currentChessPositions } = action.payload;\n      for(let i=0;i<(step+1);i++){\n        if(position.x+i<=(mapLimit.x-1)){\n          state[position.y][position.x+i].color=changeColor;\n          state[position.y][position.x+i].isInteractive=true;\n          state[position.y][position.x+i].alpha=1;\n          state[position.y][position.x+i].zIndex=1;\n        };\n        if(position.y+i<=(mapLimit.y-1)){\n          state[position.y+i][position.x].color=changeColor;\n          state[position.y+i][position.x].isInteractive=true;\n          state[position.y+i][position.x].alpha=1;\n          state[position.y+i][position.x].zIndex=1;\n          state[position.y][position.x-i].alpha=1;\n          state[position.y][position.x-i].zIndex=1;\n        };\n        if(position.x-i>=0){\n          state[position.y][position.x-i].color=changeColor;\n          state[position.y][position.x-i].isInteractive=true;\n        };\n        if(position.y-i>=0){\n          state[position.y-i][position.x].color=changeColor;\n          state[position.y-i][position.x].isInteractive=true;\n          state[position.y-i][position.x].alpha=1;\n          state[position.y-i][position.x].zIndex=1;\n        };\n      }\n      currentChessPositions.map(v=>{\n        return state[v.y][v.x].isInteractive=false;\n      });\n    },\n    GetAttack:(state, action)=>{\n      const { position, step, changeColor, currentChessPositions } = action.payload;\n      for(let i=0;i<(step+1);i++){\n        if(position.x+i<=(mapLimit.x-1)){\n          state[position.y][position.x+i].color=changeColor;\n          state[position.y][position.x+i].isInteractive=true;\n          state[position.y][position.x+i].alpha=0.5;\n          state[position.y][position.x+i].zIndex=3;\n        };\n        if(position.y+i<=(mapLimit.y-1)){\n          state[position.y+i][position.x].color=changeColor;\n          state[position.y+i][position.x].isInteractive=true;\n          state[position.y+i][position.x].alpha=0.5;\n          state[position.y+i][position.x].zIndex=3;\n        };\n        if(position.x-i>=0){\n          state[position.y][position.x-i].color=changeColor;\n          state[position.y][position.x-i].isInteractive=true;\n          state[position.y][position.x-i].alpha=0.5;\n          state[position.y][position.x-i].zIndex=3;\n        };\n        if(position.y-i>=0){\n          state[position.y-i][position.x].color=changeColor;\n          state[position.y-i][position.x].isInteractive=true;\n          state[position.y-i][position.x].alpha=0.5;\n          state[position.y-i][position.x].zIndex=3;\n        };\n      }\n      currentChessPositions.map(v=>{\n        return (\n          state[v.y][v.x].isInteractive=false,\n          state[v.y][v.x].zIndex=1\n        )\n      });\n    }\n  }\n});\nexport default chessMap.reducer;\nexport const { MoveSelect, GetMove, GetAttack } = chessMap.actions;\n","import React, {} from 'react';\nimport * as PIXI from \"pixi.js\";\nimport { Sprite } from '@inlet/react-pixi';\nimport { MoveSelect } from '../../reducer/map';\nconst texture = PIXI.Texture.WHITE;\nexport const CreateCheckerboard = ({\n  reduxProps\n})=>{\n  const { \n    chess, enemyChess, chessMap, currentChess, dispatch, setTipStatus, setMoveStep\n  } = reduxProps;\n  const checkMatchAttackPosition = (x,y)=>{\n    let isMatch = false;\n    enemyChess.map(v=>{\n      const checkMatch = v.debut&&(x===v.x)&&(y===v.y);\n      if(checkMatch){\n        return isMatch=true;\n      }else return null;\n    })\n    return isMatch;\n  };\n  return <React.Fragment>\n    {chessMap.map(value=> {\n      return value.map((v,k)=>{\n        return <Sprite\n          interactive={v.isInteractive}\n          buttonMode={v.isInteractive}\n          zIndex={v.zIndex}\n          key={k}\n          width={40}\n          height={40}\n          x={v.x*40}\n          y={v.y*40}\n          tint={v.color}\n          alpha={v.alpha}\n          texture={texture}\n          pointertap={()=>{\n            switch (currentChess.type) {\n              case \"MOVE\":\n                setTipStatus({\n                  title:'確定移動?',\n                  status:true,\n                  position:{\n                    x:v.x, y:v.y\n                  }\n                });\n                dispatch(MoveSelect({\n                  position:{ \n                    x:chess[currentChess.key].x, \n                    y:chess[currentChess.key].y,\n                  },\n                  step:chess[currentChess.key].step,\n                  changeColor:'0x06d6a0'\n                }));\n                break;\n              case \"ATTACK\":\n                if(checkMatchAttackPosition(v.x,v.y)){\n                  setTipStatus({\n                    title:'確定攻擊?',\n                    status:true,\n                    position:{\n                      x:v.x, y:v.y\n                    }\n                  });\n                  dispatch(MoveSelect({\n                    position:{ \n                      x:chess[currentChess.key].x, \n                      y:chess[currentChess.key].y,\n                    },\n                    step:chess[currentChess.key].attack,\n                    changeColor:'0x383838',\n                  }));\n                }else {\n                  setMoveStep(true);\n                  dispatch(MoveSelect({\n                    position:{ \n                      x:chess[currentChess.key].x, \n                      y:chess[currentChess.key].y,\n                    },\n                    step:chess[currentChess.key].acttack,\n                    changeColor:'0x383838'\n                  }));\n                };\n              default:\n                return;\n            }; \n          }}\n        />\n      });\n    })}\n  </React.Fragment>\n};","import React from 'react';\n// import { fromJS } from 'immutable';\nimport { Graphics, Text } from '@inlet/react-pixi/animated';\nimport { chessMove } from \"../../reducer/chess\";\nimport { MoveSelect } from '../../reducer/map';\nimport * as PIXI from \"pixi.js\";\n\nexport const ConfirmTip = ({\n  props,\n})=> {\n  const { \n    chess,\n    currentChess,\n    tipStatus,\n    dispatch,\n    setMoveStep, \n    setTipStatus\n  } = props;\n  return <Graphics\n    x={400}\n    y={300}\n    zIndex={99}\n    draw={g=> {\n      g.lineStyle(1,`0xffffff`,1);\n      g.beginFill(`0x22223b`);\n      g.drawRoundedRect(-90,-50,180,100,8);\n      g.endFill();\n    }}\n  >\n    <Text\n      text={tipStatus.title}\n      anchor={0.5}\n      x={0}\n      y={-20}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 20,\n        fill:['#ffffff', '#ffffff'],\n      })}\n    />\n    <Text\n      interactive={true}\n      buttonMode={true}\n      anchor={0.5}\n      text={'確定'}\n      x={-30}\n      y={20}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 20,\n        fill:['#ffffff', '#ffffff'],\n      })}\n      pointertap={()=>{\n        switch (currentChess.type) {\n          case \"MOVE\":\n            dispatch(chessMove({\n              key: currentChess.key,\n              changeX:tipStatus.position.x,\n              changeY:tipStatus.position.y\n            }));\n            dispatch(MoveSelect({\n              position:{ \n                x:chess[currentChess.key].x, \n                y:chess[currentChess.key].y,\n              },\n              step:chess[currentChess.key].step,\n              changeColor:'0x383838'\n            }));\n            setMoveStep(true);\n            setTipStatus(prev=>{\n              return {...prev, status:false }\n            });\n            break;\n          default:\n            return;\n        }\n      }}\n    />\n    <Text\n      interactive={true}\n      buttonMode={true}\n      anchor={0.5}\n      text={'取消'}\n      x={30}\n      y={20}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 20,\n        fill:['#ffffff', '#ffffff'],\n      })}\n      pointertap={()=>{\n        switch (currentChess.type) {\n          case \"MOVE\":\n            dispatch(MoveSelect({\n              position:{ \n                x:chess[currentChess.key].x, \n                y:chess[currentChess.key].y,\n              },\n              step:chess[currentChess.key].step,\n              changeColor:'0x383838'\n            }));\n            setMoveStep(true);\n            setTipStatus(prev=>{\n              return {...prev, status:false }\n            })\n            break;\n          default:\n            return;\n        }\n      }}\n    />\n  </Graphics>\n};","import * as PIXI from \"pixi.js\";\nexport const loader = new PIXI.Loader();\nconst hostname = window.location.hostname==='localhost'?'./Demon-Slayer/':'./';\n\nloader\n  .add('Tanjirou-head-default',`${hostname}imgs/Tanjirou/head-default.jpg`)\n  .add('Tanjirou-fight',`${hostname}imgs/Tanjirou/fight.png`)\n  .add('Nezuko-head-default',`${hostname}imgs/Nezuko/head-default.jpg`)\n  .add('Nezuko-fight',`${hostname}imgs/Nezuko/fight.png`)\n  .add('Inosuke-head-default',`${hostname}imgs/Inosuke/head-default.jpg`)\n  .add('Inosuke-fight',`${hostname}imgs/Inosuke/fight.png`)\n  .add('Teoni-head-default',`${hostname}imgs/Teoni/head-default.jpg`)\n  .add('Teoni-fight',`${hostname}imgs/Teoni/fight.png`)\n  .add('Nomanooni-head-default',`${hostname}imgs/Nomanooni/head-default.jpg`)\n  .add('Nomanooni-fight',`${hostname}imgs/Nomanooni/fight.png`)\n  .load();\n","import React,{ useState } from 'react';\nimport { fromJS } from 'immutable';\nimport { Graphics, Text } from '@inlet/react-pixi/animated';\nimport { GetMove, GetAttack } from '../../reducer/map';\nimport { chessSelected, chessCheckStatus } from \"../../reducer/chess\";\nimport * as PIXI from \"pixi.js\";\n\nexport const ChessUIBoard = ({\n  ChessData,\n  ChessVal,\n  ChessKey,\n  EnemyChessData,\n  positionX,\n  positionY,\n  setCurrentChess,\n  setMoveStep,\n  dispatch\n})=> {\n  const specialPosition = {\n    x: 720,\n    y: 490\n  };\n  const forMoveArray = [];\n  const forAttackArray = [];\n  const [textInforArray, setTextInforArray] = useState(fromJS([{\n      id:1, \n      title:\"移動\",\n      textColor:['#ffffff', '#ffffff']\n    },{ \n      id:2,\n      title:\"攻擊\",\n      textColor:['#ffffff', '#ffffff']\n    },{ \n      id:3,\n      title:\"狀態\",\n      textColor:['#ffffff', '#ffffff']\n    },{ \n      id:4,\n      title:\"返回\",\n      textColor:['#ffffff', '#ffffff']\n  }]));\n  ChessData.map((v)=>{\n    return (\n      forMoveArray.push({ x:v.x, y:v.y }),\n      forAttackArray.push({ x:v.x, y:v.y })\n    );\n  });\n  EnemyChessData.map((v)=>{\n    return forMoveArray.push({ x:v.x, y:v.y });\n  });\n  const compareAttack = (\n    chessX,\n    chessY,\n    chessAtk\n  )=>{\n    let isAttack = false;\n    const isDebutEnemy = EnemyChessData.filter(v=>v.debut);\n    const limitPosition = { x:19, y:14 };\n    const positionRange = [];\n    for(let i=0; i < chessAtk; i++){\n      const getaddX = (chessX+(i+1)>=limitPosition.x) ? limitPosition.x : chessX+(i+1);\n      const getaddY = (chessY+(i+1)>=limitPosition.y) ? limitPosition.y : chessY+(i+1);\n      const getlessX = (chessX-(i+1)<=0) ? 0 : chessX-(i+1);\n      const getlessY = (chessY-(i+1)<=0) ? 0 : chessY-(i+1);\n      positionRange.push(\n        { x:getaddX, y:chessY },\n        { x:getlessX, y:chessY },\n        { x:chessX, y:getaddY },\n        { x:chessX, y:getlessY }\n      );\n    };\n    isDebutEnemy.map(val=>{\n      return positionRange.map(v=>{\n        if(val.x===v.x&&val.y===v.y){\n          return isAttack = true;\n        }else return null\n      })\n    });\n    return isAttack;\n  };\n  const CreateText = ({ noop })=>{\n    const isAttack = compareAttack(ChessVal.x,ChessVal.y,ChessVal.attack);\n    return textInforArray.map((val,key)=>{\n      return <Text\n        key={key}\n        interactive={\n          (val.get('id')===2)?\n          isAttack : true\n        }\n        buttonMode={true}\n        text={val.get('title')}\n        x={10}\n        y={5+(25*key)}\n        style={new PIXI.TextStyle({\n          fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 20,\n          fill:((val.get('id')===2)&&!isAttack)? '#8d99ae' :val.get('textColor').toJS(),\n        })}\n        pointerover={()=>{\n          setTextInforArray(prev=>\n            prev.setIn([key,'textColor',1],'#00ff99')\n          );\n        }}\n        pointerout={()=>{\n          setTextInforArray(prev=>\n            prev.setIn([key,'textColor',1],'#ffffff')\n          );\n        }}\n        pointertap={(e)=>{\n          switch (val.get('id')) {\n            case 1:\n              setCurrentChess({ \n                key:ChessKey,\n                type:\"MOVE\"\n              });\n              dispatch(GetMove({\n                position:{ \n                  x:ChessVal.x, \n                  y:ChessVal.y,\n                },\n                step:ChessVal.step,\n                changeColor:'0x06d6a0',\n                currentChessPositions: forMoveArray\n              }));\n              dispatch(chessSelected({\n                key:ChessKey\n              }));\n              break;\n            case 2:\n              setCurrentChess({ \n                key:ChessKey,\n                type:\"ATTACK\"\n              });\n              dispatch(chessSelected({\n                key:ChessKey\n              }));\n              dispatch(GetAttack({\n                position:{ \n                  x:ChessVal.x, \n                  y:ChessVal.y,\n                },\n                step:ChessVal.attack,\n                changeColor:'0x00bbf9',\n                currentChessPositions: forAttackArray\n              }));\n              break;\n            case 3:\n              setCurrentChess({ \n                key:ChessKey,\n                type:\"STATUS\"\n              });\n              dispatch(chessCheckStatus({\n                key:ChessKey\n              }));\n              dispatch(chessSelected({\n                key:ChessKey\n              }));\n              break;\n            case 4 :\n              setMoveStep(true);\n              dispatch(chessSelected({\n                key:ChessKey\n              }));\n              break;\n            default:\n              return console.log(e.target)\n          };\n        }}\n      />\n    }\n  )};\n  return <Graphics\n    x={positionX!==800?positionX:specialPosition.x}\n    y={(positionY!==560&&positionY!==520)?positionY:specialPosition.y}\n    zIndex={3}\n    draw={g=> {\n      g.lineStyle(1,`0xffffff`,1);\n      g.beginFill(`0x22223b`);\n      g.drawRoundedRect(0,0,60,110,8);\n      g.endFill();\n    }}\n  ><CreateText/></Graphics>\n};","import React from 'react';\nimport { Sprite, Graphics, Text } from '@inlet/react-pixi/animated';\nimport { loader } from '../DataLoader';\nimport * as PIXI from \"pixi.js\";\n\nexport const ChessStatus = ({\n  ChessData,\n  ChessKey,\n  CheckStatus,\n  setMoveStep,\n  dispatch\n})=> {\n  const CreateSkillList = ()=>{\n    return ChessData.skill.map((value,key)=>{\n        return <React.Fragment key={key}>\n        <Text\n          x={-40}\n          y={-70+(key*22)}\n          text={`${value.name}`}\n          style={new PIXI.TextStyle({\n            fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n            fontSize: 16,\n            fill:'#ffb700',\n          })}\n        />\n        <Text\n          x={-35+(value.name.length * 16)}\n          y={-70+(key*22)}\n          text={`ATK:${value.atk}(${value.sp}SP)`}\n          style={new PIXI.TextStyle({\n            fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n            fontSize: 14,\n            fill:'#ffffff',\n          })}\n        />\n      </React.Fragment>\n    });  \n  };\n  return <Graphics\n    x={400}\n    y={300}\n    zIndex={99}\n    draw={g=> {\n      g.lineStyle(1,`0xffffff`,1);\n      g.beginFill(`0x22223b`);\n      g.drawRoundedRect(-250,-150,500,300,8);\n      g.endFill();\n    }}\n  >\n    <Graphics\n      x={220}\n      y={-120}\n      interactive={true}\n      buttonMode={true}\n      pointertap={(e)=>{\n        setMoveStep(true);\n        dispatch(CheckStatus({\n          key:ChessKey\n        }));\n      }}\n      draw={g=> {\n        g.beginFill(`0x02040f`);\n        g.drawRoundedRect(-15,-15,30,30,50);\n        g.endFill();\n      }}\n    >\n      <Text\n        anchor={0.5}\n        text={`X`}\n        style={new PIXI.TextStyle({\n          fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 16,\n          fill:'#ffffff',\n        })}\n      />\n    </Graphics>\n    <Sprite\n      width={80}\n      height={80}\n      x={-200}\n      y={-90}\n      image={loader.resources[`${ChessData.name}-head-default`].data}\n    />\n    <Text\n      x={-200}\n      y={10}\n      text={ChessData.cn}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 16,\n        fill:'#ffffff',\n      })}\n    />\n    <Text\n      x={-200}\n      y={35}\n      text={`HP:`}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 16,\n        fill:'#ffffff',\n      })}\n    />\n    <Text\n      x={-170}\n      y={35}\n      text={`${ChessData.hp} / ${ChessData.fullValue.hp}`}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 16,\n        fill:'#ff6b6b',\n      })}\n    />\n    <Text\n      x={-200}\n      y={60}\n      text={`SP:`}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 16,\n        fill:'#ffffff',\n      })}\n    />\n    <Text\n      x={-170}\n      y={60}\n      text={`${ChessData.sp} / ${ChessData.fullValue.sp}`}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 16,\n        fill:'#0466c8',\n      })}\n    />\n    <Text\n      x={-50}\n      y={-95}\n      text={'招式'}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 16,\n        fill:'#ffffff',\n      })}\n    />\n    <CreateSkillList/>\n  </Graphics>\n};","import React from 'react';\nimport { Sprite } from '@inlet/react-pixi/animated';\nimport { loader } from '../DataLoader';\n// reducers\nimport { MoveSelect } from '../../reducer/map';\nimport { chessSelected, chessCheckStatus } from \"../../reducer/chess\";\n// other part\nimport { ChessUIBoard } from \"./ChessUIBoard\";\nimport { ChessStatus } from \"../Common/ChessStatus\";\n\nexport const Chess = ({\n  chessProps\n})=>{\n  const { \n    chess,\n    enemyChess,\n    moveStep=Boolean,\n    setMoveStep,\n    setCurrentChess,\n    dispatch\n  } = chessProps;\n  return chess.map((value,key)=>{\n    return <React.Fragment key={key}>\n      {value.debut&&<Sprite\n        interactive={moveStep}\n        buttonMode={true}\n        width={40}\n        height={40}\n        x={value.x*40}\n        y={value.y*40}\n        zIndex={2}\n        pointerover={()=>{\n          dispatch(MoveSelect({\n            position:{ \n              x:value.x, \n              y:value.y,\n            },\n            step:value.step,\n            changeColor:'0x06d6a0'\n          }));\n        }}\n        pointerout={()=>{\n          dispatch(MoveSelect({\n            position:{ \n              x:value.x, \n              y:value.y,\n            },\n            step:value.step,\n            changeColor:'0x383838'\n          }));\n        }}\n        pointertap={()=>{\n          setMoveStep(false);\n          dispatch(chessSelected({\n            key:key\n          }));\n          dispatch(MoveSelect({\n            position:{ \n              x:value.x, \n              y:value.y,\n            },\n            step:value.step,\n            changeColor:'0x383838'\n          }));\n        }}\n        image={loader.resources[`${value.name}-head-default`].data}\n      />}\n      {value.boardStatus&&<ChessUIBoard\n        ChessData={chess}\n        ChessVal={value}\n        ChessKey={key}\n        EnemyChessData={enemyChess}\n        positionX={(value.x*40)+40}\n        positionY={(value.y*40)}\n        setCurrentChess={setCurrentChess}\n        setMoveStep={setMoveStep}\n        dispatch={dispatch}\n      />}\n      {value.checkStatus&&<ChessStatus\n        ChessData={value}\n        ChessKey={key}\n        CheckStatus={chessCheckStatus}\n        setMoveStep={setMoveStep}\n        dispatch={dispatch}\n      />}\n    </React.Fragment>\n  })\n};","import React,{ useState } from 'react';\nimport { fromJS } from 'immutable';\nimport { Graphics, Text } from '@inlet/react-pixi/animated';\nimport { enemyChessSelected, enemyChessCheckStatus } from \"../../reducer/enemyChess\";\nimport * as PIXI from \"pixi.js\";\n\nexport const EnemyChessUIBoard = ({\n  ChessKey,\n  positionX,\n  positionY,\n  setMoveStep,\n  dispatch\n})=> {\n  const specialPosition = {\n    x: 720,\n    y: 535\n  };\n  const [textInforArray, setTextInforArray] = useState(fromJS([{\n      id:1,\n      title:\"狀態\",\n      textColor:['#ffffff', '#ffffff']\n    },{ \n      id:2,\n      title:\"返回\",\n      textColor:['#ffffff', '#ffffff']\n  }]));\n  const CreateText = ({ noop })=>{\n    return textInforArray.map((val,key)=>{\n      return <Text\n        key={key}\n        interactive={true}\n        buttonMode={true}\n        text={val.get('title')}\n        x={10}\n        y={5+(25*key)}\n        style={new PIXI.TextStyle({\n          fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 20,\n          fill:val.get('textColor').toJS(),\n        })}\n        pointerover={()=>{\n          setTextInforArray(prev=>\n            prev.setIn([key,'textColor',1],'#9d4edd')\n          );\n        }}\n        pointerout={()=>{\n          setTextInforArray(prev=>\n            prev.setIn([key,'textColor',1],'#ffffff')\n          );\n        }}\n        pointertap={(e)=>{\n          switch (val.get('id')) {\n            case 1:\n              dispatch(enemyChessCheckStatus({\n                key:ChessKey\n              }));\n              dispatch(enemyChessSelected({\n                key:ChessKey\n              }));\n              break;\n            case 2 :\n              setMoveStep(true);\n              dispatch(enemyChessSelected({\n                key:ChessKey\n              }));\n              break;\n            default:\n              return console.log(e.target)\n          };\n        }}\n      />\n    }\n  )};\n  return <Graphics\n    x={positionX!==800?positionX:specialPosition.x}\n    y={(positionY!==560&&positionY!==520)?positionY:specialPosition.y}\n    zIndex={3}\n    draw={g=> {\n      g.lineStyle(1,`0xffffff`,1);\n      g.beginFill(`0x22223b`);\n      g.drawRoundedRect(0,0,60,62,8);\n      g.endFill();\n    }}\n  ><CreateText/></Graphics>\n}","import React from 'react';\nimport { Sprite } from '@inlet/react-pixi/animated';\nimport { loader } from '../DataLoader';\n// reducers\nimport { enemyChessSelected, enemyChessCheckStatus } from \"../../reducer/enemyChess\";\n// other part\nimport { EnemyChessUIBoard } from \"./EnemyChessUIBoard\";\nimport { ChessStatus } from \"../Common/ChessStatus\";\n\nexport const EnemyChess = ({\n  enemyChessProps\n})=>{\n  const { \n    enemyChess,\n    moveStep=Boolean,\n    setMoveStep,\n    dispatch\n  } = enemyChessProps;\n  return enemyChess.map((value,key)=>{\n    return <React.Fragment key={key}>\n      {value.debut&&<Sprite\n        interactive={moveStep}\n        buttonMode={true}\n        width={40}\n        height={40}\n        x={value.x*40}\n        y={value.y*40}\n        zIndex={2}\n        pointertap={()=>{\n          setMoveStep(false);\n          dispatch(enemyChessSelected({\n            key:key\n          }));\n        }}\n        image={loader.resources[`${value.name}-head-default`].data}\n      />}\n      {value.boardStatus&&<EnemyChessUIBoard\n        ChessKey={key}\n        positionX={(value.x*40)+40}\n        positionY={(value.y*40)}\n        setMoveStep={setMoveStep}\n        dispatch={dispatch}\n      />}\n      {value.checkStatus&&<ChessStatus\n        ChessData={value}\n        ChessKey={key}\n        CheckStatus={enemyChessCheckStatus}\n        setMoveStep={setMoveStep}\n        dispatch={dispatch}\n      />}\n    </React.Fragment>\n  })\n};\n","import { fromJS } from \"immutable\";\n\nexport const stageRule = fromJS({\n  stageOne: {\n    debutChess:[\n      { \n        name:'Tanjirou',\n        x:3,\n        y:7\n      },\n    ],\n    debutEnemyChess:[\n      {\n        name:'Teoni',\n        x:16,\n        y:7\n      },\n    ]\n  },\n  stageTwo: {\n    debutChess:[\n      { \n        name:'Tanjirou',\n        x:3,\n        y:9\n      }, { \n        name:'Nezuko',\n        x:3,\n        y:11\n      }\n    ],\n    debutEnemyChess:[\n      {\n        name:'Nomanooni',\n        x:16,\n        y:7\n      }\n    ]\n  }\n});","import React,{ useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Stage, Container } from '@inlet/react-pixi/animated';\n// reducers\nimport { stageDebut } from \"../reducer/chess\";\nimport { enemyStageDebut } from \"../reducer/enemyChess\";\n// other part\nimport { CreateCheckerboard } from './Common/Checkerboard';\nimport { ConfirmTip } from \"./Common/ConfirmTips\";\nimport { Chess } from \"../components/Chess/Chess\";\nimport { EnemyChess } from \"../components/EnemyChess/EnemyChess\";\n// rule\nimport { stageRule } from \"../constants/stageRule\";\nexport const Canvas = ()=> {\n  const [ stageStatus, setStageStatus ] = useState('stageOne');\n  const [ currentChess, setCurrentChess ] = useState({\n    key:0,\n    type:\"MOVE\"\n  });\n  const [ tipStatus, setTipStatus ] = useState({\n    title:``,\n    status:false,\n    position:{\n      x:0,y:0\n    },\n  });\n  const [ moveStep, setMoveStep ] = useState(true);\n  const chessMap = useSelector(state=>state.chessMap);\n  const chess = useSelector(state=>state.chess);\n  const enemyChess = useSelector(state=>state.enemyChess);\n  const dispatch = useDispatch();\n  // debut\n  useEffect(()=>{\n    dispatch(stageDebut({ \n      isDebutChess:stageRule.getIn([stageStatus,'debutChess'])\n    }));\n    dispatch(enemyStageDebut({ \n      isDebutChess:stageRule.getIn([stageStatus,'debutEnemyChess'])\n    }));\n  },[ dispatch, stageStatus ])\n  return <Stage\n    width={800}\n    height={600}\n    options={{\n      autoDensity: true, \n      antialias: true,\n      backgroundColor:0x01262a\n    }}>\n    <Container sortableChildren={true}>\n      <CreateCheckerboard reduxProps={{ \n        chess,\n        enemyChess,\n        chessMap,\n        currentChess,\n        dispatch,\n        setTipStatus,\n        setMoveStep\n      }}/>\n      <Chess chessProps={{\n        chess,\n        enemyChess,\n        moveStep,\n        setMoveStep,\n        setCurrentChess,\n        dispatch\n      }}/>\n      <EnemyChess enemyChessProps={{\n         enemyChess,\n         moveStep,\n         setMoveStep,\n         dispatch\n      }}/>\n    </Container>\n    {tipStatus.status&&<ConfirmTip \n      props={{\n        chess,\n        currentChess,\n        tipStatus,\n        dispatch,\n        setMoveStep,\n        setTipStatus\n      }}\n    />}\n  </Stage>\n};","import React, { useState, useEffect } from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport { Canvas } from './Canvas';\nimport { loader } from './DataLoader';\nconst GlobalStyle = createGlobalStyle`\n  body { background:#1d2430; }\n`;\nconst StyledApp = styled.div`\n  position: relative;\n  display:flex;\n  align-items:center;\n  justify-content:center;\n  width:100%;\n  height:100vh;\n  .loading {\n    color: #fff;\n    font-size:24px;\n  }\n`;\nexport const App = ()=> {\n  const [ dataIsDone, setDataIsDone ] = useState(false);\n  useEffect(()=>{\n    loader.onComplete.add(()=>{\n      setDataIsDone(true);\n    });\n  });\n  return <StyledApp>\n    <GlobalStyle/>\n    {dataIsDone?<Canvas />:\n      <span className=\"loading\">Loading..</span>}\n  </StyledApp>\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, combineReducers } from 'redux';\nimport chess from './chess';\nimport chessMap from './map';\nimport enemyChess from './enemyChess';\nconst rootReducer = combineReducers({\n  chess,\n  chessMap,\n  enemyChess\n});\nexport const store = createStore(rootReducer);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './reducer/index';\n\nReactDOM.render(<Provider store={store}><App /></Provider>,document.getElementById('root'));\nreportWebVitals();\n"],"sourceRoot":""}