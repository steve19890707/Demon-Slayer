{"version":3,"sources":["reducer/chess.js","reducer/enemyChess.js","components/DataLoader.js","components/Common/GameStart/Index.js","reducer/map.js","components/Common/Checkerboard.js","components/Common/ConfirmTips.js","constants/stageRule.js","components/Common/UsualTip.js","components/Common/ProbabilityCount.js","components/Common/BattleBoard.js","components/Common/BattleAnimeShow/AinmeShowBG.js","components/Common/BattleAnimeShow/TopBar.js","constants/lines.js","components/Common/BattleAnimeShow/BottomBar.js","constants/SkillShowProtoType.js","constants/ChessSkillShow/Tanjirou/steps.js","constants/ChessSkillShow/Tanjirou/ShowType.js","constants/ChessSkillShow/Tanjirou/Index.js","constants/ChessSkillShow/Nezuko/steps.js","constants/ChessSkillShow/Nezuko/ShowType.js","constants/ChessSkillShow/Nezuko/Index.js","constants/ChessSkillShow/Zenitsu/steps.js","constants/ChessSkillShow/Zenitsu/ShowType.js","constants/ChessSkillShow/Zenitsu/Index.js","constants/ChessSkillShow/Inosuke/steps.js","constants/ChessSkillShow/Inosuke/ShowType.js","constants/ChessSkillShow/Inosuke/Index.js","constants/ChessSkillShow/Rengoku/steps.js","constants/ChessSkillShow/Rengoku/ShowType.js","constants/ChessSkillShow/Rengoku/Index.js","constants/ChessSkillShow/Index.js","constants/EnemyChessSkillShow/Teoni/steps.js","constants/EnemyChessSkillShow/Teoni/ShowType.js","constants/EnemyChessSkillShow/Teoni/Index.js","constants/EnemyChessSkillShow/Hakuji/steps.js","constants/EnemyChessSkillShow/Hakuji/ShowType.js","constants/EnemyChessSkillShow/Hakuji/Index.js","constants/EnemyChessSkillShow/Nomanooni/steps.js","constants/EnemyChessSkillShow/Nomanooni/ShowType.js","constants/EnemyChessSkillShow/Nomanooni/Index.js","constants/EnemyChessSkillShow/Index.js","components/Common/BattleAnimeShow/Index.js","components/Common/OtherTab.js","components/Common/EnemyRoundTab/EnemyList.js","components/Common/EnemyRoundTab/ChessList.js","components/Common/EnemyRoundTab/Information.js","components/Common/EnemyRoundTab/Index.js","components/Chess/ChessUIBoard.js","components/Common/ChessStatus.js","components/Chess/Chess.js","components/EnemyChess/EnemyChessUIBoard.js","components/EnemyChess/EnemyChess.js","components/Common/Conversation/Index.js","components/Canvas.js","components/App.js","reportWebVitals.js","reducer/index.js","index.js"],"names":["basicCommon","x","y","checkStatus","boardStatus","debut","roundMove","chess","createSlice","name","initialState","cn","id","step","attack","hp","sp","dodge","fullValue","skill","atk","hitfix","reducers","stageDebut","state","actions","isDebutChess","payload","map","value","key","v","get","chessMove","changeX","changeY","chessSelected","chessCheckStatus","chessDefense","damage","chessAttackResult","lessSp","chessDead","chessMoved","chessRoundRest","i","length","chessDone","roundAttack","enemyChess","enemyStageDebut","enemyChessSelected","enemyChessCheckStatus","enemyChessDefense","enemyChessAttackResult","enemyChessDead","hostname","window","location","loader","PIXI","audioData","open","Howl","src","preload","loop","autoplay","round","KimetsuNoYaiba","KimetsuNoYaibaEnemy","videos","Tanjirou","skill2","from","skill3","skill4","Nezuko","Zenitsu","Rengoku","skill5","Hakuji","Object","keys","baseTexture","resource","autoPlay","muted","closeAutoPlay","add","load","Logo","logoWidth","startBtn","setLogoWidth","useTick","delta","prev","Math","floor","anchor","width","height","image","resources","data","GameStart","props","setStageStart","setCurrentBGM","useState","start","setStart","setStartBtn","useEffect","sortableChildren","interactive","buttonMode","pointertap","fade","zIndex","draw","g","clear","beginFill","drawRoundedRect","endFill","play","alpha","text","style","fontFamily","fontSize","fill","mapLimit","createInitialState","method","list","push","createStraightLine","traverse","color","isInteractive","chessMap","MoveSelect","action","position","changeColor","alphaVal","GetMove","currentChessPositions","GetAttack","texture","WHITE","CreateCheckerboard","reduxProps","currentChess","dispatch","setTipStatus","setMoveStep","setBattleInfo","Fragment","k","tint","type","title","status","isMatch","checkMatchAttackPosition","targetData","item","getCurrentEnemy","attacker","target","acttack","ConfirmTip","tipStatus","currentBGM","setOtherTab","setRoundNum","setUsualTip","setFadeBGM","lineStyle","stageRule","fromJS","stageOne","debutChess","debutEnemyChess","ruleText","win","lose","recap","story","character","content","endStory","isWin","enemyList","totalLife","isLose","chessList","stageTwo","UsualTip","stageStatus","animeShow","usualTip","setCurrentChess","setEnemyRoundTab","setRoundEnd","textColor","setTextColor","checkWin","getIn","checkLose","reload","oder","ProbabilityCount","attackerHit","targetDodge","random","BattleBoard","battleInfo","setAnimeShow","atkSelectd","setAtkSelectd","CreateAttackerInfo","pX","pY","skillCanUse","fontWeight","CreateTargetInfo","ForecastInfo","isHit","prevSP","prevLife","AnimeShowBG","BGstatus","BGprop","SkBGprop","setSkBGpops","setBGpops","to","toX","config","duration","onRest","TopBar","right","left","showType","targetHp","attackerSp","hpBarCount","full","Number","spBarCount","lines","default","def","dead","BottomBar","linesStatus","showCharacter","randomSize","size","SkillShowProtoType","skillName","attackerName","targetLife","resultLife","resultSp","setBGstatus","setAnimeIsDone","setTargetHp","setAttackerSp","setLinesStatus","setShowSkill","defXPostion","steps","ShowType","mass","friction","tension","setPosition","defence","timeout","clearTimeout","isHitStep","setTimeout","isDead","next","seconds","isDodge","isDeadStep2","end","skill2step1","skill2step2","run","number","TweenMax","onUpdate","numeral","format","source","callback","skill2step3","skill3step1","skill3step2","skill3step3","skill4step1","skill4step2","skill4step3","step1","step2","step3","step4","TanjirouSkill","NezukoSkill","ZenitsuSkill","InosukeSkill","skill5step1","skill5step2","skill5step3","RengokuSkill","ChessSkillShow","defaultprops","TeoniSkill","HakujiSkill","NomanooniSkill","EnemyChessSkillShow","BattleAnimeShow","enemyRoundTab","CreateContent","animeIsDone","showSkill","fetchChessType","CreateSkillSprite","video","videoDom","onended","currentTime","filter","clearAllTimeouts","OtherTab","roundNum","checkStageRound","EnemyList","enemyRandomSkill","ChessList","defChess","setDefChess","distance","Information","atkEnemy","EnemyRoundTab","enemySkill","enemySp","getCurrentChessKey","getKey","find","ChessUIBoard","ChessData","ChessVal","ChessKey","EnemyChessData","positionX","positionY","specialPosition","forMoveArray","forAttackArray","textInforArray","setTextInforArray","compareUsed","chessX","chessY","checkType","isUnused","val","moved","CreateText","noop","isAttack","chessAtk","limitPosition","positionRange","getaddX","getaddY","getlessX","getlessY","compareAttack","fetchInteractive","toJS","pointerover","setIn","pointerout","e","console","log","ChessStatus","CheckStatus","CreateSkillList","Chess","chessProps","moveStep","Boolean","roundMoveDone","EnemyChessUIBoard","EnemyChess","enemyChessProps","Conversation","setRoundStart","currentConversation","currentRecap","isRecap","setIsRecap","currentStory","setCurrentStory","lineHeight","breakWords","wordWrap","wordWrapWidth","reset","converLength","RoundEndConversation","setStageStatus","currentEndStory","setCurrentEndStory","Canvas","roundStart","stageStart","roundEnd","otherTab","volume","setVolume","fadeBGM","useSelector","useDispatch","playing","_volume","stop","options","autoDensity","antialias","backgroundColor","Howler","isDesktop","device","desktop","GlobalStyle","createGlobalStyle","StyledApp","styled","div","App","dataIsDone","setDataIsDone","gameStart","setGameStart","innerHeight","innerWidth","mobileResize","setMobileResize","progress","setProgress","mp3load","setMp3load","on","onProgress","onComplete","handleResize","addEventListener","removeEventListener","className","alt","url","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2447377b.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nconst basicCommon = {\n  x:0,\n  y:0,\n  checkStatus:false,\n  boardStatus:false,\n  debut:false,\n  roundMove:1\n};\nconst chess = createSlice({\n  name:'chess',\n  initialState:[\n    {\n      name:'Tanjirou',\n      cn:'竈門 炭治郎',\n      id:1,\n      step:3,\n      attack:2,\n      hp:1500,\n      sp:125,\n      dodge:80,\n      fullValue:{\n        hp:1500,\n        sp:125\n      },\n      skill:[{ \n        name:'斬擊',\n        atk:200,\n        sp:0,\n        hitfix:0\n      },{ \n        name:'叄之型―流流舞',\n        atk:350,\n        sp:15,\n        hitfix:10\n      },{ \n        name:'捌之型―滝壺',\n        atk:500,\n        sp:25,\n        hitfix:5\n      },{\n        name:'拾之型―生生流轉',\n        atk:850,\n        sp:50,\n        hitfix:20\n      }],\n      ...basicCommon\n    },{\n      name:'Nezuko',\n      cn:'竈門 禰豆子',\n      id:2,\n      step:2,\n      attack:2,\n      hp:2200,\n      sp:200,\n      dodge:80,\n      fullValue:{\n        hp:2200,\n        sp:200\n      },\n      skill:[{ \n        name:'爪擊',\n        atk:150,\n        sp:0,\n        hitfix:0\n      },{ \n        name:'踢擊',\n        atk:250,\n        sp:10,\n        hitfix:15\n      },{ \n        name:'血鬼術',\n        atk:1000,\n        sp:80,\n        hitfix:35\n      }],\n      ...basicCommon\n    },{\n      name:'Zenitsu',\n      cn:'我妻善逸',\n      id:3,\n      step:3,\n      attack:2,\n      hp:1250,\n      sp:100,\n      dodge:90,\n      fullValue:{\n        hp:1250,\n        sp:100\n      },\n      skill:[{ \n        name:'斬擊',\n        atk:200,\n        sp:0,\n        hitfix:0\n      },{ \n        name:'壹之型―霹靂一閃',\n        atk:400,\n        sp:15,\n        hitfix:15\n      },{\n        name:'壹之型―霹靂一閃―六連',\n        atk:1000,\n        sp:70,\n        hitfix:30\n      }],\n      ...basicCommon\n    },{\n      name:'Inosuke',\n      cn:'嘴平 伊之助',\n      id:4,\n      step:3,\n      attack:3,\n      hp:1800,\n      sp:100,\n      dodge:70,\n      fullValue:{\n        hp:1800,\n        sp:100\n      },\n      skill:[{ \n        name:'斬擊',\n        atk:200,\n        sp:0,\n        hitfix:0\n      },{ \n        name:'壹之牙―穿透刺射',\n        atk:300,\n        sp:10,\n        hitfix:10\n      },{ \n        name:'貳之牙―利刃對劈',\n        atk:400,\n        sp:15,\n        hitfix:15\n      },{\n        name:'叄之牙―獠牙撕扯',\n        atk:600,\n        sp:45,\n        hitfix:25\n      }],\n      ...basicCommon\n    },{\n      name:'Rengoku',\n      cn:'煉獄 杏壽郎',\n      id:5,\n      step:4,\n      attack:4,\n      hp:2500,\n      sp:200,\n      dodge:85,\n      fullValue:{\n        hp:2500,\n        sp:200\n      },\n      skill:[{ \n        name:'斬擊',\n        atk:300,\n        sp:0,\n        hitfix:10\n      },{ \n        name:'壹之型―不知火',\n        atk:400,\n        sp:15,\n        hitfix:40\n      },{ \n        name:'肆之型―盛炎的蜿蜒',\n        atk:500,\n        sp:15,\n        hitfix:25\n      },{\n        name:'伍之型―炎虎',\n        atk:800,\n        sp:30,\n        hitfix:40\n      },{\n        name:'玖之型―煉獄',\n        atk:1500,\n        sp:100,\n        hitfix:50\n      }],\n      ...basicCommon\n  }],\n  reducers:{\n    stageDebut:(state, actions)=> {\n      const { isDebutChess } = actions.payload;\n      state.map((value,key)=>{\n        return isDebutChess.map(v=>{\n          if(value.name===v.get('name')){\n            return (\n              state[key].roundMove = 1,\n              state[key].debut = true,\n              state[key].x = v.get('x'),\n              state[key].y = v.get('y')\n            );\n          }else return null;\n        })\n      })\n    },\n    chessMove: (state, actions)=>{\n      const { key, changeX, changeY } = actions.payload;\n      state[key].x = changeX;\n      state[key].y = changeY;\n    },\n    chessSelected: (state, actions)=>{\n      const { key } = actions.payload;\n      state[key].boardStatus = !state[key].boardStatus;\n    },\n    chessCheckStatus: (state, actions)=> {\n      const { key } = actions.payload;\n      state[key].checkStatus = !state[key].checkStatus;\n    },\n    chessDefense: (state, actions)=>{\n      const { key, damage } = actions.payload;\n      state[key].hp -= damage;\n    },\n    chessAttackResult: (state, actions)=> {\n      const { key, lessSp } = actions.payload;\n      state[key].sp -= lessSp;\n    },\n    chessDead: (state, actions)=> {\n      const { key } = actions.payload;\n      state[key].debut = false;\n      state[key].hp = state[key].fullValue.hp;\n      state[key].sp = state[key].fullValue.sp;\n    },\n    chessMoved: (state, actions)=>{\n      const { key } = actions.payload;\n      state[key].roundMove -= 1;\n    },\n    chessRoundRest:(state)=>{\n      for(let i=0;i<state.length;i++){\n        state[i].roundMove = 1;\n      };\n    },\n    chessDone:(state)=>{\n      for(let i=0;i<state.length;i++){\n        state[i].debut = false;\n        state[i].hp = state[i].fullValue.hp;\n        state[i].sp = state[i].fullValue.sp;\n        state[i].roundMove = 1;\n      };\n    }\n  }\n});\nexport default chess.reducer;\nexport const { \n  stageDebut, chessMove, chessSelected, chessCheckStatus, chessAttackResult, \n  chessDead, chessMoved, chessDefense, chessRoundRest, chessDone\n} = chess.actions;","import { createSlice } from '@reduxjs/toolkit';\nconst basicCommon = {\n  x:0,\n  y:0,\n  checkStatus:false,\n  boardStatus:false,\n  debut:false,\n  roundAttack:false,\n};\nconst enemyChess = createSlice({\n  name:'enemyChess',\n  initialState:[\n    {\n      name:'Teoni',\n      cn:'手鬼',\n      id:1,\n      hp:2000,\n      sp:100,\n      dodge:25,\n      fullValue:{\n        hp:2000,\n        sp:100\n      },\n      skill:[{ \n        name:'胡亂毆打',\n        atk:200,\n        sp:0,\n        hitfix:10\n      },{ \n        name:'你是第十四個',\n        atk:500,\n        sp:25,\n        hitfix:20\n      }],\n      ...basicCommon\n    },{\n      name:'Nomanooni',\n      cn:'沼鬼',\n      id:2,\n      hp:1500,\n      sp:200,\n      dodge:30,\n      fullValue:{\n        hp:1500,\n        sp:200\n      },\n      skill:[{ \n        name:'爪擊',\n        atk:150,\n        sp:0,\n        hitfix:15\n      },{ \n        name:'分身攻擊',\n        atk:600,\n        sp:15,\n        hitfix:30\n      }],\n      ...basicCommon\n    },{\n      name:'Hakuji',\n      cn:'猗窩座',\n      id:3,\n      hp:3000,\n      sp:200,\n      dodge:40,\n      fullValue:{\n        hp:3000,\n        sp:200\n      },\n      skill:[{ \n        name:'破壞殺攻擊',\n        atk:350,\n        sp:0,\n        hitfix:20\n      },{ \n        name:'破壞殺―亂式',\n        atk:600,\n        sp:15,\n        hitfix:30\n      },{ \n        name:'術式展開―破壞殺―羅針',\n        atk:800,\n        sp:30,\n        hitfix:30\n      }],\n      ...basicCommon\n  }],\n  reducers:{\n    enemyStageDebut:(state, actions)=> {\n      const { isDebutChess } = actions.payload;\n      state.map((value,key)=>{\n        return isDebutChess.map(v=>{\n          if(value.name===v.get('name')){\n            return (\n              state[key].debut = true,\n              state[key].x = v.get('x'),\n              state[key].y = v.get('y')\n            );\n          }else return null;\n        })\n      })\n    },\n    enemyChessSelected: (state, actions)=>{\n      const { key } = actions.payload;\n      state[key].boardStatus = !state[key].boardStatus;\n    },\n    enemyChessCheckStatus: (state, actions)=> {\n      const { key } = actions.payload;\n      state[key].checkStatus = !state[key].checkStatus;\n    },\n    enemyChessDefense: (state, actions)=> {\n      const { key, damage } = actions.payload;\n      state[key].hp -= damage;\n    },\n    enemyChessAttackResult: (state, actions)=> {\n      const { key, lessSp } = actions.payload;\n      state[key].sp -= lessSp;\n    },\n    enemyChessDead: (state, actions)=> {\n      const { key } = actions.payload;\n      state[key].debut = false;\n      state[key].hp = state[key].fullValue.hp;\n      state[key].sp = state[key].fullValue.sp;\n    },\n  }\n});\nexport default enemyChess.reducer;\nexport const { \n  enemyStageDebut, enemyChessSelected, enemyChessCheckStatus, enemyChessDefense, \n  enemyChessAttackResult, enemyChessDead \n} = enemyChess.actions;","import * as PIXI from \"pixi.js\";\nimport { Howl } from 'howler';\nconst hostname = window.location.hostname==='localhost'?'./Demon-Slayer/':'./';\nexport const loader = new PIXI.Loader();\nexport const audioData = {\n  open: new Howl({\n    src: [`${hostname}audio/bgm-open.mp3`],\n    preload: 'metadata',\n    loop: true,\n    autoplay: false\n  }),\n  round: new Howl({\n    src: [`${hostname}audio/bgm-round.mp3`],\n    preload: 'metadata',\n    loop: true\n  }),\n  KimetsuNoYaiba: new Howl({\n    src: [`${hostname}audio/bgm-KimetsuNoYaiba.mp3`],\n    preload: 'metadata',\n    loop: true\n  }),\n  KimetsuNoYaibaEnemy: new Howl({\n    src: [`${hostname}audio/bgm-KimetsuNoYaibaEnemy.mp3`],\n    preload: 'metadata',\n    loop: true\n  }),\n};\nexport const videos = {\n  Tanjirou: {\n    skill2: PIXI.Texture.from(`${hostname}video/Tanjirou/skill2.mp4`),\n    skill3: PIXI.Texture.from(`${hostname}video/Tanjirou/skill3.mp4`),\n    skill4: PIXI.Texture.from(`${hostname}video/Tanjirou/skill4.mp4`)\n  },\n  Nezuko: {\n    skill2: PIXI.Texture.from(`${hostname}video/Nezuko/skill2.mp4`),\n  },\n  Zenitsu: {\n    skill2: PIXI.Texture.from(`${hostname}video/Zenitsu/skill2.mp4`),\n    skill3: PIXI.Texture.from(`${hostname}video/Zenitsu/skill3.mp4`)\n  },\n  Rengoku: {\n    skill2: PIXI.Texture.from(`${hostname}video/Rengoku/skill2.mp4`),\n    skill3: PIXI.Texture.from(`${hostname}video/Rengoku/skill3.mp4`),\n    skill4: PIXI.Texture.from(`${hostname}video/Rengoku/skill4.mp4`),\n    skill5: PIXI.Texture.from(`${hostname}video/Rengoku/skill5.mp4`)\n  },\n  Hakuji: {\n    skill2: PIXI.Texture.from(`${hostname}video/Hakuji/skill2.mp4`),\n    skill3: PIXI.Texture.from(`${hostname}video/Hakuji/skill3.mp4`)\n  }\n};\n// closeAutoPlay\nconst closeAutoPlay = ()=>{\n  const Tanjirou = Object.keys(videos.Tanjirou);\n  for(let i=0; i<Tanjirou.length; i++){\n    videos.Tanjirou[`skill${i+2}`].baseTexture.resource.autoPlay= false;\n    videos.Tanjirou[`skill${i+2}`].baseTexture.resource.muted= true;\n  };\n  const Nezuko = Object.keys(videos.Nezuko);\n  for(let i=0; i<Nezuko.length; i++){\n    videos.Nezuko[`skill${i+2}`].baseTexture.resource.autoPlay= false;\n    videos.Nezuko[`skill${i+2}`].baseTexture.resource.muted= true;\n  };\n  const Zenitsu = Object.keys(videos.Zenitsu);\n  for(let i=0; i<Zenitsu.length; i++){\n    videos.Zenitsu[`skill${i+2}`].baseTexture.resource.autoPlay= false;\n    videos.Zenitsu[`skill${i+2}`].baseTexture.resource.muted= true;\n  };\n  const Rengoku = Object.keys(videos.Rengoku);\n  for(let i=0; i<Rengoku.length; i++){\n    videos.Rengoku[`skill${i+2}`].baseTexture.resource.autoPlay= false;\n    videos.Rengoku[`skill${i+2}`].baseTexture.resource.muted= true;\n  };\n  const Hakuji = Object.keys(videos.Hakuji);\n  for(let i=0; i<Hakuji.length; i++){\n    videos.Hakuji[`skill${i+2}`].baseTexture.resource.autoPlay= false;\n    videos.Hakuji[`skill${i+2}`].baseTexture.resource.muted= true;\n  };\n};\ncloseAutoPlay();\n\nloader\n  .add('Tanjirou-head-default',`${hostname}imgs/Tanjirou/head-default.png`)\n  .add('Tanjirou-talk-default',`${hostname}imgs/Tanjirou/talk-default.jpg`)\n  .add('Tanjirou-talk-attack',`${hostname}imgs/Tanjirou/talk-attack.jpg`)\n  .add('Tanjirou-talk-def',`${hostname}imgs/Tanjirou/talk-def.jpg`)\n  .add('Tanjirou-talk-dodge',`${hostname}imgs/Tanjirou/talk-dodge.jpg`)\n  .add('Tanjirou-talk-dead',`${hostname}imgs/Tanjirou/talk-dead.jpg`)\n  .add('Tanjirou-fight-typeA',`${hostname}imgs/Tanjirou/fight-typeA.png`)\n  .add('Tanjirou-fight-typeB',`${hostname}imgs/Tanjirou/fight-typeB.png`)\n  .add('Nezuko-head-default',`${hostname}imgs/Nezuko/head-default.png`)\n  .add('Nezuko-talk-default',`${hostname}imgs/Nezuko/talk-default.jpg`)\n  .add('Nezuko-talk-attack',`${hostname}imgs/Nezuko/talk-attack.jpg`)\n  .add('Nezuko-talk-def',`${hostname}imgs/Nezuko/talk-def.jpg`)\n  .add('Nezuko-talk-dodge',`${hostname}imgs/Nezuko/talk-dodge.jpg`)\n  .add('Nezuko-talk-dead',`${hostname}imgs/Nezuko/talk-dead.jpg`)\n  .add('Nezuko-fight',`${hostname}imgs/Nezuko/fight.png`)\n  .add('Zenitsu-head-default',`${hostname}imgs/Zenitsu/head-default.png`)\n  .add('Zenitsu-talk-default',`${hostname}imgs/Zenitsu/talk-default.jpg`)\n  .add('Zenitsu-talk-attack',`${hostname}imgs/Zenitsu/talk-attack.jpg`)\n  .add('Zenitsu-talk-def',`${hostname}imgs/Zenitsu/talk-def.jpg`)\n  .add('Zenitsu-talk-dodge',`${hostname}imgs/Zenitsu/talk-dodge.jpg`)\n  .add('Zenitsu-talk-dead',`${hostname}imgs/Zenitsu/talk-dead.jpg`)\n  .add('Zenitsu-talk-usual',`${hostname}imgs/Zenitsu/talk-usual.jpg`)\n  .add('Zenitsu-talk-fall',`${hostname}imgs/Zenitsu/talk-fall.jpg`)\n  .add('Zenitsu-talk-afraid',`${hostname}imgs/Zenitsu/talk-afraid.jpg`)\n  .add('Zenitsu-fight',`${hostname}imgs/Zenitsu/fight.png`)\n  .add('Inosuke-head-default',`${hostname}imgs/Inosuke/head-default.png`)\n  .add('Inosuke-talk-default',`${hostname}imgs/Inosuke/talk-default.jpg`)\n  .add('Inosuke-talk-attack',`${hostname}imgs/Inosuke/talk-attack.jpg`)\n  .add('Inosuke-talk-def',`${hostname}imgs/Inosuke/talk-def.jpg`)\n  .add('Inosuke-talk-dodge',`${hostname}imgs/Inosuke/talk-dodge.jpg`)\n  .add('Inosuke-talk-dead',`${hostname}imgs/Inosuke/talk-dead.jpg`)\n  .add('Inosuke-talk-angry',`${hostname}imgs/Inosuke/talk-angry.jpg`)\n  .add('Inosuke-fight',`${hostname}imgs/Inosuke/fight.png`)\n  .add('Rengoku-head-default',`${hostname}imgs/Rengoku/head-default.png`)\n  .add('Rengoku-talk-default',`${hostname}imgs/Rengoku/talk-default.jpg`)\n  .add('Rengoku-talk-attack',`${hostname}imgs/Rengoku/talk-attack.jpg`)\n  .add('Rengoku-talk-def',`${hostname}imgs/Rengoku/talk-def.jpg`)\n  .add('Rengoku-talk-dodge',`${hostname}imgs/Rengoku/talk-dodge.jpg`)\n  .add('Rengoku-talk-dead',`${hostname}imgs/Rengoku/talk-dead.jpg`)\n  .add('Rengoku-talk-usual',`${hostname}imgs/Rengoku/talk-usual.jpg`)\n  .add('Rengoku-talk-spark',`${hostname}imgs/Rengoku/talk-spark.jpg`)\n  .add('Rengoku-talk-last',`${hostname}imgs/Rengoku/talk-last.jpg`)\n  .add('Rengoku-fight',`${hostname}imgs/Rengoku/fight.png`)\n  .add('Teoni-head-default',`${hostname}imgs/Teoni/head-default.png`)\n  .add('Teoni-talk-default',`${hostname}imgs/Teoni/talk-default.jpg`)\n  .add('Teoni-talk-attack',`${hostname}imgs/Teoni/talk-attack.jpg`)\n  .add('Teoni-talk-def',`${hostname}imgs/Teoni/talk-def.jpg`)\n  .add('Teoni-talk-dodge',`${hostname}imgs/Teoni/talk-dodge.jpg`)\n  .add('Teoni-talk-dead',`${hostname}imgs/Teoni/talk-dead.jpg`)\n  .add('Teoni-fight',`${hostname}imgs/Teoni/fight.png`)\n  .add('Nomanooni-head-default',`${hostname}imgs/Nomanooni/head-default.png`)\n  .add('Nomanooni-talk-default',`${hostname}imgs/Nomanooni/talk-default.jpg`)\n  .add('Nomanooni-talk-attack',`${hostname}imgs/Nomanooni/talk-attack.jpg`)\n  .add('Nomanooni-talk-def',`${hostname}imgs/Nomanooni/talk-def.jpg`)\n  .add('Nomanooni-talk-dodge',`${hostname}imgs/Nomanooni/talk-dodge.jpg`)\n  .add('Nomanooni-talk-dead',`${hostname}imgs/Nomanooni/talk-dead.jpg`)\n  .add('Nomanooni-fight',`${hostname}imgs/Nomanooni/fight.png`)\n  .add('Hakuji-head-default',`${hostname}imgs/Hakuji/head-default.png`)\n  .add('Hakuji-talk-default',`${hostname}imgs/Hakuji/talk-default.jpg`)\n  .add('Hakuji-talk-attack',`${hostname}imgs/Hakuji/talk-attack.jpg`)\n  .add('Hakuji-talk-def',`${hostname}imgs/Hakuji/talk-def.jpg`)\n  .add('Hakuji-talk-dodge',`${hostname}imgs/Hakuji/talk-dodge.jpg`)\n  .add('Hakuji-talk-dead',`${hostname}imgs/Hakuji/talk-dead.jpg`)\n  .add('Hakuji-talk-usual',`${hostname}imgs/Hakuji/talk-usual.jpg`)\n  .add('Hakuji-fight',`${hostname}imgs/Hakuji/fight.png`)\n  .add('stageOne-BG',`${hostname}imgs/background/stage1-background.png`)\n  .add('stageOne-main-BG',`${hostname}imgs/background/stage1-main-background.jpg`)\n  .add('stageTwo-BG',`${hostname}imgs/background/stage2-background.png`)\n  .add('stageTwo-main-BG',`${hostname}imgs/background/stage2-main-background.jpg`)\n  .add('logo',`${hostname}imgs/common/logo.png`)\n  .add('atkIcon',`${hostname}imgs/common/atk.png`)\n  .add('defIcon',`${hostname}imgs/common/def.png`)\n  .add('otherIcon',`${hostname}imgs/common/other.png`)\n  .add('closeIcon',`${hostname}imgs/common/close.png`)\n  .add('muteIcon',`${hostname}imgs/common/mute.png`)\n  .add('volumeIcon',`${hostname}imgs/common/volume.png`)\n  .add('startBtn',`${hostname}imgs/common/startBtn.png`)\n  .add('endBtn',`${hostname}imgs/common/end.png`)\n  .add('fightOff',`${hostname}imgs/common/fightOff.png`)\n  .add('fightDef',`${hostname}imgs/common/fightDef.png`)\n  .add('trun',`${hostname}imgs/common/trun.png`)\n  .add('next',`${hostname}imgs/common/next.png`)\n  .load();\n","import React,{ useState, useEffect } from 'react';\nimport * as PIXI from \"pixi.js\";\nimport { audioData, loader } from '../../DataLoader';\nimport { Container, Text, Graphics, Sprite, useTick } from '@inlet/react-pixi/animated';\nconst Logo = ({\n  logoWidth=200,\n  startBtn,\n  setLogoWidth\n}) =>{\n  let i = 0;\n  useTick(delta=>{\n    if(!startBtn){\n      const add = i += 0.28 * delta;\n      setLogoWidth(prev=>{return prev+=Math.floor(add)});\n    }else return;\n  });\n  return <Sprite\n    anchor={0.5}\n    x={400}\n    y={250}\n    width={logoWidth}\n    height={logoWidth}\n    image={loader.resources[`logo`].data}\n  />\n};\nexport const GameStart = ({\n  props\n})=>{\n  const { setStageStart, setCurrentBGM } = props;\n  const [ logoWidth, setLogoWidth ] = useState(200);\n  const [ start, setStart ] = useState(false);\n  const [ startBtn, setStartBtn ] = useState(false);\n  useEffect(()=>{\n    (logoWidth>=350)&&setStartBtn(true);\n  },[logoWidth]);\n  return <Container sortableChildren={true}>\n    {!start?<>\n      <Graphics\n        interactive={true}\n        buttonMode={true}\n        x={0} y={0}\n        zIndex={1}\n        draw={g=> {\n          g.clear();\n          g.beginFill(0x0000);\n          g.drawRoundedRect(0,0,800,600,0);\n          g.endFill();\n        }}\n        pointertap={()=>{\n          audioData.open.play();\n          setStart(true);\n        }}\n        alpha={0.5}\n      />\n      <Text\n        text={`任意點擊`}\n        zIndex={2}\n        anchor={0.5}\n        x={400}\n        y={300}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 24,\n          fill:'#ffffff',\n        })}\n      />\n    </>:<>\n      <Logo\n        logoWidth={logoWidth}\n        startBtn={startBtn}\n        setLogoWidth={setLogoWidth}\n      />\n      {startBtn&&\n        <Sprite\n          interactive={true}\n          buttonMode={true}\n          anchor={0.5}\n          x={400}\n          y={450}\n          width={120}\n          height={56}\n          image={loader.resources[`startBtn`].data}\n          pointertap={()=>{\n            audioData.open.fade(1,0,1000)\n            setStageStart(true);\n            setCurrentBGM('userRounds');\n          }}\n        />\n      }\n    </>\n  }\n  </Container>\n}","import { createSlice } from '@reduxjs/toolkit';\nconst mapLimit = { x:20, y:15 };\nconst createTraverseLine = (traverse=0,color='')=>{\n  const list = [];\n  for(let i=0;i<mapLimit.x;i++){\n    list.push({\n      x:i,\n      y:traverse,\n      color:color,\n      alpha:0,\n      zIndex:1,\n      isInteractive:false\n    });\n  };\n  return list;\n};\nconst createStraightLine = ( method=()=>{} )=>{\n  const list = [];\n  for(let i=0;i<mapLimit.y;i++){\n    list.push(method(i,'0x383838'));\n  };\n  return list;\n};\nconst createInitialState = createStraightLine(createTraverseLine);\nconst chessMap = createSlice({\n  name:'chessMap',\n  initialState: createInitialState,\n  reducers:{\n    MoveSelect:(state, action)=>{\n      const { position, step, changeColor, alphaVal=1} = action.payload;\n      for(let i=0;i<(step+1);i++){\n        if(position.x+i<=(mapLimit.x-1)){\n          state[position.y][position.x+i].color=changeColor;\n          state[position.y][position.x+i].isInteractive=false;\n          state[position.y][position.x+i].alpha=alphaVal;\n          state[position.y][position.x+i].zIndex=1;\n        };\n        if(position.y+i<=(mapLimit.y-1)){\n          state[position.y+i][position.x].color=changeColor;\n          state[position.y+i][position.x].isInteractive=false;\n          state[position.y+i][position.x].alpha=alphaVal;\n          state[position.y+i][position.x].zIndex=1;\n        };\n        if(position.x-i>=0){\n          state[position.y][position.x-i].color=changeColor;\n          state[position.y][position.x-i].isInteractive=false;\n          state[position.y][position.x-i].alpha=alphaVal;\n          state[position.y][position.x-i].zIndex=1;\n        };\n        if(position.y-i>=0){\n          state[position.y-i][position.x].color=changeColor;\n          state[position.y-i][position.x].isInteractive=false;\n          state[position.y-i][position.x].alpha=alphaVal;\n          state[position.y-i][position.x].zIndex=1;\n        };\n      }\n    },\n    GetMove:(state, action)=>{\n      const { position, step, changeColor, currentChessPositions } = action.payload;\n      for(let i=0;i<(step+1);i++){\n        if(position.x+i<=(mapLimit.x-1)){\n          state[position.y][position.x+i].color=changeColor;\n          state[position.y][position.x+i].isInteractive=true;\n          state[position.y][position.x+i].alpha=0.5;\n          state[position.y][position.x+i].zIndex=1;\n        };\n        if(position.y+i<=(mapLimit.y-1)){\n          state[position.y+i][position.x].color=changeColor;\n          state[position.y+i][position.x].isInteractive=true;\n          state[position.y+i][position.x].alpha=0.5;\n          state[position.y+i][position.x].zIndex=1;\n        };\n        if(position.x-i>=0){\n          state[position.y][position.x-i].color=changeColor;\n          state[position.y][position.x-i].isInteractive=true;\n          state[position.y][position.x-i].alpha=0.5;\n          state[position.y][position.x-i].zIndex=1;\n        };\n        if(position.y-i>=0){\n          state[position.y-i][position.x].color=changeColor;\n          state[position.y-i][position.x].isInteractive=true;\n          state[position.y-i][position.x].alpha=0.5;\n          state[position.y-i][position.x].zIndex=1;\n        };\n      }\n      currentChessPositions.map(v=>{\n        return state[v.y][v.x].isInteractive=false;\n      });\n    },\n    GetAttack:(state, action)=>{\n      const { position, step, changeColor, currentChessPositions } = action.payload;\n      for(let i=0;i<(step+1);i++){\n        if(position.x+i<=(mapLimit.x-1)){\n          state[position.y][position.x+i].color=changeColor;\n          state[position.y][position.x+i].isInteractive=true;\n          state[position.y][position.x+i].alpha=0.5;\n          state[position.y][position.x+i].zIndex=3;\n        };\n        if(position.y+i<=(mapLimit.y-1)){\n          state[position.y+i][position.x].color=changeColor;\n          state[position.y+i][position.x].isInteractive=true;\n          state[position.y+i][position.x].alpha=0.5;\n          state[position.y+i][position.x].zIndex=3;\n        };\n        if(position.x-i>=0){\n          state[position.y][position.x-i].color=changeColor;\n          state[position.y][position.x-i].isInteractive=true;\n          state[position.y][position.x-i].alpha=0.5;\n          state[position.y][position.x-i].zIndex=3;\n        };\n        if(position.y-i>=0){\n          state[position.y-i][position.x].color=changeColor;\n          state[position.y-i][position.x].isInteractive=true;\n          state[position.y-i][position.x].alpha=0.5;\n          state[position.y-i][position.x].zIndex=3;\n        };\n      }\n      currentChessPositions.map(v=>{\n        return (\n          state[v.y][v.x].isInteractive=false,\n          state[v.y][v.x].zIndex=1\n        )\n      });\n    }\n  }\n});\nexport default chessMap.reducer;\nexport const { MoveSelect, GetMove, GetAttack } = chessMap.actions;\n","import React, {} from 'react';\nimport * as PIXI from \"pixi.js\";\nimport { Sprite } from '@inlet/react-pixi/animated';\nimport { MoveSelect } from '../../reducer/map';\nconst texture = PIXI.Texture.WHITE;\nexport const CreateCheckerboard = ({\n  reduxProps\n})=>{\n  const { \n    chess, enemyChess, chessMap, currentChess, dispatch, \n    setTipStatus, setMoveStep, setBattleInfo\n  } = reduxProps;\n  const checkMatchAttackPosition = (x,y)=>{\n    let isMatch = false;\n    enemyChess.map(v=>{\n      const checkMatch = v.debut&&(x===v.x)&&(y===v.y);\n      if(checkMatch){\n        return isMatch=true;\n      }else return null;\n    });\n    return isMatch;\n  };\n  const getCurrentEnemy = (x,y)=>{\n    let item = {};\n    enemyChess.map((v,k)=>{\n      const checkMatch = v.debut&&(x===v.x)&&(y===v.y);\n      if(checkMatch){\n        return item={...v,key:k}\n      }else return null;\n    });\n    return item;\n  };\n  return <React.Fragment>\n    {chessMap.map(value=> {\n      return value.map((v,k)=>{\n        return <Sprite\n          interactive={v.isInteractive}\n          buttonMode={v.isInteractive}\n          zIndex={v.zIndex}\n          key={k}\n          width={40}\n          height={40}\n          x={v.x*40}\n          y={v.y*40}\n          tint={v.color}\n          alpha={v.alpha}\n          texture={texture}\n          pointertap={()=>{\n            switch (currentChess.type) {\n              case \"MOVE\":\n                setTipStatus({\n                  title:'確定移動?',\n                  status:true,\n                  position:{\n                    x:v.x, y:v.y\n                  }\n                });\n                dispatch(MoveSelect({\n                  position:{ \n                    x:chess[currentChess.key].x, \n                    y:chess[currentChess.key].y,\n                  },\n                  step:chess[currentChess.key].step,\n                  changeColor:'0x06d6a0',\n                  alphaVal:0.5\n                }));\n                break;\n              case \"ATTACK\":\n                if(checkMatchAttackPosition(v.x,v.y)){\n                  const targetData = getCurrentEnemy(v.x,v.y);\n                  setBattleInfo({\n                    status:true,\n                    attacker:{ \n                      key: currentChess.key,\n                      ...chess[currentChess.key]\n                    },\n                    target:{\n                      key: targetData.key,\n                      ...targetData\n                    }\n                  });\n                  dispatch(MoveSelect({\n                    position:{ \n                      x:chess[currentChess.key].x, \n                      y:chess[currentChess.key].y,\n                    },\n                    step:chess[currentChess.key].attack,\n                    changeColor:'0x383838',\n                    alphaVal:0\n                  }));\n                }else {\n                  setMoveStep(true);\n                  dispatch(MoveSelect({\n                    position:{ \n                      x:chess[currentChess.key].x, \n                      y:chess[currentChess.key].y,\n                    },\n                    step:chess[currentChess.key].acttack,\n                    changeColor:'0x383838',\n                    alphaVal:0\n                  }));\n                };\n                break;\n              default:\n                return;\n            }; \n          }}\n        />\n      });\n    })}\n  </React.Fragment>\n};","import React from 'react';\n// import { fromJS } from 'immutable';\nimport { Graphics, Text } from '@inlet/react-pixi/animated';\nimport { chessMove, chessMoved } from \"../../reducer/chess\";\nimport { MoveSelect } from '../../reducer/map';\nimport * as PIXI from \"pixi.js\";\n\nexport const ConfirmTip = ({\n  props,\n})=> {\n  const { \n    chess,\n    currentChess,\n    tipStatus,\n    currentBGM,\n    dispatch,\n    setMoveStep, \n    setTipStatus,\n    setOtherTab,\n    setRoundNum,\n    setUsualTip,\n    setFadeBGM\n  } = props;\n  return <Graphics\n    x={400}\n    y={300}\n    draw={g=> {\n      g.clear();\n      g.lineStyle(1,`0xffffff`,1);\n      g.beginFill(`0x22223b`);\n      g.drawRoundedRect(-90,-50,180,100,8);\n      g.endFill();\n    }}\n  >\n    <Text\n      text={tipStatus.title}\n      anchor={0.5}\n      x={0}\n      y={-20}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 20,\n        fill:['#ffffff', '#ffffff'],\n      })}\n    />\n    <Text\n      interactive={true}\n      buttonMode={true}\n      anchor={0.5}\n      text={'確定'}\n      x={-30}\n      y={20}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 20,\n        fill:['#ffffff', '#ffffff'],\n      })}\n      pointertap={()=>{\n        switch (currentChess.type) {\n          case \"MOVE\":\n            dispatch(chessMove({\n              key: currentChess.key,\n              changeX:tipStatus.position.x,\n              changeY:tipStatus.position.y\n            }));\n            dispatch(chessMoved({\n              key: currentChess.key,\n            }));\n            dispatch(MoveSelect({\n              position:{ \n                x:chess[currentChess.key].x, \n                y:chess[currentChess.key].y,\n              },\n              step:chess[currentChess.key].step,\n              changeColor:'0x383838',\n              alphaVal:0\n            }));\n            setMoveStep(true);\n            setTipStatus(prev=>{\n              return {...prev, status:false }\n            });\n            break;\n          case \"ENDROUND\":\n            setOtherTab(false);\n            setRoundNum(prev=>prev+=1);\n            setTipStatus(prev=>{\n              return {...prev, status:false }\n            });\n            setUsualTip({\n              title:'敵方回合',\n              status:true\n            });\n            setFadeBGM(currentBGM);\n            break;\n          default:\n            return;\n        }\n      }}\n    />\n    <Text\n      interactive={true}\n      buttonMode={true}\n      anchor={0.5}\n      text={'取消'}\n      x={30}\n      y={20}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 20,\n        fill:['#ffffff', '#ffffff'],\n      })}\n      pointertap={()=>{\n        switch (currentChess.type) {\n          case \"MOVE\":\n            dispatch(MoveSelect({\n              position:{ \n                x:chess[currentChess.key].x, \n                y:chess[currentChess.key].y,\n              },\n              step:chess[currentChess.key].step,\n              changeColor:'0x383838',\n              alphaVal:0\n            }));\n            setMoveStep(true);\n            setTipStatus(prev=>{\n              return {...prev, status:false }\n            });\n            break;\n          case \"ENDROUND\":\n            setTipStatus(prev=>{\n              return {...prev, status:false }\n            });\n            break;\n          default:\n            return;\n        }\n      }}\n    />\n  </Graphics>\n};","import { fromJS } from \"immutable\";\n\nexport const stageRule = fromJS({\n  stageOne: {\n    debutChess:[\n      { \n        name:'Tanjirou',\n        x:6,\n        y:7\n      }\n    ],\n    debutEnemyChess:[\n      {\n        name:'Teoni',\n        x:14,\n        y:7\n      }\n    ],\n    ruleText:{\n      win:'擊敗手鬼。',\n      lose:'竃門 碳治郎 戰敗。'\n    },\n    recap:'前情提要：碳治郎與鬼殺隊士們即將與「炎柱」煉獄杏壽郎見面，並協助他殺死潛伏在無限列車上的惡鬼。今日是無限列車出發的前一夜...。',\n    story:[{\n        character:'Tanjirou-talk-default',\n        name:'竈門 炭治郎',\n        color:'#00ff99',\n        content:'提前一日到達車站了，想不到現在的東京已經這麼繁華，連夜晚到處都是燈光。'\n      },{\n        character:'Tanjirou-talk-default',\n        name:'竈門 炭治郎',\n        color:'#00ff99',\n        content:'這一陣子的經歷，讓禰豆子妳也辛苦了..今天妳就好好休息吧。'\n      },{\n        character:'Nezuko-talk-dodge',\n        name:'竈門 禰豆子',\n        color:'#00ff99',\n        content:'嗯...(點頭)'\n      },{\n        character:'Tanjirou-talk-default',\n        name:'竈門 炭治郎',\n        color:'#00ff99',\n        content:'那麼我趁者明日的任務開始以前，先到市區外圍獨自修行一下吧!!'\n      },{\n        character:'Nezuko-talk-dodge',\n        name:'竈門 禰豆子',\n        color:'#00ff99',\n        content:'嗯嗯.....(務必小心)'\n      },{\n        character:'Tanjirou-talk-default',\n        name:'竈門 炭治郎',\n        color:'#00ff99',\n        content:'(步行到市區外圍)'\n      },{\n        character:'Tanjirou-talk-default',\n        name:'竈門 炭治郎',\n        color:'#00ff99',\n        content:'想想至今很久沒有獨自揮刀修煉了! 真是懷念..哈哈。'\n      },{\n        character:'Tanjirou-talk-dodge',\n        name:'竈門 炭治郎',\n        color:'#00ff99',\n        content:'(騷動聲)..!!'\n      },{\n        character:'Tanjirou-talk-dodge',\n        name:'竈門 炭治郎',\n        color:'#00ff99',\n        content:'鬼的氣味!?..好熟悉?!!'\n      },{\n        character:'Teoni-talk-default',\n        name:'手鬼',\n        color:'#9d4edd',\n        content:'獵鬼人?!! 真是剛好，眼前送來的食物!!'\n      },{\n        character:'Tanjirou-talk-def',\n        name:'竈門 炭治郎',\n        color:'#00ff99',\n        content:'手鬼!!!??..不是在鬼殺隊試煉的時候就擊敗他了嗎??'\n      },{\n        character:'Teoni-talk-default',\n        name:'手鬼',\n        color:'#9d4edd',\n        content:'看我吃了你!!!'\n      },{\n        character:'Tanjirou-talk-def',\n        name:'竈門 炭治郎',\n        color:'#00ff99',\n        content:'真是奇怪!!..究竟是怎麼回事??..從沒聽到消息說這附近出現惡鬼，而且還是死過一次的手鬼..'\n      },{\n        character:'Tanjirou-talk-attack',\n        name:'竈門 炭治郎',\n        color:'#00ff99',\n        content:'冷靜下來! 必須在這個地方打倒他!!'\n    }],\n    endStory:[{\n        character:'Tanjirou-talk-def',\n        name:'竈門 炭治郎',\n        color:'#00ff99',\n        content:'總算成功打倒他了!'\n      },{\n        character:'Tanjirou-talk-dodge',\n        name:'竈門 炭治郎',\n        color:'#00ff99',\n        content:'手鬼看起來並不記得之前與我交手過的事..而且力量也比過往強大，想必是有什麼奇怪的事情發生了吧..'\n      },{\n        character:'Tanjirou-talk-dodge',\n        name:'竈門 炭治郎',\n        color:'#00ff99',\n        content:'不知道伊之助與善逸是否平安....'\n    }],\n    isWin: enemyList => {\n      let totalLife = 0;\n        enemyList.map(v => {\n          if(v.debut){\n            return totalLife += v.hp;\n          }return null;\n        });\n      return totalLife>0 ? false : true ;\n    },\n    isLose: chessList => {\n      let totalLife = 0;\n        chessList.map(v => {\n          if(v.debut){\n            return totalLife += v.hp;\n          }return null;\n        });\n      return totalLife>0 ? false : true ;\n    }\n  },\n  stageTwo: {\n    debutChess:[\n      { \n        name:'Zenitsu',\n        x:6,\n        y:6\n      },{ \n        name:'Inosuke',\n        x:6,\n        y:8\n      }\n    ],\n    debutEnemyChess:[\n      {\n        name:'Nomanooni',\n        x:13,\n        y:7\n      }\n    ],\n    ruleText:{\n      win:'擊敗手鬼。',\n      lose:'竃門 碳治郎 戰敗。'\n    },\n    recap:'前情提要：碳治郎與鬼殺隊士們。',\n    story:[{\n        character:'Tanjirou-talk-default',\n        name:'竈門 炭治郎',\n        color:'#00ff99',\n        content:'1:台詞測試'\n      },{\n        character:'Tanjirou-talk-default',\n        name:'竈門 炭治郎',\n        color:'#00ff99',\n        content:'2:台詞測試'\n      },{\n        character:'Tanjirou-talk-default',\n        name:'竈門 炭治郎',\n        color:'#00ff99',\n        content:'3:台詞測試'\n      },{\n        character:'Teoni-talk-default',\n        name:'手鬼',\n        color:'#9d4edd',\n        content:'4:台詞測試!!!'\n      },{\n        character:'Tanjirou-talk-def',\n        name:'竈門 炭治郎',\n        color:'#00ff99',\n        content:'5:台詞測試!!!'\n      },{\n        character:'Teoni-talk-default',\n        name:'手鬼',\n        color:'#9d4edd',\n        content:'6:台詞測試!!!'\n      },{\n        character:'Tanjirou-talk-attack',\n        name:'竈門 炭治郎',\n        color:'#00ff99',\n        content:'7:台詞測試!!!'\n    }],\n    endStory:[{\n        character:'Tanjirou-talk-def',\n        name:'竈門 炭治郎',\n        color:'#00ff99',\n        content:'打倒他了!'\n      },{\n        character:'Tanjirou-talk-def',\n        name:'竈門 炭治郎',\n        color:'#00ff99',\n        content:'打倒他了!!!!!'\n      },{\n        character:'Tanjirou-talk-def',\n        name:'竈門 炭治郎',\n        color:'#00ff99',\n        content:'打倒他了!!!!!!!!!'\n    }],\n    isWin: enemyList => {\n      let totalLife = 0;\n        enemyList.map(v => {\n          if(v.debut){\n            return totalLife += v.hp;\n          }return null;\n        });\n      return totalLife>0 ? false : true ;\n    },\n    isLose: chessList => {\n      let totalLife = 0;\n        chessList.map(v => {\n          if(v.debut){\n            return totalLife += v.hp;\n          }return null;\n        });\n      return totalLife>0 ? false : true ;\n    }\n  }\n});","import React,{ useState } from 'react';\n// import { fromJS } from 'immutable';\nimport { Graphics, Text } from '@inlet/react-pixi/animated';\nimport * as PIXI from \"pixi.js\";\n// rule\nimport { stageRule } from \"../../constants/stageRule\";\nexport const UsualTip = ({\n  props,\n})=> {\n  const {\n    stageStatus, chess, currentChess, enemyChess, currentBGM, animeShow,\n    usualTip, setMoveStep, setUsualTip, setCurrentChess, setFadeBGM,\n    setEnemyRoundTab, setRoundEnd\n  } = props;\n    const [ textColor, setTextColor ] = useState(['#ffffff', '#ffffff']);\n  return <Graphics\n    x={400}\n    y={300}\n    draw={g=> {\n      g.clear();\n      g.lineStyle(1,`0xffffff`,1);\n      g.beginFill(`0x22223b`);\n      g.drawRoundedRect(-90,-50,180,100,8);\n      g.endFill();\n    }}\n  >\n    <Text\n      text={usualTip.title}\n      anchor={0.5}\n      x={0}\n      y={-20}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 20,\n        fill: textColor,\n      })}\n    />\n    <Text\n      interactive={true}\n      buttonMode={true}\n      anchor={0.5}\n      text={'確定'}\n      x={0}\n      y={20}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 20,\n        fill:['#ffffff', '#ffffff'],\n      })}\n      pointertap={()=>{\n        switch (currentChess.type) {\n          case \"ATTACK\":\n            const checkWin = stageRule.getIn([stageStatus,'isWin']);\n            const checkLose = stageRule.getIn([stageStatus,'isLose']);\n            if(checkWin(enemyChess)){\n              setTextColor(['#ffffff', '#06d6a0']);\n              setCurrentChess({\n                key:0,\n                type:\"CHECKWIN\"\n              });\n              setUsualTip({\n                title:`作戰獲勝!`,\n                status:true,\n              });\n            }else if(checkLose(chess)){\n              setTextColor(['#dc2f02', '#d00000']);\n              setCurrentChess({\n                key:0,\n                type:\"CHECKLOSE\"\n              });\n              setUsualTip({\n                title:`作戰失敗!`,\n                status:true,\n              });\n            }else {\n              if(!checkLose(chess)&&(animeShow.type===\"ENEMY\")){\n                setUsualTip({\n                  title:`我方回合`,\n                  status:true,\n                });\n                setCurrentChess({\n                  key:0,\n                  type:\"USERROUND\"\n                });\n              }else {\n                setMoveStep(true);\n                setUsualTip({\n                  title:``,\n                  status:false,\n                });\n              };\n            }\n            break;\n          case \"CHECKWIN\":\n            setRoundEnd(true);\n            setTextColor(['#ffffff', '#ffffff']);\n            setUsualTip({\n              title:``,\n              status:false,\n            });\n            break;\n          case \"CHECKLOSE\":\n            setTextColor(['#ffffff', '#ffffff']);\n            setUsualTip({\n              title:`GAME OVER`,\n              status:true,\n            });\n            setCurrentChess({\n              key:0,\n              type:\"GAMEOVER\"\n            });\n            break;\n          case \"GAMEOVER\":\n            window.location.reload();\n            break;\n          case \"ENDROUND\":\n            setEnemyRoundTab({\n              oder:0,\n              status:true\n            });\n            setUsualTip({\n              title:``,\n              status:false\n            });\n            break;\n          case \"USERROUND\":\n            setFadeBGM(currentBGM);\n            setMoveStep(true);\n            setUsualTip({\n              title:``,\n              status:false\n            });\n            break;\n          default:\n            break;\n        }\n      }}\n    />\n  </Graphics>\n};","export const ProbabilityCount = (\n  attackerHit,\n  targetDodge\n)=>{\n  const basicHit = 100;\n  const hitProbability = basicHit + attackerHit - targetDodge;\n  const checkRamdom = Math.round(Math.random()*100 + 1);\n  if(hitProbability < checkRamdom) {\n    return false\n  }else return true;\n};","import React,{ useState } from 'react';\nimport { Container, Sprite, Graphics, Text } from '@inlet/react-pixi/animated';\nimport { loader } from '../DataLoader';\nimport * as PIXI from \"pixi.js\";\nimport { ProbabilityCount } from \"../Common/ProbabilityCount\";\nimport { chessAttackResult, chessMoved } from \"../../reducer/chess\";\nimport { enemyChessDefense } from \"../../reducer/enemyChess\";\n\nexport const BattleBoard = ({ props })=>{\n  const { \n    battleInfo, setMoveStep, setBattleInfo, setAnimeShow, setCurrentBGM, dispatch\n  } = props;\n  const [ atkSelectd, setAtkSelectd ] = useState({\n    key:0,\n  });\n  const CreateAttackerInfo = ({ pX=0, pY=0, data })=>{\n    return <Container x={pX} y={pY} sortableChildren={true}>\n      <Text\n        text={'攻'}\n        x={220}\n        y={0}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 30,\n          fill:['#ffffff', '#00ff99'],\n        })}\n      />\n      <Text\n        text={data.cn}\n        x={60}\n        y={-3}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 16,\n          fill:'#ffffff',\n        })}\n      />\n      <Text\n        text={`${data.hp} / ${data.fullValue.hp}`}\n        x={60}\n        y={17}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 16,\n          fill:'#ff6b6b',\n        })}\n      />\n      <Text\n        text={`${data.sp} / ${data.fullValue.sp}`}\n        x={60}\n        y={34}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 16,\n          fill:'#0466c8',\n        })}\n      />\n      <Sprite\n        width={50}\n        height={50}\n        x={0}\n        y={0}\n        image={loader.resources[`${data.name}-head-default`].data}\n      />\n      <Text\n        text={`招式選擇：`}\n        x={0}\n        y={80}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 16,\n          fill:'#ffffff',\n        })}\n      />\n      <Graphics\n        x={0}\n        y={115}\n        zIndex={1}\n        draw={g=> {\n          g.clear();\n          g.lineStyle(1,`0xffffff`,1);\n          g.beginFill(`0x0f0f1b`);\n          g.drawRoundedRect(0,0,240,180,8);\n          g.endFill();\n        }}\n      />\n      {data.skill.map((value,key)=>{\n        const skillCanUse = data.sp - value.sp >= 0;\n        return <React.Fragment key={key}>\n          <Text\n            zIndex={2}\n            interactive={skillCanUse}\n            buttonMode={true}\n            text={value.name}\n            x={20}\n            y={130+(key*24)}\n            style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n              fontSize: 16,\n              fill: ((atkSelectd.key===key)&&skillCanUse) ? ['#ffffff', '#00ff99'] :  \n                skillCanUse ? '#ffffff' : '#8d99ae',\n              fontWeight: (atkSelectd.key===key) ? 600 : 300\n            })}\n            pointertap={()=>setAtkSelectd({\n              key: key\n            })}\n          />\n        </React.Fragment>\n      })}\n    </Container>\n  };\n  const CreateTargetInfo = ({ pX=0, pY=0, data })=>{\n    return <Container x={pX} y={pY} sortableChildren={true}>\n      <Text\n        text={'防'}\n        x={0}\n        y={0}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 30,\n          fill:['#ffffff', '#ee6c4d'],\n        })}\n      />\n      <Text\n        text={data.cn}\n        anchor={{x:1,y:0}}\n        x={190}\n        y={-3}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 16,\n          fill:'#ffffff',\n        })}\n      />\n      <Text\n        text={`${data.hp} / ${data.fullValue.hp}`}\n        anchor={{x:1,y:0}}\n        x={190}\n        y={17}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 16,\n          fill:'#ff6b6b',\n        })}\n      />\n      <Text\n        text={`${data.sp} / ${data.fullValue.sp}`}\n        anchor={{x:1,y:0}}\n        x={190}\n        y={34}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 16,\n          fill:'#0466c8',\n        })}\n      />\n      <Sprite\n        width={50}\n        height={50}\n        x={200}\n        y={0}\n        image={loader.resources[`${data.name}-head-default`].data}\n      />\n    </Container>\n  };\n  const ForecastInfo = ({ pX, pY, data })=>{\n    return <Container x={pX} y={pY} sortableChildren={true}>\n      <Graphics\n        x={0}\n        y={0}\n        zIndex={1}\n        draw={g=> {\n          g.clear();\n          g.lineStyle(1,`0x00ff99`,1);\n          g.beginFill(`0x0f0f1b`);\n          g.drawRoundedRect(0,0,265,215,8);\n          g.endFill();\n        }}\n      />\n      <Text\n        text={`招式：`}\n        zIndex={2}\n        x={20}\n        y={20}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 20,\n          fill:'#ffffff'\n        })}\n      />\n      <Text\n        text={`${data.attacker.skill[atkSelectd.key].name}`}\n        zIndex={2}\n        x={80}\n        y={22}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 16,\n          fill:'#00ff99'\n        })}\n      />\n      <Text\n        text={`攻擊力：`}\n        zIndex={2}\n        x={20}\n        y={50}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 20,\n          fill:'#ffffff'\n        })}\n      />\n      <Text\n        text={`${data.attacker.skill[atkSelectd.key].atk}`}\n        zIndex={2}\n        x={100}\n        y={52}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 18,\n          fill:'#fdc500'\n        })}\n      />\n      <Text\n        text={`命中率：`}\n        zIndex={2}\n        x={20}\n        y={80}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 20,\n          fill:'#ffffff'\n        })}\n      />\n      <Text\n        text={`${\n          100 +\n          ((data.attacker.skill[atkSelectd.key].hitfix - data.target.dodge)>=0 ? 0 :\n            (data.attacker.skill[atkSelectd.key].hitfix - data.target.dodge))\n        }%`}\n        zIndex={2}\n        x={100}\n        y={82}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 18,\n          fill:'#ffffff'\n        })}\n      />\n      <Text\n        text={`消耗：`}\n        zIndex={2}\n        x={20}\n        y={110}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 20,\n          fill:'#ffffff'\n        })}\n      />\n      <Text\n        text={`${data.attacker.skill[atkSelectd.key].sp}`}\n        zIndex={2}\n        x={80}\n        y={110}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 18,\n          fill:'#0466c8'\n        })}\n      />\n    </Container>\n  };\n  return <Graphics\n    x={400}\n    y={300}\n    zIndex={99}\n    draw={g=> {\n      g.clear();\n      g.lineStyle(1,`0xffffff`,1);\n      g.beginFill(`0x22223b`);\n      g.drawRoundedRect(-300,-200,600,400,8);\n      g.endFill();\n    }}\n  >\n    <CreateAttackerInfo\n      pX={-270}\n      pY={-180}\n      data={battleInfo.attacker}\n    />\n    <CreateTargetInfo\n      pX={20}\n      pY={-180}\n      data={battleInfo.target}\n    />\n    <ForecastInfo\n      pX={0}\n      pY={-100}\n      data={battleInfo}\n    />\n    <Text\n      interactive={true}\n      buttonMode={true}\n      text={'攻擊'}\n      anchor={0.5}\n      x={180}\n      y={160}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 20,\n        fill:'#ffffff',\n      })}\n      pointertap={()=>{\n        setCurrentBGM(battleInfo.attacker.name);\n        const isHit = ProbabilityCount(\n          battleInfo.attacker.skill[atkSelectd.key].hitfix,\n          battleInfo.target.dodge\n        );\n        dispatch(chessAttackResult({\n          key: battleInfo.attacker.key,\n          lessSp: battleInfo.attacker.skill[atkSelectd.key].sp\n        }));\n        dispatch(chessMoved({\n          key: battleInfo.attacker.key,\n        }));\n        if(isHit){\n          dispatch(enemyChessDefense({\n            key: battleInfo.target.key,\n            damage: battleInfo.attacker.skill[atkSelectd.key].atk\n          }));\n        };\n        setAnimeShow({\n          status:true,\n          type:'USER',\n          isHit: isHit,\n          attacker:{ \n            key:battleInfo.attacker.key,\n            skill:battleInfo.attacker.skill[atkSelectd.key],\n            prevSP:battleInfo.attacker.sp\n          },\n          target:{ \n            key:battleInfo.target.key,\n            isHit:isHit,\n            prevLife:battleInfo.target.hp\n          }\n        });\n        setBattleInfo({\n          status:false,\n          attacker:{ key:'' },\n          target:{ key:'' }\n        });\n      }}\n    />\n    <Text\n      interactive={true}\n      buttonMode={true}\n      text={'取消'}\n      anchor={0.5}\n      x={240}\n      y={160}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 20,\n        fill:'#ffffff',\n      })}\n      pointertap={()=>{\n        setMoveStep(true);\n        setBattleInfo({\n          status:false,\n          attacker:{ key:'' },\n          target:{ key:'' }\n        })\n      }}\n    />\n  </Graphics>\n};","import React from 'react';\nimport { Sprite } from '@inlet/react-pixi/animated';\nimport { Spring } from 'react-spring/renderprops';\nimport { loader } from '../../DataLoader';\n\nexport const AnimeShowBG = ({\n  props,\n})=>{\n  const { stageStatus, BGstatus, BGprop, SkBGprop, \n    setSkBGpops, setBGpops } = props;\n  return <>\n    {BGstatus.type==='STOP'&&<Sprite\n      x={-400}\n      y={-100}\n      zIndex={1}\n      width={1600}\n      height={500}\n      anchor={0.5}\n      image={loader.resources[`${stageStatus}-BG`].data}\n    />}\n    {BGstatus.type==='STANDBY'&&<Spring\n      from={{ x:-400, y:-100 }}\n      to={{ x: BGprop.toX, y:-100 }}\n      config={{ duration: BGprop.duration }}\n      onRest={()=>{\n        if(BGprop.toX===-400){\n          setBGpops({\n            toX:400,\n            duration: 20000\n          });\n        }else {\n          setBGpops({\n            toX:-400,\n            duration:-1000\n          });\n        };\n      }}\n    >\n      {props => \n        <Sprite\n          zIndex={1}\n          width={1600}\n          height={500}\n          anchor={0.5}\n          image={loader.resources[`${stageStatus}-BG`].data}\n          {...props}\n      />}\n    </Spring>}\n    {BGstatus.type==='ENEMYSTANDBY'&&<Spring\n      from={{ x:400, y:-100 }}\n      to={{ x: -BGprop.toX, y:-100 }}\n      config={{ duration: BGprop.duration }}\n      onRest={()=>{\n        if(-BGprop.toX===400){\n          setBGpops({\n            toX:400,\n            duration: 20000\n          });\n        }else {\n          setBGpops({\n            toX:-400,\n            duration:-1000\n          });\n        };\n      }}\n    >\n      {props => \n        <Sprite\n          zIndex={1}\n          width={1600}\n          height={500}\n          anchor={0.5}\n          image={loader.resources[`${stageStatus}-BG`].data}\n          {...props}\n      />}\n    </Spring>}\n    {BGstatus.type==='SKILL'&&<Spring\n      from={{ x:-400, y:-100 }}\n      to={{ x: SkBGprop.toX, y:-100 }}\n      config={{ duration: SkBGprop.duration }}\n      onRest={()=>{\n        if(SkBGprop.toX===-400){\n          setSkBGpops({\n            toX:400,\n            duration: 500\n          });\n        }else {\n          setSkBGpops({\n            toX:-400,\n            duration:-1000\n          });\n        };\n      }}\n    >\n      {props => \n        <Sprite\n          zIndex={1}\n          width={1600}\n          height={500}\n          anchor={0.5}\n          image={loader.resources[`${stageStatus}-BG`].data}\n          {...props}\n      />}\n    </Spring>}\n    {BGstatus.type==='ENEMYSKILL'&&<Spring\n      from={{ x:400, y:-100 }}\n      to={{ x: -SkBGprop.toX, y:-100 }}\n      config={{ duration: SkBGprop.duration }}\n      onRest={()=>{\n        if(-SkBGprop.toX===400){\n          setSkBGpops({\n            toX:400,\n            duration: 500\n          });\n        }else {\n          setSkBGpops({\n            toX:-400,\n            duration:-1000\n          });\n        };\n      }}\n    >\n      {props => \n        <Sprite\n          zIndex={1}\n          width={1600}\n          height={500}\n          anchor={0.5}\n          image={loader.resources[`${stageStatus}-BG`].data}\n          {...props}\n      />}\n    </Spring>}\n  </>\n};","import React from 'react';\nimport { Container, Sprite, Graphics, Text } from '@inlet/react-pixi/animated';\nimport * as PIXI from \"pixi.js\";\nimport { loader } from '../../DataLoader';\nexport const TopBar = ({\n  right={},\n  left={},\n  showType='',\n  targetHp=0,\n  attackerSp=0\n})=> {\n  const hpBarCount = (hp,full)=>{\n    const leftVal =  Number(full) - Number(hp);\n    const percentage = Number(full) / 200;\n    const result = leftVal / percentage;\n    return result;\n  };\n  const spBarCount = (sp,full)=>{\n    const leftVal =  Number(full) - Number(sp);\n    const percentage = Number(full) / 100;\n    const result = leftVal / percentage;\n    return result;\n  };\n  return <Graphics \n    x={-400}\n    y={-300}\n    zIndex={98}\n    draw={g=> {\n      g.clear();\n      g.beginFill(`0x000f23`);\n      g.drawRoundedRect(0,0,800,80,0);\n      g.endFill();\n    }}\n  >\n    <Container sortableChildren={true}>\n      <Sprite\n        width={42}\n        height={42}\n        x={370}\n        y={40}\n        anchor={0.5} \n        image={loader.resources[`${showType===\"USER\" ? 'defIcon' : 'atkIcon' }`].data}\n      />\n      <Sprite\n        width={42}\n        height={42}\n        x={420}\n        y={40}\n        anchor={0.5} \n        image={loader.resources[`${showType===\"USER\" ? 'atkIcon' : 'defIcon' }`].data}\n      />\n      {/* left */}\n      <Sprite\n        width={50}\n        height={50}\n        x={50}\n        y={15}\n        image={loader.resources[`${left.name}-head-default`].data}\n      />\n      <Text \n        text={`${showType===\"USER\"?targetHp:left.hp} / ${left.fullValue.hp}`}\n        anchor={{x:1,y:0}} \n        x={320} y={10}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 18,\n          fill:'#e71d36',\n        })}/>\n      <Graphics\n        x={320} y={35}\n        zIndex={1}\n        draw={g=> {\n          g.clear();\n          g.beginFill(`0xe71d36`);\n          g.drawRoundedRect(0,0,-200,10,0);\n          g.endFill();\n        }}\n      />\n      <Graphics\n        x={320} y={35}\n        zIndex={2}\n        draw={g=> {\n          g.clear();\n          g.beginFill(`0x333533`);\n          g.drawRoundedRect(-200,0,hpBarCount(showType===\"USER\"?targetHp:left.hp,left.fullValue.hp),10,0);\n          g.endFill();\n        }}\n      />\n      <Text \n        text={`${showType===\"USER\"? left.sp : attackerSp} / ${left.fullValue.sp}`}\n        anchor={{x:1,y:0.3}} \n        x={210} y={55}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 18,\n          fill:'#4A86E8',\n        })}/>\n      <Graphics\n        x={320} y={55}\n        zIndex={1}\n        draw={g=> {\n          g.clear();\n          g.beginFill(`0x4A86E8`);\n          g.drawRoundedRect(0,0,-100,10,0);\n          g.endFill();\n        }}\n      />\n      <Graphics\n        x={220} y={55}\n        zIndex={2}\n        draw={g=> {\n          g.clear();\n          g.beginFill(`0x333533`);\n          g.drawRoundedRect(0,0,spBarCount(showType===\"USER\"?left.sp:attackerSp,left.fullValue.sp),10,0);\n          g.endFill();\n        }}\n      />\n      {/* right */}\n      <Sprite\n        width={50}\n        height={50}\n        x={690}\n        y={15}\n        image={loader.resources[`${right.name}-head-default`].data}\n      />\n      <Text \n        text={`${showType===\"USER\"?right.hp:targetHp} / ${right.fullValue.hp}`}\n        anchor={{x:1,y:0}} \n        x={670} y={10}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 18,\n          fill:'#e71d36',\n        })}/>\n      <Graphics\n        x={670} y={35}\n        zIndex={1}\n        draw={g=> {\n          g.clear();\n          g.beginFill(`0xe71d36`);\n          g.drawRoundedRect(0,0,-200,10,0);\n          g.endFill();\n        }}\n      />\n      <Graphics\n        x={670} y={35}\n        zIndex={2}\n        draw={g=> {\n          g.clear();\n          g.beginFill(`0x333533`);\n          g.drawRoundedRect(-200,0,hpBarCount(showType===\"USER\"?right.hp:targetHp,right.fullValue.hp),10,0);\n          g.endFill();\n        }}\n      />\n      <Text \n        text={`${showType===\"USER\"? attackerSp : right.sp} / ${right.fullValue.sp}`}\n        anchor={{x:1,y:0.3}} \n        x={560} y={55}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 18,\n          fill:'#4A86E8',\n        })}/>\n      <Graphics\n        x={670} y={55}\n        zIndex={1}\n        draw={g=> {\n          g.clear();\n          g.beginFill(`0x4A86E8`);\n          g.drawRoundedRect(0,0,-100,10,0);\n          g.endFill();\n        }}\n      />\n      <Graphics\n        x={570} y={55}\n        zIndex={2}\n        draw={g=> {\n          g.clear();\n          g.beginFill(`0x333533`);\n          g.drawRoundedRect(0,0,spBarCount(showType===\"USER\"?attackerSp:right.sp,right.fullValue.sp),10,0);\n          g.endFill();\n        }}\n      />\n    </Container>\n  </Graphics>\n};","import { fromJS } from \"immutable\";\nexport const lines = fromJS({\n  'Tanjirou': {\n    default:[\n      '(備戰中)',\n      '(備戰中)'\n    ],\n    attack:[\n      '我要成為強者，用強者的力量去保護弱者。',\n      '無論鬼奪走多少生命，人類的意志是怎樣都不會被打敗！'\n    ],\n    dodge:[\n      '危險!!',\n      '冷靜下來! 可以戰勝的。'\n    ],\n    def:[\n      '鬼殺隊不會被一點小傷給打倒!',\n      '不好了! 調整呼吸。'\n    ],\n    dead:[\n      '對不起....鱗瀧師傅..',\n      '禰豆子...'\n    ]\n  },\n  'Nezuko': {\n    default:[\n      '(備戰中)',\n      '(備戰中)'\n    ],\n    attack:[\n      '......!!(人類是家人)',\n      '......!!(打倒惡鬼)'\n    ],\n    dodge:[\n      '......!!(危險)',\n      '......!!(沒事的)'\n    ],\n    def:[\n      '......!!(危險)',\n      '......!!(沒事的)'\n    ],\n    dead:[\n      '......!?',\n      '.....(哥哥)'\n    ]\n  },\n  'Zenitsu': {\n    default:[\n      '(備戰中)',\n      '(備戰中)'\n    ],\n    attack:[\n      '雷之呼吸...',\n      '雷之呼吸!!'\n    ],\n    dodge:[\n      '!!(呼吸)',\n      '..!!'\n    ],\n    def:[\n      '!!(調整呼吸)',\n      '..!!'\n    ],\n    dead:[\n      '....',\n      '....(再見了,爺爺)',\n    ]\n  },\n  'Inosuke':{\n    default:[\n      '(備戰中)',\n      '(備戰中)'\n    ],\n    attack:[\n      '獸之呼吸...突豬猛進!!',\n      '讓你知道本大爺的厲害!!'\n    ],\n    dodge:[\n      '哈哈!! 根本不是本大爺的對手。',\n      '這點程度根本無法打敗我!!'\n    ],\n    def:[\n      '哼!..想打敗本大爺我還早的很!!',\n      '終於來個像樣的對手了。'\n    ],\n    dead:[\n      '唔....可惡啊!!...',\n      '想不到...本大爺竟然輸了...',\n    ]\n  },\n  'Rengoku': {\n    default:[\n      '(備戰中)',\n      '(備戰中)'\n    ],\n    attack:[\n      '我是炎柱 我會盡我的職責到最後一刻!!',\n      '在場的人，一個都不會死!!'\n    ],\n    dodge:[\n      '看來我們的目標不同!',\n      '柱，可不會輕易被打敗!'\n    ],\n    def:[\n      '柱，可不會輕易被打敗!',\n      '就算受了傷，我也會繼續戰鬥下去!!'\n    ],\n    dead:[\n      '母親大人....身為您的孩子是我的榮幸。',\n      '我要保護所有人，直到最後一刻....',\n    ]\n  },\n  'Teoni': {\n    default:[\n      '(備戰中)',\n      '(備戰中)'\n    ],\n    attack:[\n      '獵鬼人是最上等的食物!!',\n      '看我吃了你!!'\n    ],\n    dodge:[\n      '沒用沒用 哈哈哈哈!',\n      '就這點程度嗎? 可悲的劍士。'\n    ],\n    def:[\n      '不久就輪到你的死期了!',\n      '我會吃了你!!'\n    ],\n    dead:[\n      '甚麼!?.....我竟然會死在獵鬼人手上.....',\n      '甚麼!?.....我竟然會死在獵鬼人手上.....'\n    ]\n  },\n  'Nomanooni':{\n    default:[\n      '(備戰中)',\n      '(備戰中)'\n    ],\n    attack:[\n      '區區的獵鬼人，別想阻止我!!',\n      '上等的年輕女子，再不吃就來不及了!!'\n    ],\n    dodge:[\n      '嘰嘰嘰嘰嘰嘰!!!!!',\n      '嘻嘻嘻嘻嘿嘿嘿嘿!!'\n    ],\n    def:[\n      '我要吃光你的骨頭!!',\n      '我會殺了你!!'\n    ],\n    dead:[\n      '可惡可惡可惡可惡!!!!.....',\n      '嗚啊啊啊啊啊!?.......'\n    ]\n  },\n  'Hakuji':{\n    default:[\n      '(備戰中)',\n      '(備戰中)'\n    ],\n    attack:[\n      '不變成鬼就殺了你吧!!',\n      '弱小的東西沒有存活的必要!!'\n    ],\n    dodge:[\n      '這就是你的極限了嗎?',\n      '快點向我進攻呀!'\n    ],\n    def:[\n      '哈哈，這就對了!',\n      '不管怎麼攻擊，對我的不死之身都是沒用的。'\n    ],\n    dead:[\n      '甚麼!?......身為上弦是不可能被擊敗的!!',\n      '可惡呀!!!.....竟然被區區的人類擊敗!!.....'\n    ]\n  }\n});","import React, { useState } from 'react';\nimport { Container, Graphics, Sprite, Text } from '@inlet/react-pixi/animated';\nimport * as PIXI from \"pixi.js\";\nimport { loader } from '../../DataLoader';\nimport { lines } from \"../../../constants/lines\";\nexport const BottomBar = ({\n  right={},\n  left={},\n  linesStatus={}\n})=> {\n  const showCharacter = linesStatus.character===\"USER\" ? right.name : left.name;\n  const randomSize = lines.getIn([showCharacter,linesStatus.status]).size-1;\n  const [ random ] = useState(Math.round(Math.random()*randomSize));\n  return <Graphics \n    x={-400}\n    y={150}\n    zIndex={98}\n    draw={g=> {\n      g.clear();\n      g.beginFill(`0x000f23`);\n      g.drawRoundedRect(0,0,800,150,0);\n      g.endFill();\n    }}\n  >\n    <Container sortableChildren={true}>\n      <Sprite\n        width={100}\n        height={100}\n        x={50}\n        y={25}\n        image={loader.resources[`${showCharacter}-talk-${linesStatus.status}`].data}\n      />\n      <Text \n        text={lines.getIn([showCharacter,linesStatus.status,random])}\n        anchor={{x:0,y:0}} \n        x={170} y={60}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 18,\n          fill:'#ffff',\n        })}/>\n    </Container>\n  </Graphics>\n};","import React,{ useState, useEffect } from \"react\";\nexport const SkillShowProtoType = ({\n  skillName,\n  attackerName,\n  isHit,\n  targetLife,\n  attackerSp,\n  resultLife,\n  resultSp,\n  BGstatus,\n  setBGstatus,\n  setAnimeIsDone,\n  setTargetHp,\n  setAttackerSp,\n  setLinesStatus,\n  setShowSkill,\n  defXPostion,\n  steps,\n  ShowType\n})=>{\n  const [ position, setPosition ] = useState({ x:0, y:0, tint:0xffffff, alpha:1, mass:1, friction:20, tension:170 });\n  // def\n  useEffect(()=>{\n    if(BGstatus.defence && skillName==='防禦'){\n      const timeout = steps({\n        skillName:skillName,\n        isHit:isHit,\n        BGstatus:BGstatus,\n        resultLife:resultLife,\n        setAnimeIsDone:setAnimeIsDone,\n        setLinesStatus:setLinesStatus,\n        setPosition:setPosition,\n      });\n      return ()=> clearTimeout(timeout);\n    };\n  },[ BGstatus, skillName, isHit, resultLife, setAnimeIsDone, steps, setLinesStatus ])\n  // atk\n  useEffect(()=>{\n    if(skillName==='防禦'){ \n      setPosition(prev=>{return{ ...prev, x: defXPostion, y:10 }});\n      return;\n    };\n    const timeout = steps({\n      skillName:skillName,\n      isHit:isHit,\n      targetLife:targetLife,\n      attackerSp:attackerSp,\n      resultLife:resultLife,\n      resultSp:resultSp,\n      setBGstatus:setBGstatus,\n      setTargetHp:setTargetHp,\n      setAttackerSp:setAttackerSp,\n      setLinesStatus:setLinesStatus,\n      setShowSkill:setShowSkill,\n      setPosition:setPosition\n    });\n    return ()=> clearTimeout(timeout);\n  },[ skillName, isHit, targetLife, attackerSp, resultLife, resultSp,\n    setBGstatus, setTargetHp, setAttackerSp, defXPostion, steps, setLinesStatus, setShowSkill ]);\n  return <ShowType\n    skillName={skillName}\n    attackerName={attackerName}\n    position={position}\n  />\n};\n","import { TweenMax } from 'gsap';\nimport numeral from \"numeral\";\nimport { videos } from '../../../components/DataLoader';\nexport const steps = ({\n  skillName='',\n  isHit=false,\n  targetLife=0,\n  attackerSp=0,\n  resultLife=0,\n  resultSp=0,\n  BGstatus={},\n  setBGstatus=null,\n  setAnimeIsDone=null,\n  setTargetHp=null,\n  setAttackerSp=null,\n  setLinesStatus=null,\n  setPosition=null,\n  setShowSkill=null\n}) => {\n  // 技能動畫:\n  switch (skillName) {\n    case '防禦':\n      setPosition(prev=>{return{ ...prev, x:200, y:50, tension:100 }});\n      const defStart = ()=>{\n        if(isHit){\n          return isHitStep();\n        }else return isDodge();\n      };\n      const isHitStep = ()=> {\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:250, y:50, mass:2, \n            friction:5, tension:1000, tint:0xd00000}});\n          // callback\n          if(resultLife<=0){\n            return isDead({ type:'dead' });\n          }else return next({ type:'def' });\n        },BGstatus.seconds);\n        return timeout;\n      };\n      const isDodge = ()=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:250, y:0 }});\n          // callback\n          next({ type:'dodge' });\n        },BGstatus.seconds);\n        return timeout;\n      };\n      const isDead = ({ type })=> {\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:200, y:50, \n            friction:2, tint:0x03071e\n          }});\n          setLinesStatus(prev=>{ \n            return { \n              status: type,\n              character: prev.character===\"USER\" ? \"ENEMY\" : \"USER\"\n            };\n          });\n          // callback\n          isDeadStep2();\n        },5000);\n        return timeout;\n      };\n      const isDeadStep2 = ()=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return { ...prev, alpha:0 }});\n          // callback\n          end();\n        },3000);\n        return timeout;\n      };\n      const next = ({ type })=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:200, y:50, mass:1, \n            friction:20, tension:170, tint:0xffffff}});\n          setLinesStatus(prev=>{ \n            return { \n              status: type,\n              character: prev.character===\"USER\" ? \"ENEMY\" : \"USER\"\n            };\n          });\n          // callback\n          end();\n        },5000);\n        return timeout;\n      };\n      const end = ()=> {\n        const timeout = setTimeout(() => {\n          // callback\n          setAnimeIsDone(true);\n        },3000);\n        return timeout;\n      };\n      return defStart();\n    // ATK\n    case '叄之型―流流舞':\n      setBGstatus({ type:'STANDBY', defence:false, seconds:0 });\n      setPosition(prev=>{return{ ...prev, x:550,y:50,tension:100 }});\n      const skill2atkStart = ()=>{\n        setPosition(prev=>{return{ ...prev, x:250, y:50, tension:100 }});\n        // callback\n        return skill2step1();\n      };\n      const skill2step1 = ()=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:0, tension:100 }});\n          setBGstatus(prev=>{return{ ...prev, type:'SKILL' }});\n          // callback\n          skill2step2();\n        },3000);\n        return timeout;\n      };\n      const skill2step2 = ()=>{\n        const run =  { number: attackerSp };\n        TweenMax.to(run, 0.8, {\n          number: resultSp,\n          onUpdate: () => {\n            setAttackerSp(numeral(run.number).format(\"0\"))\n          },\n        });\n        setLinesStatus(prev=>{ return { ...prev, status:'attack' }});\n        setShowSkill(prev=>{\n          const video = videos[`${prev.name}`].skill2.baseTexture.resource.source;\n          video.play();\n          return { ...prev, \n            status:true, \n            type:'2',\n            callback:()=>{\n              setBGstatus(prev=>{return{ ...prev, type:'STOP', defence:true }});\n              setPosition(prev=>{return{ ...prev, x:-400, tension:1000 }});\n              skill2step3();\n            }\n          };\n        });\n      };\n      const skill2step3 = ()=>{\n        const run = { number: targetLife };\n        if(isHit) {\n          TweenMax.to(run, 0.8, {\n            number: resultLife<0 ? 0 : resultLife,\n            onUpdate: () => {\n              setTargetHp(numeral(run.number).format(\"0\"))\n            },\n          });\n        };\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:550, y:50, tension:50 }});\n        },3000);\n        return timeout;\n      };\n      return skill2atkStart();\n    case '捌之型―滝壺':\n      setBGstatus({ type:'STANDBY', defence:false, seconds:0 });\n      setPosition(prev=>{return{ ...prev, x:550,y:50,tension:100 }});\n      const skill3atkStart = ()=>{\n        setPosition(prev=>{return{ ...prev, x:250, y:50, tension:100 }});\n        // callback\n        return skill3step1();\n      };\n      const skill3step1 = ()=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:0, y:-100, tension:100 }});\n          setBGstatus(prev=>{return{ ...prev, type:'SKILL' }});\n          // callback\n          skill3step2();\n        },3000);\n        return timeout;\n      };\n      const skill3step2 = ()=>{\n        const run =  { number: attackerSp };\n        TweenMax.to(run, 0.8, {\n          number: resultSp,\n          onUpdate: () => {\n            setAttackerSp(numeral(run.number).format(\"0\"))\n          },\n        });\n        setLinesStatus(prev=>{ return { ...prev, status:'attack' }});\n        setShowSkill(prev=>{\n          const video = videos[`${prev.name}`].skill3.baseTexture.resource.source;\n          video.play();\n          return { ...prev, \n            status:true, \n            type:'3',\n            callback:()=>{\n              setBGstatus(prev=>{return{ ...prev, type:'STOP', defence:true }});\n              setPosition(prev=>{return{ ...prev, x:-400, y:50, tension:1000 }});\n              skill3step3();\n            }\n          };\n        });\n      };\n      const skill3step3 = ()=>{\n        const run = { number: targetLife };\n        if(isHit) {\n          TweenMax.to(run, 0.8, {\n            number: resultLife<0 ? 0 : resultLife,\n            onUpdate: () => {\n              setTargetHp(numeral(run.number).format(\"0\"))\n            },\n          });\n        };\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:550, y:50, tension:50 }});\n        },3000);\n        return timeout;\n      };\n      return skill3atkStart();\n      case '拾之型―生生流轉':\n        setBGstatus({ type:'STANDBY', defence:false, seconds:0 });\n        setPosition(prev=>{return{ ...prev, x:550,y:50,tension:100 }});\n        const skill4atkStart = ()=>{\n          setPosition(prev=>{return{ ...prev, x:250, y:50, tension:100 }});\n          // callback\n          return skill4step1();\n        };\n        const skill4step1 = ()=>{\n          const timeout = setTimeout(() => {\n            setPosition(prev=>{return{ ...prev, x:0, y:-100, tension:100 }});\n            setBGstatus(prev=>{return{ ...prev, type:'SKILL' }});\n            // callback\n            skill4step2();\n          },3000);\n          return timeout;\n        };\n        const skill4step2 = ()=>{\n          const run =  { number: attackerSp };\n          TweenMax.to(run, 0.8, {\n            number: resultSp,\n            onUpdate: () => {\n              setAttackerSp(numeral(run.number).format(\"0\"))\n            },\n          });\n          setLinesStatus(prev=>{ return { ...prev, status:'attack' }});\n          setShowSkill(prev=>{\n            const video = videos[`${prev.name}`].skill4.baseTexture.resource.source;\n            video.play();\n            return { ...prev, \n              status:true, \n              type:'4',\n              callback:()=>{\n                setBGstatus(prev=>{return{ ...prev, type:'STOP', defence:true }});\n                setPosition(prev=>{return{ ...prev, x:-400, y:50, tension:1000 }});\n                skill4step3();\n              }\n            };\n          });\n        };\n        const skill4step3 = ()=>{\n          const run = { number: targetLife };\n          if(isHit) {\n            TweenMax.to(run, 0.8, {\n              number: resultLife<0 ? 0 : resultLife,\n              onUpdate: () => {\n                setTargetHp(numeral(run.number).format(\"0\"))\n              },\n            });\n          };\n          const timeout = setTimeout(() => {\n            setPosition(prev=>{return{ ...prev, x:550, y:50, tension:50 }});\n          },3000);\n          return timeout;\n        };\n        return skill4atkStart();\n    default:\n      setBGstatus({ type:'STANDBY', defence:false, seconds:1200 });\n      setPosition(prev=>{return{ ...prev, x:550,y:50,tension:100 }});\n      const atkStart = ()=>{\n        setPosition(prev=>{return{ ...prev, x:250, y:50, tension:100 }});\n        // callback\n        return step1();\n      };\n      const step1 = ()=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:0, y:50, tension:100 }});\n          setBGstatus(prev=>{return{ ...prev, type:'SKILL' }});\n          // callback\n          step2();\n        },3000);\n        return timeout;\n      };\n      const step2 = ()=>{\n        const run =  { number: attackerSp };\n        TweenMax.to(run, 0.8, {\n          number: resultSp,\n          onUpdate: () => {\n            setAttackerSp(numeral(run.number).format(\"0\"))\n          },\n        });\n        setLinesStatus(prev=>{ return { ...prev, status:'attack' }});\n        const timeout = setTimeout(() => {\n          setBGstatus(prev=>{return{ ...prev, type:'STOP', defence:true }});\n          // callback\n          step3();\n        },3000);\n        return timeout;\n      };\n      const step3 = ()=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:-250, y:50, tension:1000 }});\n          // callback\n          step4();\n        },1000);\n        return timeout;\n      };\n      const step4 = ()=>{\n        const run = { number: targetLife };\n        if(isHit) {\n          TweenMax.to(run, 0.8, {\n            number: resultLife<0 ? 0 : resultLife,\n            onUpdate: () => {\n              setTargetHp(numeral(run.number).format(\"0\"))\n            },\n          });\n        };\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:550, y:50, tension:50 }});\n        },3000);\n        return timeout;\n      };\n      return atkStart();\n  }\n};","import React from \"react\";\nimport { loader } from '../../../components/DataLoader';\nimport { Spring } from 'react-spring/renderprops';\nimport { Sprite } from '@inlet/react-pixi/animated';\n\nexport const ShowType = ({\n  skillName,\n  attackerName,\n  position,\n}) =>{\n  switch (skillName) {\n    case `斬擊`:\n      return <Spring\n        from={{ x:550, y:50 }}\n        to={{ x:position.x, y:position.y }}\n        config={{ \n          mass:1,\n          tension: position.tension,\n          friction:20,\n        }}\n      >\n      {props => \n        <Sprite\n          zIndex={3}\n          width={200}\n          height={200}\n          anchor={0.5}\n          image={loader.resources[`${attackerName}-fight-typeA`].data}\n          {...props}\n        />}\n      </Spring>\n    case `防禦`:\n      return <Spring\n        from={{ x:650, y:50 }}\n        to={{ x:position.x, y:position.y }}\n        config={{ \n          mass:1,\n          tension: position.tension,\n          friction:20,\n        }}\n      >\n      {props => \n        <Sprite\n          zIndex={2}\n          width={200}\n          height={200}\n          anchor={0.5}\n          alpha={position.alpha}\n          tint={position.tint}\n          image={loader.resources[`${attackerName}-fight-typeA`].data}\n          {...props}\n        />}\n      </Spring>\n    default:\n      return <Spring\n        from={{ x:550, y:50 }}\n        to={{ x:position.x, y:position.y }}\n        config={{ \n          mass:1,\n          tension: position.tension,\n          friction:20,\n        }}\n      >\n      {props => \n        <Sprite\n          zIndex={3}\n          width={200}\n          height={200}\n          anchor={0.5}\n          image={loader.resources[`${attackerName}-fight-typeA`].data}\n          {...props}\n        />}\n      </Spring>\n    };\n};","import React from \"react\";\n// part\nimport { SkillShowProtoType } from \"../../SkillShowProtoType\";\nimport { steps } from \"./steps\";\nimport { ShowType } from \"./ShowType\";\n\nexport const TanjirouSkill = ( props )=>{\n  return <SkillShowProtoType \n    {...props}\n    defXPostion={550}\n    steps={steps}\n    ShowType={ShowType}\n  />\n};","import { TweenMax } from 'gsap';\nimport numeral from \"numeral\";\nimport { videos } from '../../../components/DataLoader';\nexport const steps = ({\n  skillName='',\n  isHit=false,\n  targetLife=0,\n  attackerSp=0,\n  resultLife=0,\n  resultSp=0,\n  BGstatus={},\n  setBGstatus=null,\n  setAnimeIsDone=null,\n  setTargetHp=null,\n  setAttackerSp=null,\n  setLinesStatus=null,\n  setPosition=null,\n  setShowSkill=null\n}) => {\n  // 技能動畫:\n  switch (skillName) {\n    case '防禦':\n      setPosition(prev=>{return{ ...prev, x:200, y:50, tension:100 }});\n      const defStart = ()=>{\n        if(isHit){\n          return isHitStep();\n        }else return isDodge();\n      };\n      const isHitStep = ()=> {\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:250, y:50, mass:2, \n            friction:5, tension:1000, tint:0xd00000}});\n          // callback\n          if(resultLife<=0){\n            return isDead({ type:'dead' });\n          }else return next({ type:'def' });\n        },BGstatus.seconds);\n        return timeout;\n      };\n      const isDodge = ()=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:250, y:0 }});\n          // callback\n          next({ type:'dodge' });\n        },BGstatus.seconds);\n        return timeout;\n      };\n      const isDead = ({ type })=> {\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:200, y:50, \n            friction:2, tint:0x03071e\n          }});\n          setLinesStatus(prev=>{ \n            return { \n              status: type,\n              character: prev.character===\"USER\" ? \"ENEMY\" : \"USER\"\n            };\n          });\n          // callback\n          isDeadStep2();\n        },5000);\n        return timeout;\n      };\n      const isDeadStep2 = ()=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return { ...prev, alpha:0 }});\n          // callback\n          end();\n        },3000);\n        return timeout;\n      };\n      const next = ({ type })=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:200, y:50, mass:1, \n            friction:20, tension:170, tint:0xffffff}});\n          setLinesStatus(prev=>{ \n            return { \n              status: type,\n              character: prev.character===\"USER\" ? \"ENEMY\" : \"USER\"\n            };\n          });\n          // callback\n          end();\n        },5000);\n        return timeout;\n      };\n      const end = ()=> {\n        const timeout = setTimeout(() => {\n          // callback\n          setAnimeIsDone(true);\n        },3000);\n        return timeout;\n      };\n      return defStart();\n    // ATK\n    case '踢擊':\n      setBGstatus({ type:'STANDBY', defence:false, seconds:0 });\n      setPosition(prev=>{return{ ...prev, x:550,y:50,tension:100 }});\n      const skill2atkStart = ()=>{\n        setPosition(prev=>{return{ ...prev, x:250, y:50, tension:100 }});\n        // callback\n        return skill2step1();\n      };\n      const skill2step1 = ()=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:0, tension:100 }});\n          setBGstatus(prev=>{return{ ...prev, type:'SKILL' }});\n          // callback\n          skill2step2();\n        },3000);\n        return timeout;\n      };\n      const skill2step2 = ()=>{\n        const run =  { number: attackerSp };\n        TweenMax.to(run, 0.8, {\n          number: resultSp,\n          onUpdate: () => {\n            setAttackerSp(numeral(run.number).format(\"0\"))\n          },\n        });\n        setLinesStatus(prev=>{ return { ...prev, status:'attack' }});\n        setShowSkill(prev=>{\n          const video = videos[`${prev.name}`].skill2.baseTexture.resource.source;\n          video.play();\n          return { ...prev, \n            status:true, \n            type:'2',\n            callback:()=>{\n              setBGstatus(prev=>{return{ ...prev, type:'STOP', defence:true }});\n              setPosition(prev=>{return{ ...prev, x:-400, tension:1000 }});\n              skill2step3();\n            }\n          };\n        });\n      };\n      const skill2step3 = ()=>{\n        const run = { number: targetLife };\n        if(isHit) {\n          TweenMax.to(run, 0.8, {\n            number: resultLife<0 ? 0 : resultLife,\n            onUpdate: () => {\n              setTargetHp(numeral(run.number).format(\"0\"))\n            },\n          });\n        };\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:550, y:50, tension:50 }});\n        },3000);\n        return timeout;\n      };\n      return skill2atkStart();\n    default:\n      setBGstatus({ type:'STANDBY', defence:false, seconds:1200 });\n      setPosition(prev=>{return{ ...prev, x:550,y:50,tension:100 }});\n      const atkStart = ()=>{\n        setPosition(prev=>{return{ ...prev, x:250, y:50, tension:100 }});\n        // callback\n        return step1();\n      };\n      const step1 = ()=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:0, y:50, tension:100 }});\n          setBGstatus(prev=>{return{ ...prev, type:'SKILL' }});\n          // callback\n          step2();\n        },3000);\n        return timeout;\n      };\n      const step2 = ()=>{\n        const run =  { number: attackerSp };\n        TweenMax.to(run, 0.8, {\n          number: resultSp,\n          onUpdate: () => {\n            setAttackerSp(numeral(run.number).format(\"0\"))\n          },\n        });\n        setLinesStatus(prev=>{ return { ...prev, status:'attack' }});\n        const timeout = setTimeout(() => {\n          setBGstatus(prev=>{return{ ...prev, type:'STOP', defence:true }});\n          // callback\n          step3();\n        },3000);\n        return timeout;\n      };\n      const step3 = ()=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:-250, y:50, tension:1000 }});\n          // callback\n          step4();\n        },1000);\n        return timeout;\n      };\n      const step4 = ()=>{\n        const run = { number: targetLife };\n        if(isHit) {\n          TweenMax.to(run, 0.8, {\n            number: resultLife<0 ? 0 : resultLife,\n            onUpdate: () => {\n              setTargetHp(numeral(run.number).format(\"0\"))\n            },\n          });\n        };\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:550, y:50, tension:50 }});\n        },3000);\n        return timeout;\n      };\n      return atkStart();\n  }\n};","import React from \"react\";\nimport { loader } from '../../../components/DataLoader';\nimport { Spring } from 'react-spring/renderprops';\nimport { Sprite } from '@inlet/react-pixi/animated';\n\nexport const ShowType = ({\n  skillName,\n  attackerName,\n  position,\n}) =>{\n  switch (skillName) {\n    case `防禦`:\n      return <Spring\n        from={{ x:650, y:50 }}\n        to={{ x:position.x, y:position.y }}\n        config={{ \n          mass:1,\n          tension: position.tension,\n          friction:20,\n        }}\n      >\n      {props => \n        <Sprite\n          zIndex={2}\n          width={200}\n          height={200}\n          anchor={0.5}\n          alpha={position.alpha}\n          tint={position.tint}\n          image={loader.resources[`${attackerName}-fight`].data}\n          {...props}\n        />}\n      </Spring>\n    default:\n      return <Spring\n        from={{ x:550, y:50 }}\n        to={{ x:position.x, y:position.y }}\n        config={{ \n          mass:1,\n          tension: position.tension,\n          friction:20,\n        }}\n      >\n      {props => \n        <Sprite\n          zIndex={3}\n          width={200}\n          height={200}\n          anchor={0.5}\n          image={loader.resources[`${attackerName}-fight`].data}\n          {...props}\n        />}\n      </Spring>\n    };\n};","import React from \"react\";\n// part\nimport { SkillShowProtoType } from \"../../SkillShowProtoType\";\nimport { steps } from \"./steps\";\nimport { ShowType } from \"./ShowType\";\n\nexport const NezukoSkill = ( props )=>{\n  return <SkillShowProtoType \n    {...props}\n    defXPostion={550}\n    steps={steps}\n    ShowType={ShowType}\n  />\n};","import { TweenMax } from 'gsap';\nimport numeral from \"numeral\";\nimport { videos } from '../../../components/DataLoader';\nexport const steps = ({\n  skillName='',\n  isHit=false,\n  targetLife=0,\n  attackerSp=0,\n  resultLife=0,\n  resultSp=0,\n  BGstatus={},\n  setBGstatus=null,\n  setAnimeIsDone=null,\n  setTargetHp=null,\n  setAttackerSp=null,\n  setLinesStatus=null,\n  setPosition=null,\n  setShowSkill=null\n}) => {\n  // 技能動畫:\n  switch (skillName) {\n    case '防禦':\n      setPosition(prev=>{return{ ...prev, x:200, y:50, tension:100 }});\n      const defStart = ()=>{\n        if(isHit){\n          return isHitStep();\n        }else return isDodge();\n      };\n      const isHitStep = ()=> {\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:250, y:50, mass:2, \n            friction:5, tension:1000, tint:0xd00000}});\n          // callback\n          if(resultLife<=0){\n            return isDead({ type:'dead' });\n          }else return next({ type:'def' });\n        },BGstatus.seconds);\n        return timeout;\n      };\n      const isDodge = ()=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:250, y:0 }});\n          // callback\n          next({ type:'dodge' });\n        },BGstatus.seconds);\n        return timeout;\n      };\n      const isDead = ({ type })=> {\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:200, y:50, \n            friction:2, tint:0x03071e\n          }});\n          setLinesStatus(prev=>{ \n            return { \n              status: type,\n              character: prev.character===\"USER\" ? \"ENEMY\" : \"USER\"\n            };\n          });\n          // callback\n          isDeadStep2();\n        },5000);\n        return timeout;\n      };\n      const isDeadStep2 = ()=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return { ...prev, alpha:0 }});\n          // callback\n          end();\n        },3000);\n        return timeout;\n      };\n      const next = ({ type })=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:200, y:50, mass:1, \n            friction:20, tension:170, tint:0xffffff}});\n          setLinesStatus(prev=>{ \n            return { \n              status: type,\n              character: prev.character===\"USER\" ? \"ENEMY\" : \"USER\"\n            };\n          });\n          // callback\n          end();\n        },5000);\n        return timeout;\n      };\n      const end = ()=> {\n        const timeout = setTimeout(() => {\n          // callback\n          setAnimeIsDone(true);\n        },3000);\n        return timeout;\n      };\n      return defStart();\n    // ATK\n    case '壹之型―霹靂一閃':\n      setBGstatus({ type:'STANDBY', defence:false, seconds:0 });\n      setPosition(prev=>{return{ ...prev, x:550,y:50,tension:100 }});\n      const skill2atkStart = ()=>{\n        setPosition(prev=>{return{ ...prev, x:250, y:50, tension:100 }});\n        // callback\n        return skill2step1();\n      };\n      const skill2step1 = ()=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:0, tension:100 }});\n          setBGstatus(prev=>{return{ ...prev, type:'SKILL' }});\n          // callback\n          skill2step2();\n        },3000);\n        return timeout;\n      };\n      const skill2step2 = ()=>{\n        const run =  { number: attackerSp };\n        TweenMax.to(run, 0.8, {\n          number: resultSp,\n          onUpdate: () => {\n            setAttackerSp(numeral(run.number).format(\"0\"))\n          },\n        });\n        setLinesStatus(prev=>{ return { ...prev, status:'attack' }});\n        setShowSkill(prev=>{\n          const video = videos[`${prev.name}`].skill2.baseTexture.resource.source;\n          video.play();\n          return { ...prev, \n            status:true, \n            type:'2',\n            callback:()=>{\n              setBGstatus(prev=>{return{ ...prev, type:'STOP', defence:true }});\n              setPosition(prev=>{return{ ...prev, x:-400, tension:1000 }});\n              skill2step3();\n            }\n          };\n        });\n      };\n      const skill2step3 = ()=>{\n        const run = { number: targetLife };\n        if(isHit) {\n          TweenMax.to(run, 0.8, {\n            number: resultLife<0 ? 0 : resultLife,\n            onUpdate: () => {\n              setTargetHp(numeral(run.number).format(\"0\"))\n            },\n          });\n        };\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:550, y:50, tension:50 }});\n        },3000);\n        return timeout;\n      };\n      return skill2atkStart();\n    case '壹之型―霹靂一閃―六連':\n      setBGstatus({ type:'STANDBY', defence:false, seconds:0 });\n      setPosition(prev=>{return{ ...prev, x:550,y:50,tension:100 }});\n      const skill3atkStart = ()=>{\n        setPosition(prev=>{return{ ...prev, x:250, y:50, tension:100 }});\n        // callback\n        return skill3step1();\n      };\n      const skill3step1 = ()=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:0, y:-100, tension:100 }});\n          setBGstatus(prev=>{return{ ...prev, type:'SKILL' }});\n          // callback\n          skill3step2();\n        },3000);\n        return timeout;\n      };\n      const skill3step2 = ()=>{\n        const run =  { number: attackerSp };\n        TweenMax.to(run, 0.8, {\n          number: resultSp,\n          onUpdate: () => {\n            setAttackerSp(numeral(run.number).format(\"0\"))\n          },\n        });\n        setLinesStatus(prev=>{ return { ...prev, status:'attack' }});\n        setShowSkill(prev=>{\n          const video = videos[`${prev.name}`].skill3.baseTexture.resource.source;\n          video.play();\n          return { ...prev, \n            status:true, \n            type:'3',\n            callback:()=>{\n              setBGstatus(prev=>{return{ ...prev, type:'STOP', defence:true }});\n              setPosition(prev=>{return{ ...prev, x:-400, y:50, tension:1000 }});\n              skill3step3();\n            }\n          };\n        });\n      };\n      const skill3step3 = ()=>{\n        const run = { number: targetLife };\n        if(isHit) {\n          TweenMax.to(run, 0.8, {\n            number: resultLife<0 ? 0 : resultLife,\n            onUpdate: () => {\n              setTargetHp(numeral(run.number).format(\"0\"))\n            },\n          });\n        };\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:550, y:50, tension:50 }});\n        },3000);\n        return timeout;\n      };\n      return skill3atkStart();\n    default:\n      setBGstatus({ type:'STANDBY', defence:false, seconds:1200 });\n      setPosition(prev=>{return{ ...prev, x:550,y:50,tension:100 }});\n      const atkStart = ()=>{\n        setPosition(prev=>{return{ ...prev, x:250, y:50, tension:100 }});\n        // callback\n        return step1();\n      };\n      const step1 = ()=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:0, y:50, tension:100 }});\n          setBGstatus(prev=>{return{ ...prev, type:'SKILL' }});\n          // callback\n          step2();\n        },3000);\n        return timeout;\n      };\n      const step2 = ()=>{\n        const run =  { number: attackerSp };\n        TweenMax.to(run, 0.8, {\n          number: resultSp,\n          onUpdate: () => {\n            setAttackerSp(numeral(run.number).format(\"0\"))\n          },\n        });\n        setLinesStatus(prev=>{ return { ...prev, status:'attack' }});\n        const timeout = setTimeout(() => {\n          setBGstatus(prev=>{return{ ...prev, type:'STOP', defence:true }});\n          // callback\n          step3();\n        },3000);\n        return timeout;\n      };\n      const step3 = ()=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:-250, y:50, tension:1000 }});\n          // callback\n          step4();\n        },1000);\n        return timeout;\n      };\n      const step4 = ()=>{\n        const run = { number: targetLife };\n        if(isHit) {\n          TweenMax.to(run, 0.8, {\n            number: resultLife<0 ? 0 : resultLife,\n            onUpdate: () => {\n              setTargetHp(numeral(run.number).format(\"0\"))\n            },\n          });\n        };\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:550, y:50, tension:50 }});\n        },3000);\n        return timeout;\n      };\n      return atkStart();\n  }\n};","import React from \"react\";\nimport { loader } from '../../../components/DataLoader';\nimport { Spring } from 'react-spring/renderprops';\nimport { Sprite } from '@inlet/react-pixi/animated';\n\nexport const ShowType = ({\n  skillName,\n  attackerName,\n  position,\n}) =>{\n  switch (skillName) {\n    case `斬擊`:\n      return <Spring\n        from={{ x:550, y:50 }}\n        to={{ x:position.x, y:position.y }}\n        config={{ \n          mass:1,\n          tension: position.tension,\n          friction:20,\n        }}\n      >\n      {props => \n        <Sprite\n          zIndex={3}\n          width={200}\n          height={200}\n          anchor={0.5}\n          image={loader.resources[`${attackerName}-fight`].data}\n          {...props}\n        />}\n      </Spring>\n    case `防禦`:\n      return <Spring\n        from={{ x:650, y:50 }}\n        to={{ x:position.x, y:position.y }}\n        config={{ \n          mass:1,\n          tension: position.tension,\n          friction:20,\n        }}\n      >\n      {props => \n        <Sprite\n          zIndex={2}\n          width={200}\n          height={200}\n          anchor={0.5}\n          alpha={position.alpha}\n          tint={position.tint}\n          image={loader.resources[`${attackerName}-fight`].data}\n          {...props}\n        />}\n      </Spring>\n    default:\n      return <Spring\n        from={{ x:550, y:50 }}\n        to={{ x:position.x, y:position.y }}\n        config={{ \n          mass:1,\n          tension: position.tension,\n          friction:20,\n        }}\n      >\n      {props => \n        <Sprite\n          zIndex={3}\n          width={200}\n          height={200}\n          anchor={0.5}\n          image={loader.resources[`${attackerName}-fight`].data}\n          {...props}\n        />}\n      </Spring>\n    };\n};","import React from \"react\";\n// part\nimport { SkillShowProtoType } from \"../../SkillShowProtoType\";\nimport { steps } from \"./steps\";\nimport { ShowType } from \"./ShowType\";\n\nexport const ZenitsuSkill = ( props )=>{\n  return <SkillShowProtoType \n    {...props}\n    defXPostion={550}\n    steps={steps}\n    ShowType={ShowType}\n  />\n};","import { TweenMax } from 'gsap';\nimport numeral from \"numeral\";\nimport { videos } from '../../../components/DataLoader';\nexport const steps = ({\n  skillName='',\n  isHit=false,\n  targetLife=0,\n  attackerSp=0,\n  resultLife=0,\n  resultSp=0,\n  BGstatus={},\n  setBGstatus=null,\n  setAnimeIsDone=null,\n  setTargetHp=null,\n  setAttackerSp=null,\n  setLinesStatus=null,\n  setPosition=null,\n  setShowSkill=null\n}) => {\n  // 技能動畫:\n  switch (skillName) {\n    case '防禦':\n      setPosition(prev=>{return{ ...prev, x:200, y:50, tension:100 }});\n      const defStart = ()=>{\n        if(isHit){\n          return isHitStep();\n        }else return isDodge();\n      };\n      const isHitStep = ()=> {\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:250, y:50, mass:2, \n            friction:5, tension:1000, tint:0xd00000}});\n          // callback\n          if(resultLife<=0){\n            return isDead({ type:'dead' });\n          }else return next({ type:'def' });\n        },BGstatus.seconds);\n        return timeout;\n      };\n      const isDodge = ()=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:250, y:0 }});\n          // callback\n          next({ type:'dodge' });\n        },BGstatus.seconds);\n        return timeout;\n      };\n      const isDead = ({ type })=> {\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:200, y:50, \n            friction:2, tint:0x03071e\n          }});\n          setLinesStatus(prev=>{ \n            return { \n              status: type,\n              character: prev.character===\"USER\" ? \"ENEMY\" : \"USER\"\n            };\n          });\n          // callback\n          isDeadStep2();\n        },5000);\n        return timeout;\n      };\n      const isDeadStep2 = ()=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return { ...prev, alpha:0 }});\n          // callback\n          end();\n        },3000);\n        return timeout;\n      };\n      const next = ({ type })=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:200, y:50, mass:1, \n            friction:20, tension:170, tint:0xffffff}});\n          setLinesStatus(prev=>{ \n            return { \n              status: type,\n              character: prev.character===\"USER\" ? \"ENEMY\" : \"USER\"\n            };\n          });\n          // callback\n          end();\n        },5000);\n        return timeout;\n      };\n      const end = ()=> {\n        const timeout = setTimeout(() => {\n          // callback\n          setAnimeIsDone(true);\n        },3000);\n        return timeout;\n      };\n      return defStart();\n    // ATK\n    case '壹之牙―穿透刺射?':\n      setBGstatus({ type:'STANDBY', defence:false, seconds:0 });\n      setPosition(prev=>{return{ ...prev, x:550,y:50,tension:100 }});\n      const skill2atkStart = ()=>{\n        setPosition(prev=>{return{ ...prev, x:250, y:50, tension:100 }});\n        // callback\n        return skill2step1();\n      };\n      const skill2step1 = ()=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:0, tension:100 }});\n          setBGstatus(prev=>{return{ ...prev, type:'SKILL' }});\n          // callback\n          skill2step2();\n        },3000);\n        return timeout;\n      };\n      const skill2step2 = ()=>{\n        const run =  { number: attackerSp };\n        TweenMax.to(run, 0.8, {\n          number: resultSp,\n          onUpdate: () => {\n            setAttackerSp(numeral(run.number).format(\"0\"))\n          },\n        });\n        setLinesStatus(prev=>{ return { ...prev, status:'attack' }});\n        setShowSkill(prev=>{\n          const video = videos[`${prev.name}`].skill2.baseTexture.resource.source;\n          video.play();\n          return { ...prev, \n            status:true, \n            type:'2',\n            callback:()=>{\n              setBGstatus(prev=>{return{ ...prev, type:'STOP', defence:true }});\n              setPosition(prev=>{return{ ...prev, x:-400, tension:1000 }});\n              skill2step3();\n            }\n          };\n        });\n      };\n      const skill2step3 = ()=>{\n        const run = { number: targetLife };\n        if(isHit) {\n          TweenMax.to(run, 0.8, {\n            number: resultLife<0 ? 0 : resultLife,\n            onUpdate: () => {\n              setTargetHp(numeral(run.number).format(\"0\"))\n            },\n          });\n        };\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:550, y:50, tension:50 }});\n        },3000);\n        return timeout;\n      };\n      return skill2atkStart();\n    case '貳之牙―利刃對劈?':\n      setBGstatus({ type:'STANDBY', defence:false, seconds:0 });\n      setPosition(prev=>{return{ ...prev, x:550,y:50,tension:100 }});\n      const skill3atkStart = ()=>{\n        setPosition(prev=>{return{ ...prev, x:250, y:50, tension:100 }});\n        // callback\n        return skill3step1();\n      };\n      const skill3step1 = ()=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:0, y:-100, tension:100 }});\n          setBGstatus(prev=>{return{ ...prev, type:'SKILL' }});\n          // callback\n          skill3step2();\n        },3000);\n        return timeout;\n      };\n      const skill3step2 = ()=>{\n        const run =  { number: attackerSp };\n        TweenMax.to(run, 0.8, {\n          number: resultSp,\n          onUpdate: () => {\n            setAttackerSp(numeral(run.number).format(\"0\"))\n          },\n        });\n        setLinesStatus(prev=>{ return { ...prev, status:'attack' }});\n        setShowSkill(prev=>{\n          const video = videos[`${prev.name}`].skill3.baseTexture.resource.source;\n          video.play();\n          return { ...prev, \n            status:true, \n            type:'3',\n            callback:()=>{\n              setBGstatus(prev=>{return{ ...prev, type:'STOP', defence:true }});\n              setPosition(prev=>{return{ ...prev, x:-400, y:50, tension:1000 }});\n              skill3step3();\n            }\n          };\n        });\n      };\n      const skill3step3 = ()=>{\n        const run = { number: targetLife };\n        if(isHit) {\n          TweenMax.to(run, 0.8, {\n            number: resultLife<0 ? 0 : resultLife,\n            onUpdate: () => {\n              setTargetHp(numeral(run.number).format(\"0\"))\n            },\n          });\n        };\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:550, y:50, tension:50 }});\n        },3000);\n        return timeout;\n      };\n      return skill3atkStart();\n    case '叄之牙―獠牙撕扯?':\n      setBGstatus({ type:'STANDBY', defence:false, seconds:0 });\n      setPosition(prev=>{return{ ...prev, x:550,y:50,tension:100 }});\n      const skill4atkStart = ()=>{\n        setPosition(prev=>{return{ ...prev, x:250, y:50, tension:100 }});\n        // callback\n        return skill4step1();\n      };\n      const skill4step1 = ()=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:0, y:-100, tension:100 }});\n          setBGstatus(prev=>{return{ ...prev, type:'SKILL' }});\n          // callback\n          skill4step2();\n        },3000);\n        return timeout;\n      };\n      const skill4step2 = ()=>{\n        const run =  { number: attackerSp };\n        TweenMax.to(run, 0.8, {\n          number: resultSp,\n          onUpdate: () => {\n            setAttackerSp(numeral(run.number).format(\"0\"))\n          },\n        });\n        setLinesStatus(prev=>{ return { ...prev, status:'attack' }});\n        setShowSkill(prev=>{\n          const video = videos[`${prev.name}`].skill4.baseTexture.resource.source;\n          video.play();\n          return { ...prev, \n            status:true, \n            type:'4',\n            callback:()=>{\n              setBGstatus(prev=>{return{ ...prev, type:'STOP', defence:true }});\n              setPosition(prev=>{return{ ...prev, x:-400, y:50, tension:1000 }});\n              skill4step3();\n            }\n          };\n        });\n      };\n      const skill4step3 = ()=>{\n        const run = { number: targetLife };\n        if(isHit) {\n          TweenMax.to(run, 0.8, {\n            number: resultLife<0 ? 0 : resultLife,\n            onUpdate: () => {\n              setTargetHp(numeral(run.number).format(\"0\"))\n            },\n          });\n        };\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:550, y:50, tension:50 }});\n        },3000);\n        return timeout;\n      };\n      return skill4atkStart();\n    default:\n      setBGstatus({ type:'STANDBY', defence:false, seconds:1200 });\n      setPosition(prev=>{return{ ...prev, x:550,y:50,tension:100 }});\n      const atkStart = ()=>{\n        setPosition(prev=>{return{ ...prev, x:250, y:50, tension:100 }});\n        // callback\n        return step1();\n      };\n      const step1 = ()=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:0, y:50, tension:100 }});\n          setBGstatus(prev=>{return{ ...prev, type:'SKILL' }});\n          // callback\n          step2();\n        },3000);\n        return timeout;\n      };\n      const step2 = ()=>{\n        const run =  { number: attackerSp };\n        TweenMax.to(run, 0.8, {\n          number: resultSp,\n          onUpdate: () => {\n            setAttackerSp(numeral(run.number).format(\"0\"))\n          },\n        });\n        setLinesStatus(prev=>{ return { ...prev, status:'attack' }});\n        const timeout = setTimeout(() => {\n          setBGstatus(prev=>{return{ ...prev, type:'STOP', defence:true }});\n          // callback\n          step3();\n        },3000);\n        return timeout;\n      };\n      const step3 = ()=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:-250, y:50, tension:1000 }});\n          // callback\n          step4();\n        },1000);\n        return timeout;\n      };\n      const step4 = ()=>{\n        const run = { number: targetLife };\n        if(isHit) {\n          TweenMax.to(run, 0.8, {\n            number: resultLife<0 ? 0 : resultLife,\n            onUpdate: () => {\n              setTargetHp(numeral(run.number).format(\"0\"))\n            },\n          });\n        };\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:550, y:50, tension:50 }});\n        },3000);\n        return timeout;\n      };\n      return atkStart();\n  }\n};","import React from \"react\";\nimport { loader } from '../../../components/DataLoader';\nimport { Spring } from 'react-spring/renderprops';\nimport { Sprite } from '@inlet/react-pixi/animated';\n\nexport const ShowType = ({\n  skillName,\n  attackerName,\n  position,\n}) =>{\n  switch (skillName) {\n    case `斬擊`:\n      return <Spring\n        from={{ x:550, y:50 }}\n        to={{ x:position.x, y:position.y }}\n        config={{ \n          mass:1,\n          tension: position.tension,\n          friction:20,\n        }}\n      >\n      {props => \n        <Sprite\n          zIndex={3}\n          width={250}\n          height={250}\n          anchor={{x:0.5,y:0.6}}\n          image={loader.resources[`${attackerName}-fight`].data}\n          {...props}\n        />}\n      </Spring>\n    case `防禦`:\n      return <Spring\n        from={{ x:650, y:50 }}\n        to={{ x:position.x, y:position.y }}\n        config={{ \n          mass:1,\n          tension: position.tension,\n          friction:20,\n        }}\n      >\n      {props => \n        <Sprite\n          zIndex={2}\n          width={250}\n          height={250}\n          anchor={{x:0.5,y:0.6}}\n          alpha={position.alpha}\n          tint={position.tint}\n          image={loader.resources[`${attackerName}-fight`].data}\n          {...props}\n        />}\n      </Spring>\n    default:\n      return <Spring\n        from={{ x:550, y:50 }}\n        to={{ x:position.x, y:position.y }}\n        config={{ \n          mass:1,\n          tension: position.tension,\n          friction:20,\n        }}\n      >\n      {props => \n        <Sprite\n          zIndex={3}\n          width={250}\n          height={250}\n          anchor={{x:0.5,y:0.6}}\n          image={loader.resources[`${attackerName}-fight`].data}\n          {...props}\n        />}\n      </Spring>\n    };\n};","import React from \"react\";\n// part\nimport { SkillShowProtoType } from \"../../SkillShowProtoType\";\nimport { steps } from \"./steps\";\nimport { ShowType } from \"./ShowType\";\n\nexport const InosukeSkill = ( props )=>{\n  return <SkillShowProtoType \n    {...props}\n    defXPostion={550}\n    steps={steps}\n    ShowType={ShowType}\n  />\n};","import { TweenMax } from 'gsap';\nimport numeral from \"numeral\";\nimport { videos } from '../../../components/DataLoader';\nexport const steps = ({\n  skillName='',\n  isHit=false,\n  targetLife=0,\n  attackerSp=0,\n  resultLife=0,\n  resultSp=0,\n  BGstatus={},\n  setBGstatus=null,\n  setAnimeIsDone=null,\n  setTargetHp=null,\n  setAttackerSp=null,\n  setLinesStatus=null,\n  setPosition=null,\n  setShowSkill=null\n}) => {\n  // 技能動畫:\n  switch (skillName) {\n    case '防禦':\n      setPosition(prev=>{return{ ...prev, x:200, y:50, tension:100 }});\n      const defStart = ()=>{\n        if(isHit){\n          return isHitStep();\n        }else return isDodge();\n      };\n      const isHitStep = ()=> {\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:250, y:50, mass:2, \n            friction:5, tension:1000, tint:0xd00000}});\n          // callback\n          if(resultLife<=0){\n            return isDead({ type:'dead' });\n          }else return next({ type:'def' });\n        },BGstatus.seconds);\n        return timeout;\n      };\n      const isDodge = ()=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:250, y:0 }});\n          // callback\n          next({ type:'dodge' });\n        },BGstatus.seconds);\n        return timeout;\n      };\n      const isDead = ({ type })=> {\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:200, y:50, \n            friction:2, tint:0x03071e\n          }});\n          setLinesStatus(prev=>{ \n            return { \n              status: type,\n              character: prev.character===\"USER\" ? \"ENEMY\" : \"USER\"\n            };\n          });\n          // callback\n          isDeadStep2();\n        },5000);\n        return timeout;\n      };\n      const isDeadStep2 = ()=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return { ...prev, alpha:0 }});\n          // callback\n          end();\n        },3000);\n        return timeout;\n      };\n      const next = ({ type })=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:200, y:50, mass:1, \n            friction:20, tension:170, tint:0xffffff}});\n          setLinesStatus(prev=>{ \n            return { \n              status: type,\n              character: prev.character===\"USER\" ? \"ENEMY\" : \"USER\"\n            };\n          });\n          // callback\n          end();\n        },5000);\n        return timeout;\n      };\n      const end = ()=> {\n        const timeout = setTimeout(() => {\n          // callback\n          setAnimeIsDone(true);\n        },3000);\n        return timeout;\n      };\n      return defStart();\n    // ATK\n    case '壹之型―不知火':\n      setBGstatus({ type:'STANDBY', defence:false, seconds:0 });\n      setPosition(prev=>{return{ ...prev, x:550,y:50,tension:100 }});\n      const skill2atkStart = ()=>{\n        setPosition(prev=>{return{ ...prev, x:250, y:50, tension:100 }});\n        // callback\n        return skill2step1();\n      };\n      const skill2step1 = ()=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:0, tension:100 }});\n          setBGstatus(prev=>{return{ ...prev, type:'SKILL' }});\n          // callback\n          skill2step2();\n        },3000);\n        return timeout;\n      };\n      const skill2step2 = ()=>{\n        const run =  { number: attackerSp };\n        TweenMax.to(run, 0.8, {\n          number: resultSp,\n          onUpdate: () => {\n            setAttackerSp(numeral(run.number).format(\"0\"))\n          },\n        });\n        setLinesStatus(prev=>{ return { ...prev, status:'attack' }});\n        setShowSkill(prev=>{\n          const video = videos[`${prev.name}`].skill2.baseTexture.resource.source;\n          video.play();\n          return { ...prev, \n            status:true, \n            type:'2',\n            callback:()=>{\n              setBGstatus(prev=>{return{ ...prev, type:'STOP', defence:true }});\n              setPosition(prev=>{return{ ...prev, x:-400, tension:1000 }});\n              skill2step3();\n            }\n          };\n        });\n      };\n      const skill2step3 = ()=>{\n        const run = { number: targetLife };\n        if(isHit) {\n          TweenMax.to(run, 0.8, {\n            number: resultLife<0 ? 0 : resultLife,\n            onUpdate: () => {\n              setTargetHp(numeral(run.number).format(\"0\"))\n            },\n          });\n        };\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:550, y:50, tension:50 }});\n        },3000);\n        return timeout;\n      };\n      return skill2atkStart();\n    case '肆之型―盛炎的蜿蜒':\n      setBGstatus({ type:'STANDBY', defence:false, seconds:0 });\n      setPosition(prev=>{return{ ...prev, x:550,y:50,tension:100 }});\n      const skill3atkStart = ()=>{\n        setPosition(prev=>{return{ ...prev, x:250, y:50, tension:100 }});\n        // callback\n        return skill3step1();\n      };\n      const skill3step1 = ()=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:0, y:-100, tension:100 }});\n          setBGstatus(prev=>{return{ ...prev, type:'SKILL' }});\n          // callback\n          skill3step2();\n        },3000);\n        return timeout;\n      };\n      const skill3step2 = ()=>{\n        const run =  { number: attackerSp };\n        TweenMax.to(run, 0.8, {\n          number: resultSp,\n          onUpdate: () => {\n            setAttackerSp(numeral(run.number).format(\"0\"))\n          },\n        });\n        setLinesStatus(prev=>{ return { ...prev, status:'attack' }});\n        setShowSkill(prev=>{\n          const video = videos[`${prev.name}`].skill3.baseTexture.resource.source;\n          video.play();\n          return { ...prev, \n            status:true, \n            type:'3',\n            callback:()=>{\n              setBGstatus(prev=>{return{ ...prev, type:'STOP', defence:true }});\n              setPosition(prev=>{return{ ...prev, x:-400, y:50, tension:1000 }});\n              skill3step3();\n            }\n          };\n        });\n      };\n      const skill3step3 = ()=>{\n        const run = { number: targetLife };\n        if(isHit) {\n          TweenMax.to(run, 0.8, {\n            number: resultLife<0 ? 0 : resultLife,\n            onUpdate: () => {\n              setTargetHp(numeral(run.number).format(\"0\"))\n            },\n          });\n        };\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:550, y:50, tension:50 }});\n        },3000);\n        return timeout;\n      };\n      return skill3atkStart();\n    case '伍之型―炎虎':\n      setBGstatus({ type:'STANDBY', defence:false, seconds:0 });\n      setPosition(prev=>{return{ ...prev, x:550,y:50,tension:100 }});\n      const skill4atkStart = ()=>{\n        setPosition(prev=>{return{ ...prev, x:250, y:50, tension:100 }});\n        // callback\n        return skill4step1();\n      };\n      const skill4step1 = ()=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:0, y:-100, tension:100 }});\n          setBGstatus(prev=>{return{ ...prev, type:'SKILL' }});\n          // callback\n          skill4step2();\n        },3000);\n        return timeout;\n      };\n      const skill4step2 = ()=>{\n        const run =  { number: attackerSp };\n        TweenMax.to(run, 0.8, {\n          number: resultSp,\n          onUpdate: () => {\n            setAttackerSp(numeral(run.number).format(\"0\"))\n          },\n        });\n        setLinesStatus(prev=>{ return { ...prev, status:'attack' }});\n        setShowSkill(prev=>{\n          const video = videos[`${prev.name}`].skill4.baseTexture.resource.source;\n          video.play();\n          return { ...prev, \n            status:true, \n            type:'4',\n            callback:()=>{\n              setBGstatus(prev=>{return{ ...prev, type:'STOP', defence:true }});\n              setPosition(prev=>{return{ ...prev, x:-400, y:50, tension:1000 }});\n              skill4step3();\n            }\n          };\n        });\n      };\n      const skill4step3 = ()=>{\n        const run = { number: targetLife };\n        if(isHit) {\n          TweenMax.to(run, 0.8, {\n            number: resultLife<0 ? 0 : resultLife,\n            onUpdate: () => {\n              setTargetHp(numeral(run.number).format(\"0\"))\n            },\n          });\n        };\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:550, y:50, tension:50 }});\n        },3000);\n        return timeout;\n      };\n      return skill4atkStart();\n    case '玖之型―煉獄':\n      setBGstatus({ type:'STANDBY', defence:false, seconds:0 });\n      setPosition(prev=>{return{ ...prev, x:550,y:50,tension:100 }});\n      const skill5atkStart = ()=>{\n        setPosition(prev=>{return{ ...prev, x:250, y:50, tension:100 }});\n        // callback\n        return skill5step1();\n      };\n      const skill5step1 = ()=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:0, y:-100, tension:100 }});\n          setBGstatus(prev=>{return{ ...prev, type:'SKILL' }});\n          // callback\n          skill5step2();\n        },3000);\n        return timeout;\n      };\n      const skill5step2 = ()=>{\n        const run =  { number: attackerSp };\n        TweenMax.to(run, 0.8, {\n          number: resultSp,\n          onUpdate: () => {\n            setAttackerSp(numeral(run.number).format(\"0\"))\n          },\n        });\n        setLinesStatus(prev=>{ return { ...prev, status:'attack' }});\n        setShowSkill(prev=>{\n          const video = videos[`${prev.name}`].skill5.baseTexture.resource.source;\n          video.play();\n          return { ...prev, \n            status:true, \n            type:'5',\n            callback:()=>{\n              setBGstatus(prev=>{return{ ...prev, type:'STOP', defence:true }});\n              setPosition(prev=>{return{ ...prev, x:-400, y:50, tension:1000 }});\n              skill5step3();\n            }\n          };\n        });\n      };\n      const skill5step3 = ()=>{\n        const run = { number: targetLife };\n        if(isHit) {\n          TweenMax.to(run, 0.8, {\n            number: resultLife<0 ? 0 : resultLife,\n            onUpdate: () => {\n              setTargetHp(numeral(run.number).format(\"0\"))\n            },\n          });\n        };\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:550, y:50, tension:50 }});\n        },3000);\n        return timeout;\n      };\n      return skill5atkStart();\n    default:\n      setBGstatus({ type:'STANDBY', defence:false, seconds:1200 });\n      setPosition(prev=>{return{ ...prev, x:550,y:50,tension:100 }});\n      const atkStart = ()=>{\n        setPosition(prev=>{return{ ...prev, x:250, y:50, tension:100 }});\n        // callback\n        return step1();\n      };\n      const step1 = ()=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:0, y:50, tension:100 }});\n          setBGstatus(prev=>{return{ ...prev, type:'SKILL' }});\n          // callback\n          step2();\n        },3000);\n        return timeout;\n      };\n      const step2 = ()=>{\n        const run =  { number: attackerSp };\n        TweenMax.to(run, 0.8, {\n          number: resultSp,\n          onUpdate: () => {\n            setAttackerSp(numeral(run.number).format(\"0\"))\n          },\n        });\n        setLinesStatus(prev=>{ return { ...prev, status:'attack' }});\n        const timeout = setTimeout(() => {\n          setBGstatus(prev=>{return{ ...prev, type:'STOP', defence:true }});\n          // callback\n          step3();\n        },3000);\n        return timeout;\n      };\n      const step3 = ()=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:-250, y:50, tension:1000 }});\n          // callback\n          step4();\n        },1000);\n        return timeout;\n      };\n      const step4 = ()=>{\n        const run = { number: targetLife };\n        if(isHit) {\n          TweenMax.to(run, 0.8, {\n            number: resultLife<0 ? 0 : resultLife,\n            onUpdate: () => {\n              setTargetHp(numeral(run.number).format(\"0\"))\n            },\n          });\n        };\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:550, y:50, tension:50 }});\n        },3000);\n        return timeout;\n      };\n      return atkStart();\n  }\n};","import React from \"react\";\nimport { loader } from '../../../components/DataLoader';\nimport { Spring } from 'react-spring/renderprops';\nimport { Sprite } from '@inlet/react-pixi/animated';\n\nexport const ShowType = ({\n  skillName,\n  attackerName,\n  position,\n}) =>{\n  switch (skillName) {\n    case `斬擊`:\n      return <Spring\n        from={{ x:550, y:50 }}\n        to={{ x:position.x, y:position.y }}\n        config={{ \n          mass:1,\n          tension: position.tension,\n          friction:20,\n        }}\n      >\n      {props => \n        <Sprite\n          zIndex={3}\n          width={300}\n          height={300}\n          anchor={{x:0.5,y:0.6}}\n          image={loader.resources[`${attackerName}-fight`].data}\n          {...props}\n        />}\n      </Spring>\n    case `防禦`:\n      return <Spring\n        from={{ x:650, y:50 }}\n        to={{ x:position.x, y:position.y }}\n        config={{ \n          mass:1,\n          tension: position.tension,\n          friction:20,\n        }}\n      >\n      {props => \n        <Sprite\n          zIndex={2}\n          width={300}\n          height={300}\n          anchor={{x:0.5,y:0.6}}\n          alpha={position.alpha}\n          tint={position.tint}\n          image={loader.resources[`${attackerName}-fight`].data}\n          {...props}\n        />}\n      </Spring>\n    default:\n      return <Spring\n        from={{ x:550, y:50 }}\n        to={{ x:position.x, y:position.y }}\n        config={{ \n          mass:1,\n          tension: position.tension,\n          friction:20,\n        }}\n      >\n      {props => \n        <Sprite\n          zIndex={3}\n          width={300}\n          height={300}\n          anchor={{x:0.5,y:0.6}}\n          image={loader.resources[`${attackerName}-fight`].data}\n          {...props}\n        />}\n      </Spring>\n    };\n};","import React from \"react\";\n// part\nimport { SkillShowProtoType } from \"../../SkillShowProtoType\";\nimport { steps } from \"./steps\";\nimport { ShowType } from \"./ShowType\";\n\nexport const RengokuSkill = ( props )=>{\n  return <SkillShowProtoType \n    {...props}\n    defXPostion={550}\n    steps={steps}\n    ShowType={ShowType}\n  />\n};","import React from \"react\";\nimport { TanjirouSkill } from \"./Tanjirou/Index\";\nimport { NezukoSkill } from \"./Nezuko/Index\";\nimport { ZenitsuSkill } from \"./Zenitsu/Index\";\nimport { InosukeSkill } from \"./Inosuke/Index\"\nimport { RengokuSkill } from \"./Rengoku/Index\";\nexport const ChessSkillShow = ({\n  attacker={},\n  skill={},\n  BGstatus,\n  isHit=false,\n  targetLife=0,\n  attackerSp=0,\n  resultLife=0,\n  resultSp=0,\n  setBGstatus,\n  setAnimeIsDone,\n  setTargetHp,\n  setAttackerSp,\n  setLinesStatus,\n  setShowSkill\n})=>{\n  const defaultprops = {\n    skillName: skill.name,\n    attackerName: attacker.name,\n    isHit: isHit,\n    targetLife: targetLife,\n    attackerSp: attackerSp,\n    resultLife: resultLife,\n    resultSp: resultSp,\n    BGstatus: BGstatus,\n    setBGstatus: setBGstatus,\n    setAnimeIsDone: setAnimeIsDone,\n    setTargetHp: setTargetHp,\n    setAttackerSp: setAttackerSp,\n    setLinesStatus: setLinesStatus,\n    setShowSkill: setShowSkill\n  }\n  switch (attacker.name) {\n    case `Tanjirou`:\n      return <TanjirouSkill {...defaultprops}/>\n    case `Nezuko`:\n      return <NezukoSkill {...defaultprops}/>\n    case `Zenitsu`:\n      return <ZenitsuSkill {...defaultprops}/>\n    case `Inosuke`:\n      return <InosukeSkill {...defaultprops}/>\n    case `Rengoku`:\n      return <RengokuSkill {...defaultprops}/>\n    default:\n      return;\n  };\n};\n\n","import { TweenMax } from 'gsap';\nimport numeral from \"numeral\";\nexport const steps = ({\n  skillName='',\n  isHit=false,\n  targetLife=0,\n  attackerSp=0,\n  resultLife=0,\n  resultSp=0,\n  BGstatus={},\n  setBGstatus=null,\n  setAnimeIsDone=null,\n  setTargetHp=null,\n  setAttackerSp=null,\n  setLinesStatus=null,\n  setPosition=null,\n  setShowSkill=null\n}) => {\n  switch (skillName) {\n    case '防禦':\n      setPosition(prev=>{return{ ...prev, x:-200, tension:150 }});\n      const defStart = ()=>{\n        if(isHit){\n          return isHitStep();\n        }else return isDodge();\n      };\n      const isHitStep = ()=> {\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:-235, y:20, mass:2, \n            friction:5, tension:1000, tint:0xd00000}});\n          // callback\n          if(resultLife<=0){\n            return isDead({ type:'dead' });\n          }else return next({ type:'def' });\n        },BGstatus.seconds);\n        return timeout;\n      }\n      const isDodge = ()=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:-235, y:-10 }});\n          // callback\n          next({ type:'dodge' });\n        },BGstatus.seconds);\n        return timeout;\n      };\n      const isDead = ({ type })=> {\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:-200, y:10, \n            friction:2, tint:0x03071e\n          }});\n          setLinesStatus(prev=>{ \n            return { \n              status: type,\n              character: prev.character===\"USER\" ? \"ENEMY\" : \"USER\"\n            };\n          });\n          // callback\n          isDeadStep2();\n        },5000);\n        return timeout;\n      };\n      const isDeadStep2 = ()=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return { ...prev, alpha:0 }});\n          // callback\n          end();\n        },3000);\n        return timeout;\n      };\n      const next = ({ type })=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:-200, y:10, mass:1, \n            friction:20, tension:170, tint:0xffffff}});\n          setLinesStatus(prev=>{ \n            return { \n              status: type,\n              character: prev.character===\"USER\" ? \"ENEMY\" : \"USER\"\n            };\n          });\n          // callback\n          end();\n        },5000);\n        return timeout;\n      };\n      const end = ()=> {\n        const timeout = setTimeout(() => {\n          // callback\n          setAnimeIsDone(true);\n        },3000);\n        return timeout;\n      };\n      return defStart();\n    // ATK\n    default:\n      setBGstatus({ type:'ENEMYSTANDBY', defence:false, seconds:1200 });\n      setPosition(prev=>{return{ ...prev, x:-600, tension:100 }});\n      const atkStart = ()=>{\n        setPosition(prev=>{\n          return{ ...prev, x:-200, tension:100 }});\n        // callback\n        return step1();\n      };\n      const step1 = ()=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:0, tension:100 }});\n          setBGstatus(prev=>{return{ ...prev, type:'ENEMYSKILL' }});\n          // callback\n          step2();\n        },3000);\n        return timeout;\n      };\n      const step2 = ()=>{\n        const run =  { number: attackerSp };\n        TweenMax.to(run, 0.8, {\n          number: resultSp,\n          onUpdate: () => {\n            setAttackerSp(numeral(run.number).format(\"0\"))\n          },\n        });\n        setLinesStatus(prev=>{ return { ...prev, status:'attack' }});\n        const timeout = setTimeout(() => {\n          setBGstatus(prev=>{return{ ...prev, type:'STOP', defence:true }});\n          // callback\n          step3();\n        },3000);\n        return timeout;\n      };\n      const step3 = ()=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:175, tension:1000 }});\n          // callback\n          step4();\n        },1000);\n        return timeout;\n      };\n      const step4 = ()=>{\n        const run = { number: targetLife };\n        if(isHit) {\n          TweenMax.to(run, 0.8, {\n            number: resultLife<0 ? 0 : resultLife,\n            onUpdate: () => {\n              setTargetHp(numeral(run.number).format(\"0\"))\n            },\n          });\n        };\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:-600, tension:50 }});\n        },3000);\n        return timeout;\n      };\n      return atkStart();\n  }\n};","import React from \"react\";\nimport { loader } from '../../../components/DataLoader';\nimport { Spring } from 'react-spring/renderprops';\nimport { Sprite } from '@inlet/react-pixi/animated';\n\nexport const ShowType = ({\n  skillName,\n  attackerName,\n  position,\n}) =>{\n  switch (skillName) {\n    case '防禦':\n      return <Spring\n        from={{ x:-600, y:10 }}\n        to={{ x:position.x, y:position.y }}\n        config={{ \n          mass: position.mass,\n          tension: position.tension,\n          friction: position.friction,\n        }}\n      >\n      {props => \n        <Sprite\n          zIndex={2}\n          width={300}\n          height={300}\n          anchor={0.5}\n          alpha={position.alpha}\n          tint={position.tint}\n          image={loader.resources[`${attackerName}-fight`].data}\n          {...props}\n        />}\n      </Spring>\n    default:\n      return <Spring\n        from={{ x:-600, y:50 }}\n        to={{ x:position.x, y:position.y }}\n        config={{ \n          mass:1,\n          tension: position.tension,\n          friction:20,\n        }}\n      >\n      {props => \n        <Sprite\n          zIndex={3}\n          width={300}\n          height={300}\n          anchor={0.5}\n          image={loader.resources[`${attackerName}-fight`].data}\n          {...props}\n        />}\n      </Spring>\n  }\n};","import React from \"react\";\n// part\nimport { SkillShowProtoType } from \"../../SkillShowProtoType\";\nimport { steps } from \"./steps\";\nimport { ShowType } from \"./ShowType\";\n\nexport const TeoniSkill = ( props )=>{\n  return <SkillShowProtoType \n    {...props}\n    defXPostion={-600}\n    steps={steps}\n    ShowType={ShowType}\n  />\n};\n","import { TweenMax } from 'gsap';\nimport numeral from \"numeral\";\nimport { videos } from '../../../components/DataLoader';\nexport const steps = ({\n  skillName='',\n  isHit=false,\n  targetLife=0,\n  attackerSp=0,\n  resultLife=0,\n  resultSp=0,\n  BGstatus={},\n  setBGstatus=null,\n  setAnimeIsDone=null,\n  setTargetHp=null,\n  setAttackerSp=null,\n  setLinesStatus=null,\n  setPosition=null,\n  setShowSkill=null\n}) => {\n  switch (skillName) {\n    case '防禦':\n      setPosition(prev=>{return{ ...prev, x:-200, tension:150 }});\n      const defStart = ()=>{\n        if(isHit){\n          return isHitStep();\n        }else return isDodge();\n      };\n      const isHitStep = ()=> {\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:-235, y:20, mass:2, \n            friction:5, tension:1000, tint:0xd00000}});\n          // callback\n          if(resultLife<=0){\n            return isDead({ type:'dead' });\n          }else return next({ type:'def' });\n        },BGstatus.seconds);\n        return timeout;\n      }\n      const isDodge = ()=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:-235, y:-10 }});\n          // callback\n          next({ type:'dodge' });\n        },BGstatus.seconds);\n        return timeout;\n      };\n      const isDead = ({ type })=> {\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:-200, y:10, \n            friction:2, tint:0x03071e\n          }});\n          setLinesStatus(prev=>{ \n            return { \n              status: type,\n              character: prev.character===\"USER\" ? \"ENEMY\" : \"USER\"\n            };\n          });\n          // callback\n          isDeadStep2();\n        },5000);\n        return timeout;\n      };\n      const isDeadStep2 = ()=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return { ...prev, alpha:0 }});\n          // callback\n          end();\n        },3000);\n        return timeout;\n      };\n      const next = ({ type })=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:-200, y:10, mass:1, \n            friction:20, tension:170, tint:0xffffff}});\n          setLinesStatus(prev=>{ \n            return { \n              status: type,\n              character: prev.character===\"USER\" ? \"ENEMY\" : \"USER\"\n            };\n          });\n          // callback\n          end();\n        },5000);\n        return timeout;\n      };\n      const end = ()=> {\n        const timeout = setTimeout(() => {\n          // callback\n          setAnimeIsDone(true);\n        },3000);\n        return timeout;\n      };\n      return defStart();\n    // ATK\n    case '破壞殺―亂式':\n      setBGstatus({ type:'STANDBY', defence:false, seconds:0 });\n      setPosition(prev=>{return{ ...prev, x:-600, tension:100 }});\n      const skill2atkStart = ()=>{\n        setPosition(prev=>{return{ ...prev, x:-200, tension:100 }});\n        // callback\n        return skill2step1();\n      };\n      const skill2step1 = ()=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:0, tension:100 }});\n          setBGstatus(prev=>{return{ ...prev, type:'SKILL' }});\n          // callback\n          skill2step2();\n        },3000);\n        return timeout;\n      };\n      const skill2step2 = ()=>{\n        const run =  { number: attackerSp };\n        TweenMax.to(run, 0.8, {\n          number: resultSp,\n          onUpdate: () => {\n            setAttackerSp(numeral(run.number).format(\"0\"))\n          },\n        });\n        setLinesStatus(prev=>{ return { ...prev, status:'attack' }});\n        setShowSkill(prev=>{\n          const video = videos[`${prev.name}`].skill2.baseTexture.resource.source;\n          video.play();\n          return { ...prev, \n            status:true, \n            type:'2',\n            callback:()=>{\n              setBGstatus(prev=>{return{ ...prev, type:'STOP', defence:true }});\n              setPosition(prev=>{return{ ...prev, x:400, tension:1000 }});\n              skill2step3();\n            }\n          };\n        });\n      };\n      const skill2step3 = ()=>{\n        const run = { number: targetLife };\n        if(isHit) {\n          TweenMax.to(run, 0.8, {\n            number: resultLife<0 ? 0 : resultLife,\n            onUpdate: () => {\n              setTargetHp(numeral(run.number).format(\"0\"))\n            },\n          });\n        };\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:-600, tension:50 }});\n        },3000);\n        return timeout;\n      };\n      return skill2atkStart();\n    case '術式展開―破壞殺―羅針':\n      setBGstatus({ type:'STANDBY', defence:false, seconds:0 });\n      setPosition(prev=>{return{ ...prev, x:-600, tension:100 }});\n      const skill3atkStart = ()=>{\n        setPosition(prev=>{return{ ...prev, x:-200, tension:100 }});\n        // callback\n        return skill3step1();\n      };\n      const skill3step1 = ()=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:0, tension:100 }});\n          setBGstatus(prev=>{return{ ...prev, type:'SKILL' }});\n          // callback\n          skill3step2();\n        },3000);\n        return timeout;\n      };\n      const skill3step2 = ()=>{\n        const run =  { number: attackerSp };\n        TweenMax.to(run, 0.8, {\n          number: resultSp,\n          onUpdate: () => {\n            setAttackerSp(numeral(run.number).format(\"0\"))\n          },\n        });\n        setLinesStatus(prev=>{ return { ...prev, status:'attack' }});\n        setShowSkill(prev=>{\n          const video = videos[`${prev.name}`].skill3.baseTexture.resource.source;\n          video.play();\n          return { ...prev, \n            status:true, \n            type:'3',\n            callback:()=>{\n              setBGstatus(prev=>{return{ ...prev, type:'STOP', defence:true }});\n              setPosition(prev=>{return{ ...prev, x:400, tension:1000 }});\n              skill3step3();\n            }\n          };\n        });\n      };\n      const skill3step3 = ()=>{\n        const run = { number: targetLife };\n        if(isHit) {\n          TweenMax.to(run, 0.8, {\n            number: resultLife<0 ? 0 : resultLife,\n            onUpdate: () => {\n              setTargetHp(numeral(run.number).format(\"0\"))\n            },\n          });\n        };\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:-600, tension:50 }});\n        },3000);\n        return timeout;\n      };\n      return skill3atkStart();\n    default:\n      setBGstatus({ type:'ENEMYSTANDBY', defence:false, seconds:1200 });\n      setPosition(prev=>{return{ ...prev, x:-600, tension:100 }});\n      const atkStart = ()=>{\n        setPosition(prev=>{\n          return{ ...prev, x:-200, tension:100 }});\n        // callback\n        return step1();\n      };\n      const step1 = ()=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:0, tension:100 }});\n          setBGstatus(prev=>{return{ ...prev, type:'ENEMYSKILL' }});\n          // callback\n          step2();\n        },3000);\n        return timeout;\n      };\n      const step2 = ()=>{\n        const run =  { number: attackerSp };\n        TweenMax.to(run, 0.8, {\n          number: resultSp,\n          onUpdate: () => {\n            setAttackerSp(numeral(run.number).format(\"0\"))\n          },\n        });\n        setLinesStatus(prev=>{ return { ...prev, status:'attack' }});\n        const timeout = setTimeout(() => {\n          setBGstatus(prev=>{return{ ...prev, type:'STOP', defence:true }});\n          // callback\n          step3();\n        },3000);\n        return timeout;\n      };\n      const step3 = ()=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:175, tension:1000 }});\n          // callback\n          step4();\n        },1000);\n        return timeout;\n      };\n      const step4 = ()=>{\n        const run = { number: targetLife };\n        if(isHit) {\n          TweenMax.to(run, 0.8, {\n            number: resultLife<0 ? 0 : resultLife,\n            onUpdate: () => {\n              setTargetHp(numeral(run.number).format(\"0\"))\n            },\n          });\n        };\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:-600, tension:50 }});\n        },3000);\n        return timeout;\n      };\n      return atkStart();\n  }\n};","import React from \"react\";\nimport { loader } from '../../../components/DataLoader';\nimport { Spring } from 'react-spring/renderprops';\nimport { Sprite } from '@inlet/react-pixi/animated';\n\nexport const ShowType = ({\n  skillName,\n  attackerName,\n  position,\n}) =>{\n  switch (skillName) {\n    case '防禦':\n      return <Spring\n        from={{ x:-600, y:10 }}\n        to={{ x:position.x, y:position.y }}\n        config={{ \n          mass: position.mass,\n          tension: position.tension,\n          friction: position.friction,\n        }}\n      >\n      {props => \n        <Sprite\n          zIndex={2}\n          width={250}\n          height={250}\n          anchor={0.5}\n          alpha={position.alpha}\n          tint={position.tint}\n          image={loader.resources[`${attackerName}-fight`].data}\n          {...props}\n        />}\n      </Spring>\n    default:\n      return <Spring\n        from={{ x:-600, y:50 }}\n        to={{ x:position.x, y:position.y }}\n        config={{ \n          mass:1,\n          tension: position.tension,\n          friction:20,\n        }}\n      >\n      {props => \n        <Sprite\n          zIndex={3}\n          width={250}\n          height={250}\n          anchor={0.5}\n          image={loader.resources[`${attackerName}-fight`].data}\n          {...props}\n        />}\n      </Spring>\n  }\n};","import React from \"react\";\n// part\nimport { SkillShowProtoType } from \"../../SkillShowProtoType\";\nimport { steps } from \"./steps\";\nimport { ShowType } from \"./ShowType\";\n\nexport const HakujiSkill = ( props )=>{\n  return <SkillShowProtoType \n    {...props}\n    defXPostion={-600}\n    steps={steps}\n    ShowType={ShowType}\n  />\n};\n","import { TweenMax } from 'gsap';\nimport numeral from \"numeral\";\nexport const steps = ({\n  skillName='',\n  isHit=false,\n  targetLife=0,\n  attackerSp=0,\n  resultLife=0,\n  resultSp=0,\n  BGstatus={},\n  setBGstatus=null,\n  setAnimeIsDone=null,\n  setTargetHp=null,\n  setAttackerSp=null,\n  setLinesStatus=null,\n  setPosition=null,\n  setShowSkill=null\n}) => {\n  switch (skillName) {\n    case '防禦':\n      setPosition(prev=>{return{ ...prev, x:-200, tension:150 }});\n      const defStart = ()=>{\n        if(isHit){\n          return isHitStep();\n        }else return isDodge();\n      };\n      const isHitStep = ()=> {\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:-235, y:20, mass:2, \n            friction:5, tension:1000, tint:0xd00000}});\n          // callback\n          if(resultLife<=0){\n            return isDead({ type:'dead' });\n          }else return next({ type:'def' });\n        },BGstatus.seconds);\n        return timeout;\n      }\n      const isDodge = ()=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:-235, y:-10 }});\n          // callback\n          next({ type:'dodge' });\n        },BGstatus.seconds);\n        return timeout;\n      };\n      const isDead = ({ type })=> {\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:-200, y:10, \n            friction:2, tint:0x03071e\n          }});\n          setLinesStatus(prev=>{ \n            return { \n              status: type,\n              character: prev.character===\"USER\" ? \"ENEMY\" : \"USER\"\n            };\n          });\n          // callback\n          isDeadStep2();\n        },5000);\n        return timeout;\n      };\n      const isDeadStep2 = ()=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return { ...prev, alpha:0 }});\n          // callback\n          end();\n        },3000);\n        return timeout;\n      };\n      const next = ({ type })=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:-200, y:10, mass:1, \n            friction:20, tension:170, tint:0xffffff}});\n          setLinesStatus(prev=>{ \n            return { \n              status: type,\n              character: prev.character===\"USER\" ? \"ENEMY\" : \"USER\"\n            };\n          });\n          // callback\n          end();\n        },5000);\n        return timeout;\n      };\n      const end = ()=> {\n        const timeout = setTimeout(() => {\n          // callback\n          setAnimeIsDone(true);\n        },3000);\n        return timeout;\n      };\n      return defStart();\n    // ATK\n    default:\n      setBGstatus({ type:'ENEMYSTANDBY', defence:false, seconds:1200 });\n      setPosition(prev=>{return{ ...prev, x:-600, y:40, tension:100 }});\n      const atkStart = ()=>{\n        setPosition(prev=>{\n          return{ ...prev, x:-200, tension:100 }});\n        // callback\n        return step1();\n      };\n      const step1 = ()=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:0, tension:100 }});\n          setBGstatus(prev=>{return{ ...prev, type:'ENEMYSKILL' }});\n          // callback\n          step2();\n        },3000);\n        return timeout;\n      };\n      const step2 = ()=>{\n        const run =  { number: attackerSp };\n        TweenMax.to(run, 0.8, {\n          number: resultSp,\n          onUpdate: () => {\n            setAttackerSp(numeral(run.number).format(\"0\"))\n          },\n        });\n        setLinesStatus(prev=>{ return { ...prev, status:'attack' }});\n        const timeout = setTimeout(() => {\n          setBGstatus(prev=>{return{ ...prev, type:'STOP', defence:true }});\n          // callback\n          step3();\n        },3000);\n        return timeout;\n      };\n      const step3 = ()=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:175, tension:1000 }});\n          // callback\n          step4();\n        },1000);\n        return timeout;\n      };\n      const step4 = ()=>{\n        const run = { number: targetLife };\n        if(isHit) {\n          TweenMax.to(run, 0.8, {\n            number: resultLife<0 ? 0 : resultLife,\n            onUpdate: () => {\n              setTargetHp(numeral(run.number).format(\"0\"))\n            },\n          });\n        };\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:-600, tension:50 }});\n        },3000);\n        return timeout;\n      };\n      return atkStart();\n  }\n};","import React from \"react\";\nimport { loader } from '../../../components/DataLoader';\nimport { Spring } from 'react-spring/renderprops';\nimport { Sprite } from '@inlet/react-pixi/animated';\n\nexport const ShowType = ({\n  skillName,\n  attackerName,\n  position,\n}) =>{\n  switch (skillName) {\n    case '防禦':\n      return <Spring\n        from={{ x:-600, y:10 }}\n        to={{ x:position.x, y:position.y }}\n        config={{ \n          mass: position.mass,\n          tension: position.tension,\n          friction: position.friction,\n        }}\n      >\n      {props => \n        <Sprite\n          zIndex={2}\n          width={280}\n          height={280}\n          anchor={0.5}\n          alpha={position.alpha}\n          tint={position.tint}\n          image={loader.resources[`${attackerName}-fight`].data}\n          {...props}\n        />}\n      </Spring>\n    default:\n      return <Spring\n        from={{ x:-600, y:25 }}\n        to={{ x:position.x, y:position.y }}\n        config={{ \n          mass:1,\n          tension: position.tension,\n          friction:20,\n        }}\n      >\n      {props => \n        <Sprite\n          zIndex={3}\n          width={280}\n          height={280}\n          anchor={0.5}\n          image={loader.resources[`${attackerName}-fight`].data}\n          {...props}\n        />}\n      </Spring>\n  }\n};","import React from \"react\";\n// part\nimport { SkillShowProtoType } from \"../../SkillShowProtoType\";\nimport { steps } from \"./steps\";\nimport { ShowType } from \"./ShowType\";\n\nexport const NomanooniSkill = ( props )=>{\n  return <SkillShowProtoType \n    {...props}\n    defXPostion={-600}\n    steps={steps}\n    ShowType={ShowType}\n  />\n};\n","import React from \"react\";\nimport { TeoniSkill } from \"./Teoni/Index\";\nimport { HakujiSkill } from \"./Hakuji/Index\";\nimport { NomanooniSkill } from \"./Nomanooni/Index\";\nexport const EnemyChessSkillShow = ({\n  attacker={},\n  skill={},\n  BGstatus,\n  isHit=false,\n  targetLife=0,\n  attackerSp=0,\n  resultLife=0,\n  resultSp=0,\n  setBGstatus,\n  setAnimeIsDone,\n  setTargetHp,\n  setAttackerSp,\n  setLinesStatus,\n  setShowSkill\n})=>{\n  const defaultprops = {\n    skillName: skill.name,\n    attackerName: attacker.name,\n    isHit: isHit,\n    targetLife: targetLife,\n    attackerSp: attackerSp,\n    resultLife: resultLife,\n    resultSp: resultSp,\n    BGstatus: BGstatus,\n    setBGstatus: setBGstatus,\n    setAnimeIsDone: setAnimeIsDone,\n    setTargetHp: setTargetHp,\n    setAttackerSp: setAttackerSp,\n    setLinesStatus: setLinesStatus,\n    setShowSkill: setShowSkill\n  }\n  switch (attacker.name) {\n    case `Teoni`:\n      return <TeoniSkill {...defaultprops}/>\n    case `Hakuji`:\n      return <HakujiSkill {...defaultprops}/>\n    case `Nomanooni`:\n      return <NomanooniSkill {...defaultprops}/>\n    default:\n      return;\n  };\n};\n","import React,{ useState, useEffect } from 'react';\nimport { Container, Graphics, Sprite } from '@inlet/react-pixi/animated';\nimport { chessDead, chessRoundRest } from \"../../../reducer/chess\";\nimport { enemyChessDead } from \"../../../reducer/enemyChess\";\nimport { videos, loader } from '../../DataLoader';\n// part\nimport { AnimeShowBG } from \"./AinmeShowBG\";\nimport { TopBar } from \"./TopBar\";\nimport { BottomBar } from \"./BottomBar\";\n// skill\nimport { ChessSkillShow } from \"../../../constants/ChessSkillShow/Index\";\nimport { EnemyChessSkillShow } from \"../../../constants/EnemyChessSkillShow/Index\";\nexport const BattleAnimeShow = ({\n  props\n}) =>{\n  const { stageStatus, animeShow, chess, enemyChess, enemyRoundTab,\n    setMoveStep, setAnimeShow, setUsualTip, setCurrentChess, setEnemyRoundTab, dispatch } = props;\n  const { target, attacker } = animeShow;\n  // CreateContent\n  const CreateContent = ()=>{\n    const [ BGstatus, setBGstatus ] = useState({ \n      type:'STANDBY',\n      defence: false,\n      seconds: 1200\n    });\n    const [ BGprop, setBGpops ] = useState({ toX:400, duration: 20000 });\n    const [ SkBGprop, setSkBGpops ] = useState({ toX:400, duration: 500 });\n    const [ targetHp, setTargetHp ] = useState(target.prevLife);\n    const [ attackerSp, setAttackerSp ] = useState(attacker.prevSP);\n    const [ animeIsDone, setAnimeIsDone ] = useState(false);\n    const [ linesStatus, setLinesStatus ] = useState({ \n      character: animeShow.type,\n      status:'default'\n    });\n    const [ showSkill, setShowSkill ] = useState({ \n      status:false,\n      type:'0',\n      name: (animeShow.type===\"USER\") ? chess[attacker.key].name :\n        enemyChess[attacker.key].name,\n      callback: null\n    });\n    const fetchChessType = ( type='' )=>{\n      switch (type) {\n        case 'CHESS':\n          if(animeShow.type===\"USER\"){\n            return chess[typeof(animeShow.attacker.key)!=='number'?0:animeShow.attacker.key];\n          }else return chess[typeof(animeShow.target.key)!=='number'?0:animeShow.target.key];\n        case 'ENEMYCHESS':\n          if(animeShow.type===\"USER\"){\n            return enemyChess[typeof(animeShow.target.key)!=='number'?0:animeShow.target.key];\n          }else return enemyChess[typeof(animeShow.attacker.key)!=='number'?0:animeShow.attacker.key];\n        default:\n          break;\n      }; \n    };\n    const CreateSkillSprite = () => {\n      const video = (animeShow.type===\"USER\") ?\n        videos[`${chess[attacker.key].name}`][`skill${showSkill.type}`]:\n        videos[`${enemyChess[attacker.key].name}`][`skill${showSkill.type}`];\n      const videoDom = video.baseTexture.resource.source;\n      videoDom.onended = function() {\n        setShowSkill(prev=>{\n          videoDom.currentTime = 0;\n          return { ...prev, status:false }\n        });\n        showSkill.callback();\n      };\n      return <Sprite\n        zIndex={99}\n        width={600}\n        height={370}\n        anchor={0.5}\n        x={0}\n        y={-35}\n        image={loader.resources[`${\n          (animeShow.type===\"USER\") ?\n            chess[attacker.key].name : enemyChess[attacker.key].name\n        }-talk-attack`].data}\n        texture={video}\n      />\n    }\n    //  關閉動畫判斷\n    useEffect(()=>{\n      if(!animeIsDone){ return };\n      setAnimeShow({\n        status:false,\n        type:'',\n        isHit:false,\n        attacker:{ key:'', skill:{}, prevSP:0 },\n        target:{ key:'', isHit:false, prevLife:0 }\n      });\n      // result check line\n      if(animeShow.type===\"USER\" &&\n        enemyChess[target.key].hp <= 0\n      ){\n        dispatch(enemyChessDead({ key:target.key }));\n        setUsualTip({\n          title:`已擊敗 ${enemyChess[target.key].cn}!`,\n          status:true,\n        });\n      }else if(animeShow.type===\"ENEMY\" &&\n        chess[target.key].hp <= 0\n      ){\n        dispatch(chessDead({ key:target.key }));\n        setUsualTip({\n          title:`${chess[target.key].cn} 戰敗`,\n          status:true,\n        });\n      }else if(animeShow.type===\"ENEMY\") {\n        dispatch(chessRoundRest());\n        setCurrentChess(prev=>{\n          return { ...prev, type:\"USERROUND\"\n        }});\n        const enemyList = enemyChess.filter(v=>v.debut);\n        if(enemyRoundTab.oder < (enemyList.length-1)) {\n          setEnemyRoundTab(prev=>{\n            return{\n              oder:prev.oder+=1,\n              status:true\n            }\n          });\n        }else {\n          setUsualTip({\n            title:`我方回合`,\n            status:true,\n          });\n        };\n      }else {\n        setMoveStep(true);\n      };\n    },[ animeIsDone ]);\n    return <Container sortableChildren={true}>\n      <AnimeShowBG\n        props={{stageStatus, BGstatus, BGprop, SkBGprop, setBGpops, setSkBGpops}}\n      />\n      <TopBar\n        right={fetchChessType('CHESS')}\n        left={fetchChessType('ENEMYCHESS')}\n        showType={animeShow.type}\n        targetHp={targetHp}\n        attackerSp={attackerSp}\n      />\n      <ChessSkillShow\n        attacker={fetchChessType('CHESS')}\n        skill={\n          animeShow.type===\"USER\"?\n          animeShow.attacker.skill:\n          { name:'防禦' }\n        }\n        BGstatus={BGstatus}\n        isHit={animeShow.isHit}\n        targetLife={target.prevLife}\n        attackerSp={attacker.prevSP}\n        resultLife={\n          target.prevLife -\n          animeShow.attacker.skill.atk \n        }\n        resultSp={\n          attacker.prevSP -\n          animeShow.attacker.skill.sp\n        }\n        setBGstatus={setBGstatus}\n        setAnimeIsDone={setAnimeIsDone}\n        setTargetHp={setTargetHp}\n        setAttackerSp={setAttackerSp}\n        setLinesStatus={setLinesStatus}\n        setShowSkill={setShowSkill}\n      />\n      <EnemyChessSkillShow\n        attacker={fetchChessType('ENEMYCHESS')}\n        skill={\n          animeShow.type===\"USER\"?\n          { name:'防禦' }:\n          animeShow.attacker.skill\n        }\n        BGstatus={BGstatus}\n        isHit={animeShow.isHit}\n        targetLife={target.prevLife}\n        attackerSp={attacker.prevSP}\n        resultLife={\n          target.prevLife -\n          animeShow.attacker.skill.atk \n        }\n        resultSp={\n          attacker.prevSP -\n          animeShow.attacker.skill.sp\n        }\n        setBGstatus={setBGstatus}\n        setAnimeIsDone={setAnimeIsDone}\n        setTargetHp={setTargetHp}\n        setAttackerSp={setAttackerSp}\n        setLinesStatus={setLinesStatus}\n        setShowSkill={setShowSkill}\n      />\n      {showSkill.status && <CreateSkillSprite/>}\n      <BottomBar\n        right={fetchChessType('CHESS')}\n        left={fetchChessType('ENEMYCHESS')}\n        linesStatus={linesStatus}\n      />\n      <Sprite\n        zIndex={99}\n        interactive={true}\n        buttonMode={true}\n        width={75}\n        height={35}\n        x={310}\n        y={240}\n        image={loader.resources[`fightOff`].data}\n        pointertap={()=>{\n          setAnimeShow({\n            status:false,\n            type:'',\n            isHit:false,\n            attacker:{ key:'', skill:{}, prevSP:0 },\n            target:{ key:'', isHit:false, prevLife:0 }\n          });\n          // result check line\n          if(animeShow.type===\"USER\" &&\n            enemyChess[target.key].hp <= 0\n          ){\n            dispatch(enemyChessDead({ key:target.key }));\n            setUsualTip({\n              title:`已擊敗 ${enemyChess[target.key].cn}!`,\n              status:true,\n            });\n          }else if(animeShow.type===\"ENEMY\" &&\n            chess[target.key].hp <= 0\n          ){\n            dispatch(chessDead({ key:target.key }));\n            setUsualTip({\n              title:`${chess[target.key].cn} 戰敗`,\n              status:true,\n            });\n          }else if(animeShow.type===\"ENEMY\") {\n            dispatch(chessRoundRest());\n            setCurrentChess(prev=>{\n              return { ...prev, type:\"USERROUND\"\n            }});\n            const enemyList = enemyChess.filter(v=>v.debut);\n            if(enemyRoundTab.oder < (enemyList.length-1)) {\n              setEnemyRoundTab(prev=>{\n                return{\n                  oder:prev.oder+=1,\n                  status:true\n                }\n              });\n            }else {\n              setUsualTip({\n                title:`我方回合`,\n                status:true,\n              });\n            };\n          }else {\n            setMoveStep(true);\n          };\n          const clearAllTimeouts = ()=>{\n            let id = window.setTimeout(null,0);\n            while (id--) { window.clearTimeout(id); };\n          };\n          clearAllTimeouts();\n        }}\n      />\n    </Container>\n  };\n  return <Graphics\n    x={400}\n    y={300}\n    zIndex={99}\n    draw={g=> {\n      g.clear();\n      g.beginFill(`0x011627`);\n      g.drawRoundedRect(-400,-300,800,600,0);\n      g.endFill();\n    }}\n  >\n    <CreateContent/>\n  </Graphics>\n};","import React from 'react';\nimport { Sprite, Graphics, Text } from '@inlet/react-pixi/animated';\nimport { loader } from '../DataLoader';\nimport * as PIXI from \"pixi.js\";\nimport { stageRule } from \"../../constants/stageRule\";\nexport const OtherTab = ({ props })=> {\n  const {\n    stageStatus='',\n    roundNum=Number,\n    setMoveStep,\n    setOtherTab,\n    setTipStatus,\n    setCurrentChess\n  } = props;\n  const checkStageRound = ()=>{\n    switch (stageStatus) {\n      case 'stageOne':\n        return 1;\n      case 'stageTwo':\n        return 2;\n      case 'stageThree':\n        return 3;\n      default:\n        return 1;\n    };\n  };\n  return <Graphics\n    x={400}\n    y={300}\n    draw={g=> {\n      g.clear();\n      g.lineStyle(1,`0xffffff`,1);\n      g.beginFill(`0x22223b`);\n      g.drawRoundedRect(-200,-150,400,300,8);\n      g.endFill();\n    }}\n  >\n    <Sprite\n      interactive={true}\n      buttonMode={true}\n      width={25}\n      height={25}\n      anchor={0.5}\n      x={175}\n      y={-125}\n      image={loader.resources[`closeIcon`].data}\n      pointertap={()=>{\n        setMoveStep(true);\n        setOtherTab(false);\n        setTipStatus(prev=>{\n          return {...prev, status:false }\n        });\n      }}\n    />\n    <Sprite\n      interactive={true}\n      buttonMode={true}\n      width={75}\n      height={35}\n      x={105}\n      y={90}\n      image={loader.resources[`endBtn`].data}\n      pointertap={()=>{\n        setCurrentChess({\n          key:0,\n          type:\"ENDROUND\"\n        });\n        setTipStatus(prev=>{\n          return {...prev,\n            title:`結束回合?`, \n            status:true\n          }\n        });\n      }}\n    />\n    <Text\n      text={`【 第 ${checkStageRound()} 話 】作戰目的`}\n      x={-170}\n      y={-125}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 18,\n        fill:['#ffffff', '#00ff99'],\n      })}\n    />\n    <Text\n      text={stageRule.getIn([stageStatus,'ruleText','win'])}\n      x={-150}\n      y={-90}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 16,\n        fill:['#ffffff', '#ffffff'],\n      })}\n    />\n    <Text\n      text={'戰敗條件'}\n      x={-170}\n      y={-40}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 18,\n        fill:['#ffffff', '#ee6c4d'],\n      })}\n    />\n    <Text\n      text={stageRule.getIn([stageStatus,'ruleText','lose'])}\n      x={-150}\n      y={-5}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 16,\n        fill:['#ffffff', '#ffffff'],\n      })}\n    />\n    <Text\n      text={'回合數'}\n      x={-170}\n      y={45}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 18,\n        fill:['#ffffff', '#8d99ae'],\n      })}\n    />\n    <Text\n      text={`第 ${roundNum} 回`}\n      x={-150}\n      y={80}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 16,\n        fill:['#ffffff', '#ffffff'],\n      })}\n    />\n  </Graphics>\n};\n\n","import React from 'react';\nimport { Container, Sprite, Text } from '@inlet/react-pixi/animated';\nimport { loader } from '../../DataLoader';\nimport * as PIXI from \"pixi.js\";\nexport const EnemyList = ({ \n  oder=0,\n  enemyRandomSkill=0,\n  enemyList=[]\n})=>{\n  const skill = enemyList[oder].skill;\n  return <Container sortableChildren={true}>\n    <Sprite\n      width={65}\n      height={65}\n      anchor={0.5}\n      x={175}\n      y={-75}\n      image={loader.resources[`${enemyList[oder].name}-head-default`].data}\n    />\n    <Text \n      text={`${enemyList[oder].cn} / 技能`}\n      anchor={{x:0.5}}\n      x={175} y={-30}\n      style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 18,\n        fill:'#ffffff',\n      })}/>\n    <Text \n      text={`${skill[enemyRandomSkill].name}`}\n      anchor={{x:0.5}}\n      x={175} y={10}\n      style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 20,\n        fill:['#f15bb5','#e0aaff'],\n      })}/>\n    <Text \n      text={`ATK / ${skill[enemyRandomSkill].atk}`}\n      anchor={{x:0.5}}\n      x={175} y={40}\n      style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 18,\n        fill:['#f15bb5','#e0aaff'],\n      })}/>\n  </Container>\n};","import React from 'react';\nimport { Container, Graphics, Sprite } from '@inlet/react-pixi/animated';\nimport { loader } from '../../DataLoader';\nexport const ChessList = ({\n  chessList,\n  defChess,\n  setDefChess\n})=>{\n  return <Container sortableChildren={true}>\n    <Graphics\n      x={-250}\n      y={-180}\n      zIndex={1}\n      draw={g=> {\n        g.clear();\n        g.lineStyle(1,`0xffffff`,1);\n        g.beginFill(`0x0f0f1b`);\n        g.drawRoundedRect(0,0,100,360,8);\n        g.endFill();\n      }}\n    />\n    {chessList.map((v,k)=>{\n      const distance = k * 85;\n      return <React.Fragment key={k}>\n        <Sprite\n          interactive={true}\n          buttonMode={true}\n          width={65}\n          height={65}\n          anchor={0.5}\n          zIndex={2}\n          x={-200}\n          y={-125 + distance}\n          image={loader.resources[`${v.name}-head-default`].data}\n          pointertap={()=>setDefChess(k)}\n        />\n        {k===defChess&&<Graphics\n          anchor={0.5}\n          x={-200}\n          y={-125 + distance}\n          zIndex={1}\n          draw={g=> {\n            g.clear();\n            g.beginFill(`0x7b2cbf`);\n            g.drawRoundedRect(-38,-38,76,76,5);\n            g.endFill();\n          }}\n        />}\n      </React.Fragment>\n    })}\n  </Container>\n};","import React from 'react';\nimport { Container, Graphics, Text } from '@inlet/react-pixi/animated';\nimport * as PIXI from \"pixi.js\";\n\nexport const Information = ({\n  defChess, chessList, atkEnemy\n})=>{\n  const dodge = chessList[defChess].dodge - atkEnemy.hitfix>=0 ? chessList[defChess].dodge - atkEnemy.hitfix : 0;\n  return <Container sortableChildren={true}>\n    <Graphics\n      x={-125} y={-150}\n    >\n      <Text \n        text={`選擇防禦：${chessList[defChess].cn}`}\n        anchor={{x:0}}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 18,\n          fill:'#ffffff',\n        })}/>\n      <Text \n        text={`HP：${chessList[defChess].hp}`}\n        anchor={{x:0}}\n        y={30}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 18,\n          fill:'#ff6b6b',\n        })}/>\n      <Text \n        text={`迴避率：${dodge}%`}\n        anchor={{x:0}}\n        y={60}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 18,\n          fill:['#ffffff', '#4cc9f0'],\n        })}/>\n    </Graphics>\n  </Container>\n}","import React,{ useState } from 'react';\nimport { Graphics, Sprite } from '@inlet/react-pixi/animated';\nimport { loader } from '../../DataLoader';\nimport { ProbabilityCount } from \"../../Common/ProbabilityCount\";\nimport { chessDefense } from \"../../../reducer/chess\";\nimport { enemyChessAttackResult } from \"../../../reducer/enemyChess\";\n// common part\nimport { EnemyList } from \"./EnemyList\";\nimport { ChessList } from \"./ChessList\";\nimport { Information } from \"./Information\";\nexport const EnemyRoundTab = ({ props })=> {\n  const { enemyRoundTab, chess, enemyChess,\n    setEnemyRoundTab, setAnimeShow, setCurrentChess, setCurrentBGM, dispatch } = props;\n  const chessList = chess.filter(v=>v.debut);\n  const enemyList = enemyChess.filter(v=>v.debut);\n  const enemySkill = enemyList[enemyRoundTab.oder].skill;\n  const enemySp = enemyList[enemyRoundTab.oder].sp;\n  const [ defChess, setDefChess ] = useState(0);\n  const [ random ] = useState(\n    Math.round(Math.random()*(enemySkill.length-1))\n  );\n  const getAtkSkill = ()=>{\n    const checkSp = (enemySp===0)||(enemySkill[random].sp>enemySp);\n    return checkSp ? 0 : random;\n  };\n  const enemyRandomSkill = getAtkSkill();\n  const getCurrentChessKey = ({ chess, debut, key })=>{\n    let getKey;\n    chess.find((v,k)=>{\n      if(v.id===debut[key].id){\n        return getKey = k;\n      }else return null;\n    });\n    return getKey;\n  };\n  return <Graphics\n    x={400}\n    y={300}\n    zIndex={99}\n    draw={g=> {\n      g.clear();\n      g.lineStyle(1,`0xffffff`,1);\n      g.beginFill(`0x22223b`);\n      g.drawRoundedRect(-300,-200,600,400,8);\n      g.endFill();\n    }}\n  >\n    <ChessList\n      chessList={chessList}\n      defChess={defChess}\n      setDefChess={setDefChess}\n    />\n    <Information\n      defChess={defChess}\n      chessList={chessList}\n      atkEnemy={enemyList[enemyRoundTab.oder].skill[enemyRandomSkill]}\n    />\n    <EnemyList\n      oder={enemyRoundTab.oder}\n      enemyRandomSkill={enemyRandomSkill}\n      enemyList={enemyList}\n    />\n    <Sprite\n      interactive={true}\n      buttonMode={true}\n      width={90}\n      height={42}\n      anchor={0.5}\n      zIndex={2}\n      x={230}\n      y={155}\n      image={loader.resources[`fightDef`].data}\n      pointertap={()=>{\n        setCurrentBGM(enemyList[enemyRoundTab.oder].name);\n        const isHit = ProbabilityCount(\n          enemyList[enemyRoundTab.oder].skill[enemyRandomSkill].hitfix,\n          chessList[defChess].dodge\n        );\n        setCurrentChess(prev=>{return{...prev,type:\"ATTACK\"}});\n        dispatch(enemyChessAttackResult({\n          key: getCurrentChessKey({\n            chess: enemyChess,\n            debut: enemyList,\n            key: enemyRoundTab.oder\n          }),\n          lessSp:enemyList[enemyRoundTab.oder].skill[enemyRandomSkill].sp\n        }));\n        if(isHit){\n          dispatch(chessDefense({\n            key: getCurrentChessKey({\n              chess: chess,\n              debut: chessList,\n              key: defChess\n            }),\n            damage: enemyList[enemyRoundTab.oder].skill[enemyRandomSkill].atk\n          }));\n        };\n        setEnemyRoundTab(prev=>{return{...prev, status:false}});\n        setAnimeShow({\n          status:true,\n          type:'ENEMY',\n          isHit: isHit,\n          attacker:{ \n            key: getCurrentChessKey({\n              chess: enemyChess,\n              debut: enemyList,\n              key: enemyRoundTab.oder\n            }),\n            skill:enemyList[enemyRoundTab.oder].skill[enemyRandomSkill],\n            prevSP:enemyList[enemyRoundTab.oder].sp\n          },\n          target:{ \n            key: getCurrentChessKey({\n              chess: chess,\n              debut: chessList,\n              key: defChess\n            }),\n            isHit:isHit,\n            prevLife:chessList[defChess].hp\n          }\n        });\n      }}\n    />\n  </Graphics>\n};","import React,{ useState } from 'react';\nimport { fromJS } from 'immutable';\nimport { Graphics, Text } from '@inlet/react-pixi/animated';\nimport { GetMove, GetAttack } from '../../reducer/map';\nimport { chessSelected, chessCheckStatus } from \"../../reducer/chess\";\nimport * as PIXI from \"pixi.js\";\n\nexport const ChessUIBoard = ({\n  ChessData,\n  ChessVal,\n  ChessKey,\n  EnemyChessData,\n  positionX,\n  positionY,\n  setCurrentChess,\n  setMoveStep,\n  dispatch\n})=> {\n  const specialPosition = {\n    x: 720,\n    y: 490\n  };\n  const forMoveArray = [];\n  const forAttackArray = [];\n  const [textInforArray, setTextInforArray] = useState(fromJS([{\n      id:1, \n      title:\"移動\",\n      textColor:['#ffffff', '#ffffff']\n    },{ \n      id:2,\n      title:\"攻擊\",\n      textColor:['#ffffff', '#ffffff']\n    },{ \n      id:3,\n      title:\"狀態\",\n      textColor:['#ffffff', '#ffffff']\n    },{ \n      id:4,\n      title:\"返回\",\n      textColor:['#ffffff', '#ffffff']\n  }]));\n  ChessData.filter(v=>v.debut).map((v)=>{\n    return (\n      forMoveArray.push({ x:v.x, y:v.y }),\n      forAttackArray.push({ x:v.x, y:v.y })\n    );\n  });\n  EnemyChessData.filter(v=>v.debut).map((v)=>{\n    return forMoveArray.push({ x:v.x, y:v.y });\n  });\n  const compareAttack = (\n    chessX,\n    chessY,\n    chessAtk\n  )=>{\n    let isAttack = false;\n    const limitPosition = { x:19, y:14 };\n    const positionRange = [];\n    for(let i=0; i < chessAtk; i++){\n      const getaddX = (chessX+(i+1)>=limitPosition.x) ? limitPosition.x : chessX+(i+1);\n      const getaddY = (chessY+(i+1)>=limitPosition.y) ? limitPosition.y : chessY+(i+1);\n      const getlessX = (chessX-(i+1)<=0) ? 0 : chessX-(i+1);\n      const getlessY = (chessY-(i+1)<=0) ? 0 : chessY-(i+1);\n      positionRange.push(\n        { x:getaddX, y:chessY },\n        { x:getlessX, y:chessY },\n        { x:chessX, y:getaddY },\n        { x:chessX, y:getlessY }\n      );\n    };\n    EnemyChessData.filter(v=>v.debut).map(val=>{\n      return positionRange.map(v=>{\n        if(val.x===v.x&&val.y===v.y){\n          return isAttack = true;\n        }else return null\n      })\n    });\n    return isAttack;\n  };\n  const compareUsed = (\n    chessX,\n    chessY,\n    checkType\n  )=>{\n    let isUnused = false;\n    const isDebutChess = ChessData.filter(v=>v.debut);\n    isDebutChess.map(val=>{\n      if(val.x===chessX&&val.y===chessY){\n        switch (checkType) {\n          case 'MOVE':\n          case 'ATTACK':\n            const moved = val.roundMove>0;\n            return isUnused = moved;\n          default:\n            return true;\n        };\n      }else return null;\n    });\n    return isUnused;\n  };\n  const CreateText = ({ noop })=>{\n    const isAttack = compareAttack(ChessVal.x,ChessVal.y,ChessVal.attack);\n    return textInforArray.map((val,key)=>{\n      const fetchInteractive = ()=>{\n        switch (val.get('id')) {\n          case 1:\n            return compareUsed(ChessVal.x,ChessVal.y,'MOVE');\n          case 2:\n            const result = isAttack && compareUsed(ChessVal.x,ChessVal.y,'ATTACK');\n            return result;\n          default:\n            return true;\n        };\n      }\n      return <Text\n        key={key}\n        interactive={fetchInteractive()}\n        buttonMode={true}\n        text={val.get('title')}\n        x={10}\n        y={5+(25*key)}\n        style={new PIXI.TextStyle({\n          fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 20,\n          fill:fetchInteractive()?val.get('textColor').toJS():'#8d99ae',\n        })}\n        pointerover={()=>{\n          setTextInforArray(prev=>\n            prev.setIn([key,'textColor',1],'#00ff99')\n          );\n        }}\n        pointerout={()=>{\n          setTextInforArray(prev=>\n            prev.setIn([key,'textColor',1],'#ffffff')\n          );\n        }}\n        pointertap={(e)=>{\n          switch (val.get('id')) {\n            case 1:\n              setCurrentChess({ \n                key:ChessKey,\n                type:\"MOVE\"\n              });\n              dispatch(GetMove({\n                position:{ \n                  x:ChessVal.x, \n                  y:ChessVal.y,\n                },\n                step:ChessVal.step,\n                changeColor:'0x06d6a0',\n                currentChessPositions: forMoveArray\n              }));\n              dispatch(chessSelected({\n                key:ChessKey\n              }));\n              break;\n            case 2:\n              setCurrentChess({ \n                key:ChessKey,\n                type:\"ATTACK\"\n              });\n              dispatch(chessSelected({\n                key:ChessKey\n              }));\n              dispatch(GetAttack({\n                position:{ \n                  x:ChessVal.x, \n                  y:ChessVal.y,\n                },\n                step:ChessVal.attack,\n                changeColor:'0x00bbf9',\n                currentChessPositions: forAttackArray\n              }));\n              break;\n            case 3:\n              setCurrentChess({ \n                key:ChessKey,\n                type:\"STATUS\"\n              });\n              dispatch(chessCheckStatus({\n                key:ChessKey\n              }));\n              dispatch(chessSelected({\n                key:ChessKey\n              }));\n              break;\n            case 4 :\n              setMoveStep(true);\n              dispatch(chessSelected({\n                key:ChessKey\n              }));\n              break;\n            default:\n              return console.log(e.target)\n          };\n        }}\n      />\n    }\n  )};\n  return <Graphics\n    x={positionX!==800?positionX:specialPosition.x}\n    y={(positionY!==560&&positionY!==520)?positionY:specialPosition.y}\n    zIndex={3}\n    draw={g=> {\n      g.clear();\n      g.lineStyle(1,`0xffffff`,1);\n      g.beginFill(`0x22223b`);\n      g.drawRoundedRect(0,0,60,110,8);\n      g.endFill();\n    }}\n  ><CreateText/></Graphics>\n};","import React from 'react';\nimport { Sprite, Graphics, Text } from '@inlet/react-pixi/animated';\nimport { loader } from '../DataLoader';\nimport * as PIXI from \"pixi.js\";\n\nexport const ChessStatus = ({\n  ChessData,\n  ChessKey,\n  CheckStatus,\n  setMoveStep,\n  dispatch\n})=> {\n  const CreateSkillList = ()=>{\n    return ChessData.skill.map((value,key)=>{\n        return <React.Fragment key={key}>\n        <Text\n          x={-40}\n          y={-70+(key*22)}\n          text={`${value.name}`}\n          style={new PIXI.TextStyle({\n            fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n            fontSize: 16,\n            fill:'#ffb700',\n          })}\n        />\n        <Text\n          x={-35+(value.name.length * 16)}\n          y={-70+(key*22)}\n          text={`ATK:${value.atk}(${value.sp}SP)`}\n          style={new PIXI.TextStyle({\n            fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n            fontSize: 14,\n            fill:'#ffffff',\n          })}\n        />\n      </React.Fragment>\n    });  \n  };\n  return <Graphics\n    x={400}\n    y={300}\n    zIndex={99}\n    draw={g=> {\n      g.clear();\n      g.lineStyle(1,`0xffffff`,1);\n      g.beginFill(`0x22223b`);\n      g.drawRoundedRect(-250,-150,500,300,8);\n      g.endFill();\n    }}\n  >\n    <Sprite\n      interactive={true}\n      buttonMode={true}\n      width={25}\n      height={25}\n      anchor={0.5}\n      x={220}\n      y={-120}\n      image={loader.resources[`closeIcon`].data}\n      pointertap={()=>{\n        setMoveStep(true);\n        dispatch(CheckStatus({\n          key:ChessKey\n        }));\n      }}\n    />\n    <Sprite\n      width={80}\n      height={80}\n      x={-200}\n      y={-90}\n      image={loader.resources[`${ChessData.name}-head-default`].data}\n    />\n    <Text\n      x={-200}\n      y={10}\n      text={ChessData.cn}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 16,\n        fill:'#ffffff',\n      })}\n    />\n    <Text\n      x={-200}\n      y={35}\n      text={`HP:`}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 16,\n        fill:'#ffffff',\n      })}\n    />\n    <Text\n      x={-170}\n      y={35}\n      text={`${ChessData.hp} / ${ChessData.fullValue.hp}`}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 16,\n        fill:'#ff6b6b',\n      })}\n    />\n    <Text\n      x={-200}\n      y={60}\n      text={`SP:`}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 16,\n        fill:'#ffffff',\n      })}\n    />\n    <Text\n      x={-170}\n      y={60}\n      text={`${ChessData.sp} / ${ChessData.fullValue.sp}`}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 16,\n        fill:'#0466c8',\n      })}\n    />\n    <Text\n      x={-50}\n      y={-95}\n      text={'招式'}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 16,\n        fill:'#ffffff',\n      })}\n    />\n    <CreateSkillList/>\n  </Graphics>\n};","import React from 'react';\nimport { Sprite } from '@inlet/react-pixi/animated';\nimport { loader } from '../DataLoader';\n// reducers\nimport { MoveSelect } from '../../reducer/map';\nimport { chessSelected, chessCheckStatus } from \"../../reducer/chess\";\n// other part\nimport { ChessUIBoard } from \"./ChessUIBoard\";\nimport { ChessStatus } from \"../Common/ChessStatus\";\n\nexport const Chess = ({\n  chessProps\n})=>{\n  const { \n    chess,\n    enemyChess,\n    moveStep=Boolean,\n    setMoveStep,\n    setCurrentChess,\n    dispatch\n  } = chessProps;\n  return chess.map((value,key)=>{\n    const roundMoveDone = value.roundMove===0;\n    return <React.Fragment key={key}>\n      {value.debut&&<Sprite\n        interactive={moveStep}\n        buttonMode={true}\n        width={40}\n        height={40}\n        x={value.x*40}\n        y={value.y*40}\n        zIndex={2}\n        tint={roundMoveDone?0x495057:0xffffff}\n        pointerover={()=>{\n          dispatch(MoveSelect({\n            position:{ \n              x:value.x, \n              y:value.y,\n            },\n            step:value.step,\n            changeColor:'0x06d6a0',\n            alphaVal:0.5\n          }));\n        }}\n        pointerout={()=>{\n          dispatch(MoveSelect({\n            position:{ \n              x:value.x, \n              y:value.y,\n            },\n            step:value.step,\n            changeColor:'0x383838',\n            alphaVal:0\n          }));\n        }}\n        pointertap={()=>{\n          setMoveStep(false);\n          dispatch(chessSelected({\n            key:key\n          }));\n          dispatch(MoveSelect({\n            position:{ \n              x:value.x, \n              y:value.y,\n            },\n            step:value.step,\n            changeColor:'0x383838',\n            alphaVal:0\n          }));\n        }}\n        image={loader.resources[`${value.name}-head-default`].data}\n      />}\n      {value.boardStatus&&<ChessUIBoard\n        ChessData={chess}\n        ChessVal={value}\n        ChessKey={key}\n        EnemyChessData={enemyChess}\n        positionX={(value.x*40)+40}\n        positionY={(value.y*40)}\n        setCurrentChess={setCurrentChess}\n        setMoveStep={setMoveStep}\n        dispatch={dispatch}\n      />}\n      {value.checkStatus&&<ChessStatus\n        ChessData={value}\n        ChessKey={key}\n        CheckStatus={chessCheckStatus}\n        setMoveStep={setMoveStep}\n        dispatch={dispatch}\n      />}\n    </React.Fragment>\n  })\n};","import React,{ useState } from 'react';\nimport { fromJS } from 'immutable';\nimport { Graphics, Text } from '@inlet/react-pixi/animated';\nimport { enemyChessSelected, enemyChessCheckStatus } from \"../../reducer/enemyChess\";\nimport * as PIXI from \"pixi.js\";\n\nexport const EnemyChessUIBoard = ({\n  ChessKey,\n  positionX,\n  positionY,\n  setMoveStep,\n  dispatch\n})=> {\n  const specialPosition = {\n    x: 720,\n    y: 535\n  };\n  const [textInforArray, setTextInforArray] = useState(fromJS([{\n      id:1,\n      title:\"狀態\",\n      textColor:['#ffffff', '#ffffff']\n    },{ \n      id:2,\n      title:\"返回\",\n      textColor:['#ffffff', '#ffffff']\n  }]));\n  const CreateText = ()=>{\n    return textInforArray.map((val,key)=>{\n      return <Text\n        key={key}\n        interactive={true}\n        buttonMode={true}\n        text={val.get('title')}\n        x={10}\n        y={5+(25*key)}\n        style={new PIXI.TextStyle({\n          fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 20,\n          fill:val.get('textColor').toJS(),\n        })}\n        pointerover={()=>{\n          setTextInforArray(prev=>\n            prev.setIn([key,'textColor',1],'#9d4edd')\n          );\n        }}\n        pointerout={()=>{\n          setTextInforArray(prev=>\n            prev.setIn([key,'textColor',1],'#ffffff')\n          );\n        }}\n        pointertap={(e)=>{\n          switch (val.get('id')) {\n            case 1:\n              dispatch(enemyChessCheckStatus({\n                key:ChessKey\n              }));\n              dispatch(enemyChessSelected({\n                key:ChessKey\n              }));\n              break;\n            case 2 :\n              setMoveStep(true);\n              dispatch(enemyChessSelected({\n                key:ChessKey\n              }));\n              break;\n            default:\n              return console.log(e.target)\n          };\n        }}\n      />\n    }\n  )};\n  return <Graphics\n    x={positionX!==800?positionX:specialPosition.x}\n    y={(positionY!==560&&positionY!==520)?positionY:specialPosition.y}\n    zIndex={3}\n    draw={g=> {\n      g.clear();\n      g.lineStyle(1,`0xffffff`,1);\n      g.beginFill(`0x22223b`);\n      g.drawRoundedRect(0,0,60,62,8);\n      g.endFill();\n    }}\n  ><CreateText/></Graphics>\n}","import React from 'react';\nimport { Sprite } from '@inlet/react-pixi/animated';\nimport { loader } from '../DataLoader';\n// reducers\nimport { enemyChessSelected, enemyChessCheckStatus } from \"../../reducer/enemyChess\";\n// other part\nimport { EnemyChessUIBoard } from \"./EnemyChessUIBoard\";\nimport { ChessStatus } from \"../Common/ChessStatus\";\n\nexport const EnemyChess = ({\n  enemyChessProps\n})=>{\n  const { \n    enemyChess,\n    moveStep=Boolean,\n    setMoveStep,\n    dispatch\n  } = enemyChessProps;\n  return enemyChess.map((value,key)=>{\n    return <React.Fragment key={key}>\n      {value.debut&&<Sprite\n        interactive={moveStep}\n        buttonMode={true}\n        width={40}\n        height={40}\n        x={value.x*40}\n        y={value.y*40}\n        zIndex={2}\n        pointertap={()=>{\n          setMoveStep(false);\n          dispatch(enemyChessSelected({\n            key:key\n          }));\n        }}\n        image={loader.resources[`${value.name}-head-default`].data}\n      />}\n      {value.boardStatus&&<EnemyChessUIBoard\n        ChessKey={key}\n        positionX={(value.x*40)+40}\n        positionY={(value.y*40)}\n        setMoveStep={setMoveStep}\n        dispatch={dispatch}\n      />}\n      {value.checkStatus&&<ChessStatus\n        ChessData={value}\n        ChessKey={key}\n        CheckStatus={enemyChessCheckStatus}\n        setMoveStep={setMoveStep}\n        dispatch={dispatch}\n      />}\n    </React.Fragment>\n  })\n};\n","import React,{ useState } from 'react';\nimport * as PIXI from \"pixi.js\";\nimport { loader } from '../../DataLoader';\nimport { stageRule } from '../../../constants/stageRule';\nimport { Container, Graphics, Sprite, Text } from '@inlet/react-pixi/animated';\nimport { Spring } from 'react-spring/renderprops';\n// reducers\nimport { chessDone } from '../../../reducer/chess';\nexport const Conversation = ({ props })=> {\n  const { stageStatus, setRoundStart, setOtherTab } = props;\n  const currentConversation = stageRule.getIn([stageStatus,'story']);\n  const currentRecap = stageRule.getIn([stageStatus,'recap']);\n  const [ isRecap, setIsRecap ] = useState(true);\n  const [ currentStory, setCurrentStory ] = useState(0);\n  const checkStageRound = ()=>{\n    switch (stageStatus) {\n      case 'stageOne':\n        return 1;\n      case 'stageTwo':\n        return 2;\n      case 'stageThree':\n        return 3;\n      default:\n        return 1;\n    };\n  };\n  return <Graphics\n    x={400}\n    y={300}\n    zIndex={99}\n    draw={g=> {\n      g.clear();\n      g.beginFill(`0x011627`);\n      g.drawRoundedRect(-300,-125,600,250,5);\n      g.endFill();\n    }}\n  >\n    <Container sortableChildren={true}>\n      <Text\n        text={`【 第 ${checkStageRound()} 話 】`}\n        anchor={0.5}\n        x={0}\n        y={-80}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 20,\n          fill:'#ffffff'\n        })}\n      />\n      {isRecap ?\n        <>\n          <Spring\n            from={{ x:0, y:0, alpha:0 }}\n            to={{ x:0, y:-50, alpha:1 }}\n            config={{ duration: 1000 }}\n          >\n            {props =>\n              <Text\n                text={currentRecap}\n                anchor={{x:0.5}}\n                style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n                  fontSize: 15,\n                  fill:'#ffffff',\n                  lineHeight:24,\n                  breakWords: true,\n                  wordWrap: true,\n                  wordWrapWidth:500\n                })}\n                {...props}\n              />\n            }\n          </Spring>\n          <Sprite\n            width={32}\n            height={22}\n            anchor={0.5}\n            y={85}\n            interactive={true}\n            buttonMode={true}\n            image={loader.resources[`next`].data}\n            pointertap={()=>setIsRecap(false)}\n          />\n        </>:\n        <>\n          <Sprite\n            width={85}\n            height={85}\n            x={-250}\n            y={0}\n            anchor={{y:0.5}}\n            image={loader.resources[`${currentConversation.getIn([currentStory,'character'])}`].data}\n          />\n          <Text\n            text={currentConversation.getIn([currentStory,'name'])}\n            anchor={{y:0.5}}\n            x={-250}\n            y={65}\n            style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n              fontSize: 16,\n              fill:['#ffffff', currentConversation.getIn([currentStory,'color'])],\n            })}\n          />\n          <Spring\n            from={{ x:-140, y: 25, alpha:0 }}\n            to={{ x:-140, y:0, alpha:1 }}\n            config={{ duration: 250 }}\n            reset={true}\n          >\n            {props =>\n              <Text\n                text={currentConversation.getIn([currentStory,'content'])}\n                anchor={{y:0.5}}\n                style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n                  fontSize: 16,\n                  fill:'#ffffff',\n                  breakWords: true,\n                  wordWrap: true,\n                  wordWrapWidth:400\n                })}\n                {...props}\n              />\n            }\n          </Spring>\n          <Sprite\n            width={32}\n            height={22}\n            anchor={0.5}\n            x={245}\n            y={85}\n            interactive={true}\n            buttonMode={true}\n            image={loader.resources[`next`].data}\n            pointertap={()=>{\n              const converLength = currentConversation.size-1;\n              if(currentStory<converLength){\n                setCurrentStory(prev=>prev+=1);\n              }else {\n                setRoundStart(true);\n                setOtherTab(true);\n              };    \n            }}\n          />\n        </>\n      }\n    </Container>\n  </Graphics>\n};\nexport const RoundEndConversation = ({ props })=> {\n  const { stageStatus, currentBGM, \n    setFadeBGM, setRoundStart, setStageStatus, setRoundEnd, dispatch } = props;\n  const currentConversation = stageRule.getIn([stageStatus,'endStory']);\n  const [ currentEndStory, setCurrentEndStory ] = useState(0);\n  return <Graphics\n    x={400}\n    y={300}\n    zIndex={99}\n    draw={g=> {\n      g.clear();\n      g.beginFill(`0x011627`);\n      g.drawRoundedRect(-300,-125,600,250,5);\n      g.endFill();\n    }}\n  >\n    <Container sortableChildren={true}>\n      <Sprite\n        width={85}\n        height={85}\n        x={-250}\n        y={-20}\n        anchor={{y:0.5}}\n        image={loader.resources[`${currentConversation.getIn([currentEndStory,'character'])}`].data}\n      />\n      <Text\n        text={currentConversation.getIn([currentEndStory,'name'])}\n        anchor={{y:0.5}}\n        x={-250}\n        y={45}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 16,\n          fill:['#ffffff', currentConversation.getIn([currentEndStory,'color'])],\n        })}\n      />\n      <Spring\n        from={{ x:-140, y: 5, alpha:0 }}\n        to={{ x:-140, y:-20, alpha:1 }}\n        config={{ duration: 250 }}\n        reset={true}\n      >\n        {props =>\n          <Text\n            text={currentConversation.getIn([currentEndStory,'content'])}\n            anchor={{y:0.5}}\n            style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n              fontSize: 16,\n              fill:'#ffffff',\n              breakWords: true,\n              wordWrap: true,\n              wordWrapWidth:400\n            })}\n            {...props}\n          />\n        }\n      </Spring>\n      {!(currentEndStory<(currentConversation.size-1))&&<Text\n        text={`下一話`}\n        anchor={{y:0.5}}\n        x={160}\n        y={85}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 16,\n          fill:['#ffffff', '#ffffff'],\n        })}\n      />}\n      <Sprite\n        width={32}\n        height={22}\n        anchor={0.5}\n        x={245}\n        y={85}\n        interactive={true}\n        buttonMode={true}\n        image={loader.resources[`next`].data}\n        pointertap={()=>{\n          const converLength = currentConversation.size-1;\n          if(currentEndStory<converLength){\n            setCurrentEndStory(prev=>prev+=1);\n          }else {\n            setRoundEnd(false);\n            setRoundStart(false);\n            setFadeBGM(currentBGM);\n            setStageStatus('stageTwo');\n            dispatch(chessDone());\n          };    \n        }}\n      />\n    </Container>\n  </Graphics>\n};","import React,{ useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Stage, Container, Sprite } from '@inlet/react-pixi/animated';\nimport { Howler } from 'howler';\n// reducers\nimport { stageDebut } from \"../reducer/chess\";\nimport { enemyStageDebut } from \"../reducer/enemyChess\";\n// other part\nimport { GameStart } from './Common/GameStart/Index';\nimport { CreateCheckerboard } from './Common/Checkerboard';\nimport { ConfirmTip } from \"./Common/ConfirmTips\";\nimport { UsualTip } from \"./Common/UsualTip\";\nimport { BattleBoard } from \"./Common/BattleBoard\";\nimport { BattleAnimeShow } from \"./Common/BattleAnimeShow/Index\";\nimport { OtherTab } from \"./Common/OtherTab\";\nimport { EnemyRoundTab } from \"./Common/EnemyRoundTab/Index\";\nimport { Chess } from \"../components/Chess/Chess\";\nimport { EnemyChess } from \"../components/EnemyChess/EnemyChess\";\nimport { Conversation, RoundEndConversation } from \"../components/Common/Conversation/Index\";\n// rule\nimport { stageRule } from \"../constants/stageRule\";\nimport { audioData, loader } from './DataLoader';\nexport const Canvas = ()=> {\n  const [ roundStart, setRoundStart ] = useState(false);\n  const [ stageStart, setStageStart ] = useState(false);\n  const [ roundEnd, setRoundEnd ] = useState(false);\n  const [ stageStatus, setStageStatus ] = useState('stageOne');\n  const [ roundNum, setRoundNum ] = useState(1);\n  const [ otherTab, setOtherTab ] = useState(false);\n  const [ volume, setVolume ] = useState(true);\n  const [ enemyRoundTab, setEnemyRoundTab ] = useState({\n    oder:0,\n    status:false\n  });\n  const [ currentChess, setCurrentChess ] = useState({\n    key:0,\n    type:\"MOVE\"\n  });\n  const [ usualTip, setUsualTip ] = useState({\n    title:``,\n    status:false,\n  });\n  const [ tipStatus, setTipStatus ] = useState({\n    title:``,\n    status:false,\n    position:{\n      x:0,y:0\n    },\n  });\n  const [ battleInfo, setBattleInfo ] = useState({\n    status:false,\n    attacker:{ key:'' },\n    target:{ key:'' }\n  });\n  const [ animeShow, setAnimeShow ] = useState({\n    status:false,\n    type:'',\n    attacker:{ key:'', skill:{}, prevSP:0 },\n    target:{ key:'', isHit:false, prevLife:0 }\n  });\n  const [ moveStep, setMoveStep ] = useState(true);\n  const [ currentBGM, setCurrentBGM ] = useState('');\n  const [ fadeBGM, setFadeBGM ] = useState('');\n  const chessMap = useSelector(state=>state.chessMap);\n  const chess = useSelector(state=>state.chess);\n  const enemyChess = useSelector(state=>state.enemyChess);\n  const dispatch = useDispatch();\n  // bgm\n  useEffect(()=>{\n    switch (currentBGM) {\n      case 'Tanjirou':\n      case 'Nezuko':\n      case 'Zenitsu':\n      case 'Inosuke':\n      case 'Rengoku':\n        audioData.round.fade(0.6,0,1000);\n        if(\n          audioData.KimetsuNoYaiba.playing() &&\n          audioData.KimetsuNoYaiba._volume===1\n        ){ return };\n        audioData.KimetsuNoYaiba.stop();\n        audioData.KimetsuNoYaiba.volume(1);\n        audioData.KimetsuNoYaiba.play();\n        break;\n      case 'Teoni':\n      case 'Hakuji':\n      case 'Nomanooni':\n        audioData.round.fade(0.6,0,1000);\n        if(\n          audioData.KimetsuNoYaibaEnemy.playing() &&\n          audioData.KimetsuNoYaibaEnemy._volume===1\n        ){ return };\n        audioData.KimetsuNoYaibaEnemy.stop();\n        audioData.KimetsuNoYaibaEnemy.volume(1);\n        audioData.KimetsuNoYaibaEnemy.play();\n        break;\n      case 'userRounds':\n      case 'enemyRounds':\n        audioData.round.stop();\n        audioData.round.volume(0.6);\n        audioData.round.play();\n        break;\n      default:\n        break;\n    };\n  },[ currentBGM ]);\n  useEffect(()=>{\n    switch (fadeBGM){\n      case 'Tanjirou':\n      case 'Nezuko':\n      case 'Zenitsu':\n      case 'Inosuke':\n      case 'Rengoku':\n        audioData.KimetsuNoYaiba.fade(1,0,1000);\n        setCurrentBGM('enemyRounds');\n        break;\n      case 'Teoni':\n      case 'Hakuji':\n      case 'Nomanooni':\n        audioData.KimetsuNoYaibaEnemy.fade(1,0,1000);\n        setCurrentBGM('userRounds');\n        break;\n      default:\n        break;\n    };\n  },[ fadeBGM, stageStatus ]);\n  // debut\n  useEffect(()=>{\n    if(roundStart){\n      dispatch(stageDebut({ \n        isDebutChess:stageRule.getIn([stageStatus,'debutChess'])\n      }));\n      dispatch(enemyStageDebut({ \n        isDebutChess:stageRule.getIn([stageStatus,'debutEnemyChess'])\n      }));\n    };\n  },[ dispatch, roundStart, stageStatus ]);\n  return <Stage\n    width={800}\n    height={600}\n    options={{\n      autoDensity: true, \n      antialias: true,\n      backgroundColor:0x01262a\n    }}>\n    <Container sortableChildren={true}>\n      {roundStart&&<Sprite\n        width={30}\n        height={30}\n        anchor={0.5} \n        x={760}\n        y={40}\n        zIndex={99}\n        interactive={moveStep}\n        buttonMode={true}\n        image={loader.resources[`otherIcon`].data}\n        pointertap={()=>{\n          setOtherTab(true);\n          setMoveStep(false);\n        }}\n      />}\n      <Sprite\n        width={30}\n        height={30}\n        anchor={0.5} \n        x={40}\n        y={40}\n        zIndex={99}\n        interactive={!animeShow.status}\n        buttonMode={true}\n        image={loader.resources[volume?`volumeIcon`:`muteIcon`].data}\n        pointertap={()=>{\n          setVolume(prev=>!prev);\n          volume ? Howler.volume(0): Howler.volume(1);\n        }}\n      />\n      <Sprite\n        width={800}\n        height={600}\n        zIndex={1}\n        image={loader.resources[`${stageStatus}-main-BG`].data}\n      />\n      <CreateCheckerboard reduxProps={{ \n        chess,\n        enemyChess,\n        chessMap,\n        currentChess,\n        dispatch,\n        setTipStatus,\n        setMoveStep,\n        setBattleInfo\n      }}/>\n      <Chess chessProps={{\n        chess,\n        enemyChess,\n        moveStep,\n        setMoveStep,\n        setCurrentChess,\n        dispatch\n      }}/>\n      <EnemyChess enemyChessProps={{\n        enemyChess,\n        moveStep,\n        setMoveStep,\n        dispatch\n      }}/>\n    </Container>\n    {otherTab&&\n      <OtherTab\n        props={{\n          stageStatus,\n          roundNum,\n          setMoveStep,\n          setOtherTab,\n          setTipStatus,\n          setCurrentChess\n        }}\n      />}\n    {tipStatus.status&&\n      <ConfirmTip \n        props={{\n          chess,\n          currentChess,\n          tipStatus,\n          currentBGM,\n          dispatch,\n          setMoveStep,\n          setTipStatus,\n          setOtherTab,\n          setRoundNum,\n          setUsualTip,\n          setFadeBGM\n        }}\n      />}\n    {usualTip.status&&\n      <UsualTip\n        props={{\n          stageStatus,\n          chess,\n          currentChess,\n          enemyChess,\n          usualTip,\n          currentBGM,\n          animeShow,\n          setMoveStep,\n          setUsualTip,\n          setCurrentChess,\n          setFadeBGM,\n          setEnemyRoundTab,\n          setRoundEnd\n        }}\n      />}\n    {battleInfo.status&&\n      <BattleBoard\n        props={{\n          battleInfo,\n          setMoveStep,\n          setBattleInfo,\n          setAnimeShow,\n          setCurrentBGM,\n          dispatch\n        }}\n      />}\n    {animeShow.status&&\n      <BattleAnimeShow \n        props={{\n          stageStatus,\n          animeShow,\n          chess,\n          enemyChess,\n          enemyRoundTab,\n          setMoveStep,\n          setAnimeShow,\n          setUsualTip,\n          setCurrentChess,\n          setEnemyRoundTab,\n          dispatch\n        }}\n      />}\n    {enemyRoundTab.status&&\n      <EnemyRoundTab\n        props={{\n          enemyRoundTab,\n          chess,\n          enemyChess,\n          setEnemyRoundTab,\n          setAnimeShow,\n          setCurrentChess,\n          setCurrentBGM,\n          dispatch\n        }}\n      />}\n    {(stageStart&&!roundStart)&&\n      <Conversation\n        props={{\n          stageStatus,\n          setRoundStart,\n          setOtherTab\n        }}\n      />}\n    {roundEnd&&<RoundEndConversation \n      props={{\n        stageStatus,\n        currentBGM,\n        setFadeBGM,\n        setRoundStart,\n        setStageStatus,\n        setRoundEnd,\n        dispatch\n      }}\n    />}\n    {!stageStart&&\n      <GameStart \n        props={{\n          setStageStart,\n          setCurrentBGM\n        }}\n      />}\n  </Stage>\n};","import React, { useState, useEffect } from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport device from \"current-device\";\nimport { Canvas } from './Canvas';\nimport { audioData, loader } from './DataLoader';\nconst isDesktop = device.desktop();\nconst GlobalStyle = createGlobalStyle`\n  body { background:#1d2430; }\n`;\nconst StyledApp = styled.div`\n  position: relative;\n  display:flex;\n  align-items:center;\n  justify-content:center;\n  width:100%;\n  height:100vh;\n  .loading {\n    color: #fff;\n    font-size:24px;\n  }\n  canvas {\n    width:${({ isDesktop })=>!isDesktop&&`\n      75% !important\n    `};\n    height:${({ isDesktop })=>!isDesktop&&`\n      100% !important\n    `};\n  }\n  .mobile-cover {\n    @keyframes trun {\n      0% { transform: translate(-50%,-50%)rotate(0deg) }\n      75% { transform: translate(0%,-50%)rotate(90deg) }\n      100% { transform: translate(0%,-50%)rotate(90deg) }\n    }\n    position: fixed;\n    width:100%;\n    height:100vh;\n    z-index:99;\n    background-color:#000;\n    img { \n      position: absolute;\n      transform:translate(-50%,-50%);\n      top:40%;\n      left:50%;\n      width:15%;\n      max-width:75px;\n      animation:trun 2s infinite;\n    }\n    .subtitle {\n      position: absolute;\n      transform:translate(-50%,-50%);\n      top:50%;\n      left:50%;\n      color:#f90;\n      font-size:18px;\n    }\n  }\n`;\nexport const App = ()=> {\n  const [ dataIsDone, setDataIsDone ] = useState(false);\n  const [ gameStart, setGameStart ] = useState(false);\n  const [ mobileResize, setMobileResize ] = useState((window.innerHeight > window.innerWidth));\n  const [ progress, setProgress ] = useState(0);\n  const [ mp3load, setMp3load ] = useState({\n    open:false,\n    KimetsuNoYaiba:false,\n  });\n  // mp3 load\n  audioData.KimetsuNoYaiba.on('load', function(){\n    setMp3load(prev=>{return{...prev,KimetsuNoYaiba:true}});\n  });\n  audioData.open.on('load', function(){\n    setMp3load(prev=>{return{...prev,open:true}});\n  });\n  useEffect(()=>{\n    loader.onProgress.add((loader)=>{\n      setProgress(Math.floor(loader.progress));\n    });\n    loader.onComplete.add((loader,resources)=>{\n      setProgress(100);\n      setDataIsDone(true);\n    });\n  });\n  useEffect(()=>{\n    const handleResize = function(){\n      const width = window.innerWidth;\n      const height = window.innerHeight;\n      setMobileResize(height > width);\n    };\n    window.addEventListener('resize',handleResize);\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  },[]);\n  useEffect(()=>{\n    const state = \n      mp3load.KimetsuNoYaiba&&\n      mp3load.open&&\n      dataIsDone;\n    if(state){\n      setGameStart(true);\n    }; \n  },[dataIsDone, mp3load]);\n  return <StyledApp isDesktop={isDesktop}>\n    <GlobalStyle/>\n    {gameStart?<Canvas/>:\n      <span className=\"loading\">\n        {dataIsDone ? `讀取音訊中...` :\n        `Loading ${progress}%..`}\n      </span>}\n    {(mobileResize&&!isDesktop) &&\n      <div className=\"mobile-cover\">\n        <img alt=''src={loader.resources[`trun`].url}/>\n        <div className=\"subtitle\">請橫放裝置</div>\n      </div>}\n  </StyledApp>\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, combineReducers } from 'redux';\nimport chess from './chess';\nimport chessMap from './map';\nimport enemyChess from './enemyChess';\nconst rootReducer = combineReducers({\n  chess,\n  chessMap,\n  enemyChess\n});\nexport const store = createStore(rootReducer);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './reducer/index';\n\nReactDOM.render(<Provider store={store}><App /></Provider>,document.getElementById('root'));\nreportWebVitals();\n"],"sourceRoot":""}