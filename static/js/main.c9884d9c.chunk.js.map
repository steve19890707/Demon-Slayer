{"version":3,"sources":["reducer/chess.js","reducer/enemyChess.js","components/DataLoader.js","components/Common/GameStart/Index.js","reducer/map.js","components/Common/Checkerboard.js","components/Common/ConfirmTips.js","constants/stageRule.js","components/Common/UsualTip.js","components/Common/ProbabilityCount.js","components/Common/BattleBoard.js","components/Common/BattleAnimeShow/AinmeShowBG.js","components/Common/BattleAnimeShow/TopBar.js","constants/lines.js","components/Common/BattleAnimeShow/BottomBar.js","constants/SkillShowProtoType.js","constants/ChessSkillShow/TanjirouSkill/steps.js","constants/ChessSkillShow/TanjirouSkill/ShowType.js","constants/ChessSkillShow/TanjirouSkill/Index.js","constants/ChessSkillShow/Nezuko/steps.js","constants/ChessSkillShow/Nezuko/ShowType.js","constants/ChessSkillShow/Nezuko/Index.js","constants/ChessSkillShow/Zenitsu/steps.js","constants/ChessSkillShow/Zenitsu/ShowType.js","constants/ChessSkillShow/Zenitsu/Index.js","constants/ChessSkillShow/Index.js","constants/EnemyChessSkillShow/TeoniSkill/steps.js","constants/EnemyChessSkillShow/TeoniSkill/ShowType.js","constants/EnemyChessSkillShow/TeoniSkill/Index.js","constants/EnemyChessSkillShow/Index.js","components/Common/BattleAnimeShow/Index.js","components/Common/OtherTab.js","components/Common/EnemyRoundTab/EnemyList.js","components/Common/EnemyRoundTab/ChessList.js","components/Common/EnemyRoundTab/Information.js","components/Common/EnemyRoundTab/Index.js","components/Chess/ChessUIBoard.js","components/Common/ChessStatus.js","components/Chess/Chess.js","components/EnemyChess/EnemyChessUIBoard.js","components/EnemyChess/EnemyChess.js","components/Common/Conversation/Index.js","components/Canvas.js","components/App.js","reportWebVitals.js","reducer/index.js","index.js"],"names":["basicCommon","x","y","checkStatus","boardStatus","debut","roundMove","chess","createSlice","name","initialState","cn","id","step","attack","hp","sp","dodge","fullValue","skill","atk","hitfix","reducers","stageDebut","state","actions","isDebutChess","payload","map","value","key","v","get","chessMove","changeX","changeY","chessSelected","chessCheckStatus","chessDefense","damage","chessAttackResult","lessSp","chessDead","chessMoved","chessRoundRest","i","length","roundAttack","enemyChess","enemyStageDebut","enemyChessSelected","enemyChessCheckStatus","enemyChessDefense","enemyChessAttackResult","enemyChessDead","hostname","window","location","loader","PIXI","audioData","open","Howl","src","preload","loop","autoplay","round","KimetsuNoYaiba","KimetsuNoYaibaEnemy","videos","Tanjirou","skill2","from","skill3","skill4","Zenitsu","Object","keys","baseTexture","resource","autoPlay","muted","closeAutoPlay","add","load","Logo","logoWidth","startBtn","setLogoWidth","useTick","delta","prev","Math","floor","anchor","width","height","image","resources","data","GameStart","props","setStageStart","setCurrentBGM","useState","start","setStart","setStartBtn","useEffect","sortableChildren","interactive","buttonMode","pointertap","fade","zIndex","draw","g","clear","beginFill","drawRoundedRect","endFill","play","alpha","text","style","fontFamily","fontSize","fill","mapLimit","createInitialState","method","list","push","createStraightLine","traverse","color","isInteractive","chessMap","MoveSelect","action","position","changeColor","alphaVal","GetMove","currentChessPositions","GetAttack","texture","WHITE","CreateCheckerboard","reduxProps","currentChess","dispatch","setTipStatus","setMoveStep","setBattleInfo","Fragment","k","tint","type","title","status","isMatch","checkMatchAttackPosition","targetData","item","getCurrentEnemy","attacker","target","acttack","ConfirmTip","tipStatus","currentBGM","setOtherTab","setRoundNum","setUsualTip","setFadeBGM","lineStyle","stageRule","fromJS","stageOne","debutChess","debutEnemyChess","ruleText","win","lose","recap","story","character","content","isWin","enemyList","totalLife","isLose","chessList","stageTwo","UsualTip","stageStatus","usualTip","setCurrentChess","setEnemyRoundTab","setRoundStart","setStageStatus","textColor","setTextColor","checkWin","getIn","checkLose","reload","oder","ProbabilityCount","attackerHit","targetDodge","random","BattleBoard","battleInfo","setAnimeShow","atkSelectd","setAtkSelectd","CreateAttackerInfo","pX","pY","skillCanUse","fontWeight","CreateTargetInfo","ForecastInfo","isHit","prevSP","prevLife","AnimeShowBG","BGstatus","BGprop","SkBGprop","setSkBGpops","setBGpops","to","toX","config","duration","onRest","TopBar","right","left","showType","targetHp","attackerSp","hpBarCount","full","Number","spBarCount","lines","default","def","dead","BottomBar","linesStatus","showCharacter","randomSize","size","SkillShowProtoType","skillName","attackerName","targetLife","resultLife","resultSp","setBGstatus","setAnimeIsDone","setTargetHp","setAttackerSp","setLinesStatus","setShowSkill","defXPostion","steps","ShowType","mass","friction","tension","setPosition","defence","timeout","clearTimeout","isHitStep","setTimeout","isDead","next","seconds","isDodge","isDeadStep2","end","skill2step1","skill2step2","run","number","TweenMax","onUpdate","numeral","format","source","callback","skill2step3","skill3step1","skill3step2","skill3step3","skill4step1","skill4step2","skill4step3","step1","step2","step3","step4","TanjirouSkill","NezukoSkill","ZenitsuSkill","ChessSkillShow","defaultprops","TeoniSkill","EnemyChessSkillShow","BattleAnimeShow","animeShow","CreateContent","animeIsDone","showSkill","fetchChessType","CreateSkillSprite","video","videoDom","onended","currentTime","clearAllTimeouts","OtherTab","roundNum","checkStageRound","EnemyList","enemyRandomSkill","ChessList","defChess","setDefChess","distance","Information","atkEnemy","EnemyRoundTab","enemyRoundTab","filter","enemySkill","enemySp","getCurrentChessKey","getKey","find","ChessUIBoard","ChessData","ChessVal","ChessKey","EnemyChessData","positionX","positionY","specialPosition","forMoveArray","forAttackArray","textInforArray","setTextInforArray","compareUsed","chessX","chessY","checkType","isUnused","val","moved","CreateText","noop","isAttack","chessAtk","isDebutEnemy","limitPosition","positionRange","getaddX","getaddY","getlessX","getlessY","compareAttack","fetchInteractive","toJS","pointerover","setIn","pointerout","e","console","log","ChessStatus","CheckStatus","CreateSkillList","Chess","chessProps","moveStep","Boolean","roundMoveDone","EnemyChessUIBoard","EnemyChess","enemyChessProps","Conversation","currentConversation","currentRecap","isRecap","setIsRecap","currentStory","setCurrentStory","lineHeight","breakWords","wordWrap","wordWrapWidth","reset","converLength","Canvas","roundStart","stageStart","otherTab","volume","setVolume","fadeBGM","useSelector","useDispatch","stop","options","autoDensity","antialias","backgroundColor","Howler","isDesktop","device","desktop","GlobalStyle","createGlobalStyle","StyledApp","styled","div","App","dataIsDone","setDataIsDone","gameStart","setGameStart","innerHeight","innerWidth","mobileResize","setMobileResize","progress","setProgress","mp3load","setMp3load","on","onProgress","onComplete","handleResize","addEventListener","removeEventListener","className","alt","url","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c9884d9c.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nconst basicCommon = {\r\n  x:0,\r\n  y:0,\r\n  checkStatus:false,\r\n  boardStatus:false,\r\n  debut:false,\r\n  roundMove:1\r\n};\r\nconst chess = createSlice({\r\n  name:'chess',\r\n  initialState:[\r\n    {\r\n      name:'Tanjirou',\r\n      cn:'竈門 炭治郎',\r\n      id:1,\r\n      step:3,\r\n      attack:2,\r\n      hp:1500,\r\n      sp:125,\r\n      dodge:80,\r\n      fullValue:{\r\n        hp:1500,\r\n        sp:125\r\n      },\r\n      skill:[{ \r\n        name:'斬擊',\r\n        atk:200,\r\n        sp:0,\r\n        hitfix:0\r\n      },{ \r\n        name:'叄之型―流流舞',\r\n        atk:350,\r\n        sp:15,\r\n        hitfix:10\r\n      },{ \r\n        name:'捌之型―滝壺',\r\n        atk:500,\r\n        sp:25,\r\n        hitfix:5\r\n      },{\r\n        name:'拾之型―生生流轉',\r\n        atk:850,\r\n        sp:50,\r\n        hitfix:20\r\n      }],\r\n      ...basicCommon\r\n    },{\r\n      name:'Nezuko',\r\n      cn:'竈門 禰豆子',\r\n      id:2,\r\n      step:2,\r\n      attack:1,\r\n      hp:2200,\r\n      sp:200,\r\n      dodge:80,\r\n      fullValue:{\r\n        hp:2200,\r\n        sp:200\r\n      },\r\n      skill:[{ \r\n        name:'爪擊',\r\n        atk:150,\r\n        sp:0,\r\n        hitfix:0\r\n      },{ \r\n        name:'踢擊',\r\n        atk:250,\r\n        sp:10,\r\n        hitfix:15\r\n      },{ \r\n        name:'血鬼術',\r\n        atk:1000,\r\n        sp:80,\r\n        hitfix:35\r\n      }],\r\n      ...basicCommon\r\n    },{\r\n      name:'Zenitsu',\r\n      cn:'我妻善逸',\r\n      id:3,\r\n      step:3,\r\n      attack:2,\r\n      hp:1250,\r\n      sp:100,\r\n      dodge:90,\r\n      fullValue:{\r\n        hp:1250,\r\n        sp:100\r\n      },\r\n      skill:[{ \r\n        name:'斬擊',\r\n        atk:200,\r\n        sp:0,\r\n        hitfix:0\r\n      },{ \r\n        name:'壹之型―霹靂一閃',\r\n        atk:400,\r\n        sp:15,\r\n        hitfix:15\r\n      },{\r\n        name:'壹之型―霹靂一閃―六連',\r\n        atk:1000,\r\n        sp:70,\r\n        hitfix:30\r\n      }],\r\n      ...basicCommon\r\n    },{\r\n      name:'Inosuke',\r\n      cn:'嘴平 伊之助',\r\n      id:4,\r\n      step:4,\r\n      attack:3,\r\n      hp:1800,\r\n      sp:80,\r\n      dodge:40,\r\n      fullValue:{\r\n        hp:1800,\r\n        sp:80\r\n      },\r\n      skill:[{ \r\n        name:'斬擊',\r\n        atk:50,\r\n        sp:0,\r\n        hitfix:0\r\n      },{ \r\n        name:'壹之牙―穿透刺射',\r\n        atk:120,\r\n        sp:2,\r\n        hitfix:0\r\n      },{ \r\n        name:'貳之牙―利刃對劈',\r\n        atk:200,\r\n        sp:5,\r\n        hitfix:0\r\n      },{\r\n        name:'叄之牙―獠牙撕扯',\r\n        atk:400,\r\n        sp:8,\r\n        hitfix:0\r\n      }],\r\n      ...basicCommon\r\n    }\r\n  ],\r\n  reducers:{\r\n    stageDebut:(state, actions)=> {\r\n      const { isDebutChess } = actions.payload;\r\n      state.map((value,key)=>{\r\n        return isDebutChess.map(v=>{\r\n          if(value.name===v.get('name')){\r\n            return (\r\n              state[key].roundMove = 1,\r\n              state[key].debut = true,\r\n              state[key].x = v.get('x'),\r\n              state[key].y = v.get('y')\r\n            );\r\n          }else return null;\r\n        })\r\n      })\r\n    },\r\n    chessMove: (state, actions)=>{\r\n      const { key, changeX, changeY } = actions.payload;\r\n      state[key].x = changeX;\r\n      state[key].y = changeY;\r\n    },\r\n    chessSelected: (state, actions)=>{\r\n      const { key } = actions.payload;\r\n      state[key].boardStatus = !state[key].boardStatus;\r\n    },\r\n    chessCheckStatus: (state, actions)=> {\r\n      const { key } = actions.payload;\r\n      state[key].checkStatus = !state[key].checkStatus;\r\n    },\r\n    chessDefense: (state, actions)=>{\r\n      const { key, damage } = actions.payload;\r\n      state[key].hp -= damage;\r\n    },\r\n    chessAttackResult: (state, actions)=> {\r\n      const { key, lessSp } = actions.payload;\r\n      state[key].sp -= lessSp;\r\n    },\r\n    chessDead: (state, actions)=> {\r\n      const { key } = actions.payload;\r\n      state[key].debut = false;\r\n      state[key].hp = state[key].fullValue.hp;\r\n      state[key].sp = state[key].fullValue.sp;\r\n    },\r\n    chessMoved: (state, actions)=>{\r\n      const { key } = actions.payload;\r\n      state[key].roundMove -= 1;\r\n    },\r\n    chessRoundRest:(state)=>{\r\n      for(let i=0;i<state.length;i++){\r\n        state[i].roundMove = 1;\r\n      };\r\n    },\r\n  }\r\n});\r\nexport default chess.reducer;\r\nexport const { \r\n  stageDebut, chessMove, chessSelected, chessCheckStatus, chessAttackResult, \r\n  chessDead, chessMoved, chessDefense, chessRoundRest\r\n} = chess.actions;","import { createSlice } from '@reduxjs/toolkit';\r\nconst basicCommon = {\r\n  x:0,\r\n  y:0,\r\n  checkStatus:false,\r\n  boardStatus:false,\r\n  debut:false,\r\n  roundAttack:false,\r\n};\r\nconst enemyChess = createSlice({\r\n  name:'enemyChess',\r\n  initialState:[\r\n    {\r\n      name:'Teoni',\r\n      cn:'手鬼',\r\n      id:1,\r\n      hp:2000,\r\n      sp:100,\r\n      dodge:25,\r\n      fullValue:{\r\n        hp:2000,\r\n        sp:100\r\n      },\r\n      skill:[{ \r\n        name:'胡亂毆打',\r\n        atk:200,\r\n        sp:0,\r\n        hitfix:10\r\n      },{ \r\n        name:'你是第十四個',\r\n        atk:500,\r\n        sp:25,\r\n        hitfix:20\r\n      }],\r\n      ...basicCommon\r\n    },{\r\n      name:'Nomanooni',\r\n      cn:'沼鬼',\r\n      id:2,\r\n      hp:1500,\r\n      sp:200,\r\n      dodge:30,\r\n      fullValue:{\r\n        hp:1500,\r\n        sp:200\r\n      },\r\n      skill:[{ \r\n        name:'爪擊',\r\n        atk:70,\r\n        sp:0,\r\n        hitfix:15\r\n      },{ \r\n        name:'分身攻擊',\r\n        atk:600,\r\n        sp:15,\r\n        hitfix:30\r\n      }],\r\n      ...basicCommon\r\n    }\r\n  ],\r\n  reducers:{\r\n    enemyStageDebut:(state, actions)=> {\r\n      const { isDebutChess } = actions.payload;\r\n      state.map((value,key)=>{\r\n        return isDebutChess.map(v=>{\r\n          if(value.name===v.get('name')){\r\n            return (\r\n              state[key].debut = true,\r\n              state[key].x = v.get('x'),\r\n              state[key].y = v.get('y')\r\n            );\r\n          }else return null;\r\n        })\r\n      })\r\n    },\r\n    enemyChessSelected: (state, actions)=>{\r\n      const { key } = actions.payload;\r\n      state[key].boardStatus = !state[key].boardStatus;\r\n    },\r\n    enemyChessCheckStatus: (state, actions)=> {\r\n      const { key } = actions.payload;\r\n      state[key].checkStatus = !state[key].checkStatus;\r\n    },\r\n    enemyChessDefense: (state, actions)=> {\r\n      const { key, damage } = actions.payload;\r\n      state[key].hp -= damage;\r\n    },\r\n    enemyChessAttackResult: (state, actions)=> {\r\n      const { key, lessSp } = actions.payload;\r\n      state[key].sp -= lessSp;\r\n    },\r\n    enemyChessDead: (state, actions)=> {\r\n      const { key } = actions.payload;\r\n      state[key].debut = false;\r\n      state[key].hp = state[key].fullValue.hp;\r\n      state[key].sp = state[key].fullValue.sp;\r\n    },\r\n  }\r\n});\r\nexport default enemyChess.reducer;\r\nexport const { \r\n  enemyStageDebut, enemyChessSelected, enemyChessCheckStatus, enemyChessDefense, \r\n  enemyChessAttackResult, enemyChessDead \r\n} = enemyChess.actions;","import * as PIXI from \"pixi.js\";\r\nimport { Howl } from 'howler';\r\nconst hostname = window.location.hostname==='localhost'?'./Demon-Slayer/':'./';\r\nexport const loader = new PIXI.Loader();\r\nexport const audioData = {\r\n  open: new Howl({\r\n    src: [`${hostname}audio/bgm-open.mp3`],\r\n    preload: 'metadata',\r\n    loop: true,\r\n    autoplay: false\r\n  }),\r\n  round: new Howl({\r\n    src: [`${hostname}audio/bgm-round.mp3`],\r\n    preload: 'metadata',\r\n    loop: true\r\n  }),\r\n  KimetsuNoYaiba: new Howl({\r\n    src: [`${hostname}audio/bgm-KimetsuNoYaiba.mp3`],\r\n    preload: 'metadata',\r\n    loop: true\r\n  }),\r\n  KimetsuNoYaibaEnemy: new Howl({\r\n    src: [`${hostname}audio/bgm-KimetsuNoYaibaEnemy.mp3`],\r\n    preload: 'metadata',\r\n    loop: true\r\n  }),\r\n};\r\nexport const videos = {\r\n  Tanjirou: {\r\n    skill2: PIXI.Texture.from(`${hostname}video/Tanjirou/skill2.mp4`),\r\n    skill3: PIXI.Texture.from(`${hostname}video/Tanjirou/skill3.mp4`),\r\n    skill4: PIXI.Texture.from(`${hostname}video/Tanjirou/skill4.mp4`)\r\n  },\r\n  Zenitsu: {\r\n    skill2: PIXI.Texture.from(`${hostname}video/Zenitsu/skill2.mp4`),\r\n    skill3: PIXI.Texture.from(`${hostname}video/Zenitsu/skill3.mp4`)\r\n  }\r\n};\r\n// closeAutoPlay\r\nconst closeAutoPlay = ()=>{\r\n  const Tanjirou = Object.keys(videos.Tanjirou);\r\n  for(let i=0; i<Tanjirou.length; i++){\r\n    videos.Tanjirou[`skill${i+2}`].baseTexture.resource.autoPlay= false;\r\n    videos.Tanjirou[`skill${i+2}`].baseTexture.resource.muted= true;\r\n  };\r\n  const Zenitsu = Object.keys(videos.Zenitsu);\r\n  for(let i=0; i<Zenitsu.length; i++){\r\n    videos.Zenitsu[`skill${i+2}`].baseTexture.resource.autoPlay= false;\r\n    videos.Zenitsu[`skill${i+2}`].baseTexture.resource.muted= true;\r\n  };\r\n};\r\ncloseAutoPlay();\r\n\r\nloader\r\n  .add('Tanjirou-head-default',`${hostname}imgs/Tanjirou/head-default.png`)\r\n  .add('Tanjirou-talk-default',`${hostname}imgs/Tanjirou/talk-default.jpg`)\r\n  .add('Tanjirou-talk-attack',`${hostname}imgs/Tanjirou/talk-attack.jpg`)\r\n  .add('Tanjirou-talk-def',`${hostname}imgs/Tanjirou/talk-def.jpg`)\r\n  .add('Tanjirou-talk-dodge',`${hostname}imgs/Tanjirou/talk-dodge.jpg`)\r\n  .add('Tanjirou-talk-dead',`${hostname}imgs/Tanjirou/talk-dead.jpg`)\r\n  .add('Tanjirou-fight-typeA',`${hostname}imgs/Tanjirou/fight-typeA.png`)\r\n  .add('Tanjirou-fight-typeB',`${hostname}imgs/Tanjirou/fight-typeB.png`)\r\n  .add('Nezuko-head-default',`${hostname}imgs/Nezuko/head-default.jpg`)\r\n  .add('Nezuko-talk-default',`${hostname}imgs/Nezuko/talk-default.jpg`)\r\n  .add('Nezuko-talk-attack',`${hostname}imgs/Nezuko/talk-attack.jpg`)\r\n  .add('Nezuko-talk-def',`${hostname}imgs/Nezuko/talk-def.jpg`)\r\n  .add('Nezuko-talk-dodge',`${hostname}imgs/Nezuko/talk-dodge.jpg`)\r\n  .add('Nezuko-talk-dead',`${hostname}imgs/Nezuko/talk-dead.jpg`)\r\n  .add('Nezuko-fight',`${hostname}imgs/Nezuko/fight.png`)\r\n  .add('Zenitsu-head-default',`${hostname}imgs/Zenitsu/head-default.png`)\r\n  .add('Zenitsu-talk-default',`${hostname}imgs/Zenitsu/talk-default.jpg`)\r\n  .add('Zenitsu-talk-attack',`${hostname}imgs/Zenitsu/talk-attack.jpg`)\r\n  .add('Zenitsu-talk-def',`${hostname}imgs/Zenitsu/talk-def.jpg`)\r\n  .add('Zenitsu-talk-dodge',`${hostname}imgs/Zenitsu/talk-dodge.jpg`)\r\n  .add('Zenitsu-talk-dead',`${hostname}imgs/Zenitsu/talk-dead.jpg`)\r\n  .add('Zenitsu-talk-usual',`${hostname}imgs/Zenitsu/talk-usual.jpg`)\r\n  .add('Zenitsu-talk-fall',`${hostname}imgs/Zenitsu/talk-fall.jpg`)\r\n  .add('Zenitsu-talk-afraid',`${hostname}imgs/Zenitsu/talk-afraid.jpg`)\r\n  .add('Zenitsu-fight',`${hostname}imgs/Zenitsu/fight.png`)\r\n  .add('Inosuke-head-default',`${hostname}imgs/Inosuke/head-default.jpg`)\r\n  .add('Inosuke-fight',`${hostname}imgs/Inosuke/fight.png`)\r\n  .add('Teoni-head-default',`${hostname}imgs/Teoni/head-default.png`)\r\n  .add('Teoni-talk-default',`${hostname}imgs/Teoni/talk-default.jpg`)\r\n  .add('Teoni-talk-attack',`${hostname}imgs/Teoni/talk-attack.jpg`)\r\n  .add('Teoni-talk-def',`${hostname}imgs/Teoni/talk-def.jpg`)\r\n  .add('Teoni-talk-dodge',`${hostname}imgs/Teoni/talk-dodge.jpg`)\r\n  .add('Teoni-talk-dead',`${hostname}imgs/Teoni/talk-dead.jpg`)\r\n  .add('Teoni-fight',`${hostname}imgs/Teoni/fight.png`)\r\n  .add('Nomanooni-head-default',`${hostname}imgs/Nomanooni/head-default.jpg`)\r\n  .add('Nomanooni-fight',`${hostname}imgs/Nomanooni/fight.png`)\r\n  .add('stageOne-BG',`${hostname}imgs/background/stage1-background.png`)\r\n  .add('stageOne-main-BG',`${hostname}imgs/background/stage1-main-background.jpg`)\r\n  .add('stageTwo-BG',`${hostname}imgs/background/stage2-background.png`)\r\n  .add('stageTwo-main-BG',`${hostname}imgs/background/stage2-main-background.jpg`)\r\n  .add('logo',`${hostname}imgs/common/logo.png`)\r\n  .add('atkIcon',`${hostname}imgs/common/atk.png`)\r\n  .add('defIcon',`${hostname}imgs/common/def.png`)\r\n  .add('otherIcon',`${hostname}imgs/common/other.png`)\r\n  .add('closeIcon',`${hostname}imgs/common/close.png`)\r\n  .add('muteIcon',`${hostname}imgs/common/mute.png`)\r\n  .add('volumeIcon',`${hostname}imgs/common/volume.png`)\r\n  .add('startBtn',`${hostname}imgs/common/startBtn.png`)\r\n  .add('endBtn',`${hostname}imgs/common/end.png`)\r\n  .add('fightOff',`${hostname}imgs/common/fightOff.png`)\r\n  .add('fightDef',`${hostname}imgs/common/fightDef.png`)\r\n  .add('trun',`${hostname}imgs/common/trun.png`)\r\n  .add('next',`${hostname}imgs/common/next.png`)\r\n  .load();\r\n","import React,{ useState, useEffect } from 'react';\r\nimport * as PIXI from \"pixi.js\";\r\nimport { audioData, loader } from '../../DataLoader';\r\nimport { Container, Text, Graphics, Sprite, useTick } from '@inlet/react-pixi/animated';\r\nconst Logo = ({\r\n  logoWidth=200,\r\n  startBtn,\r\n  setLogoWidth\r\n}) =>{\r\n  let i = 0;\r\n  useTick(delta=>{\r\n    if(!startBtn){\r\n      const add = i += 0.28 * delta;\r\n      setLogoWidth(prev=>{return prev+=Math.floor(add)});\r\n    }else return;\r\n  });\r\n  return <Sprite\r\n    anchor={0.5}\r\n    x={400}\r\n    y={250}\r\n    width={logoWidth}\r\n    height={logoWidth}\r\n    image={loader.resources[`logo`].data}\r\n  />\r\n};\r\nexport const GameStart = ({\r\n  props\r\n})=>{\r\n  const { setStageStart, setCurrentBGM } = props;\r\n  const [ logoWidth, setLogoWidth ] = useState(200);\r\n  const [ start, setStart ] = useState(false);\r\n  const [ startBtn, setStartBtn ] = useState(false);\r\n  useEffect(()=>{\r\n    (logoWidth>=350)&&setStartBtn(true);\r\n  },[logoWidth]);\r\n  return <Container sortableChildren={true}>\r\n    {!start?<>\r\n      <Graphics\r\n        interactive={true}\r\n        buttonMode={true}\r\n        x={0} y={0}\r\n        zIndex={1}\r\n        draw={g=> {\r\n          g.clear();\r\n          g.beginFill(0x0000);\r\n          g.drawRoundedRect(0,0,800,600,0);\r\n          g.endFill();\r\n        }}\r\n        pointertap={()=>{\r\n          audioData.open.play();\r\n          setStart(true);\r\n        }}\r\n        alpha={0.5}\r\n      />\r\n      <Text\r\n        text={`任意點擊`}\r\n        zIndex={2}\r\n        anchor={0.5}\r\n        x={400}\r\n        y={300}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 24,\r\n          fill:'#ffffff',\r\n        })}\r\n      />\r\n    </>:<>\r\n      <Logo\r\n        logoWidth={logoWidth}\r\n        startBtn={startBtn}\r\n        setLogoWidth={setLogoWidth}\r\n      />\r\n      {startBtn&&\r\n        <Sprite\r\n          interactive={true}\r\n          buttonMode={true}\r\n          anchor={0.5}\r\n          x={400}\r\n          y={450}\r\n          width={120}\r\n          height={56}\r\n          image={loader.resources[`startBtn`].data}\r\n          pointertap={()=>{\r\n            audioData.open.fade(1,0,1000)\r\n            setStageStart(true);\r\n            setCurrentBGM('userRounds');\r\n          }}\r\n        />\r\n      }\r\n    </>\r\n  }\r\n  </Container>\r\n}","import { createSlice } from '@reduxjs/toolkit';\r\nconst mapLimit = { x:20, y:15 };\r\nconst createTraverseLine = (traverse=0,color='')=>{\r\n  const list = [];\r\n  for(let i=0;i<mapLimit.x;i++){\r\n    list.push({\r\n      x:i,\r\n      y:traverse,\r\n      color:color,\r\n      alpha:0,\r\n      zIndex:1,\r\n      isInteractive:false\r\n    });\r\n  };\r\n  return list;\r\n};\r\nconst createStraightLine = ( method=()=>{} )=>{\r\n  const list = [];\r\n  for(let i=0;i<mapLimit.y;i++){\r\n    list.push(method(i,'0x383838'));\r\n  };\r\n  return list;\r\n};\r\nconst createInitialState = createStraightLine(createTraverseLine);\r\nconst chessMap = createSlice({\r\n  name:'chessMap',\r\n  initialState: createInitialState,\r\n  reducers:{\r\n    MoveSelect:(state, action)=>{\r\n      const { position, step, changeColor, alphaVal=1} = action.payload;\r\n      for(let i=0;i<(step+1);i++){\r\n        if(position.x+i<=(mapLimit.x-1)){\r\n          state[position.y][position.x+i].color=changeColor;\r\n          state[position.y][position.x+i].isInteractive=false;\r\n          state[position.y][position.x+i].alpha=alphaVal;\r\n          state[position.y][position.x+i].zIndex=1;\r\n        };\r\n        if(position.y+i<=(mapLimit.y-1)){\r\n          state[position.y+i][position.x].color=changeColor;\r\n          state[position.y+i][position.x].isInteractive=false;\r\n          state[position.y+i][position.x].alpha=alphaVal;\r\n          state[position.y+i][position.x].zIndex=1;\r\n        };\r\n        if(position.x-i>=0){\r\n          state[position.y][position.x-i].color=changeColor;\r\n          state[position.y][position.x-i].isInteractive=false;\r\n          state[position.y][position.x-i].alpha=alphaVal;\r\n          state[position.y][position.x-i].zIndex=1;\r\n        };\r\n        if(position.y-i>=0){\r\n          state[position.y-i][position.x].color=changeColor;\r\n          state[position.y-i][position.x].isInteractive=false;\r\n          state[position.y-i][position.x].alpha=alphaVal;\r\n          state[position.y-i][position.x].zIndex=1;\r\n        };\r\n      }\r\n    },\r\n    GetMove:(state, action)=>{\r\n      const { position, step, changeColor, currentChessPositions } = action.payload;\r\n      for(let i=0;i<(step+1);i++){\r\n        if(position.x+i<=(mapLimit.x-1)){\r\n          state[position.y][position.x+i].color=changeColor;\r\n          state[position.y][position.x+i].isInteractive=true;\r\n          state[position.y][position.x+i].alpha=0.5;\r\n          state[position.y][position.x+i].zIndex=1;\r\n        };\r\n        if(position.y+i<=(mapLimit.y-1)){\r\n          state[position.y+i][position.x].color=changeColor;\r\n          state[position.y+i][position.x].isInteractive=true;\r\n          state[position.y+i][position.x].alpha=0.5;\r\n          state[position.y+i][position.x].zIndex=1;\r\n        };\r\n        if(position.x-i>=0){\r\n          state[position.y][position.x-i].color=changeColor;\r\n          state[position.y][position.x-i].isInteractive=true;\r\n          state[position.y][position.x-i].alpha=0.5;\r\n          state[position.y][position.x-i].zIndex=1;\r\n        };\r\n        if(position.y-i>=0){\r\n          state[position.y-i][position.x].color=changeColor;\r\n          state[position.y-i][position.x].isInteractive=true;\r\n          state[position.y-i][position.x].alpha=0.5;\r\n          state[position.y-i][position.x].zIndex=1;\r\n        };\r\n      }\r\n      currentChessPositions.map(v=>{\r\n        return state[v.y][v.x].isInteractive=false;\r\n      });\r\n    },\r\n    GetAttack:(state, action)=>{\r\n      const { position, step, changeColor, currentChessPositions } = action.payload;\r\n      for(let i=0;i<(step+1);i++){\r\n        if(position.x+i<=(mapLimit.x-1)){\r\n          state[position.y][position.x+i].color=changeColor;\r\n          state[position.y][position.x+i].isInteractive=true;\r\n          state[position.y][position.x+i].alpha=0.5;\r\n          state[position.y][position.x+i].zIndex=3;\r\n        };\r\n        if(position.y+i<=(mapLimit.y-1)){\r\n          state[position.y+i][position.x].color=changeColor;\r\n          state[position.y+i][position.x].isInteractive=true;\r\n          state[position.y+i][position.x].alpha=0.5;\r\n          state[position.y+i][position.x].zIndex=3;\r\n        };\r\n        if(position.x-i>=0){\r\n          state[position.y][position.x-i].color=changeColor;\r\n          state[position.y][position.x-i].isInteractive=true;\r\n          state[position.y][position.x-i].alpha=0.5;\r\n          state[position.y][position.x-i].zIndex=3;\r\n        };\r\n        if(position.y-i>=0){\r\n          state[position.y-i][position.x].color=changeColor;\r\n          state[position.y-i][position.x].isInteractive=true;\r\n          state[position.y-i][position.x].alpha=0.5;\r\n          state[position.y-i][position.x].zIndex=3;\r\n        };\r\n      }\r\n      currentChessPositions.map(v=>{\r\n        return (\r\n          state[v.y][v.x].isInteractive=false,\r\n          state[v.y][v.x].zIndex=1\r\n        )\r\n      });\r\n    }\r\n  }\r\n});\r\nexport default chessMap.reducer;\r\nexport const { MoveSelect, GetMove, GetAttack } = chessMap.actions;\r\n","import React, {} from 'react';\r\nimport * as PIXI from \"pixi.js\";\r\nimport { Sprite } from '@inlet/react-pixi/animated';\r\nimport { MoveSelect } from '../../reducer/map';\r\nconst texture = PIXI.Texture.WHITE;\r\nexport const CreateCheckerboard = ({\r\n  reduxProps\r\n})=>{\r\n  const { \r\n    chess, enemyChess, chessMap, currentChess, dispatch, \r\n    setTipStatus, setMoveStep, setBattleInfo\r\n  } = reduxProps;\r\n  const checkMatchAttackPosition = (x,y)=>{\r\n    let isMatch = false;\r\n    enemyChess.map(v=>{\r\n      const checkMatch = v.debut&&(x===v.x)&&(y===v.y);\r\n      if(checkMatch){\r\n        return isMatch=true;\r\n      }else return null;\r\n    });\r\n    return isMatch;\r\n  };\r\n  const getCurrentEnemy = (x,y)=>{\r\n    let item = {};\r\n    enemyChess.map((v,k)=>{\r\n      const checkMatch = v.debut&&(x===v.x)&&(y===v.y);\r\n      if(checkMatch){\r\n        return item={...v,key:k}\r\n      }else return null;\r\n    });\r\n    return item;\r\n  };\r\n  return <React.Fragment>\r\n    {chessMap.map(value=> {\r\n      return value.map((v,k)=>{\r\n        return <Sprite\r\n          interactive={v.isInteractive}\r\n          buttonMode={v.isInteractive}\r\n          zIndex={v.zIndex}\r\n          key={k}\r\n          width={40}\r\n          height={40}\r\n          x={v.x*40}\r\n          y={v.y*40}\r\n          tint={v.color}\r\n          alpha={v.alpha}\r\n          texture={texture}\r\n          pointertap={()=>{\r\n            switch (currentChess.type) {\r\n              case \"MOVE\":\r\n                setTipStatus({\r\n                  title:'確定移動?',\r\n                  status:true,\r\n                  position:{\r\n                    x:v.x, y:v.y\r\n                  }\r\n                });\r\n                dispatch(MoveSelect({\r\n                  position:{ \r\n                    x:chess[currentChess.key].x, \r\n                    y:chess[currentChess.key].y,\r\n                  },\r\n                  step:chess[currentChess.key].step,\r\n                  changeColor:'0x06d6a0',\r\n                  alphaVal:0.5\r\n                }));\r\n                break;\r\n              case \"ATTACK\":\r\n                if(checkMatchAttackPosition(v.x,v.y)){\r\n                  const targetData = getCurrentEnemy(v.x,v.y);\r\n                  setBattleInfo({\r\n                    status:true,\r\n                    attacker:{ \r\n                      key: currentChess.key,\r\n                      ...chess[currentChess.key]\r\n                    },\r\n                    target:{\r\n                      key: targetData.key,\r\n                      ...targetData\r\n                    }\r\n                  });\r\n                  dispatch(MoveSelect({\r\n                    position:{ \r\n                      x:chess[currentChess.key].x, \r\n                      y:chess[currentChess.key].y,\r\n                    },\r\n                    step:chess[currentChess.key].attack,\r\n                    changeColor:'0x383838',\r\n                    alphaVal:0\r\n                  }));\r\n                }else {\r\n                  setMoveStep(true);\r\n                  dispatch(MoveSelect({\r\n                    position:{ \r\n                      x:chess[currentChess.key].x, \r\n                      y:chess[currentChess.key].y,\r\n                    },\r\n                    step:chess[currentChess.key].acttack,\r\n                    changeColor:'0x383838',\r\n                    alphaVal:0\r\n                  }));\r\n                };\r\n                break;\r\n              default:\r\n                return;\r\n            }; \r\n          }}\r\n        />\r\n      });\r\n    })}\r\n  </React.Fragment>\r\n};","import React from 'react';\r\n// import { fromJS } from 'immutable';\r\nimport { Graphics, Text } from '@inlet/react-pixi/animated';\r\nimport { chessMove, chessMoved } from \"../../reducer/chess\";\r\nimport { MoveSelect } from '../../reducer/map';\r\nimport * as PIXI from \"pixi.js\";\r\n\r\nexport const ConfirmTip = ({\r\n  props,\r\n})=> {\r\n  const { \r\n    chess,\r\n    currentChess,\r\n    tipStatus,\r\n    currentBGM,\r\n    dispatch,\r\n    setMoveStep, \r\n    setTipStatus,\r\n    setOtherTab,\r\n    setRoundNum,\r\n    setUsualTip,\r\n    setFadeBGM\r\n  } = props;\r\n  return <Graphics\r\n    x={400}\r\n    y={300}\r\n    draw={g=> {\r\n      g.clear();\r\n      g.lineStyle(1,`0xffffff`,1);\r\n      g.beginFill(`0x22223b`);\r\n      g.drawRoundedRect(-90,-50,180,100,8);\r\n      g.endFill();\r\n    }}\r\n  >\r\n    <Text\r\n      text={tipStatus.title}\r\n      anchor={0.5}\r\n      x={0}\r\n      y={-20}\r\n      style={new PIXI.TextStyle({\r\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 20,\r\n        fill:['#ffffff', '#ffffff'],\r\n      })}\r\n    />\r\n    <Text\r\n      interactive={true}\r\n      buttonMode={true}\r\n      anchor={0.5}\r\n      text={'確定'}\r\n      x={-30}\r\n      y={20}\r\n      style={new PIXI.TextStyle({\r\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 20,\r\n        fill:['#ffffff', '#ffffff'],\r\n      })}\r\n      pointertap={()=>{\r\n        switch (currentChess.type) {\r\n          case \"MOVE\":\r\n            dispatch(chessMove({\r\n              key: currentChess.key,\r\n              changeX:tipStatus.position.x,\r\n              changeY:tipStatus.position.y\r\n            }));\r\n            dispatch(chessMoved({\r\n              key: currentChess.key,\r\n            }));\r\n            dispatch(MoveSelect({\r\n              position:{ \r\n                x:chess[currentChess.key].x, \r\n                y:chess[currentChess.key].y,\r\n              },\r\n              step:chess[currentChess.key].step,\r\n              changeColor:'0x383838',\r\n              alphaVal:0\r\n            }));\r\n            setMoveStep(true);\r\n            setTipStatus(prev=>{\r\n              return {...prev, status:false }\r\n            });\r\n            break;\r\n          case \"ENDROUND\":\r\n            setOtherTab(false);\r\n            setRoundNum(prev=>prev+=1);\r\n            setTipStatus(prev=>{\r\n              return {...prev, status:false }\r\n            });\r\n            setUsualTip({\r\n              title:'敵方回合',\r\n              status:true\r\n            });\r\n            setFadeBGM(currentBGM);\r\n            break;\r\n          default:\r\n            return;\r\n        }\r\n      }}\r\n    />\r\n    <Text\r\n      interactive={true}\r\n      buttonMode={true}\r\n      anchor={0.5}\r\n      text={'取消'}\r\n      x={30}\r\n      y={20}\r\n      style={new PIXI.TextStyle({\r\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 20,\r\n        fill:['#ffffff', '#ffffff'],\r\n      })}\r\n      pointertap={()=>{\r\n        switch (currentChess.type) {\r\n          case \"MOVE\":\r\n            dispatch(MoveSelect({\r\n              position:{ \r\n                x:chess[currentChess.key].x, \r\n                y:chess[currentChess.key].y,\r\n              },\r\n              step:chess[currentChess.key].step,\r\n              changeColor:'0x383838',\r\n              alphaVal:0\r\n            }));\r\n            setMoveStep(true);\r\n            setTipStatus(prev=>{\r\n              return {...prev, status:false }\r\n            });\r\n            break;\r\n          case \"ENDROUND\":\r\n            setTipStatus(prev=>{\r\n              return {...prev, status:false }\r\n            });\r\n            break;\r\n          default:\r\n            return;\r\n        }\r\n      }}\r\n    />\r\n  </Graphics>\r\n};","import { fromJS } from \"immutable\";\r\n\r\nexport const stageRule = fromJS({\r\n  stageOne: {\r\n    debutChess:[\r\n      { \r\n        name:'Tanjirou',\r\n        x:6,\r\n        y:7\r\n      }\r\n    ],\r\n    debutEnemyChess:[\r\n      {\r\n        name:'Teoni',\r\n        x:14,\r\n        y:7\r\n      }\r\n    ],\r\n    ruleText:{\r\n      win:'擊敗手鬼。',\r\n      lose:'竃門 碳治郎 戰敗。'\r\n    },\r\n    recap:'前情提要：碳治郎與鬼殺隊士們。',\r\n    story:[{\r\n        character:'Tanjirou-talk-default',\r\n        name:'竈門 炭治郎',\r\n        color:'#00ff99',\r\n        content:'1:台詞測試'\r\n      },{\r\n        character:'Tanjirou-talk-default',\r\n        name:'竈門 炭治郎',\r\n        color:'#00ff99',\r\n        content:'2:台詞測試'\r\n      },{\r\n        character:'Tanjirou-talk-default',\r\n        name:'竈門 炭治郎',\r\n        color:'#00ff99',\r\n        content:'3:台詞測試'\r\n      },{\r\n        character:'Teoni-talk-default',\r\n        name:'手鬼',\r\n        color:'#9d4edd',\r\n        content:'4:台詞測試!!!'\r\n      },{\r\n        character:'Tanjirou-talk-def',\r\n        name:'竈門 炭治郎',\r\n        color:'#00ff99',\r\n        content:'5:台詞測試!!!'\r\n      },{\r\n        character:'Teoni-talk-default',\r\n        name:'手鬼',\r\n        color:'#9d4edd',\r\n        content:'6:台詞測試!!!'\r\n      },{\r\n        character:'Tanjirou-talk-attack',\r\n        name:'竈門 炭治郎',\r\n        color:'#00ff99',\r\n        content:'7:台詞測試!!!'\r\n    }],\r\n    isWin: enemyList => {\r\n      let totalLife = 0;\r\n        enemyList.map(v => {\r\n          if(v.debut){\r\n            return totalLife += v.hp;\r\n          }return null;\r\n        });\r\n      return totalLife>0 ? false : true ;\r\n    },\r\n    isLose: chessList => {\r\n      let totalLife = 0;\r\n        chessList.map(v => {\r\n          if(v.debut){\r\n            return totalLife += v.hp;\r\n          }return null;\r\n        });\r\n      return totalLife>0 ? false : true ;\r\n    }\r\n  },\r\n  stageTwo: {\r\n    debutChess:[\r\n      { \r\n        name:'Tanjirou',\r\n        x:7,\r\n        y:7\r\n      },{ \r\n        name:'Nezuko',\r\n        x:5,\r\n        y:7\r\n      },{ \r\n        name:'Zenitsu',\r\n        x:6,\r\n        y:6\r\n      }\r\n    ],\r\n    debutEnemyChess:[\r\n      {\r\n        name:'Teoni',\r\n        x:14,\r\n        y:7\r\n      }\r\n    ],\r\n    ruleText:{\r\n      win:'擊敗手鬼。',\r\n      lose:'竃門 碳治郎 戰敗。'\r\n    },\r\n    recap:'前情提要：碳治郎與鬼殺隊士們。',\r\n    story:[{\r\n        character:'Tanjirou-talk-default',\r\n        name:'竈門 炭治郎',\r\n        color:'#00ff99',\r\n        content:'1:台詞測試'\r\n      },{\r\n        character:'Tanjirou-talk-default',\r\n        name:'竈門 炭治郎',\r\n        color:'#00ff99',\r\n        content:'2:台詞測試'\r\n      },{\r\n        character:'Tanjirou-talk-default',\r\n        name:'竈門 炭治郎',\r\n        color:'#00ff99',\r\n        content:'3:台詞測試'\r\n      },{\r\n        character:'Teoni-talk-default',\r\n        name:'手鬼',\r\n        color:'#9d4edd',\r\n        content:'4:台詞測試!!!'\r\n      },{\r\n        character:'Tanjirou-talk-def',\r\n        name:'竈門 炭治郎',\r\n        color:'#00ff99',\r\n        content:'5:台詞測試!!!'\r\n      },{\r\n        character:'Teoni-talk-default',\r\n        name:'手鬼',\r\n        color:'#9d4edd',\r\n        content:'6:台詞測試!!!'\r\n      },{\r\n        character:'Tanjirou-talk-attack',\r\n        name:'竈門 炭治郎',\r\n        color:'#00ff99',\r\n        content:'7:台詞測試!!!'\r\n    }],\r\n    isWin: enemyList => {\r\n      let totalLife = 0;\r\n        enemyList.map(v => {\r\n          if(v.debut){\r\n            return totalLife += v.hp;\r\n          }return null;\r\n        });\r\n      return totalLife>0 ? false : true ;\r\n    },\r\n    isLose: chessList => {\r\n      let totalLife = 0;\r\n        chessList.map(v => {\r\n          if(v.debut){\r\n            return totalLife += v.hp;\r\n          }return null;\r\n        });\r\n      return totalLife>0 ? false : true ;\r\n    }\r\n  }\r\n});","import React,{ useState } from 'react';\r\n// import { fromJS } from 'immutable';\r\nimport { Graphics, Text } from '@inlet/react-pixi/animated';\r\nimport * as PIXI from \"pixi.js\";\r\n// rule\r\nimport { stageRule } from \"../../constants/stageRule\";\r\n\r\nexport const UsualTip = ({\r\n  props,\r\n})=> {\r\n  const {\r\n    stageStatus, chess, currentChess, enemyChess, currentBGM,\r\n    usualTip, setMoveStep, setUsualTip, setCurrentChess, setFadeBGM,\r\n    setEnemyRoundTab, setRoundStart, setStageStatus \r\n  } = props;\r\n    const [ textColor, setTextColor ] = useState(['#ffffff', '#ffffff']);\r\n  return <Graphics\r\n    x={400}\r\n    y={300}\r\n    draw={g=> {\r\n      g.clear();\r\n      g.lineStyle(1,`0xffffff`,1);\r\n      g.beginFill(`0x22223b`);\r\n      g.drawRoundedRect(-90,-50,180,100,8);\r\n      g.endFill();\r\n    }}\r\n  >\r\n    <Text\r\n      text={usualTip.title}\r\n      anchor={0.5}\r\n      x={0}\r\n      y={-20}\r\n      style={new PIXI.TextStyle({\r\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 20,\r\n        fill: textColor,\r\n      })}\r\n    />\r\n    <Text\r\n      interactive={true}\r\n      buttonMode={true}\r\n      anchor={0.5}\r\n      text={'確定'}\r\n      x={0}\r\n      y={20}\r\n      style={new PIXI.TextStyle({\r\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 20,\r\n        fill:['#ffffff', '#ffffff'],\r\n      })}\r\n      pointertap={()=>{\r\n        switch (currentChess.type) {\r\n          case \"ATTACK\":\r\n            const checkWin = stageRule.getIn([stageStatus,'isWin']);\r\n            const checkLose = stageRule.getIn([stageStatus,'isLose']);\r\n            if(checkWin(enemyChess)){\r\n              setTextColor(['#ffffff', '#06d6a0']);\r\n              setCurrentChess({\r\n                key:0,\r\n                type:\"CHECKWIN\"\r\n              });\r\n              setUsualTip({\r\n                title:`作戰獲勝!`,\r\n                status:true,\r\n              });\r\n            }else if(checkLose(chess)){\r\n              setTextColor(['#dc2f02', '#d00000']);\r\n              setCurrentChess({\r\n                key:0,\r\n                type:\"CHECKLOSE\"\r\n              });\r\n              setUsualTip({\r\n                title:`作戰失敗!`,\r\n                status:true,\r\n              });\r\n            }else {\r\n              if(!checkLose(chess)){\r\n                setUsualTip({\r\n                  title:`我方回合`,\r\n                  status:true,\r\n                });\r\n                setCurrentChess({\r\n                  key:0,\r\n                  type:\"USERROUND\"\r\n                });\r\n              }else {\r\n                setMoveStep(true);\r\n                setUsualTip({\r\n                  title:``,\r\n                  status:false,\r\n                });\r\n              };\r\n            }\r\n            break;\r\n          case \"CHECKWIN\":\r\n            setTextColor(['#ffffff', '#ffffff']);\r\n            setUsualTip({\r\n              title:``,\r\n              status:false,\r\n            });\r\n            setRoundStart(false);\r\n            setFadeBGM(currentBGM);\r\n            setStageStatus('stageTwo');\r\n            break;\r\n          case \"CHECKLOSE\":\r\n            setTextColor(['#ffffff', '#ffffff']);\r\n            setUsualTip({\r\n              title:`GAME OVER`,\r\n              status:true,\r\n            });\r\n            setCurrentChess({\r\n              key:0,\r\n              type:\"GAMEOVER\"\r\n            });\r\n            break;\r\n          case \"GAMEOVER\":\r\n            window.location.reload();\r\n            break;\r\n          case \"ENDROUND\":\r\n            setEnemyRoundTab({\r\n              oder:0,\r\n              status:true\r\n            });\r\n            setUsualTip({\r\n              title:``,\r\n              status:false\r\n            });\r\n            break;\r\n          case \"USERROUND\":\r\n            setFadeBGM(currentBGM);\r\n            setMoveStep(true);\r\n            setUsualTip({\r\n              title:``,\r\n              status:false\r\n            });\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      }}\r\n    />\r\n  </Graphics>\r\n};","export const ProbabilityCount = (\r\n  attackerHit,\r\n  targetDodge\r\n)=>{\r\n  const basicHit = 100;\r\n  const hitProbability = basicHit + attackerHit - targetDodge;\r\n  const checkRamdom = Math.round(Math.random()*100 + 1);\r\n  if(hitProbability < checkRamdom) {\r\n    return false\r\n  }else return true;\r\n};","import React,{ useState } from 'react';\r\nimport { Container, Sprite, Graphics, Text } from '@inlet/react-pixi/animated';\r\nimport { loader } from '../DataLoader';\r\nimport * as PIXI from \"pixi.js\";\r\nimport { ProbabilityCount } from \"../Common/ProbabilityCount\";\r\nimport { chessAttackResult, chessMoved } from \"../../reducer/chess\";\r\nimport { enemyChessDefense } from \"../../reducer/enemyChess\";\r\n\r\nexport const BattleBoard = ({ props })=>{\r\n  const { \r\n    battleInfo, setMoveStep, setBattleInfo, setAnimeShow, setCurrentBGM, dispatch\r\n  } = props;\r\n  const [ atkSelectd, setAtkSelectd ] = useState({\r\n    key:0,\r\n  });\r\n  const CreateAttackerInfo = ({ pX=0, pY=0, data })=>{\r\n    return <Container x={pX} y={pY} sortableChildren={true}>\r\n      <Text\r\n        text={'攻'}\r\n        x={220}\r\n        y={0}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 30,\r\n          fill:['#ffffff', '#00ff99'],\r\n        })}\r\n      />\r\n      <Text\r\n        text={data.cn}\r\n        x={60}\r\n        y={-3}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 16,\r\n          fill:'#ffffff',\r\n        })}\r\n      />\r\n      <Text\r\n        text={`${data.hp} / ${data.fullValue.hp}`}\r\n        x={60}\r\n        y={17}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 16,\r\n          fill:'#ff6b6b',\r\n        })}\r\n      />\r\n      <Text\r\n        text={`${data.sp} / ${data.fullValue.sp}`}\r\n        x={60}\r\n        y={34}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 16,\r\n          fill:'#0466c8',\r\n        })}\r\n      />\r\n      <Sprite\r\n        width={50}\r\n        height={50}\r\n        x={0}\r\n        y={0}\r\n        image={loader.resources[`${data.name}-head-default`].data}\r\n      />\r\n      <Text\r\n        text={`招式選擇：`}\r\n        x={0}\r\n        y={80}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 16,\r\n          fill:'#ffffff',\r\n        })}\r\n      />\r\n      <Graphics\r\n        x={0}\r\n        y={115}\r\n        zIndex={1}\r\n        draw={g=> {\r\n          g.clear();\r\n          g.lineStyle(1,`0xffffff`,1);\r\n          g.beginFill(`0x0f0f1b`);\r\n          g.drawRoundedRect(0,0,240,180,8);\r\n          g.endFill();\r\n        }}\r\n      />\r\n      {data.skill.map((value,key)=>{\r\n        const skillCanUse = data.sp - value.sp >= 0;\r\n        return <React.Fragment key={key}>\r\n          <Text\r\n            zIndex={2}\r\n            interactive={skillCanUse}\r\n            buttonMode={true}\r\n            text={value.name}\r\n            x={20}\r\n            y={130+(key*24)}\r\n            style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n              fontSize: 16,\r\n              fill: ((atkSelectd.key===key)&&skillCanUse) ? ['#ffffff', '#00ff99'] :  \r\n                skillCanUse ? '#ffffff' : '#8d99ae',\r\n              fontWeight: (atkSelectd.key===key) ? 600 : 300\r\n            })}\r\n            pointertap={()=>setAtkSelectd({\r\n              key: key\r\n            })}\r\n          />\r\n        </React.Fragment>\r\n      })}\r\n    </Container>\r\n  };\r\n  const CreateTargetInfo = ({ pX=0, pY=0, data })=>{\r\n    return <Container x={pX} y={pY} sortableChildren={true}>\r\n      <Text\r\n        text={'防'}\r\n        x={0}\r\n        y={0}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 30,\r\n          fill:['#ffffff', '#ee6c4d'],\r\n        })}\r\n      />\r\n      <Text\r\n        text={data.cn}\r\n        anchor={{x:1,y:0}}\r\n        x={190}\r\n        y={-3}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 16,\r\n          fill:'#ffffff',\r\n        })}\r\n      />\r\n      <Text\r\n        text={`${data.hp} / ${data.fullValue.hp}`}\r\n        anchor={{x:1,y:0}}\r\n        x={190}\r\n        y={17}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 16,\r\n          fill:'#ff6b6b',\r\n        })}\r\n      />\r\n      <Text\r\n        text={`${data.sp} / ${data.fullValue.sp}`}\r\n        anchor={{x:1,y:0}}\r\n        x={190}\r\n        y={34}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 16,\r\n          fill:'#0466c8',\r\n        })}\r\n      />\r\n      <Sprite\r\n        width={50}\r\n        height={50}\r\n        x={200}\r\n        y={0}\r\n        image={loader.resources[`${data.name}-head-default`].data}\r\n      />\r\n    </Container>\r\n  };\r\n  const ForecastInfo = ({ pX, pY, data })=>{\r\n    return <Container x={pX} y={pY} sortableChildren={true}>\r\n      <Graphics\r\n        x={0}\r\n        y={0}\r\n        zIndex={1}\r\n        draw={g=> {\r\n          g.clear();\r\n          g.lineStyle(1,`0x00ff99`,1);\r\n          g.beginFill(`0x0f0f1b`);\r\n          g.drawRoundedRect(0,0,265,215,8);\r\n          g.endFill();\r\n        }}\r\n      />\r\n      <Text\r\n        text={`招式：`}\r\n        zIndex={2}\r\n        x={20}\r\n        y={20}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 20,\r\n          fill:'#ffffff'\r\n        })}\r\n      />\r\n      <Text\r\n        text={`${data.attacker.skill[atkSelectd.key].name}`}\r\n        zIndex={2}\r\n        x={80}\r\n        y={22}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 16,\r\n          fill:'#00ff99'\r\n        })}\r\n      />\r\n      <Text\r\n        text={`攻擊力：`}\r\n        zIndex={2}\r\n        x={20}\r\n        y={50}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 20,\r\n          fill:'#ffffff'\r\n        })}\r\n      />\r\n      <Text\r\n        text={`${data.attacker.skill[atkSelectd.key].atk}`}\r\n        zIndex={2}\r\n        x={100}\r\n        y={52}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 18,\r\n          fill:'#fdc500'\r\n        })}\r\n      />\r\n      <Text\r\n        text={`命中率：`}\r\n        zIndex={2}\r\n        x={20}\r\n        y={80}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 20,\r\n          fill:'#ffffff'\r\n        })}\r\n      />\r\n      <Text\r\n        text={`${\r\n          100 +\r\n          ((data.attacker.skill[atkSelectd.key].hitfix - data.target.dodge)>=0 ? 0 :\r\n            (data.attacker.skill[atkSelectd.key].hitfix - data.target.dodge))\r\n        }%`}\r\n        zIndex={2}\r\n        x={100}\r\n        y={82}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 18,\r\n          fill:'#ffffff'\r\n        })}\r\n      />\r\n      <Text\r\n        text={`消耗：`}\r\n        zIndex={2}\r\n        x={20}\r\n        y={110}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 20,\r\n          fill:'#ffffff'\r\n        })}\r\n      />\r\n      <Text\r\n        text={`${data.attacker.skill[atkSelectd.key].sp}`}\r\n        zIndex={2}\r\n        x={80}\r\n        y={110}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 18,\r\n          fill:'#0466c8'\r\n        })}\r\n      />\r\n    </Container>\r\n  };\r\n  return <Graphics\r\n    x={400}\r\n    y={300}\r\n    zIndex={99}\r\n    draw={g=> {\r\n      g.clear();\r\n      g.lineStyle(1,`0xffffff`,1);\r\n      g.beginFill(`0x22223b`);\r\n      g.drawRoundedRect(-300,-200,600,400,8);\r\n      g.endFill();\r\n    }}\r\n  >\r\n    <CreateAttackerInfo\r\n      pX={-270}\r\n      pY={-180}\r\n      data={battleInfo.attacker}\r\n    />\r\n    <CreateTargetInfo\r\n      pX={20}\r\n      pY={-180}\r\n      data={battleInfo.target}\r\n    />\r\n    <ForecastInfo\r\n      pX={0}\r\n      pY={-100}\r\n      data={battleInfo}\r\n    />\r\n    <Text\r\n      interactive={true}\r\n      buttonMode={true}\r\n      text={'攻擊'}\r\n      anchor={0.5}\r\n      x={180}\r\n      y={160}\r\n      style={new PIXI.TextStyle({\r\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 20,\r\n        fill:'#ffffff',\r\n      })}\r\n      pointertap={()=>{\r\n        setCurrentBGM(battleInfo.attacker.name);\r\n        const isHit = ProbabilityCount(\r\n          battleInfo.attacker.skill[atkSelectd.key].hitfix,\r\n          battleInfo.target.dodge\r\n        );\r\n        dispatch(chessAttackResult({\r\n          key: battleInfo.attacker.key,\r\n          lessSp: battleInfo.attacker.skill[atkSelectd.key].sp\r\n        }));\r\n        dispatch(chessMoved({\r\n          key: battleInfo.attacker.key,\r\n        }));\r\n        if(isHit){\r\n          dispatch(enemyChessDefense({\r\n            key: battleInfo.target.key,\r\n            damage: battleInfo.attacker.skill[atkSelectd.key].atk\r\n          }));\r\n        };\r\n        setAnimeShow({\r\n          status:true,\r\n          type:'USER',\r\n          isHit: isHit,\r\n          attacker:{ \r\n            key:battleInfo.attacker.key,\r\n            skill:battleInfo.attacker.skill[atkSelectd.key],\r\n            prevSP:battleInfo.attacker.sp\r\n          },\r\n          target:{ \r\n            key:battleInfo.target.key,\r\n            isHit:isHit,\r\n            prevLife:battleInfo.target.hp\r\n          }\r\n        });\r\n        setBattleInfo({\r\n          status:false,\r\n          attacker:{ key:'' },\r\n          target:{ key:'' }\r\n        });\r\n      }}\r\n    />\r\n    <Text\r\n      interactive={true}\r\n      buttonMode={true}\r\n      text={'取消'}\r\n      anchor={0.5}\r\n      x={240}\r\n      y={160}\r\n      style={new PIXI.TextStyle({\r\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 20,\r\n        fill:'#ffffff',\r\n      })}\r\n      pointertap={()=>{\r\n        setMoveStep(true);\r\n        setBattleInfo({\r\n          status:false,\r\n          attacker:{ key:'' },\r\n          target:{ key:'' }\r\n        })\r\n      }}\r\n    />\r\n  </Graphics>\r\n};","import React from 'react';\r\nimport { Sprite } from '@inlet/react-pixi/animated';\r\nimport { Spring } from 'react-spring/renderprops';\r\nimport { loader } from '../../DataLoader';\r\n\r\nexport const AnimeShowBG = ({\r\n  props,\r\n})=>{\r\n  const { stageStatus, BGstatus, BGprop, SkBGprop, \r\n    setSkBGpops, setBGpops } = props;\r\n  return <>\r\n    {BGstatus.type==='STOP'&&<Sprite\r\n      x={-400}\r\n      y={-100}\r\n      zIndex={1}\r\n      width={1600}\r\n      height={500}\r\n      anchor={0.5}\r\n      image={loader.resources[`${stageStatus}-BG`].data}\r\n    />}\r\n    {BGstatus.type==='STANDBY'&&<Spring\r\n      from={{ x:-400, y:-100 }}\r\n      to={{ x: BGprop.toX, y:-100 }}\r\n      config={{ duration: BGprop.duration }}\r\n      onRest={()=>{\r\n        if(BGprop.toX===-400){\r\n          setBGpops({\r\n            toX:400,\r\n            duration: 20000\r\n          });\r\n        }else {\r\n          setBGpops({\r\n            toX:-400,\r\n            duration:-1000\r\n          });\r\n        };\r\n      }}\r\n    >\r\n      {props => \r\n        <Sprite\r\n          zIndex={1}\r\n          width={1600}\r\n          height={500}\r\n          anchor={0.5}\r\n          image={loader.resources[`${stageStatus}-BG`].data}\r\n          {...props}\r\n      />}\r\n    </Spring>}\r\n    {BGstatus.type==='ENEMYSTANDBY'&&<Spring\r\n      from={{ x:400, y:-100 }}\r\n      to={{ x: -BGprop.toX, y:-100 }}\r\n      config={{ duration: BGprop.duration }}\r\n      onRest={()=>{\r\n        if(-BGprop.toX===400){\r\n          setBGpops({\r\n            toX:400,\r\n            duration: 20000\r\n          });\r\n        }else {\r\n          setBGpops({\r\n            toX:-400,\r\n            duration:-1000\r\n          });\r\n        };\r\n      }}\r\n    >\r\n      {props => \r\n        <Sprite\r\n          zIndex={1}\r\n          width={1600}\r\n          height={500}\r\n          anchor={0.5}\r\n          image={loader.resources[`${stageStatus}-BG`].data}\r\n          {...props}\r\n      />}\r\n    </Spring>}\r\n    {BGstatus.type==='SKILL'&&<Spring\r\n      from={{ x:-400, y:-100 }}\r\n      to={{ x: SkBGprop.toX, y:-100 }}\r\n      config={{ duration: SkBGprop.duration }}\r\n      onRest={()=>{\r\n        if(SkBGprop.toX===-400){\r\n          setSkBGpops({\r\n            toX:400,\r\n            duration: 500\r\n          });\r\n        }else {\r\n          setSkBGpops({\r\n            toX:-400,\r\n            duration:-1000\r\n          });\r\n        };\r\n      }}\r\n    >\r\n      {props => \r\n        <Sprite\r\n          zIndex={1}\r\n          width={1600}\r\n          height={500}\r\n          anchor={0.5}\r\n          image={loader.resources[`${stageStatus}-BG`].data}\r\n          {...props}\r\n      />}\r\n    </Spring>}\r\n    {BGstatus.type==='ENEMYSKILL'&&<Spring\r\n      from={{ x:400, y:-100 }}\r\n      to={{ x: -SkBGprop.toX, y:-100 }}\r\n      config={{ duration: SkBGprop.duration }}\r\n      onRest={()=>{\r\n        if(-SkBGprop.toX===400){\r\n          setSkBGpops({\r\n            toX:400,\r\n            duration: 500\r\n          });\r\n        }else {\r\n          setSkBGpops({\r\n            toX:-400,\r\n            duration:-1000\r\n          });\r\n        };\r\n      }}\r\n    >\r\n      {props => \r\n        <Sprite\r\n          zIndex={1}\r\n          width={1600}\r\n          height={500}\r\n          anchor={0.5}\r\n          image={loader.resources[`${stageStatus}-BG`].data}\r\n          {...props}\r\n      />}\r\n    </Spring>}\r\n  </>\r\n};","import React from 'react';\r\nimport { Container, Sprite, Graphics, Text } from '@inlet/react-pixi/animated';\r\nimport * as PIXI from \"pixi.js\";\r\nimport { loader } from '../../DataLoader';\r\nexport const TopBar = ({\r\n  right={},\r\n  left={},\r\n  showType='',\r\n  targetHp=0,\r\n  attackerSp=0\r\n})=> {\r\n  const hpBarCount = (hp,full)=>{\r\n    const leftVal =  Number(full) - Number(hp);\r\n    const percentage = Number(full) / 200;\r\n    const result = leftVal / percentage;\r\n    return result;\r\n  };\r\n  const spBarCount = (sp,full)=>{\r\n    const leftVal =  Number(full) - Number(sp);\r\n    const percentage = Number(full) / 100;\r\n    const result = leftVal / percentage;\r\n    return result;\r\n  };\r\n  return <Graphics \r\n    x={-400}\r\n    y={-300}\r\n    zIndex={98}\r\n    draw={g=> {\r\n      g.clear();\r\n      g.beginFill(`0x000f23`);\r\n      g.drawRoundedRect(0,0,800,80,0);\r\n      g.endFill();\r\n    }}\r\n  >\r\n    <Container sortableChildren={true}>\r\n      <Sprite\r\n        width={42}\r\n        height={42}\r\n        x={370}\r\n        y={40}\r\n        anchor={0.5} \r\n        image={loader.resources[`${showType===\"USER\" ? 'defIcon' : 'atkIcon' }`].data}\r\n      />\r\n      <Sprite\r\n        width={42}\r\n        height={42}\r\n        x={420}\r\n        y={40}\r\n        anchor={0.5} \r\n        image={loader.resources[`${showType===\"USER\" ? 'atkIcon' : 'defIcon' }`].data}\r\n      />\r\n      {/* left */}\r\n      <Sprite\r\n        width={50}\r\n        height={50}\r\n        x={50}\r\n        y={15}\r\n        image={loader.resources[`${left.name}-head-default`].data}\r\n      />\r\n      <Text \r\n        text={`${showType===\"USER\"?targetHp:left.hp} / ${left.fullValue.hp}`}\r\n        anchor={{x:1,y:0}} \r\n        x={320} y={10}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 18,\r\n          fill:'#e71d36',\r\n        })}/>\r\n      <Graphics\r\n        x={320} y={35}\r\n        zIndex={1}\r\n        draw={g=> {\r\n          g.clear();\r\n          g.beginFill(`0xe71d36`);\r\n          g.drawRoundedRect(0,0,-200,10,0);\r\n          g.endFill();\r\n        }}\r\n      />\r\n      <Graphics\r\n        x={320} y={35}\r\n        zIndex={2}\r\n        draw={g=> {\r\n          g.clear();\r\n          g.beginFill(`0x333533`);\r\n          g.drawRoundedRect(-200,0,hpBarCount(showType===\"USER\"?targetHp:left.hp,left.fullValue.hp),10,0);\r\n          g.endFill();\r\n        }}\r\n      />\r\n      <Text \r\n        text={`${showType===\"USER\"? left.sp : attackerSp} / ${left.fullValue.sp}`}\r\n        anchor={{x:1,y:0.3}} \r\n        x={210} y={55}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 18,\r\n          fill:'#4A86E8',\r\n        })}/>\r\n      <Graphics\r\n        x={320} y={55}\r\n        zIndex={1}\r\n        draw={g=> {\r\n          g.clear();\r\n          g.beginFill(`0x4A86E8`);\r\n          g.drawRoundedRect(0,0,-100,10,0);\r\n          g.endFill();\r\n        }}\r\n      />\r\n      <Graphics\r\n        x={220} y={55}\r\n        zIndex={2}\r\n        draw={g=> {\r\n          g.clear();\r\n          g.beginFill(`0x333533`);\r\n          g.drawRoundedRect(0,0,spBarCount(showType===\"USER\"?left.sp:attackerSp,left.fullValue.sp),10,0);\r\n          g.endFill();\r\n        }}\r\n      />\r\n      {/* right */}\r\n      <Sprite\r\n        width={50}\r\n        height={50}\r\n        x={690}\r\n        y={15}\r\n        image={loader.resources[`${right.name}-head-default`].data}\r\n      />\r\n      <Text \r\n        text={`${showType===\"USER\"?right.hp:targetHp} / ${right.fullValue.hp}`}\r\n        anchor={{x:1,y:0}} \r\n        x={670} y={10}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 18,\r\n          fill:'#e71d36',\r\n        })}/>\r\n      <Graphics\r\n        x={670} y={35}\r\n        zIndex={1}\r\n        draw={g=> {\r\n          g.clear();\r\n          g.beginFill(`0xe71d36`);\r\n          g.drawRoundedRect(0,0,-200,10,0);\r\n          g.endFill();\r\n        }}\r\n      />\r\n      <Graphics\r\n        x={670} y={35}\r\n        zIndex={2}\r\n        draw={g=> {\r\n          g.clear();\r\n          g.beginFill(`0x333533`);\r\n          g.drawRoundedRect(-200,0,hpBarCount(showType===\"USER\"?right.hp:targetHp,right.fullValue.hp),10,0);\r\n          g.endFill();\r\n        }}\r\n      />\r\n      <Text \r\n        text={`${showType===\"USER\"? attackerSp : right.sp} / ${right.fullValue.sp}`}\r\n        anchor={{x:1,y:0.3}} \r\n        x={560} y={55}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 18,\r\n          fill:'#4A86E8',\r\n        })}/>\r\n      <Graphics\r\n        x={670} y={55}\r\n        zIndex={1}\r\n        draw={g=> {\r\n          g.clear();\r\n          g.beginFill(`0x4A86E8`);\r\n          g.drawRoundedRect(0,0,-100,10,0);\r\n          g.endFill();\r\n        }}\r\n      />\r\n      <Graphics\r\n        x={570} y={55}\r\n        zIndex={2}\r\n        draw={g=> {\r\n          g.clear();\r\n          g.beginFill(`0x333533`);\r\n          g.drawRoundedRect(0,0,spBarCount(showType===\"USER\"?attackerSp:right.sp,right.fullValue.sp),10,0);\r\n          g.endFill();\r\n        }}\r\n      />\r\n    </Container>\r\n  </Graphics>\r\n};","import { fromJS } from \"immutable\";\r\nexport const lines = fromJS({\r\n  'Tanjirou': {\r\n    default:[\r\n      '(備戰中)',\r\n      '(備戰中)'\r\n    ],\r\n    attack:[\r\n      '我要成為強者，用強者的力量去保護弱者。',\r\n      '無論鬼奪走多少生命，人類的意志是怎樣都不會被打敗！'\r\n    ],\r\n    dodge:[\r\n      '危險!!',\r\n      '冷靜下來! 可以戰勝的。'\r\n    ],\r\n    def:[\r\n      '鬼殺隊不會被一點小傷給打倒!',\r\n      '不好了! 調整呼吸。'\r\n    ],\r\n    dead:[\r\n      '對不起....鱗瀧師傅..',\r\n      '禰豆子...'\r\n    ]\r\n  },\r\n  'Nezuko': {\r\n    default:[\r\n      '(備戰中)',\r\n      '(備戰中)'\r\n    ],\r\n    attack:[\r\n      '......!!(人類是家人)',\r\n      '......!!(打倒惡鬼)'\r\n    ],\r\n    dodge:[\r\n      '......!!(危險)',\r\n      '......!!(沒事的)'\r\n    ],\r\n    def:[\r\n      '......!!(危險)',\r\n      '......!!(沒事的)'\r\n    ],\r\n    dead:[\r\n      '......!?',\r\n      '.....(哥哥)'\r\n    ]\r\n  },\r\n  'Zenitsu': {\r\n    default:[\r\n      '(備戰中)',\r\n      '(備戰中)'\r\n    ],\r\n    attack:[\r\n      '雷之呼吸...',\r\n      '雷之呼吸!!'\r\n    ],\r\n    dodge:[\r\n      '!!(呼吸)',\r\n      '..!!'\r\n    ],\r\n    def:[\r\n      '!!(調整呼吸)',\r\n      '..!!'\r\n    ],\r\n    dead:[\r\n      '....',\r\n      '....(再見了,爺爺)',\r\n    ]\r\n  },\r\n  'Teoni': {\r\n    default:[\r\n      '(備戰中)',\r\n      '(備戰中)'\r\n    ],\r\n    attack:[\r\n      '獵鬼人是最上等的食物!!',\r\n      '看我吃了你!!'\r\n    ],\r\n    dodge:[\r\n      '沒用沒用 哈哈哈哈!',\r\n      '就這點程度嗎? 可悲的劍士。'\r\n    ],\r\n    def:[\r\n      '不久就輪到你的死期了!',\r\n      '我會吃了你!!'\r\n    ],\r\n    dead:[\r\n      '甚麼!?.....我竟然會死在獵鬼人手上.....',\r\n      '甚麼!?.....我竟然會死在獵鬼人手上.....'\r\n    ]\r\n  }\r\n});","import React, { useState } from 'react';\r\nimport { Container, Graphics, Sprite, Text } from '@inlet/react-pixi/animated';\r\nimport * as PIXI from \"pixi.js\";\r\nimport { loader } from '../../DataLoader';\r\nimport { lines } from \"../../../constants/lines\";\r\nexport const BottomBar = ({\r\n  right={},\r\n  left={},\r\n  linesStatus={}\r\n})=> {\r\n  const showCharacter = linesStatus.character===\"USER\" ? right.name : left.name;\r\n  const randomSize = lines.getIn([showCharacter,linesStatus.status]).size-1;\r\n  const [ random ] = useState(Math.round(Math.random()*randomSize));\r\n  return <Graphics \r\n    x={-400}\r\n    y={150}\r\n    zIndex={98}\r\n    draw={g=> {\r\n      g.clear();\r\n      g.beginFill(`0x000f23`);\r\n      g.drawRoundedRect(0,0,800,150,0);\r\n      g.endFill();\r\n    }}\r\n  >\r\n    <Container sortableChildren={true}>\r\n      <Sprite\r\n        width={100}\r\n        height={100}\r\n        x={50}\r\n        y={25}\r\n        image={loader.resources[`${showCharacter}-talk-${linesStatus.status}`].data}\r\n      />\r\n      <Text \r\n        text={lines.getIn([showCharacter,linesStatus.status,random])}\r\n        anchor={{x:0,y:0}} \r\n        x={170} y={60}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 18,\r\n          fill:'#ffff',\r\n        })}/>\r\n    </Container>\r\n  </Graphics>\r\n};","import React,{ useState, useEffect } from \"react\";\r\nexport const SkillShowProtoType = ({\r\n  skillName,\r\n  attackerName,\r\n  isHit,\r\n  targetLife,\r\n  attackerSp,\r\n  resultLife,\r\n  resultSp,\r\n  BGstatus,\r\n  setBGstatus,\r\n  setAnimeIsDone,\r\n  setTargetHp,\r\n  setAttackerSp,\r\n  setLinesStatus,\r\n  setShowSkill,\r\n  defXPostion,\r\n  steps,\r\n  ShowType\r\n})=>{\r\n  const [ position, setPosition ] = useState({ x:0, y:0, tint:0xffffff, alpha:1, mass:1, friction:20, tension:170 });\r\n  // def\r\n  useEffect(()=>{\r\n    if(BGstatus.defence && skillName==='防禦'){\r\n      const timeout = steps({\r\n        skillName:skillName,\r\n        isHit:isHit,\r\n        BGstatus:BGstatus,\r\n        resultLife:resultLife,\r\n        setAnimeIsDone:setAnimeIsDone,\r\n        setLinesStatus:setLinesStatus,\r\n        setPosition:setPosition,\r\n      });\r\n      return ()=> clearTimeout(timeout);\r\n    };\r\n  },[ BGstatus, skillName, isHit, resultLife, setAnimeIsDone, steps, setLinesStatus ])\r\n  // atk\r\n  useEffect(()=>{\r\n    if(skillName==='防禦'){ \r\n      setPosition(prev=>{return{ ...prev, x: defXPostion, y:10 }});\r\n      return;\r\n    };\r\n    const timeout = steps({\r\n      skillName:skillName,\r\n      isHit:isHit,\r\n      targetLife:targetLife,\r\n      attackerSp:attackerSp,\r\n      resultLife:resultLife,\r\n      resultSp:resultSp,\r\n      setBGstatus:setBGstatus,\r\n      setTargetHp:setTargetHp,\r\n      setAttackerSp:setAttackerSp,\r\n      setLinesStatus:setLinesStatus,\r\n      setShowSkill:setShowSkill,\r\n      setPosition:setPosition\r\n    });\r\n    return ()=> clearTimeout(timeout);\r\n  },[ skillName, isHit, targetLife, attackerSp, resultLife, resultSp,\r\n    setBGstatus, setTargetHp, setAttackerSp, defXPostion, steps, setLinesStatus, setShowSkill ]);\r\n  return <ShowType\r\n    skillName={skillName}\r\n    attackerName={attackerName}\r\n    position={position}\r\n  />\r\n};\r\n","import { TweenMax } from 'gsap';\r\nimport numeral from \"numeral\";\r\nimport { videos } from '../../../components/DataLoader';\r\nexport const steps = ({\r\n  skillName='',\r\n  isHit=false,\r\n  targetLife=0,\r\n  attackerSp=0,\r\n  resultLife=0,\r\n  resultSp=0,\r\n  BGstatus={},\r\n  setBGstatus=null,\r\n  setAnimeIsDone=null,\r\n  setTargetHp=null,\r\n  setAttackerSp=null,\r\n  setLinesStatus=null,\r\n  setPosition=null,\r\n  setShowSkill=null\r\n}) => {\r\n  // 技能動畫:\r\n  switch (skillName) {\r\n    case '防禦':\r\n      setPosition(prev=>{return{ ...prev, x:200, y:50, tension:100 }});\r\n      const defStart = ()=>{\r\n        if(isHit){\r\n          return isHitStep();\r\n        }else return isDodge();\r\n      };\r\n      const isHitStep = ()=> {\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:250, y:50, mass:2, \r\n            friction:5, tension:1000, tint:0xd00000}});\r\n          // callback\r\n          if(resultLife<=0){\r\n            return isDead({ type:'dead' });\r\n          }else return next({ type:'def' });\r\n        },BGstatus.seconds);\r\n        return timeout;\r\n      };\r\n      const isDodge = ()=>{\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:250, y:0 }});\r\n          // callback\r\n          next({ type:'dodge' });\r\n        },BGstatus.seconds);\r\n        return timeout;\r\n      };\r\n      const isDead = ({ type })=> {\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:200, y:50, \r\n            friction:2, tint:0x03071e\r\n          }});\r\n          setLinesStatus(prev=>{ \r\n            return { \r\n              status: type,\r\n              character: prev.character===\"USER\" ? \"ENEMY\" : \"USER\"\r\n            };\r\n          });\r\n          // callback\r\n          isDeadStep2();\r\n        },5000);\r\n        return timeout;\r\n      };\r\n      const isDeadStep2 = ()=>{\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return { ...prev, alpha:0 }});\r\n          // callback\r\n          end();\r\n        },3000);\r\n        return timeout;\r\n      };\r\n      const next = ({ type })=>{\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:200, y:50, mass:1, \r\n            friction:20, tension:170, tint:0xffffff}});\r\n          setLinesStatus(prev=>{ \r\n            return { \r\n              status: type,\r\n              character: prev.character===\"USER\" ? \"ENEMY\" : \"USER\"\r\n            };\r\n          });\r\n          // callback\r\n          end();\r\n        },5000);\r\n        return timeout;\r\n      };\r\n      const end = ()=> {\r\n        const timeout = setTimeout(() => {\r\n          // callback\r\n          setAnimeIsDone(true);\r\n        },3000);\r\n        return timeout;\r\n      };\r\n      return defStart();\r\n    // ATK\r\n    case '叄之型―流流舞':\r\n      setBGstatus({ type:'STANDBY', defence:false, seconds:0 });\r\n      setPosition(prev=>{return{ ...prev, x:550,y:50,tension:100 }});\r\n      const skill2atkStart = ()=>{\r\n        setPosition(prev=>{return{ ...prev, x:250, y:50, tension:100 }});\r\n        // callback\r\n        return skill2step1();\r\n      };\r\n      const skill2step1 = ()=>{\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:0, tension:100 }});\r\n          setBGstatus(prev=>{return{ ...prev, type:'SKILL' }});\r\n          // callback\r\n          skill2step2();\r\n        },3000);\r\n        return timeout;\r\n      };\r\n      const skill2step2 = ()=>{\r\n        const run =  { number: attackerSp };\r\n        TweenMax.to(run, 0.8, {\r\n          number: resultSp,\r\n          onUpdate: () => {\r\n            setAttackerSp(numeral(run.number).format(\"0\"))\r\n          },\r\n        });\r\n        setLinesStatus(prev=>{ return { ...prev, status:'attack' }});\r\n        setShowSkill(prev=>{\r\n          const video = videos[`${prev.name}`].skill2.baseTexture.resource.source;\r\n          video.play();\r\n          return { ...prev, \r\n            status:true, \r\n            type:'2',\r\n            callback:()=>{\r\n              setBGstatus(prev=>{return{ ...prev, type:'STOP', defence:true }});\r\n              setPosition(prev=>{return{ ...prev, x:-400, tension:1000 }});\r\n              skill2step3();\r\n            }\r\n          };\r\n        });\r\n      };\r\n      const skill2step3 = ()=>{\r\n        const run = { number: targetLife };\r\n        if(isHit) {\r\n          TweenMax.to(run, 0.8, {\r\n            number: resultLife<0 ? 0 : resultLife,\r\n            onUpdate: () => {\r\n              setTargetHp(numeral(run.number).format(\"0\"))\r\n            },\r\n          });\r\n        };\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:550, y:50, tension:50 }});\r\n        },3000);\r\n        return timeout;\r\n      };\r\n      return skill2atkStart();\r\n    case '捌之型―滝壺':\r\n      setBGstatus({ type:'STANDBY', defence:false, seconds:0 });\r\n      setPosition(prev=>{return{ ...prev, x:550,y:50,tension:100 }});\r\n      const skill3atkStart = ()=>{\r\n        setPosition(prev=>{return{ ...prev, x:250, y:50, tension:100 }});\r\n        // callback\r\n        return skill3step1();\r\n      };\r\n      const skill3step1 = ()=>{\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:0, y:-100, tension:100 }});\r\n          setBGstatus(prev=>{return{ ...prev, type:'SKILL' }});\r\n          // callback\r\n          skill3step2();\r\n        },3000);\r\n        return timeout;\r\n      };\r\n      const skill3step2 = ()=>{\r\n        const run =  { number: attackerSp };\r\n        TweenMax.to(run, 0.8, {\r\n          number: resultSp,\r\n          onUpdate: () => {\r\n            setAttackerSp(numeral(run.number).format(\"0\"))\r\n          },\r\n        });\r\n        setLinesStatus(prev=>{ return { ...prev, status:'attack' }});\r\n        setShowSkill(prev=>{\r\n          const video = videos[`${prev.name}`].skill3.baseTexture.resource.source;\r\n          video.play();\r\n          return { ...prev, \r\n            status:true, \r\n            type:'3',\r\n            callback:()=>{\r\n              setBGstatus(prev=>{return{ ...prev, type:'STOP', defence:true }});\r\n              setPosition(prev=>{return{ ...prev, x:-400, y:50, tension:1000 }});\r\n              skill3step3();\r\n            }\r\n          };\r\n        });\r\n      };\r\n      const skill3step3 = ()=>{\r\n        const run = { number: targetLife };\r\n        if(isHit) {\r\n          TweenMax.to(run, 0.8, {\r\n            number: resultLife<0 ? 0 : resultLife,\r\n            onUpdate: () => {\r\n              setTargetHp(numeral(run.number).format(\"0\"))\r\n            },\r\n          });\r\n        };\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:550, y:50, tension:50 }});\r\n        },3000);\r\n        return timeout;\r\n      };\r\n      return skill3atkStart();\r\n      case '拾之型―生生流轉':\r\n        setBGstatus({ type:'STANDBY', defence:false, seconds:0 });\r\n        setPosition(prev=>{return{ ...prev, x:550,y:50,tension:100 }});\r\n        const skill4atkStart = ()=>{\r\n          setPosition(prev=>{return{ ...prev, x:250, y:50, tension:100 }});\r\n          // callback\r\n          return skill4step1();\r\n        };\r\n        const skill4step1 = ()=>{\r\n          const timeout = setTimeout(() => {\r\n            setPosition(prev=>{return{ ...prev, x:0, y:-100, tension:100 }});\r\n            setBGstatus(prev=>{return{ ...prev, type:'SKILL' }});\r\n            // callback\r\n            skill4step2();\r\n          },3000);\r\n          return timeout;\r\n        };\r\n        const skill4step2 = ()=>{\r\n          const run =  { number: attackerSp };\r\n          TweenMax.to(run, 0.8, {\r\n            number: resultSp,\r\n            onUpdate: () => {\r\n              setAttackerSp(numeral(run.number).format(\"0\"))\r\n            },\r\n          });\r\n          setLinesStatus(prev=>{ return { ...prev, status:'attack' }});\r\n          setShowSkill(prev=>{\r\n            const video = videos[`${prev.name}`].skill4.baseTexture.resource.source;\r\n            video.play();\r\n            return { ...prev, \r\n              status:true, \r\n              type:'4',\r\n              callback:()=>{\r\n                setBGstatus(prev=>{return{ ...prev, type:'STOP', defence:true }});\r\n                setPosition(prev=>{return{ ...prev, x:-400, y:50, tension:1000 }});\r\n                skill4step3();\r\n              }\r\n            };\r\n          });\r\n        };\r\n        const skill4step3 = ()=>{\r\n          const run = { number: targetLife };\r\n          if(isHit) {\r\n            TweenMax.to(run, 0.8, {\r\n              number: resultLife<0 ? 0 : resultLife,\r\n              onUpdate: () => {\r\n                setTargetHp(numeral(run.number).format(\"0\"))\r\n              },\r\n            });\r\n          };\r\n          const timeout = setTimeout(() => {\r\n            setPosition(prev=>{return{ ...prev, x:550, y:50, tension:50 }});\r\n          },3000);\r\n          return timeout;\r\n        };\r\n        return skill4atkStart();\r\n    default:\r\n      setBGstatus({ type:'STANDBY', defence:false, seconds:1200 });\r\n      setPosition(prev=>{return{ ...prev, x:550,y:50,tension:100 }});\r\n      const atkStart = ()=>{\r\n        setPosition(prev=>{return{ ...prev, x:250, y:50, tension:100 }});\r\n        // callback\r\n        return step1();\r\n      };\r\n      const step1 = ()=>{\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:0, y:50, tension:100 }});\r\n          setBGstatus(prev=>{return{ ...prev, type:'SKILL' }});\r\n          // callback\r\n          step2();\r\n        },3000);\r\n        return timeout;\r\n      };\r\n      const step2 = ()=>{\r\n        const run =  { number: attackerSp };\r\n        TweenMax.to(run, 0.8, {\r\n          number: resultSp,\r\n          onUpdate: () => {\r\n            setAttackerSp(numeral(run.number).format(\"0\"))\r\n          },\r\n        });\r\n        setLinesStatus(prev=>{ return { ...prev, status:'attack' }});\r\n        const timeout = setTimeout(() => {\r\n          setBGstatus(prev=>{return{ ...prev, type:'STOP', defence:true }});\r\n          // callback\r\n          step3();\r\n        },3000);\r\n        return timeout;\r\n      };\r\n      const step3 = ()=>{\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:-250, y:50, tension:1000 }});\r\n          // callback\r\n          step4();\r\n        },1000);\r\n        return timeout;\r\n      };\r\n      const step4 = ()=>{\r\n        const run = { number: targetLife };\r\n        if(isHit) {\r\n          TweenMax.to(run, 0.8, {\r\n            number: resultLife<0 ? 0 : resultLife,\r\n            onUpdate: () => {\r\n              setTargetHp(numeral(run.number).format(\"0\"))\r\n            },\r\n          });\r\n        };\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:550, y:50, tension:50 }});\r\n        },3000);\r\n        return timeout;\r\n      };\r\n      return atkStart();\r\n  }\r\n};","import React from \"react\";\r\nimport { loader } from '../../../components/DataLoader';\r\nimport { Spring } from 'react-spring/renderprops';\r\nimport { Sprite } from '@inlet/react-pixi/animated';\r\n\r\nexport const ShowType = ({\r\n  skillName,\r\n  attackerName,\r\n  position,\r\n}) =>{\r\n  switch (skillName) {\r\n    case `斬擊`:\r\n      return <Spring\r\n        from={{ x:550, y:50 }}\r\n        to={{ x:position.x, y:position.y }}\r\n        config={{ \r\n          mass:1,\r\n          tension: position.tension,\r\n          friction:20,\r\n        }}\r\n      >\r\n      {props => \r\n        <Sprite\r\n          zIndex={3}\r\n          width={200}\r\n          height={200}\r\n          anchor={0.5}\r\n          image={loader.resources[`${attackerName}-fight-typeA`].data}\r\n          {...props}\r\n        />}\r\n      </Spring>\r\n    case `防禦`:\r\n      return <Spring\r\n        from={{ x:650, y:50 }}\r\n        to={{ x:position.x, y:position.y }}\r\n        config={{ \r\n          mass:1,\r\n          tension: position.tension,\r\n          friction:20,\r\n        }}\r\n      >\r\n      {props => \r\n        <Sprite\r\n          zIndex={2}\r\n          width={200}\r\n          height={200}\r\n          anchor={0.5}\r\n          alpha={position.alpha}\r\n          tint={position.tint}\r\n          image={loader.resources[`${attackerName}-fight-typeA`].data}\r\n          {...props}\r\n        />}\r\n      </Spring>\r\n    default:\r\n      return <Spring\r\n        from={{ x:550, y:50 }}\r\n        to={{ x:position.x, y:position.y }}\r\n        config={{ \r\n          mass:1,\r\n          tension: position.tension,\r\n          friction:20,\r\n        }}\r\n      >\r\n      {props => \r\n        <Sprite\r\n          zIndex={3}\r\n          width={200}\r\n          height={200}\r\n          anchor={0.5}\r\n          image={loader.resources[`${attackerName}-fight-typeA`].data}\r\n          {...props}\r\n        />}\r\n      </Spring>\r\n    };\r\n};","import React from \"react\";\r\n// part\r\nimport { SkillShowProtoType } from \"../../SkillShowProtoType\";\r\nimport { steps } from \"./steps\";\r\nimport { ShowType } from \"./ShowType\";\r\n\r\nexport const TanjirouSkill = ( props )=>{\r\n  return <SkillShowProtoType \r\n    {...props}\r\n    defXPostion={550}\r\n    steps={steps}\r\n    ShowType={ShowType}\r\n  />\r\n};","import { TweenMax } from 'gsap';\r\nimport numeral from \"numeral\";\r\nexport const steps = ({\r\n  skillName='',\r\n  isHit=false,\r\n  targetLife=0,\r\n  attackerSp=0,\r\n  resultLife=0,\r\n  resultSp=0,\r\n  BGstatus={},\r\n  setBGstatus=null,\r\n  setAnimeIsDone=null,\r\n  setTargetHp=null,\r\n  setAttackerSp=null,\r\n  setLinesStatus=null,\r\n  setPosition=null,\r\n  setShowSkill=null\r\n}) => {\r\n  // 技能動畫:\r\n  switch (skillName) {\r\n    case '防禦':\r\n      setPosition(prev=>{return{ ...prev, x:200, y:50, tension:100 }});\r\n      const defStart = ()=>{\r\n        if(isHit){\r\n          return isHitStep();\r\n        }else return isDodge();\r\n      };\r\n      const isHitStep = ()=> {\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:250, y:50, mass:2, \r\n            friction:5, tension:1000, tint:0xd00000}});\r\n          // callback\r\n          if(resultLife<=0){\r\n            return isDead({ type:'dead' });\r\n          }else return next({ type:'def' });\r\n        },BGstatus.seconds);\r\n        return timeout;\r\n      };\r\n      const isDodge = ()=>{\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:250, y:0 }});\r\n          // callback\r\n          next({ type:'dodge' });\r\n        },BGstatus.seconds);\r\n        return timeout;\r\n      };\r\n      const isDead = ({ type })=> {\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:200, y:50, \r\n            friction:2, tint:0x03071e\r\n          }});\r\n          setLinesStatus(prev=>{ \r\n            return { \r\n              status: type,\r\n              character: prev.character===\"USER\" ? \"ENEMY\" : \"USER\"\r\n            };\r\n          });\r\n          // callback\r\n          isDeadStep2();\r\n        },5000);\r\n        return timeout;\r\n      };\r\n      const isDeadStep2 = ()=>{\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return { ...prev, alpha:0 }});\r\n          // callback\r\n          end();\r\n        },3000);\r\n        return timeout;\r\n      };\r\n      const next = ({ type })=>{\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:200, y:50, mass:1, \r\n            friction:20, tension:170, tint:0xffffff}});\r\n          setLinesStatus(prev=>{ \r\n            return { \r\n              status: type,\r\n              character: prev.character===\"USER\" ? \"ENEMY\" : \"USER\"\r\n            };\r\n          });\r\n          // callback\r\n          end();\r\n        },5000);\r\n        return timeout;\r\n      };\r\n      const end = ()=> {\r\n        const timeout = setTimeout(() => {\r\n          // callback\r\n          setAnimeIsDone(true);\r\n        },3000);\r\n        return timeout;\r\n      };\r\n      return defStart();\r\n    // ATK\r\n    default:\r\n      setBGstatus({ type:'STANDBY', defence:false, seconds:1200 });\r\n      setPosition(prev=>{return{ ...prev, x:550,y:50,tension:100 }});\r\n      const atkStart = ()=>{\r\n        setPosition(prev=>{return{ ...prev, x:250, y:50, tension:100 }});\r\n        // callback\r\n        return step1();\r\n      };\r\n      const step1 = ()=>{\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:0, y:50, tension:100 }});\r\n          setBGstatus(prev=>{return{ ...prev, type:'SKILL' }});\r\n          // callback\r\n          step2();\r\n        },3000);\r\n        return timeout;\r\n      };\r\n      const step2 = ()=>{\r\n        const run =  { number: attackerSp };\r\n        TweenMax.to(run, 0.8, {\r\n          number: resultSp,\r\n          onUpdate: () => {\r\n            setAttackerSp(numeral(run.number).format(\"0\"))\r\n          },\r\n        });\r\n        setLinesStatus(prev=>{ return { ...prev, status:'attack' }});\r\n        const timeout = setTimeout(() => {\r\n          setBGstatus(prev=>{return{ ...prev, type:'STOP', defence:true }});\r\n          // callback\r\n          step3();\r\n        },3000);\r\n        return timeout;\r\n      };\r\n      const step3 = ()=>{\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:-250, y:50, tension:1000 }});\r\n          // callback\r\n          step4();\r\n        },1000);\r\n        return timeout;\r\n      };\r\n      const step4 = ()=>{\r\n        const run = { number: targetLife };\r\n        if(isHit) {\r\n          TweenMax.to(run, 0.8, {\r\n            number: resultLife<0 ? 0 : resultLife,\r\n            onUpdate: () => {\r\n              setTargetHp(numeral(run.number).format(\"0\"))\r\n            },\r\n          });\r\n        };\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:550, y:50, tension:50 }});\r\n        },3000);\r\n        return timeout;\r\n      };\r\n      return atkStart();\r\n  }\r\n};","import React from \"react\";\r\nimport { loader } from '../../../components/DataLoader';\r\nimport { Spring } from 'react-spring/renderprops';\r\nimport { Sprite } from '@inlet/react-pixi/animated';\r\n\r\nexport const ShowType = ({\r\n  skillName,\r\n  attackerName,\r\n  position,\r\n}) =>{\r\n  switch (skillName) {\r\n    case `防禦`:\r\n      return <Spring\r\n        from={{ x:650, y:50 }}\r\n        to={{ x:position.x, y:position.y }}\r\n        config={{ \r\n          mass:1,\r\n          tension: position.tension,\r\n          friction:20,\r\n        }}\r\n      >\r\n      {props => \r\n        <Sprite\r\n          zIndex={2}\r\n          width={200}\r\n          height={200}\r\n          anchor={0.5}\r\n          alpha={position.alpha}\r\n          tint={position.tint}\r\n          image={loader.resources[`${attackerName}-fight`].data}\r\n          {...props}\r\n        />}\r\n      </Spring>\r\n    default:\r\n      return <Spring\r\n        from={{ x:550, y:50 }}\r\n        to={{ x:position.x, y:position.y }}\r\n        config={{ \r\n          mass:1,\r\n          tension: position.tension,\r\n          friction:20,\r\n        }}\r\n      >\r\n      {props => \r\n        <Sprite\r\n          zIndex={3}\r\n          width={200}\r\n          height={200}\r\n          anchor={0.5}\r\n          image={loader.resources[`${attackerName}-fight`].data}\r\n          {...props}\r\n        />}\r\n      </Spring>\r\n    };\r\n};","import React from \"react\";\r\n// part\r\nimport { SkillShowProtoType } from \"../../SkillShowProtoType\";\r\nimport { steps } from \"./steps\";\r\nimport { ShowType } from \"./ShowType\";\r\n\r\nexport const NezukoSkill = ( props )=>{\r\n  return <SkillShowProtoType \r\n    {...props}\r\n    defXPostion={550}\r\n    steps={steps}\r\n    ShowType={ShowType}\r\n  />\r\n};","import { TweenMax } from 'gsap';\r\nimport numeral from \"numeral\";\r\nimport { videos } from '../../../components/DataLoader';\r\nexport const steps = ({\r\n  skillName='',\r\n  isHit=false,\r\n  targetLife=0,\r\n  attackerSp=0,\r\n  resultLife=0,\r\n  resultSp=0,\r\n  BGstatus={},\r\n  setBGstatus=null,\r\n  setAnimeIsDone=null,\r\n  setTargetHp=null,\r\n  setAttackerSp=null,\r\n  setLinesStatus=null,\r\n  setPosition=null,\r\n  setShowSkill=null\r\n}) => {\r\n  // 技能動畫:\r\n  switch (skillName) {\r\n    case '防禦':\r\n      setPosition(prev=>{return{ ...prev, x:200, y:50, tension:100 }});\r\n      const defStart = ()=>{\r\n        if(isHit){\r\n          return isHitStep();\r\n        }else return isDodge();\r\n      };\r\n      const isHitStep = ()=> {\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:250, y:50, mass:2, \r\n            friction:5, tension:1000, tint:0xd00000}});\r\n          // callback\r\n          if(resultLife<=0){\r\n            return isDead({ type:'dead' });\r\n          }else return next({ type:'def' });\r\n        },BGstatus.seconds);\r\n        return timeout;\r\n      };\r\n      const isDodge = ()=>{\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:250, y:0 }});\r\n          // callback\r\n          next({ type:'dodge' });\r\n        },BGstatus.seconds);\r\n        return timeout;\r\n      };\r\n      const isDead = ({ type })=> {\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:200, y:50, \r\n            friction:2, tint:0x03071e\r\n          }});\r\n          setLinesStatus(prev=>{ \r\n            return { \r\n              status: type,\r\n              character: prev.character===\"USER\" ? \"ENEMY\" : \"USER\"\r\n            };\r\n          });\r\n          // callback\r\n          isDeadStep2();\r\n        },5000);\r\n        return timeout;\r\n      };\r\n      const isDeadStep2 = ()=>{\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return { ...prev, alpha:0 }});\r\n          // callback\r\n          end();\r\n        },3000);\r\n        return timeout;\r\n      };\r\n      const next = ({ type })=>{\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:200, y:50, mass:1, \r\n            friction:20, tension:170, tint:0xffffff}});\r\n          setLinesStatus(prev=>{ \r\n            return { \r\n              status: type,\r\n              character: prev.character===\"USER\" ? \"ENEMY\" : \"USER\"\r\n            };\r\n          });\r\n          // callback\r\n          end();\r\n        },5000);\r\n        return timeout;\r\n      };\r\n      const end = ()=> {\r\n        const timeout = setTimeout(() => {\r\n          // callback\r\n          setAnimeIsDone(true);\r\n        },3000);\r\n        return timeout;\r\n      };\r\n      return defStart();\r\n    // ATK\r\n    case '壹之型―霹靂一閃':\r\n      setBGstatus({ type:'STANDBY', defence:false, seconds:0 });\r\n      setPosition(prev=>{return{ ...prev, x:550,y:50,tension:100 }});\r\n      const skill2atkStart = ()=>{\r\n        setPosition(prev=>{return{ ...prev, x:250, y:50, tension:100 }});\r\n        // callback\r\n        return skill2step1();\r\n      };\r\n      const skill2step1 = ()=>{\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:0, tension:100 }});\r\n          setBGstatus(prev=>{return{ ...prev, type:'SKILL' }});\r\n          // callback\r\n          skill2step2();\r\n        },3000);\r\n        return timeout;\r\n      };\r\n      const skill2step2 = ()=>{\r\n        const run =  { number: attackerSp };\r\n        TweenMax.to(run, 0.8, {\r\n          number: resultSp,\r\n          onUpdate: () => {\r\n            setAttackerSp(numeral(run.number).format(\"0\"))\r\n          },\r\n        });\r\n        setLinesStatus(prev=>{ return { ...prev, status:'attack' }});\r\n        setShowSkill(prev=>{\r\n          const video = videos[`${prev.name}`].skill2.baseTexture.resource.source;\r\n          video.play();\r\n          return { ...prev, \r\n            status:true, \r\n            type:'2',\r\n            callback:()=>{\r\n              setBGstatus(prev=>{return{ ...prev, type:'STOP', defence:true }});\r\n              setPosition(prev=>{return{ ...prev, x:-400, tension:1000 }});\r\n              skill2step3();\r\n            }\r\n          };\r\n        });\r\n      };\r\n      const skill2step3 = ()=>{\r\n        const run = { number: targetLife };\r\n        if(isHit) {\r\n          TweenMax.to(run, 0.8, {\r\n            number: resultLife<0 ? 0 : resultLife,\r\n            onUpdate: () => {\r\n              setTargetHp(numeral(run.number).format(\"0\"))\r\n            },\r\n          });\r\n        };\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:550, y:50, tension:50 }});\r\n        },3000);\r\n        return timeout;\r\n      };\r\n      return skill2atkStart();\r\n    case '壹之型―霹靂一閃―六連':\r\n      setBGstatus({ type:'STANDBY', defence:false, seconds:0 });\r\n      setPosition(prev=>{return{ ...prev, x:550,y:50,tension:100 }});\r\n      const skill3atkStart = ()=>{\r\n        setPosition(prev=>{return{ ...prev, x:250, y:50, tension:100 }});\r\n        // callback\r\n        return skill3step1();\r\n      };\r\n      const skill3step1 = ()=>{\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:0, y:-100, tension:100 }});\r\n          setBGstatus(prev=>{return{ ...prev, type:'SKILL' }});\r\n          // callback\r\n          skill3step2();\r\n        },3000);\r\n        return timeout;\r\n      };\r\n      const skill3step2 = ()=>{\r\n        const run =  { number: attackerSp };\r\n        TweenMax.to(run, 0.8, {\r\n          number: resultSp,\r\n          onUpdate: () => {\r\n            setAttackerSp(numeral(run.number).format(\"0\"))\r\n          },\r\n        });\r\n        setLinesStatus(prev=>{ return { ...prev, status:'attack' }});\r\n        setShowSkill(prev=>{\r\n          const video = videos[`${prev.name}`].skill3.baseTexture.resource.source;\r\n          video.play();\r\n          return { ...prev, \r\n            status:true, \r\n            type:'3',\r\n            callback:()=>{\r\n              setBGstatus(prev=>{return{ ...prev, type:'STOP', defence:true }});\r\n              setPosition(prev=>{return{ ...prev, x:-400, y:50, tension:1000 }});\r\n              skill3step3();\r\n            }\r\n          };\r\n        });\r\n      };\r\n      const skill3step3 = ()=>{\r\n        const run = { number: targetLife };\r\n        if(isHit) {\r\n          TweenMax.to(run, 0.8, {\r\n            number: resultLife<0 ? 0 : resultLife,\r\n            onUpdate: () => {\r\n              setTargetHp(numeral(run.number).format(\"0\"))\r\n            },\r\n          });\r\n        };\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:550, y:50, tension:50 }});\r\n        },3000);\r\n        return timeout;\r\n      };\r\n      return skill3atkStart();\r\n    default:\r\n      setBGstatus({ type:'STANDBY', defence:false, seconds:1200 });\r\n      setPosition(prev=>{return{ ...prev, x:550,y:50,tension:100 }});\r\n      const atkStart = ()=>{\r\n        setPosition(prev=>{return{ ...prev, x:250, y:50, tension:100 }});\r\n        // callback\r\n        return step1();\r\n      };\r\n      const step1 = ()=>{\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:0, y:50, tension:100 }});\r\n          setBGstatus(prev=>{return{ ...prev, type:'SKILL' }});\r\n          // callback\r\n          step2();\r\n        },3000);\r\n        return timeout;\r\n      };\r\n      const step2 = ()=>{\r\n        const run =  { number: attackerSp };\r\n        TweenMax.to(run, 0.8, {\r\n          number: resultSp,\r\n          onUpdate: () => {\r\n            setAttackerSp(numeral(run.number).format(\"0\"))\r\n          },\r\n        });\r\n        setLinesStatus(prev=>{ return { ...prev, status:'attack' }});\r\n        const timeout = setTimeout(() => {\r\n          setBGstatus(prev=>{return{ ...prev, type:'STOP', defence:true }});\r\n          // callback\r\n          step3();\r\n        },3000);\r\n        return timeout;\r\n      };\r\n      const step3 = ()=>{\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:-250, y:50, tension:1000 }});\r\n          // callback\r\n          step4();\r\n        },1000);\r\n        return timeout;\r\n      };\r\n      const step4 = ()=>{\r\n        const run = { number: targetLife };\r\n        if(isHit) {\r\n          TweenMax.to(run, 0.8, {\r\n            number: resultLife<0 ? 0 : resultLife,\r\n            onUpdate: () => {\r\n              setTargetHp(numeral(run.number).format(\"0\"))\r\n            },\r\n          });\r\n        };\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:550, y:50, tension:50 }});\r\n        },3000);\r\n        return timeout;\r\n      };\r\n      return atkStart();\r\n  }\r\n};","import React from \"react\";\r\nimport { loader } from '../../../components/DataLoader';\r\nimport { Spring } from 'react-spring/renderprops';\r\nimport { Sprite } from '@inlet/react-pixi/animated';\r\n\r\nexport const ShowType = ({\r\n  skillName,\r\n  attackerName,\r\n  position,\r\n}) =>{\r\n  switch (skillName) {\r\n    case `斬擊`:\r\n      return <Spring\r\n        from={{ x:550, y:50 }}\r\n        to={{ x:position.x, y:position.y }}\r\n        config={{ \r\n          mass:1,\r\n          tension: position.tension,\r\n          friction:20,\r\n        }}\r\n      >\r\n      {props => \r\n        <Sprite\r\n          zIndex={3}\r\n          width={200}\r\n          height={200}\r\n          anchor={0.5}\r\n          image={loader.resources[`${attackerName}-fight`].data}\r\n          {...props}\r\n        />}\r\n      </Spring>\r\n    case `防禦`:\r\n      return <Spring\r\n        from={{ x:650, y:50 }}\r\n        to={{ x:position.x, y:position.y }}\r\n        config={{ \r\n          mass:1,\r\n          tension: position.tension,\r\n          friction:20,\r\n        }}\r\n      >\r\n      {props => \r\n        <Sprite\r\n          zIndex={2}\r\n          width={200}\r\n          height={200}\r\n          anchor={0.5}\r\n          alpha={position.alpha}\r\n          tint={position.tint}\r\n          image={loader.resources[`${attackerName}-fight`].data}\r\n          {...props}\r\n        />}\r\n      </Spring>\r\n    default:\r\n      return <Spring\r\n        from={{ x:550, y:50 }}\r\n        to={{ x:position.x, y:position.y }}\r\n        config={{ \r\n          mass:1,\r\n          tension: position.tension,\r\n          friction:20,\r\n        }}\r\n      >\r\n      {props => \r\n        <Sprite\r\n          zIndex={3}\r\n          width={200}\r\n          height={200}\r\n          anchor={0.5}\r\n          image={loader.resources[`${attackerName}-fight`].data}\r\n          {...props}\r\n        />}\r\n      </Spring>\r\n    };\r\n};","import React from \"react\";\r\n// part\r\nimport { SkillShowProtoType } from \"../../SkillShowProtoType\";\r\nimport { steps } from \"./steps\";\r\nimport { ShowType } from \"./ShowType\";\r\n\r\nexport const ZenitsuSkill = ( props )=>{\r\n  return <SkillShowProtoType \r\n    {...props}\r\n    defXPostion={550}\r\n    steps={steps}\r\n    ShowType={ShowType}\r\n  />\r\n};","import React from \"react\";\r\nimport { TanjirouSkill } from \"./TanjirouSkill/Index\";\r\nimport { NezukoSkill } from \"./Nezuko/Index\";\r\nimport { ZenitsuSkill } from \"./Zenitsu/Index\";\r\nexport const ChessSkillShow = ({\r\n  attacker={},\r\n  skill={},\r\n  BGstatus,\r\n  isHit=false,\r\n  targetLife=0,\r\n  attackerSp=0,\r\n  resultLife=0,\r\n  resultSp=0,\r\n  setBGstatus,\r\n  setAnimeIsDone,\r\n  setTargetHp,\r\n  setAttackerSp,\r\n  setLinesStatus,\r\n  setShowSkill\r\n})=>{\r\n  const defaultprops = {\r\n    skillName: skill.name,\r\n    attackerName: attacker.name,\r\n    isHit: isHit,\r\n    targetLife: targetLife,\r\n    attackerSp: attackerSp,\r\n    resultLife: resultLife,\r\n    resultSp: resultSp,\r\n    BGstatus: BGstatus,\r\n    setBGstatus: setBGstatus,\r\n    setAnimeIsDone: setAnimeIsDone,\r\n    setTargetHp: setTargetHp,\r\n    setAttackerSp: setAttackerSp,\r\n    setLinesStatus: setLinesStatus,\r\n    setShowSkill: setShowSkill\r\n  }\r\n  switch (attacker.name) {\r\n    case `Tanjirou`:\r\n      return <TanjirouSkill {...defaultprops}/>\r\n    case `Nezuko`:\r\n      return <NezukoSkill {...defaultprops}/>\r\n    case `Zenitsu`:\r\n      return <ZenitsuSkill {...defaultprops}/>\r\n    default:\r\n      return;\r\n  };\r\n};\r\n\r\n","import { TweenMax } from 'gsap';\r\nimport numeral from \"numeral\";\r\nexport const steps = ({\r\n  skillName='',\r\n  isHit=false,\r\n  targetLife=0,\r\n  attackerSp=0,\r\n  resultLife=0,\r\n  resultSp=0,\r\n  BGstatus={},\r\n  setBGstatus=null,\r\n  setAnimeIsDone=null,\r\n  setTargetHp=null,\r\n  setAttackerSp=null,\r\n  setLinesStatus=null,\r\n  setPosition=null,\r\n  setShowSkill=null\r\n}) => {\r\n  switch (skillName) {\r\n    case '防禦':\r\n      setPosition(prev=>{return{ ...prev, x:-200, tension:150 }});\r\n      const defStart = ()=>{\r\n        if(isHit){\r\n          return isHitStep();\r\n        }else return isDodge();\r\n      };\r\n      const isHitStep = ()=> {\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:-235, y:20, mass:2, \r\n            friction:5, tension:1000, tint:0xd00000}});\r\n          // callback\r\n          if(resultLife<=0){\r\n            return isDead({ type:'dead' });\r\n          }else return next({ type:'def' });\r\n        },BGstatus.seconds);\r\n        return timeout;\r\n      }\r\n      const isDodge = ()=>{\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:-235, y:-10 }});\r\n          // callback\r\n          next({ type:'dodge' });\r\n        },BGstatus.seconds);\r\n        return timeout;\r\n      };\r\n      const isDead = ({ type })=> {\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:-200, y:10, \r\n            friction:2, tint:0x03071e\r\n          }});\r\n          setLinesStatus(prev=>{ \r\n            return { \r\n              status: type,\r\n              character: prev.character===\"USER\" ? \"ENEMY\" : \"USER\"\r\n            };\r\n          });\r\n          // callback\r\n          isDeadStep2();\r\n        },5000);\r\n        return timeout;\r\n      };\r\n      const isDeadStep2 = ()=>{\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return { ...prev, alpha:0 }});\r\n          // callback\r\n          end();\r\n        },3000);\r\n        return timeout;\r\n      };\r\n      const next = ({ type })=>{\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:-200, y:10, mass:1, \r\n            friction:20, tension:170, tint:0xffffff}});\r\n          setLinesStatus(prev=>{ \r\n            return { \r\n              status: type,\r\n              character: prev.character===\"USER\" ? \"ENEMY\" : \"USER\"\r\n            };\r\n          });\r\n          // callback\r\n          end();\r\n        },5000);\r\n        return timeout;\r\n      };\r\n      const end = ()=> {\r\n        const timeout = setTimeout(() => {\r\n          // callback\r\n          setAnimeIsDone(true);\r\n        },3000);\r\n        return timeout;\r\n      };\r\n      return defStart();\r\n    // ATK\r\n    default:\r\n      setBGstatus({ type:'ENEMYSTANDBY', defence:false, seconds:1200 });\r\n      setPosition(prev=>{return{ ...prev, x:-600, tension:100 }});\r\n      const atkStart = ()=>{\r\n        setPosition(prev=>{\r\n          return{ ...prev, x:-200, tension:100 }});\r\n        // callback\r\n        return step1();\r\n      };\r\n      const step1 = ()=>{\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:0, tension:100 }});\r\n          setBGstatus(prev=>{return{ ...prev, type:'ENEMYSKILL' }});\r\n          // callback\r\n          step2();\r\n        },3000);\r\n        return timeout;\r\n      };\r\n      const step2 = ()=>{\r\n        const run =  { number: attackerSp };\r\n        TweenMax.to(run, 0.8, {\r\n          number: resultSp,\r\n          onUpdate: () => {\r\n            setAttackerSp(numeral(run.number).format(\"0\"))\r\n          },\r\n        });\r\n        setLinesStatus(prev=>{ return { ...prev, status:'attack' }});\r\n        const timeout = setTimeout(() => {\r\n          setBGstatus(prev=>{return{ ...prev, type:'STOP', defence:true }});\r\n          // callback\r\n          step3();\r\n        },3000);\r\n        return timeout;\r\n      };\r\n      const step3 = ()=>{\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:175, tension:1000 }});\r\n          // callback\r\n          step4();\r\n        },1000);\r\n        return timeout;\r\n      };\r\n      const step4 = ()=>{\r\n        const run = { number: targetLife };\r\n        if(isHit) {\r\n          TweenMax.to(run, 0.8, {\r\n            number: resultLife<0 ? 0 : resultLife,\r\n            onUpdate: () => {\r\n              setTargetHp(numeral(run.number).format(\"0\"))\r\n            },\r\n          });\r\n        };\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:-600, tension:50 }});\r\n        },3000);\r\n        return timeout;\r\n      };\r\n      return atkStart();\r\n  }\r\n};","import React from \"react\";\r\nimport { loader } from '../../../components/DataLoader';\r\nimport { Spring } from 'react-spring/renderprops';\r\nimport { Sprite } from '@inlet/react-pixi/animated';\r\n\r\nexport const ShowType = ({\r\n  skillName,\r\n  attackerName,\r\n  position,\r\n}) =>{\r\n  switch (skillName) {\r\n    case '防禦':\r\n      return <Spring\r\n        from={{ x:-600, y:10 }}\r\n        to={{ x:position.x, y:position.y }}\r\n        config={{ \r\n          mass: position.mass,\r\n          tension: position.tension,\r\n          friction: position.friction,\r\n        }}\r\n      >\r\n      {props => \r\n        <Sprite\r\n          zIndex={2}\r\n          width={300}\r\n          height={300}\r\n          anchor={0.5}\r\n          alpha={position.alpha}\r\n          tint={position.tint}\r\n          image={loader.resources[`${attackerName}-fight`].data}\r\n          {...props}\r\n        />}\r\n      </Spring>\r\n    default:\r\n      return <Spring\r\n        from={{ x:-600, y:50 }}\r\n        to={{ x:position.x, y:position.y }}\r\n        config={{ \r\n          mass:1,\r\n          tension: position.tension,\r\n          friction:20,\r\n        }}\r\n      >\r\n      {props => \r\n        <Sprite\r\n          zIndex={3}\r\n          width={300}\r\n          height={300}\r\n          anchor={0.5}\r\n          image={loader.resources[`${attackerName}-fight`].data}\r\n          {...props}\r\n        />}\r\n      </Spring>\r\n  }\r\n};","import React from \"react\";\r\n// part\r\nimport { SkillShowProtoType } from \"../../SkillShowProtoType\";\r\nimport { steps } from \"./steps\";\r\nimport { ShowType } from \"./ShowType\";\r\n\r\nexport const TeoniSkill = ( props )=>{\r\n  return <SkillShowProtoType \r\n    {...props}\r\n    defXPostion={-600}\r\n    steps={steps}\r\n    ShowType={ShowType}\r\n  />\r\n};\r\n","import React from \"react\";\r\nimport { TeoniSkill } from \"./TeoniSkill/Index\";\r\nexport const EnemyChessSkillShow = ({\r\n  attacker={},\r\n  skill={},\r\n  BGstatus,\r\n  isHit=false,\r\n  targetLife=0,\r\n  attackerSp=0,\r\n  resultLife=0,\r\n  resultSp=0,\r\n  setBGstatus,\r\n  setAnimeIsDone,\r\n  setTargetHp,\r\n  setAttackerSp,\r\n  setLinesStatus,\r\n  setShowSkill\r\n})=>{\r\n  const defaultprops = {\r\n    skillName: skill.name,\r\n    attackerName: attacker.name,\r\n    isHit: isHit,\r\n    targetLife: targetLife,\r\n    attackerSp: attackerSp,\r\n    resultLife: resultLife,\r\n    resultSp: resultSp,\r\n    BGstatus: BGstatus,\r\n    setBGstatus: setBGstatus,\r\n    setAnimeIsDone: setAnimeIsDone,\r\n    setTargetHp: setTargetHp,\r\n    setAttackerSp: setAttackerSp,\r\n    setLinesStatus: setLinesStatus,\r\n    setShowSkill: setShowSkill\r\n  }\r\n  switch (attacker.name) {\r\n    case `Teoni`:\r\n      return <TeoniSkill {...defaultprops}/>\r\n    default:\r\n      return;\r\n  };\r\n};\r\n","import React,{ useState, useEffect } from 'react';\r\nimport { Container, Graphics, Sprite } from '@inlet/react-pixi/animated';\r\nimport { chessDead, chessRoundRest } from \"../../../reducer/chess\";\r\nimport { enemyChessDead } from \"../../../reducer/enemyChess\";\r\nimport { videos, loader } from '../../DataLoader';\r\n// part\r\nimport { AnimeShowBG } from \"./AinmeShowBG\";\r\nimport { TopBar } from \"./TopBar\";\r\nimport { BottomBar } from \"./BottomBar\";\r\n// skill\r\nimport { ChessSkillShow } from \"../../../constants/ChessSkillShow/Index\";\r\nimport { EnemyChessSkillShow } from \"../../../constants/EnemyChessSkillShow/Index\";\r\nexport const BattleAnimeShow = ({\r\n  props\r\n}) =>{\r\n  const { stageStatus, animeShow, chess, enemyChess, \r\n    setMoveStep, setAnimeShow, setUsualTip, setCurrentChess, dispatch } = props;\r\n  const { target, attacker } = animeShow;\r\n  // CreateContent\r\n  const CreateContent = ()=>{\r\n    const [ BGstatus, setBGstatus ] = useState({ \r\n      type:'STANDBY',\r\n      defence: false,\r\n      seconds: 1200\r\n    });\r\n    const [ BGprop, setBGpops ] = useState({ toX:400, duration: 20000 });\r\n    const [ SkBGprop, setSkBGpops ] = useState({ toX:400, duration: 500 });\r\n    const [ targetHp, setTargetHp ] = useState(target.prevLife);\r\n    const [ attackerSp, setAttackerSp ] = useState(attacker.prevSP);\r\n    const [ animeIsDone, setAnimeIsDone ] = useState(false);\r\n    const [ linesStatus, setLinesStatus ] = useState({ \r\n      character: animeShow.type,\r\n      status:'default'\r\n    });\r\n    const [ showSkill, setShowSkill ] = useState({ \r\n      status:false,\r\n      type:'0',\r\n      name: chess[attacker.key].name,\r\n      callback: null\r\n    });\r\n    const fetchChessType = ( type='' )=>{\r\n      switch (type) {\r\n        case 'CHESS':\r\n          if(animeShow.type===\"USER\"){\r\n            return chess[typeof(animeShow.attacker.key)!=='number'?0:animeShow.attacker.key];\r\n          }else return chess[typeof(animeShow.target.key)!=='number'?0:animeShow.target.key];\r\n        case 'ENEMYCHESS':\r\n          if(animeShow.type===\"USER\"){\r\n            return enemyChess[typeof(animeShow.target.key)!=='number'?0:animeShow.target.key];\r\n          }else return enemyChess[typeof(animeShow.attacker.key)!=='number'?0:animeShow.attacker.key];\r\n        default:\r\n          break;\r\n      }; \r\n    };\r\n    const CreateSkillSprite = () => {\r\n      const video = videos[`${chess[attacker.key].name}`][`skill${showSkill.type}`];\r\n      const videoDom = video.baseTexture.resource.source;\r\n      videoDom.onended = function() {\r\n        setShowSkill(prev=>{\r\n          videoDom.currentTime = 0;\r\n          return { ...prev, status:false }\r\n        });\r\n        showSkill.callback();\r\n      };\r\n      return <Sprite\r\n        zIndex={99}\r\n        width={600}\r\n        height={370}\r\n        anchor={0.5}\r\n        x={0}\r\n        y={-35}\r\n        image={loader.resources[`${chess[attacker.key].name}-talk-attack`].data}\r\n        texture={video}\r\n      />\r\n    }\r\n    //  關閉動畫判斷\r\n    useEffect(()=>{\r\n      if(!animeIsDone){ return };\r\n      setAnimeShow({\r\n        status:false,\r\n        type:'',\r\n        isHit:false,\r\n        attacker:{ key:'', skill:{}, prevSP:0 },\r\n        target:{ key:'', isHit:false, prevLife:0 }\r\n      });\r\n      // result check line\r\n      if(animeShow.type===\"USER\" &&\r\n        enemyChess[target.key].hp <= 0\r\n      ){\r\n        dispatch(enemyChessDead({ key:target.key }));\r\n        setUsualTip({\r\n          title:`已擊敗 ${enemyChess[target.key].cn}!`,\r\n          status:true,\r\n        });\r\n      }else if(animeShow.type===\"ENEMY\" &&\r\n        chess[target.key].hp <= 0\r\n      ){\r\n        dispatch(chessDead({ key:target.key }));\r\n        setUsualTip({\r\n          title:`${chess[target.key].cn} 戰敗`,\r\n          status:true,\r\n        });\r\n      }else if(animeShow.type===\"ENEMY\") {\r\n        dispatch(chessRoundRest());\r\n        setCurrentChess(prev=>{\r\n          return { ...prev, type:\"USERROUND\"\r\n        }});\r\n        setUsualTip({\r\n          title:`我方回合`,\r\n          status:true,\r\n        });\r\n      }else {\r\n        setMoveStep(true);\r\n      };\r\n    },[ animeIsDone ]);\r\n    return <Container sortableChildren={true}>\r\n      <AnimeShowBG\r\n        props={{stageStatus, BGstatus, BGprop, SkBGprop, setBGpops, setSkBGpops}}\r\n      />\r\n      <TopBar\r\n        right={fetchChessType('CHESS')}\r\n        left={fetchChessType('ENEMYCHESS')}\r\n        showType={animeShow.type}\r\n        targetHp={targetHp}\r\n        attackerSp={attackerSp}\r\n      />\r\n      <ChessSkillShow\r\n        attacker={fetchChessType('CHESS')}\r\n        skill={\r\n          animeShow.type===\"USER\"?\r\n          animeShow.attacker.skill:\r\n          { name:'防禦' }\r\n        }\r\n        BGstatus={BGstatus}\r\n        isHit={animeShow.isHit}\r\n        targetLife={target.prevLife}\r\n        attackerSp={attacker.prevSP}\r\n        resultLife={\r\n          target.prevLife -\r\n          animeShow.attacker.skill.atk \r\n        }\r\n        resultSp={\r\n          attacker.prevSP -\r\n          animeShow.attacker.skill.sp\r\n        }\r\n        setBGstatus={setBGstatus}\r\n        setAnimeIsDone={setAnimeIsDone}\r\n        setTargetHp={setTargetHp}\r\n        setAttackerSp={setAttackerSp}\r\n        setLinesStatus={setLinesStatus}\r\n        setShowSkill={setShowSkill}\r\n      />\r\n      <EnemyChessSkillShow\r\n        attacker={fetchChessType('ENEMYCHESS')}\r\n        skill={\r\n          animeShow.type===\"USER\"?\r\n          { name:'防禦' }:\r\n          animeShow.attacker.skill\r\n        }\r\n        BGstatus={BGstatus}\r\n        isHit={animeShow.isHit}\r\n        targetLife={target.prevLife}\r\n        attackerSp={attacker.prevSP}\r\n        resultLife={\r\n          target.prevLife -\r\n          animeShow.attacker.skill.atk \r\n        }\r\n        resultSp={\r\n          attacker.prevSP -\r\n          animeShow.attacker.skill.sp\r\n        }\r\n        setBGstatus={setBGstatus}\r\n        setAnimeIsDone={setAnimeIsDone}\r\n        setTargetHp={setTargetHp}\r\n        setAttackerSp={setAttackerSp}\r\n        setLinesStatus={setLinesStatus}\r\n        setShowSkill={setShowSkill}\r\n      />\r\n      {showSkill.status && <CreateSkillSprite/>}\r\n      <BottomBar\r\n        right={fetchChessType('CHESS')}\r\n        left={fetchChessType('ENEMYCHESS')}\r\n        linesStatus={linesStatus}\r\n      />\r\n      <Sprite\r\n        zIndex={99}\r\n        interactive={true}\r\n        buttonMode={true}\r\n        width={75}\r\n        height={35}\r\n        x={310}\r\n        y={240}\r\n        image={loader.resources[`fightOff`].data}\r\n        pointertap={()=>{\r\n          setAnimeShow({\r\n            status:false,\r\n            type:'',\r\n            isHit:false,\r\n            attacker:{ key:'', skill:{}, prevSP:0 },\r\n            target:{ key:'', isHit:false, prevLife:0 }\r\n          });\r\n          // result check line\r\n          if(animeShow.type===\"USER\" &&\r\n            enemyChess[target.key].hp <= 0\r\n          ){\r\n            dispatch(enemyChessDead({ key:target.key }));\r\n            setUsualTip({\r\n              title:`已擊敗 ${enemyChess[target.key].cn}!`,\r\n              status:true,\r\n            });\r\n          }else if(animeShow.type===\"ENEMY\" &&\r\n            chess[target.key].hp <= 0\r\n          ){\r\n            dispatch(chessDead({ key:target.key }));\r\n            setUsualTip({\r\n              title:`${chess[target.key].cn} 戰敗`,\r\n              status:true,\r\n            });\r\n          }else if(animeShow.type===\"ENEMY\") {\r\n            dispatch(chessRoundRest());\r\n            setCurrentChess(prev=>{\r\n              return { ...prev, type:\"USERROUND\"\r\n            }});\r\n            setUsualTip({\r\n              title:`我方回合`,\r\n              status:true,\r\n            });\r\n          }else {\r\n            setMoveStep(true);\r\n          };\r\n          const clearAllTimeouts = ()=>{\r\n            let id = window.setTimeout(null,0);\r\n            while (id--) { window.clearTimeout(id); };\r\n          };\r\n          clearAllTimeouts();\r\n        }}\r\n      />\r\n    </Container>\r\n  };\r\n  return <Graphics\r\n    x={400}\r\n    y={300}\r\n    zIndex={99}\r\n    draw={g=> {\r\n      g.clear();\r\n      g.beginFill(`0x011627`);\r\n      g.drawRoundedRect(-400,-300,800,600,0);\r\n      g.endFill();\r\n    }}\r\n  >\r\n    <CreateContent/>\r\n  </Graphics>\r\n};","import React from 'react';\r\nimport { Sprite, Graphics, Text } from '@inlet/react-pixi/animated';\r\nimport { loader } from '../DataLoader';\r\nimport * as PIXI from \"pixi.js\";\r\nimport { stageRule } from \"../../constants/stageRule\";\r\nexport const OtherTab = ({ props })=> {\r\n  const {\r\n    stageStatus='',\r\n    roundNum=Number,\r\n    setMoveStep,\r\n    setOtherTab,\r\n    setTipStatus,\r\n    setCurrentChess\r\n  } = props;\r\n  const checkStageRound = ()=>{\r\n    switch (stageStatus) {\r\n      case 'stageOne':\r\n        return 1;\r\n      case 'stageTwo':\r\n        return 2;\r\n      case 'stageThree':\r\n        return 3;\r\n      default:\r\n        return 1;\r\n    };\r\n  };\r\n  return <Graphics\r\n    x={400}\r\n    y={300}\r\n    draw={g=> {\r\n      g.clear();\r\n      g.lineStyle(1,`0xffffff`,1);\r\n      g.beginFill(`0x22223b`);\r\n      g.drawRoundedRect(-200,-150,400,300,8);\r\n      g.endFill();\r\n    }}\r\n  >\r\n    <Sprite\r\n      interactive={true}\r\n      buttonMode={true}\r\n      width={25}\r\n      height={25}\r\n      anchor={0.5}\r\n      x={175}\r\n      y={-125}\r\n      image={loader.resources[`closeIcon`].data}\r\n      pointertap={()=>{\r\n        setMoveStep(true);\r\n        setOtherTab(false);\r\n        setTipStatus(prev=>{\r\n          return {...prev, status:false }\r\n        });\r\n      }}\r\n    />\r\n    <Sprite\r\n      interactive={true}\r\n      buttonMode={true}\r\n      width={75}\r\n      height={35}\r\n      x={105}\r\n      y={90}\r\n      image={loader.resources[`endBtn`].data}\r\n      pointertap={()=>{\r\n        setCurrentChess({\r\n          key:0,\r\n          type:\"ENDROUND\"\r\n        });\r\n        setTipStatus(prev=>{\r\n          return {...prev,\r\n            title:`結束回合?`, \r\n            status:true\r\n          }\r\n        });\r\n      }}\r\n    />\r\n    <Text\r\n      text={`【 第 ${checkStageRound()} 話 】作戰目的`}\r\n      x={-170}\r\n      y={-125}\r\n      style={new PIXI.TextStyle({\r\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 18,\r\n        fill:['#ffffff', '#00ff99'],\r\n      })}\r\n    />\r\n    <Text\r\n      text={stageRule.getIn([stageStatus,'ruleText','win'])}\r\n      x={-150}\r\n      y={-90}\r\n      style={new PIXI.TextStyle({\r\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 16,\r\n        fill:['#ffffff', '#ffffff'],\r\n      })}\r\n    />\r\n    <Text\r\n      text={'戰敗條件'}\r\n      x={-170}\r\n      y={-40}\r\n      style={new PIXI.TextStyle({\r\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 18,\r\n        fill:['#ffffff', '#ee6c4d'],\r\n      })}\r\n    />\r\n    <Text\r\n      text={stageRule.getIn([stageStatus,'ruleText','lose'])}\r\n      x={-150}\r\n      y={-5}\r\n      style={new PIXI.TextStyle({\r\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 16,\r\n        fill:['#ffffff', '#ffffff'],\r\n      })}\r\n    />\r\n    <Text\r\n      text={'回合數'}\r\n      x={-170}\r\n      y={45}\r\n      style={new PIXI.TextStyle({\r\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 18,\r\n        fill:['#ffffff', '#8d99ae'],\r\n      })}\r\n    />\r\n    <Text\r\n      text={`第 ${roundNum} 回`}\r\n      x={-150}\r\n      y={80}\r\n      style={new PIXI.TextStyle({\r\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 16,\r\n        fill:['#ffffff', '#ffffff'],\r\n      })}\r\n    />\r\n  </Graphics>\r\n};\r\n\r\n","import React from 'react';\r\nimport { Container, Sprite, Text } from '@inlet/react-pixi/animated';\r\nimport { loader } from '../../DataLoader';\r\nimport * as PIXI from \"pixi.js\";\r\nexport const EnemyList = ({ \r\n  oder=0,\r\n  enemyRandomSkill=0,\r\n  enemyList=[]\r\n})=>{\r\n  const skill = enemyList[oder].skill;\r\n  return <Container sortableChildren={true}>\r\n    <Sprite\r\n      width={65}\r\n      height={65}\r\n      anchor={0.5}\r\n      x={175}\r\n      y={-75}\r\n      image={loader.resources[`${enemyList[oder].name}-head-default`].data}\r\n    />\r\n    <Text \r\n      text={`${enemyList[oder].cn} / 技能`}\r\n      anchor={{x:0.5}}\r\n      x={175} y={-30}\r\n      style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 18,\r\n        fill:'#ffffff',\r\n      })}/>\r\n    <Text \r\n      text={`${skill[enemyRandomSkill].name}`}\r\n      anchor={{x:0.5}}\r\n      x={175} y={10}\r\n      style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 20,\r\n        fill:['#f15bb5','#e0aaff'],\r\n      })}/>\r\n    <Text \r\n      text={`ATK / ${skill[enemyRandomSkill].atk}`}\r\n      anchor={{x:0.5}}\r\n      x={175} y={40}\r\n      style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 18,\r\n        fill:['#f15bb5','#e0aaff'],\r\n      })}/>\r\n  </Container>\r\n};","import React from 'react';\r\nimport { Container, Graphics, Sprite } from '@inlet/react-pixi/animated';\r\nimport { loader } from '../../DataLoader';\r\nexport const ChessList = ({\r\n  chessList,\r\n  defChess,\r\n  setDefChess\r\n})=>{\r\n  return <Container sortableChildren={true}>\r\n    <Graphics\r\n      x={-250}\r\n      y={-180}\r\n      zIndex={1}\r\n      draw={g=> {\r\n        g.clear();\r\n        g.lineStyle(1,`0xffffff`,1);\r\n        g.beginFill(`0x0f0f1b`);\r\n        g.drawRoundedRect(0,0,100,360,8);\r\n        g.endFill();\r\n      }}\r\n    />\r\n    {chessList.map((v,k)=>{\r\n      const distance = k * 85;\r\n      return <React.Fragment key={k}>\r\n        <Sprite\r\n          interactive={true}\r\n          buttonMode={true}\r\n          width={65}\r\n          height={65}\r\n          anchor={0.5}\r\n          zIndex={2}\r\n          x={-200}\r\n          y={-125 + distance}\r\n          image={loader.resources[`${v.name}-head-default`].data}\r\n          pointertap={()=>setDefChess(k)}\r\n        />\r\n        {k===defChess&&<Graphics\r\n          anchor={0.5}\r\n          x={-200}\r\n          y={-125 + distance}\r\n          zIndex={1}\r\n          draw={g=> {\r\n            g.clear();\r\n            g.beginFill(`0x7b2cbf`);\r\n            g.drawRoundedRect(-38,-38,76,76,5);\r\n            g.endFill();\r\n          }}\r\n        />}\r\n      </React.Fragment>\r\n    })}\r\n  </Container>\r\n};","import React from 'react';\r\nimport { Container, Graphics, Text } from '@inlet/react-pixi/animated';\r\nimport * as PIXI from \"pixi.js\";\r\n\r\nexport const Information = ({\r\n  defChess, chessList, atkEnemy\r\n})=>{\r\n  const dodge = chessList[defChess].dodge - atkEnemy.hitfix>=0 ? chessList[defChess].dodge - atkEnemy.hitfix : 0;\r\n  return <Container sortableChildren={true}>\r\n    <Graphics\r\n      x={-125} y={-150}\r\n    >\r\n      <Text \r\n        text={`選擇防禦：${chessList[defChess].cn}`}\r\n        anchor={{x:0}}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 18,\r\n          fill:'#ffffff',\r\n        })}/>\r\n      <Text \r\n        text={`HP：${chessList[defChess].hp}`}\r\n        anchor={{x:0}}\r\n        y={30}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 18,\r\n          fill:'#ff6b6b',\r\n        })}/>\r\n      <Text \r\n        text={`迴避率：${dodge}%`}\r\n        anchor={{x:0}}\r\n        y={60}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 18,\r\n          fill:['#ffffff', '#4cc9f0'],\r\n        })}/>\r\n    </Graphics>\r\n  </Container>\r\n}","import React,{ useState } from 'react';\r\nimport { Graphics, Sprite } from '@inlet/react-pixi/animated';\r\nimport { loader } from '../../DataLoader';\r\nimport { ProbabilityCount } from \"../../Common/ProbabilityCount\";\r\nimport { chessDefense } from \"../../../reducer/chess\";\r\nimport { enemyChessAttackResult } from \"../../../reducer/enemyChess\";\r\n// common part\r\nimport { EnemyList } from \"./EnemyList\";\r\nimport { ChessList } from \"./ChessList\";\r\nimport { Information } from \"./Information\";\r\nexport const EnemyRoundTab = ({ props })=> {\r\n  const { enemyRoundTab, chess, enemyChess,\r\n    setEnemyRoundTab, setAnimeShow, setCurrentChess, setCurrentBGM, dispatch } = props;\r\n  const chessList = chess.filter(v=>v.debut);\r\n  const enemyList = enemyChess.filter(v=>v.debut);\r\n  const enemySkill = enemyList[enemyRoundTab.oder].skill;\r\n  const enemySp = enemyList[enemyRoundTab.oder].sp;\r\n  const [ defChess, setDefChess ] = useState(0);\r\n  const [ random ] = useState(\r\n    Math.round(Math.random()*(enemySkill.length-1))\r\n  );\r\n  const getAtkSkill = ()=>{\r\n    const checkSp = (enemySp===0)||(enemySkill[random].sp>enemySp);\r\n    return checkSp ? 0 : random;\r\n  };\r\n  const enemyRandomSkill = getAtkSkill();\r\n  const getCurrentChessKey = ({ chess, debut, key })=>{\r\n    let getKey;\r\n    chess.find((v,k)=>{\r\n      if(v.id===debut[key].id){\r\n        return getKey = k;\r\n      }else return null;\r\n    });\r\n    return getKey;\r\n  };\r\n  return <Graphics\r\n    x={400}\r\n    y={300}\r\n    zIndex={99}\r\n    draw={g=> {\r\n      g.clear();\r\n      g.lineStyle(1,`0xffffff`,1);\r\n      g.beginFill(`0x22223b`);\r\n      g.drawRoundedRect(-300,-200,600,400,8);\r\n      g.endFill();\r\n    }}\r\n  >\r\n    <ChessList\r\n      chessList={chessList}\r\n      defChess={defChess}\r\n      setDefChess={setDefChess}\r\n    />\r\n    <Information\r\n      defChess={defChess}\r\n      chessList={chessList}\r\n      atkEnemy={enemyList[enemyRoundTab.oder].skill[enemyRandomSkill]}\r\n    />\r\n    <EnemyList\r\n      oder={enemyRoundTab.oder}\r\n      enemyRandomSkill={enemyRandomSkill}\r\n      enemyList={enemyList}\r\n    />\r\n    <Sprite\r\n      interactive={true}\r\n      buttonMode={true}\r\n      width={90}\r\n      height={42}\r\n      anchor={0.5}\r\n      zIndex={2}\r\n      x={230}\r\n      y={155}\r\n      image={loader.resources[`fightDef`].data}\r\n      pointertap={()=>{\r\n        setCurrentBGM(enemyList[enemyRoundTab.oder].name);\r\n        const isHit = ProbabilityCount(\r\n          enemyList[enemyRoundTab.oder].skill[enemyRandomSkill].hitfix,\r\n          chessList[defChess].dodge\r\n        );\r\n        setCurrentChess(prev=>{return{...prev,type:\"ATTACK\"}});\r\n        dispatch(enemyChessAttackResult({\r\n          key: getCurrentChessKey({\r\n            chess: enemyChess,\r\n            debut: enemyList,\r\n            key: enemyRoundTab.oder\r\n          }),\r\n          lessSp:enemyList[enemyRoundTab.oder].skill[enemyRandomSkill].sp\r\n        }));\r\n        if(isHit){\r\n          dispatch(chessDefense({\r\n            key: getCurrentChessKey({\r\n              chess: chess,\r\n              debut: chessList,\r\n              key: defChess\r\n            }),\r\n            damage: enemyList[enemyRoundTab.oder].skill[enemyRandomSkill].atk\r\n          }));\r\n        };\r\n        setEnemyRoundTab(prev=>{return{...prev, status:false}});\r\n        setAnimeShow({\r\n          status:true,\r\n          type:'ENEMY',\r\n          isHit: isHit,\r\n          attacker:{ \r\n            key: getCurrentChessKey({\r\n              chess: enemyChess,\r\n              debut: enemyList,\r\n              key: enemyRoundTab.oder\r\n            }),\r\n            skill:enemyList[enemyRoundTab.oder].skill[enemyRandomSkill],\r\n            prevSP:enemyList[enemyRoundTab.oder].sp\r\n          },\r\n          target:{ \r\n            key: getCurrentChessKey({\r\n              chess: chess,\r\n              debut: chessList,\r\n              key: defChess\r\n            }),\r\n            isHit:isHit,\r\n            prevLife:chessList[defChess].hp\r\n          }\r\n        });\r\n      }}\r\n    />\r\n  </Graphics>\r\n};","import React,{ useState } from 'react';\r\nimport { fromJS } from 'immutable';\r\nimport { Graphics, Text } from '@inlet/react-pixi/animated';\r\nimport { GetMove, GetAttack } from '../../reducer/map';\r\nimport { chessSelected, chessCheckStatus } from \"../../reducer/chess\";\r\nimport * as PIXI from \"pixi.js\";\r\n\r\nexport const ChessUIBoard = ({\r\n  ChessData,\r\n  ChessVal,\r\n  ChessKey,\r\n  EnemyChessData,\r\n  positionX,\r\n  positionY,\r\n  setCurrentChess,\r\n  setMoveStep,\r\n  dispatch\r\n})=> {\r\n  const specialPosition = {\r\n    x: 720,\r\n    y: 490\r\n  };\r\n  const forMoveArray = [];\r\n  const forAttackArray = [];\r\n  const [textInforArray, setTextInforArray] = useState(fromJS([{\r\n      id:1, \r\n      title:\"移動\",\r\n      textColor:['#ffffff', '#ffffff']\r\n    },{ \r\n      id:2,\r\n      title:\"攻擊\",\r\n      textColor:['#ffffff', '#ffffff']\r\n    },{ \r\n      id:3,\r\n      title:\"狀態\",\r\n      textColor:['#ffffff', '#ffffff']\r\n    },{ \r\n      id:4,\r\n      title:\"返回\",\r\n      textColor:['#ffffff', '#ffffff']\r\n  }]));\r\n  ChessData.map((v)=>{\r\n    return (\r\n      forMoveArray.push({ x:v.x, y:v.y }),\r\n      forAttackArray.push({ x:v.x, y:v.y })\r\n    );\r\n  });\r\n  EnemyChessData.map((v)=>{\r\n    return forMoveArray.push({ x:v.x, y:v.y });\r\n  });\r\n  const compareAttack = (\r\n    chessX,\r\n    chessY,\r\n    chessAtk\r\n  )=>{\r\n    let isAttack = false;\r\n    const isDebutEnemy = EnemyChessData.filter(v=>v.debut);\r\n    const limitPosition = { x:19, y:14 };\r\n    const positionRange = [];\r\n    for(let i=0; i < chessAtk; i++){\r\n      const getaddX = (chessX+(i+1)>=limitPosition.x) ? limitPosition.x : chessX+(i+1);\r\n      const getaddY = (chessY+(i+1)>=limitPosition.y) ? limitPosition.y : chessY+(i+1);\r\n      const getlessX = (chessX-(i+1)<=0) ? 0 : chessX-(i+1);\r\n      const getlessY = (chessY-(i+1)<=0) ? 0 : chessY-(i+1);\r\n      positionRange.push(\r\n        { x:getaddX, y:chessY },\r\n        { x:getlessX, y:chessY },\r\n        { x:chessX, y:getaddY },\r\n        { x:chessX, y:getlessY }\r\n      );\r\n    };\r\n    isDebutEnemy.map(val=>{\r\n      return positionRange.map(v=>{\r\n        if(val.x===v.x&&val.y===v.y){\r\n          return isAttack = true;\r\n        }else return null\r\n      })\r\n    });\r\n    return isAttack;\r\n  };\r\n  const compareUsed = (\r\n    chessX,\r\n    chessY,\r\n    checkType\r\n  )=>{\r\n    let isUnused = false;\r\n    const isDebutChess = ChessData.filter(v=>v.debut);\r\n    isDebutChess.map(val=>{\r\n      if(val.x===chessX&&val.y===chessY){\r\n        switch (checkType) {\r\n          case 'MOVE':\r\n          case 'ATTACK':\r\n            const moved = val.roundMove>0;\r\n            return isUnused = moved;\r\n          default:\r\n            return true;\r\n        };\r\n      }else return null;\r\n    });\r\n    return isUnused;\r\n  };\r\n  const CreateText = ({ noop })=>{\r\n    const isAttack = compareAttack(ChessVal.x,ChessVal.y,ChessVal.attack);\r\n    return textInforArray.map((val,key)=>{\r\n      const fetchInteractive = ()=>{\r\n        switch (val.get('id')) {\r\n          case 1:\r\n            return compareUsed(ChessVal.x,ChessVal.y,'MOVE');\r\n          case 2:\r\n            const result = isAttack && compareUsed(ChessVal.x,ChessVal.y,'ATTACK');\r\n            return result;\r\n          default:\r\n            return true;\r\n        };\r\n      }\r\n      return <Text\r\n        key={key}\r\n        interactive={fetchInteractive()}\r\n        buttonMode={true}\r\n        text={val.get('title')}\r\n        x={10}\r\n        y={5+(25*key)}\r\n        style={new PIXI.TextStyle({\r\n          fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 20,\r\n          fill:fetchInteractive()?val.get('textColor').toJS():'#8d99ae',\r\n        })}\r\n        pointerover={()=>{\r\n          setTextInforArray(prev=>\r\n            prev.setIn([key,'textColor',1],'#00ff99')\r\n          );\r\n        }}\r\n        pointerout={()=>{\r\n          setTextInforArray(prev=>\r\n            prev.setIn([key,'textColor',1],'#ffffff')\r\n          );\r\n        }}\r\n        pointertap={(e)=>{\r\n          switch (val.get('id')) {\r\n            case 1:\r\n              setCurrentChess({ \r\n                key:ChessKey,\r\n                type:\"MOVE\"\r\n              });\r\n              dispatch(GetMove({\r\n                position:{ \r\n                  x:ChessVal.x, \r\n                  y:ChessVal.y,\r\n                },\r\n                step:ChessVal.step,\r\n                changeColor:'0x06d6a0',\r\n                currentChessPositions: forMoveArray\r\n              }));\r\n              dispatch(chessSelected({\r\n                key:ChessKey\r\n              }));\r\n              break;\r\n            case 2:\r\n              setCurrentChess({ \r\n                key:ChessKey,\r\n                type:\"ATTACK\"\r\n              });\r\n              dispatch(chessSelected({\r\n                key:ChessKey\r\n              }));\r\n              dispatch(GetAttack({\r\n                position:{ \r\n                  x:ChessVal.x, \r\n                  y:ChessVal.y,\r\n                },\r\n                step:ChessVal.attack,\r\n                changeColor:'0x00bbf9',\r\n                currentChessPositions: forAttackArray\r\n              }));\r\n              break;\r\n            case 3:\r\n              setCurrentChess({ \r\n                key:ChessKey,\r\n                type:\"STATUS\"\r\n              });\r\n              dispatch(chessCheckStatus({\r\n                key:ChessKey\r\n              }));\r\n              dispatch(chessSelected({\r\n                key:ChessKey\r\n              }));\r\n              break;\r\n            case 4 :\r\n              setMoveStep(true);\r\n              dispatch(chessSelected({\r\n                key:ChessKey\r\n              }));\r\n              break;\r\n            default:\r\n              return console.log(e.target)\r\n          };\r\n        }}\r\n      />\r\n    }\r\n  )};\r\n  return <Graphics\r\n    x={positionX!==800?positionX:specialPosition.x}\r\n    y={(positionY!==560&&positionY!==520)?positionY:specialPosition.y}\r\n    zIndex={3}\r\n    draw={g=> {\r\n      g.clear();\r\n      g.lineStyle(1,`0xffffff`,1);\r\n      g.beginFill(`0x22223b`);\r\n      g.drawRoundedRect(0,0,60,110,8);\r\n      g.endFill();\r\n    }}\r\n  ><CreateText/></Graphics>\r\n};","import React from 'react';\r\nimport { Sprite, Graphics, Text } from '@inlet/react-pixi/animated';\r\nimport { loader } from '../DataLoader';\r\nimport * as PIXI from \"pixi.js\";\r\n\r\nexport const ChessStatus = ({\r\n  ChessData,\r\n  ChessKey,\r\n  CheckStatus,\r\n  setMoveStep,\r\n  dispatch\r\n})=> {\r\n  const CreateSkillList = ()=>{\r\n    return ChessData.skill.map((value,key)=>{\r\n        return <React.Fragment key={key}>\r\n        <Text\r\n          x={-40}\r\n          y={-70+(key*22)}\r\n          text={`${value.name}`}\r\n          style={new PIXI.TextStyle({\r\n            fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n            fontSize: 16,\r\n            fill:'#ffb700',\r\n          })}\r\n        />\r\n        <Text\r\n          x={-35+(value.name.length * 16)}\r\n          y={-70+(key*22)}\r\n          text={`ATK:${value.atk}(${value.sp}SP)`}\r\n          style={new PIXI.TextStyle({\r\n            fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n            fontSize: 14,\r\n            fill:'#ffffff',\r\n          })}\r\n        />\r\n      </React.Fragment>\r\n    });  \r\n  };\r\n  return <Graphics\r\n    x={400}\r\n    y={300}\r\n    zIndex={99}\r\n    draw={g=> {\r\n      g.clear();\r\n      g.lineStyle(1,`0xffffff`,1);\r\n      g.beginFill(`0x22223b`);\r\n      g.drawRoundedRect(-250,-150,500,300,8);\r\n      g.endFill();\r\n    }}\r\n  >\r\n    <Sprite\r\n      interactive={true}\r\n      buttonMode={true}\r\n      width={25}\r\n      height={25}\r\n      anchor={0.5}\r\n      x={220}\r\n      y={-120}\r\n      image={loader.resources[`closeIcon`].data}\r\n      pointertap={()=>{\r\n        setMoveStep(true);\r\n        dispatch(CheckStatus({\r\n          key:ChessKey\r\n        }));\r\n      }}\r\n    />\r\n    <Sprite\r\n      width={80}\r\n      height={80}\r\n      x={-200}\r\n      y={-90}\r\n      image={loader.resources[`${ChessData.name}-head-default`].data}\r\n    />\r\n    <Text\r\n      x={-200}\r\n      y={10}\r\n      text={ChessData.cn}\r\n      style={new PIXI.TextStyle({\r\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 16,\r\n        fill:'#ffffff',\r\n      })}\r\n    />\r\n    <Text\r\n      x={-200}\r\n      y={35}\r\n      text={`HP:`}\r\n      style={new PIXI.TextStyle({\r\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 16,\r\n        fill:'#ffffff',\r\n      })}\r\n    />\r\n    <Text\r\n      x={-170}\r\n      y={35}\r\n      text={`${ChessData.hp} / ${ChessData.fullValue.hp}`}\r\n      style={new PIXI.TextStyle({\r\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 16,\r\n        fill:'#ff6b6b',\r\n      })}\r\n    />\r\n    <Text\r\n      x={-200}\r\n      y={60}\r\n      text={`SP:`}\r\n      style={new PIXI.TextStyle({\r\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 16,\r\n        fill:'#ffffff',\r\n      })}\r\n    />\r\n    <Text\r\n      x={-170}\r\n      y={60}\r\n      text={`${ChessData.sp} / ${ChessData.fullValue.sp}`}\r\n      style={new PIXI.TextStyle({\r\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 16,\r\n        fill:'#0466c8',\r\n      })}\r\n    />\r\n    <Text\r\n      x={-50}\r\n      y={-95}\r\n      text={'招式'}\r\n      style={new PIXI.TextStyle({\r\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 16,\r\n        fill:'#ffffff',\r\n      })}\r\n    />\r\n    <CreateSkillList/>\r\n  </Graphics>\r\n};","import React from 'react';\r\nimport { Sprite } from '@inlet/react-pixi/animated';\r\nimport { loader } from '../DataLoader';\r\n// reducers\r\nimport { MoveSelect } from '../../reducer/map';\r\nimport { chessSelected, chessCheckStatus } from \"../../reducer/chess\";\r\n// other part\r\nimport { ChessUIBoard } from \"./ChessUIBoard\";\r\nimport { ChessStatus } from \"../Common/ChessStatus\";\r\n\r\nexport const Chess = ({\r\n  chessProps\r\n})=>{\r\n  const { \r\n    chess,\r\n    enemyChess,\r\n    moveStep=Boolean,\r\n    setMoveStep,\r\n    setCurrentChess,\r\n    dispatch\r\n  } = chessProps;\r\n  return chess.map((value,key)=>{\r\n    const roundMoveDone = value.roundMove===0;\r\n    return <React.Fragment key={key}>\r\n      {value.debut&&<Sprite\r\n        interactive={moveStep}\r\n        buttonMode={true}\r\n        width={40}\r\n        height={40}\r\n        x={value.x*40}\r\n        y={value.y*40}\r\n        zIndex={2}\r\n        tint={roundMoveDone?0x495057:0xffffff}\r\n        pointerover={()=>{\r\n          dispatch(MoveSelect({\r\n            position:{ \r\n              x:value.x, \r\n              y:value.y,\r\n            },\r\n            step:value.step,\r\n            changeColor:'0x06d6a0',\r\n            alphaVal:0.5\r\n          }));\r\n        }}\r\n        pointerout={()=>{\r\n          dispatch(MoveSelect({\r\n            position:{ \r\n              x:value.x, \r\n              y:value.y,\r\n            },\r\n            step:value.step,\r\n            changeColor:'0x383838',\r\n            alphaVal:0\r\n          }));\r\n        }}\r\n        pointertap={()=>{\r\n          setMoveStep(false);\r\n          dispatch(chessSelected({\r\n            key:key\r\n          }));\r\n          dispatch(MoveSelect({\r\n            position:{ \r\n              x:value.x, \r\n              y:value.y,\r\n            },\r\n            step:value.step,\r\n            changeColor:'0x383838',\r\n            alphaVal:0\r\n          }));\r\n        }}\r\n        image={loader.resources[`${value.name}-head-default`].data}\r\n      />}\r\n      {value.boardStatus&&<ChessUIBoard\r\n        ChessData={chess}\r\n        ChessVal={value}\r\n        ChessKey={key}\r\n        EnemyChessData={enemyChess}\r\n        positionX={(value.x*40)+40}\r\n        positionY={(value.y*40)}\r\n        setCurrentChess={setCurrentChess}\r\n        setMoveStep={setMoveStep}\r\n        dispatch={dispatch}\r\n      />}\r\n      {value.checkStatus&&<ChessStatus\r\n        ChessData={value}\r\n        ChessKey={key}\r\n        CheckStatus={chessCheckStatus}\r\n        setMoveStep={setMoveStep}\r\n        dispatch={dispatch}\r\n      />}\r\n    </React.Fragment>\r\n  })\r\n};","import React,{ useState } from 'react';\r\nimport { fromJS } from 'immutable';\r\nimport { Graphics, Text } from '@inlet/react-pixi/animated';\r\nimport { enemyChessSelected, enemyChessCheckStatus } from \"../../reducer/enemyChess\";\r\nimport * as PIXI from \"pixi.js\";\r\n\r\nexport const EnemyChessUIBoard = ({\r\n  ChessKey,\r\n  positionX,\r\n  positionY,\r\n  setMoveStep,\r\n  dispatch\r\n})=> {\r\n  const specialPosition = {\r\n    x: 720,\r\n    y: 535\r\n  };\r\n  const [textInforArray, setTextInforArray] = useState(fromJS([{\r\n      id:1,\r\n      title:\"狀態\",\r\n      textColor:['#ffffff', '#ffffff']\r\n    },{ \r\n      id:2,\r\n      title:\"返回\",\r\n      textColor:['#ffffff', '#ffffff']\r\n  }]));\r\n  const CreateText = ()=>{\r\n    return textInforArray.map((val,key)=>{\r\n      return <Text\r\n        key={key}\r\n        interactive={true}\r\n        buttonMode={true}\r\n        text={val.get('title')}\r\n        x={10}\r\n        y={5+(25*key)}\r\n        style={new PIXI.TextStyle({\r\n          fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 20,\r\n          fill:val.get('textColor').toJS(),\r\n        })}\r\n        pointerover={()=>{\r\n          setTextInforArray(prev=>\r\n            prev.setIn([key,'textColor',1],'#9d4edd')\r\n          );\r\n        }}\r\n        pointerout={()=>{\r\n          setTextInforArray(prev=>\r\n            prev.setIn([key,'textColor',1],'#ffffff')\r\n          );\r\n        }}\r\n        pointertap={(e)=>{\r\n          switch (val.get('id')) {\r\n            case 1:\r\n              dispatch(enemyChessCheckStatus({\r\n                key:ChessKey\r\n              }));\r\n              dispatch(enemyChessSelected({\r\n                key:ChessKey\r\n              }));\r\n              break;\r\n            case 2 :\r\n              setMoveStep(true);\r\n              dispatch(enemyChessSelected({\r\n                key:ChessKey\r\n              }));\r\n              break;\r\n            default:\r\n              return console.log(e.target)\r\n          };\r\n        }}\r\n      />\r\n    }\r\n  )};\r\n  return <Graphics\r\n    x={positionX!==800?positionX:specialPosition.x}\r\n    y={(positionY!==560&&positionY!==520)?positionY:specialPosition.y}\r\n    zIndex={3}\r\n    draw={g=> {\r\n      g.clear();\r\n      g.lineStyle(1,`0xffffff`,1);\r\n      g.beginFill(`0x22223b`);\r\n      g.drawRoundedRect(0,0,60,62,8);\r\n      g.endFill();\r\n    }}\r\n  ><CreateText/></Graphics>\r\n}","import React from 'react';\r\nimport { Sprite } from '@inlet/react-pixi/animated';\r\nimport { loader } from '../DataLoader';\r\n// reducers\r\nimport { enemyChessSelected, enemyChessCheckStatus } from \"../../reducer/enemyChess\";\r\n// other part\r\nimport { EnemyChessUIBoard } from \"./EnemyChessUIBoard\";\r\nimport { ChessStatus } from \"../Common/ChessStatus\";\r\n\r\nexport const EnemyChess = ({\r\n  enemyChessProps\r\n})=>{\r\n  const { \r\n    enemyChess,\r\n    moveStep=Boolean,\r\n    setMoveStep,\r\n    dispatch\r\n  } = enemyChessProps;\r\n  return enemyChess.map((value,key)=>{\r\n    return <React.Fragment key={key}>\r\n      {value.debut&&<Sprite\r\n        interactive={moveStep}\r\n        buttonMode={true}\r\n        width={40}\r\n        height={40}\r\n        x={value.x*40}\r\n        y={value.y*40}\r\n        zIndex={2}\r\n        pointertap={()=>{\r\n          setMoveStep(false);\r\n          dispatch(enemyChessSelected({\r\n            key:key\r\n          }));\r\n        }}\r\n        image={loader.resources[`${value.name}-head-default`].data}\r\n      />}\r\n      {value.boardStatus&&<EnemyChessUIBoard\r\n        ChessKey={key}\r\n        positionX={(value.x*40)+40}\r\n        positionY={(value.y*40)}\r\n        setMoveStep={setMoveStep}\r\n        dispatch={dispatch}\r\n      />}\r\n      {value.checkStatus&&<ChessStatus\r\n        ChessData={value}\r\n        ChessKey={key}\r\n        CheckStatus={enemyChessCheckStatus}\r\n        setMoveStep={setMoveStep}\r\n        dispatch={dispatch}\r\n      />}\r\n    </React.Fragment>\r\n  })\r\n};\r\n","import React,{ useState } from 'react';\r\nimport * as PIXI from \"pixi.js\";\r\nimport { loader } from '../../DataLoader';\r\nimport { stageRule } from '../../../constants/stageRule';\r\nimport { Container, Graphics, Sprite, Text } from '@inlet/react-pixi/animated';\r\nimport { Spring } from 'react-spring/renderprops';\r\nexport const Conversation = ({ props })=> {\r\n  const { stageStatus, setRoundStart, setMoveStep } = props;\r\n  const currentConversation = stageRule.getIn([stageStatus,'story']);\r\n  const currentRecap = stageRule.getIn([stageStatus,'recap']);\r\n  const [ isRecap, setIsRecap ] = useState(true);\r\n  const [ currentStory, setCurrentStory ] = useState(0);\r\n  const checkStageRound = ()=>{\r\n    switch (stageStatus) {\r\n      case 'stageOne':\r\n        return 1;\r\n      case 'stageTwo':\r\n        return 2;\r\n      case 'stageThree':\r\n        return 3;\r\n      default:\r\n        return 1;\r\n    };\r\n  };\r\n  return <Graphics\r\n    x={400}\r\n    y={300}\r\n    zIndex={99}\r\n    draw={g=> {\r\n      g.clear();\r\n      g.beginFill(`0x011627`);\r\n      g.drawRoundedRect(-300,-125,600,250,5);\r\n      g.endFill();\r\n    }}\r\n  >\r\n    <Container sortableChildren={true}>\r\n      <Text\r\n        text={`【 第 ${checkStageRound()} 話 】`}\r\n        anchor={0.5}\r\n        x={0}\r\n        y={-80}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 20,\r\n          fill:'#ffffff'\r\n        })}\r\n      />\r\n      {isRecap ?\r\n        <>\r\n          <Spring\r\n            from={{ x:0, y:0, alpha:0 }}\r\n            to={{ x:0, y:-50, alpha:1 }}\r\n            config={{ duration: 1000 }}\r\n          >\r\n            {props =>\r\n              <Text\r\n                text={currentRecap}\r\n                anchor={{x:0.5}}\r\n                style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n                  fontSize: 15,\r\n                  fill:'#ffffff',\r\n                  lineHeight:24,\r\n                  breakWords: true,\r\n                  wordWrap: true,\r\n                  wordWrapWidth:500\r\n                })}\r\n                {...props}\r\n              />\r\n            }\r\n          </Spring>\r\n          <Sprite\r\n            width={24}\r\n            height={14}\r\n            anchor={0.5}\r\n            y={90}\r\n            interactive={true}\r\n            buttonMode={true}\r\n            image={loader.resources[`next`].data}\r\n            pointertap={()=>setIsRecap(false)}\r\n          />\r\n        </>:\r\n        <>\r\n          <Sprite\r\n            width={85}\r\n            height={85}\r\n            x={-250}\r\n            y={0}\r\n            anchor={{y:0.5}}\r\n            image={loader.resources[`${currentConversation.getIn([currentStory,'character'])}`].data}\r\n          />\r\n          <Text\r\n            text={currentConversation.getIn([currentStory,'name'])}\r\n            anchor={{y:0.5}}\r\n            x={-250}\r\n            y={65}\r\n            style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n              fontSize: 16,\r\n              fill:['#ffffff', currentConversation.getIn([currentStory,'color'])],\r\n            })}\r\n          />\r\n          <Spring\r\n            from={{ x:-140, y: 25, alpha:0 }}\r\n            to={{ x:-140, y:0, alpha:1 }}\r\n            config={{ duration: 250 }}\r\n            reset={true}\r\n          >\r\n            {props =>\r\n              <Text\r\n                text={currentConversation.getIn([currentStory,'content'])}\r\n                anchor={{y:0.5}}\r\n                style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n                  fontSize: 16,\r\n                  fill:'#ffffff',\r\n                  breakWords: true,\r\n                  wordWrap: true,\r\n                  wordWrapWidth:400\r\n                })}\r\n                {...props}\r\n              />\r\n            }\r\n          </Spring>\r\n          <Sprite\r\n            width={24}\r\n            height={14}\r\n            anchor={0.5}\r\n            y={90}\r\n            interactive={true}\r\n            buttonMode={true}\r\n            image={loader.resources[`next`].data}\r\n            pointertap={()=>{\r\n              const converLength = currentConversation.size-1;\r\n              if(currentStory<converLength){\r\n                setCurrentStory(prev=>prev+=1);\r\n              }else {\r\n                setRoundStart(true);\r\n                setMoveStep(true)\r\n              };    \r\n            }}\r\n          />\r\n        </>\r\n      }\r\n    </Container>\r\n  </Graphics>\r\n};","import React,{ useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Stage, Container, Sprite } from '@inlet/react-pixi/animated';\r\nimport { Howler } from 'howler';\r\n// reducers\r\nimport { stageDebut } from \"../reducer/chess\";\r\nimport { enemyStageDebut } from \"../reducer/enemyChess\";\r\n// other part\r\nimport { GameStart } from './Common/GameStart/Index';\r\nimport { CreateCheckerboard } from './Common/Checkerboard';\r\nimport { ConfirmTip } from \"./Common/ConfirmTips\";\r\nimport { UsualTip } from \"./Common/UsualTip\";\r\nimport { BattleBoard } from \"./Common/BattleBoard\";\r\nimport { BattleAnimeShow } from \"./Common/BattleAnimeShow/Index\";\r\nimport { OtherTab } from \"./Common/OtherTab\";\r\nimport { EnemyRoundTab } from \"./Common/EnemyRoundTab/Index\";\r\nimport { Chess } from \"../components/Chess/Chess\";\r\nimport { EnemyChess } from \"../components/EnemyChess/EnemyChess\";\r\nimport { Conversation } from \"../components/Common/Conversation/Index\";\r\n// rule\r\nimport { stageRule } from \"../constants/stageRule\";\r\nimport { audioData, loader } from './DataLoader';\r\nexport const Canvas = ()=> {\r\n  const [ roundStart, setRoundStart ] = useState(false);\r\n  const [ stageStart, setStageStart ] = useState(false);\r\n  const [ stageStatus, setStageStatus ] = useState('stageOne');\r\n  const [ roundNum, setRoundNum ] = useState(1);\r\n  const [ otherTab, setOtherTab ] = useState(false);\r\n  const [ volume, setVolume ] = useState(true);\r\n  const [ enemyRoundTab, setEnemyRoundTab ] = useState({\r\n    oder:0,\r\n    status:false\r\n  });\r\n  const [ currentChess, setCurrentChess ] = useState({\r\n    key:0,\r\n    type:\"MOVE\"\r\n  });\r\n  const [ usualTip, setUsualTip ] = useState({\r\n    title:``,\r\n    status:false,\r\n  });\r\n  const [ tipStatus, setTipStatus ] = useState({\r\n    title:``,\r\n    status:false,\r\n    position:{\r\n      x:0,y:0\r\n    },\r\n  });\r\n  const [ battleInfo, setBattleInfo ] = useState({\r\n    status:false,\r\n    attacker:{ key:'' },\r\n    target:{ key:'' }\r\n  });\r\n  const [ animeShow, setAnimeShow ] = useState({\r\n    status:false,\r\n    type:'',\r\n    attacker:{ key:'', skill:{}, prevSP:0 },\r\n    target:{ key:'', isHit:false, prevLife:0 }\r\n  });\r\n  const [ moveStep, setMoveStep ] = useState(true);\r\n  const [ currentBGM, setCurrentBGM ] = useState('');\r\n  const [ fadeBGM, setFadeBGM ] = useState('');\r\n  const chessMap = useSelector(state=>state.chessMap);\r\n  const chess = useSelector(state=>state.chess);\r\n  const enemyChess = useSelector(state=>state.enemyChess);\r\n  const dispatch = useDispatch();\r\n  // bgm\r\n  useEffect(()=>{\r\n    switch (currentBGM) {\r\n      case 'Tanjirou':\r\n      case 'Zenitsu':\r\n        audioData.round.fade(0.6,0,1000);\r\n        audioData.KimetsuNoYaiba.stop();\r\n        audioData.KimetsuNoYaiba.volume(1);\r\n        audioData.KimetsuNoYaiba.play();\r\n        break;\r\n      case 'Teoni':\r\n        audioData.round.fade(0.6,0,1000);\r\n        audioData.KimetsuNoYaibaEnemy.stop();\r\n        audioData.KimetsuNoYaibaEnemy.volume(1);\r\n        audioData.KimetsuNoYaibaEnemy.play();\r\n        break;\r\n      case 'userRounds':\r\n      case 'enemyRounds':\r\n        audioData.round.stop();\r\n        audioData.round.volume(0.6);\r\n        audioData.round.play();\r\n        break;\r\n      default:\r\n        break;\r\n    };\r\n  },[ currentBGM ]);\r\n  useEffect(()=>{\r\n    switch (fadeBGM){\r\n      case 'Tanjirou':\r\n      case 'Zenitsu':\r\n        audioData.KimetsuNoYaiba.fade(1,0,1000);\r\n        setCurrentBGM('enemyRounds');\r\n        break;\r\n      case 'Teoni':\r\n        audioData.KimetsuNoYaibaEnemy.fade(1,0,1000);\r\n        setCurrentBGM('userRounds');\r\n        break;\r\n      default:\r\n        break;\r\n    };\r\n  },[ fadeBGM, stageStatus ]);\r\n  // debut\r\n  useEffect(()=>{\r\n    if(roundStart){\r\n      dispatch(stageDebut({ \r\n        isDebutChess:stageRule.getIn([stageStatus,'debutChess'])\r\n      }));\r\n      dispatch(enemyStageDebut({ \r\n        isDebutChess:stageRule.getIn([stageStatus,'debutEnemyChess'])\r\n      }));\r\n    };\r\n  },[ dispatch, roundStart, stageStatus ]);\r\n  return <Stage\r\n    width={800}\r\n    height={600}\r\n    options={{\r\n      autoDensity: true, \r\n      antialias: true,\r\n      backgroundColor:0x01262a\r\n    }}>\r\n    <Container sortableChildren={true}>\r\n      {roundStart&&<Sprite\r\n        width={30}\r\n        height={30}\r\n        anchor={0.5} \r\n        x={760}\r\n        y={40}\r\n        zIndex={99}\r\n        interactive={moveStep}\r\n        buttonMode={true}\r\n        image={loader.resources[`otherIcon`].data}\r\n        pointertap={()=>{\r\n          setOtherTab(true);\r\n          setMoveStep(false);\r\n        }}\r\n      />}\r\n      <Sprite\r\n        width={30}\r\n        height={30}\r\n        anchor={0.5} \r\n        x={40}\r\n        y={40}\r\n        zIndex={99}\r\n        interactive={!animeShow.status}\r\n        buttonMode={true}\r\n        image={loader.resources[volume?`volumeIcon`:`muteIcon`].data}\r\n        pointertap={()=>{\r\n          setVolume(prev=>!prev);\r\n          volume ? Howler.volume(0): Howler.volume(1);\r\n        }}\r\n      />\r\n      <Sprite\r\n        width={800}\r\n        height={600}\r\n        zIndex={1}\r\n        image={loader.resources[`${stageStatus}-main-BG`].data}\r\n      />\r\n      <CreateCheckerboard reduxProps={{ \r\n        chess,\r\n        enemyChess,\r\n        chessMap,\r\n        currentChess,\r\n        dispatch,\r\n        setTipStatus,\r\n        setMoveStep,\r\n        setBattleInfo\r\n      }}/>\r\n      <Chess chessProps={{\r\n        chess,\r\n        enemyChess,\r\n        moveStep,\r\n        setMoveStep,\r\n        setCurrentChess,\r\n        dispatch\r\n      }}/>\r\n      <EnemyChess enemyChessProps={{\r\n        enemyChess,\r\n        moveStep,\r\n        setMoveStep,\r\n        dispatch\r\n      }}/>\r\n    </Container>\r\n    {otherTab&&\r\n      <OtherTab\r\n        props={{\r\n          stageStatus,\r\n          roundNum,\r\n          setMoveStep,\r\n          setOtherTab,\r\n          setTipStatus,\r\n          setCurrentChess\r\n        }}\r\n      />}\r\n    {tipStatus.status&&\r\n      <ConfirmTip \r\n        props={{\r\n          chess,\r\n          currentChess,\r\n          tipStatus,\r\n          currentBGM,\r\n          dispatch,\r\n          setMoveStep,\r\n          setTipStatus,\r\n          setOtherTab,\r\n          setRoundNum,\r\n          setUsualTip,\r\n          setFadeBGM\r\n        }}\r\n      />}\r\n    {usualTip.status&&\r\n      <UsualTip\r\n        props={{\r\n          stageStatus,\r\n          chess,\r\n          currentChess,\r\n          enemyChess,\r\n          usualTip,\r\n          currentBGM,\r\n          setMoveStep,\r\n          setUsualTip,\r\n          setCurrentChess,\r\n          setFadeBGM,\r\n          setEnemyRoundTab,\r\n          setRoundStart,\r\n          setStageStatus\r\n        }}\r\n      />}\r\n    {battleInfo.status&&\r\n      <BattleBoard\r\n        props={{\r\n          battleInfo,\r\n          setMoveStep,\r\n          setBattleInfo,\r\n          setAnimeShow,\r\n          setCurrentBGM,\r\n          dispatch\r\n        }}\r\n      />}\r\n    {animeShow.status&&\r\n      <BattleAnimeShow \r\n        props={{\r\n          stageStatus,\r\n          animeShow,\r\n          chess,\r\n          enemyChess,\r\n          setMoveStep,\r\n          setAnimeShow,\r\n          setUsualTip,\r\n          setCurrentChess,\r\n          dispatch\r\n        }}\r\n      />}\r\n    {enemyRoundTab.status&&\r\n      <EnemyRoundTab\r\n        props={{\r\n          enemyRoundTab,\r\n          chess,\r\n          enemyChess,\r\n          setEnemyRoundTab,\r\n          setAnimeShow,\r\n          setCurrentChess,\r\n          setCurrentBGM,\r\n          dispatch\r\n        }}\r\n      />}\r\n    {(stageStart&&!roundStart)&&\r\n      <Conversation\r\n        props={{\r\n          stageStatus,\r\n          setRoundStart,\r\n          setMoveStep\r\n        }}\r\n      />}\r\n    {!stageStart&&\r\n      <GameStart \r\n        props={{\r\n          setStageStart,\r\n          setCurrentBGM\r\n        }}\r\n      />}\r\n  </Stage>\r\n};","import React, { useState, useEffect } from 'react';\r\nimport styled, { createGlobalStyle } from 'styled-components';\r\nimport device from \"current-device\";\r\nimport { Canvas } from './Canvas';\r\nimport { audioData, loader } from './DataLoader';\r\nconst isDesktop = device.desktop();\r\nconst GlobalStyle = createGlobalStyle`\r\n  body { background:#1d2430; }\r\n`;\r\nconst StyledApp = styled.div`\r\n  position: relative;\r\n  display:flex;\r\n  align-items:center;\r\n  justify-content:center;\r\n  width:100%;\r\n  height:100vh;\r\n  .loading {\r\n    color: #fff;\r\n    font-size:24px;\r\n  }\r\n  canvas {\r\n    width:${({ isDesktop })=>!isDesktop&&`\r\n      75% !important\r\n    `};\r\n    height:${({ isDesktop })=>!isDesktop&&`\r\n      100% !important\r\n    `};\r\n  }\r\n  .mobile-cover {\r\n    @keyframes trun {\r\n      0% { transform: translate(-50%,-50%)rotate(0deg) }\r\n      75% { transform: translate(0%,-50%)rotate(90deg) }\r\n      100% { transform: translate(0%,-50%)rotate(90deg) }\r\n    }\r\n    position: fixed;\r\n    width:100%;\r\n    height:100vh;\r\n    z-index:99;\r\n    background-color:#000;\r\n    img { \r\n      position: absolute;\r\n      transform:translate(-50%,-50%);\r\n      top:40%;\r\n      left:50%;\r\n      width:15%;\r\n      max-width:75px;\r\n      animation:trun 2s infinite;\r\n    }\r\n    .subtitle {\r\n      position: absolute;\r\n      transform:translate(-50%,-50%);\r\n      top:50%;\r\n      left:50%;\r\n      color:#f90;\r\n      font-size:18px;\r\n    }\r\n  }\r\n`;\r\nexport const App = ()=> {\r\n  const [ dataIsDone, setDataIsDone ] = useState(false);\r\n  const [ gameStart, setGameStart ] = useState(false);\r\n  const [ mobileResize, setMobileResize ] = useState((window.innerHeight > window.innerWidth));\r\n  const [ progress, setProgress ] = useState(0);\r\n  const [ mp3load, setMp3load ] = useState({\r\n    open:false,\r\n    KimetsuNoYaiba:false,\r\n  });\r\n  // mp3 load\r\n  audioData.KimetsuNoYaiba.on('load', function(){\r\n    setMp3load(prev=>{return{...prev,KimetsuNoYaiba:true}});\r\n  });\r\n  audioData.open.on('load', function(){\r\n    setMp3load(prev=>{return{...prev,open:true}});\r\n  });\r\n  useEffect(()=>{\r\n    loader.onProgress.add((loader)=>{\r\n      setProgress(Math.floor(loader.progress));\r\n    });\r\n    loader.onComplete.add((loader,resources)=>{\r\n      setProgress(100);\r\n      setDataIsDone(true);\r\n    });\r\n  });\r\n  useEffect(()=>{\r\n    const handleResize = function(){\r\n      const width = window.innerWidth;\r\n      const height = window.innerHeight;\r\n      setMobileResize(height > width);\r\n    };\r\n    window.addEventListener('resize',handleResize);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  },[]);\r\n  useEffect(()=>{\r\n    const state = \r\n      mp3load.KimetsuNoYaiba&&\r\n      mp3load.open&&\r\n      dataIsDone;\r\n    if(state){\r\n      setGameStart(true);\r\n    }; \r\n  },[dataIsDone, mp3load]);\r\n  return <StyledApp isDesktop={isDesktop}>\r\n    <GlobalStyle/>\r\n    {gameStart?<Canvas/>:\r\n      <span className=\"loading\">\r\n        {dataIsDone ? `讀取音訊中...` :\r\n        `Loading ${progress}%..`}\r\n      </span>}\r\n    {(mobileResize&&!isDesktop) &&\r\n      <div className=\"mobile-cover\">\r\n        <img alt=''src={loader.resources[`trun`].url}/>\r\n        <div className=\"subtitle\">請橫放裝置</div>\r\n      </div>}\r\n  </StyledApp>\r\n};\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { createStore, combineReducers } from 'redux';\r\nimport chess from './chess';\r\nimport chessMap from './map';\r\nimport enemyChess from './enemyChess';\r\nconst rootReducer = combineReducers({\r\n  chess,\r\n  chessMap,\r\n  enemyChess\r\n});\r\nexport const store = createStore(rootReducer);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { App } from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './reducer/index';\r\n\r\nReactDOM.render(<Provider store={store}><App /></Provider>,document.getElementById('root'));\r\nreportWebVitals();\r\n"],"sourceRoot":""}