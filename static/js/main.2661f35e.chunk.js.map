{"version":3,"sources":["reducer/chess.js","reducer/enemyChess.js","reducer/map.js","components/Common/Checkerboard.js","components/Common/ConfirmTips.js","constants/stageRule.js","components/Common/UsualTip.js","components/DataLoader.js","components/Common/ProbabilityCount.js","components/Common/BattleBoard.js","constants/ChessSkillShow.js","components/Common/BattleAnimeShow.js","components/Chess/ChessUIBoard.js","components/Common/ChessStatus.js","components/Chess/Chess.js","components/EnemyChess/EnemyChessUIBoard.js","components/EnemyChess/EnemyChess.js","components/Canvas.js","components/App.js","reportWebVitals.js","reducer/index.js","index.js"],"names":["basicCommon","x","y","checkStatus","boardStatus","debut","roundAttack","chess","createSlice","name","initialState","cn","step","attack","hp","sp","dodge","fullValue","skill","atk","hitfix","reducers","stageDebut","state","actions","isDebutChess","payload","map","value","key","v","get","chessMove","changeX","changeY","chessSelected","chessCheckStatus","chessAttackResult","lessSp","enemyChess","enemyStageDebut","enemyChessSelected","enemyChessCheckStatus","enemyChessDefense","damage","enemyChessDead","mapLimit","createInitialState","method","list","i","push","createStraightLine","traverse","color","alpha","zIndex","isInteractive","chessMap","MoveSelect","action","position","changeColor","alphaVal","GetMove","currentChessPositions","GetAttack","texture","PIXI","WHITE","CreateCheckerboard","reduxProps","currentChess","dispatch","setTipStatus","setMoveStep","setBattleInfo","Fragment","k","interactive","buttonMode","width","height","tint","pointertap","type","title","status","isMatch","checkMatchAttackPosition","targetData","item","getCurrentEnemy","attacker","target","acttack","ConfirmTip","props","tipStatus","draw","g","lineStyle","beginFill","drawRoundedRect","endFill","text","anchor","style","fontFamily","fontSize","fill","prev","stageRule","fromJS","stageOne","debutChess","debutEnemyChess","isWin","enemyList","totalLife","isLose","chessList","stageTwo","UsualTip","stageStatus","usualTip","setUsualTip","setCurrentChess","useState","textColor","setTextColor","checkWin","getIn","checkLose","loader","hostname","window","location","add","load","BattleBoard","battleInfo","setAnimeShow","atkSelectd","setAtkSelectd","CreateAttackerInfo","pX","pY","data","sortableChildren","image","resources","skillCanUse","fontWeight","CreateTargetInfo","ForecastInfo","attackerHit","targetDodge","isHit","Math","round","random","prevSP","prevLife","ChessSkillShow","setBGstatus","skillName","attackerName","TanjirouSkill","tension","setPosition","useEffect","step1","timeout","setTimeout","step2","clearTimeout","step3","steps","from","to","config","mass","friction","BattleAnimeShow","animeShow","targetHp","TopBar","Bottombar","CreateContent","BGstatus","toX","duration","BGprop","setBGpops","SkBGprop","setSkBGpops","onRest","ChessUIBoard","ChessData","ChessVal","ChessKey","EnemyChessData","positionX","positionY","specialPosition","forMoveArray","forAttackArray","id","textInforArray","setTextInforArray","CreateText","noop","isAttack","chessX","chessY","chessAtk","isDebutEnemy","filter","limitPosition","positionRange","getaddX","getaddY","getlessX","getlessY","val","compareAttack","toJS","pointerover","setIn","pointerout","e","console","log","ChessStatus","CheckStatus","CreateSkillList","length","Chess","chessProps","moveStep","Boolean","EnemyChessUIBoard","EnemyChess","enemyChessProps","Canvas","useSelector","useDispatch","options","autoDensity","antialias","backgroundColor","GlobalStyle","createGlobalStyle","StyledApp","styled","div","App","dataIsDone","setDataIsDone","onComplete","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"2NACMA,EAAc,CAClBC,EAAE,EACFC,EAAE,EACFC,aAAY,EACZC,aAAY,EACZC,OAAM,EACNC,aAAY,GAERC,EAAQC,YAAY,CACxBC,KAAK,QACLC,aAAa,CAAC,aAEVD,KAAK,WACLE,GAAG,kCACHC,KAAK,EACLC,OAAO,EACPC,GAAG,KACHC,GAAG,IACHC,MAAM,GACNC,UAAU,CACRH,GAAG,KACHC,GAAG,KAELG,MAAM,CAAC,CACLT,KAAK,eACLU,IAAI,GACJJ,GAAG,EACHK,OAAO,GACP,CACAX,KAAK,6CACLU,IAAI,IACJJ,GAAG,EACHK,OAAO,IACP,CACAX,KAAK,uCACLU,IAAI,IACJJ,GAAG,EACHK,OAAO,GACP,CACAX,KAAK,mDACLU,IAAI,IACJJ,GAAG,GACHK,OAAO,MAENpB,GAlCM,aAoCTS,KAAK,SACLG,KAAK,EACLC,OAAO,EACPC,GAAG,KACHC,GAAG,IACHC,MAAM,GACNC,UAAU,CACRH,GAAG,KACHC,GAAG,KAELG,MAAM,CAAC,CACLT,KAAK,eACLU,IAAI,GACJJ,GAAG,EACHK,OAAO,GACP,CACAX,KAAK,eACLU,IAAI,IACJJ,GAAG,EACHK,OAAO,GACP,CACAX,KAAK,qBACLU,IAAI,IACJJ,GAAG,IACHK,OAAO,KAENpB,GA9DM,aAgETS,KAAK,UACLE,GAAG,kCACHC,KAAK,EACLC,OAAO,EACPC,GAAG,KACHC,GAAG,GACHC,MAAM,GACNC,UAAU,CACRH,GAAG,KACHC,GAAG,IAELG,MAAM,CAAC,CACLT,KAAK,eACLU,IAAI,GACJJ,GAAG,EACHK,OAAO,GACP,CACAX,KAAK,mDACLU,IAAI,IACJJ,GAAG,EACHK,OAAO,GACP,CACAX,KAAK,mDACLU,IAAI,IACJJ,GAAG,EACHK,OAAO,GACP,CACAX,KAAK,mDACLU,IAAI,IACJJ,GAAG,EACHK,OAAO,KAENpB,IAGPqB,SAAS,CACPC,WAAW,SAACC,EAAOC,GAAY,IACrBC,EAAiBD,EAAQE,QAAzBD,aACRF,EAAMI,KAAI,SAACC,EAAMC,GACf,OAAOJ,EAAaE,KAAI,SAAAG,GACtB,OAAGF,EAAMnB,OAAOqB,EAAEC,IAAI,SAElBR,EAAMM,GAAKxB,OAAQ,EACnBkB,EAAMM,GAAK5B,EAAI6B,EAAEC,IAAI,KACrBR,EAAMM,GAAK3B,EAAI4B,EAAEC,IAAI,MAEZ,YAInBC,UAAW,SAACT,EAAOC,GAAW,IAAD,EACOA,EAAQE,QAAlCG,EADmB,EACnBA,IAAKI,EADc,EACdA,QAASC,EADK,EACLA,QACtBX,EAAMM,GAAK5B,EAAIgC,EACfV,EAAMM,GAAK3B,EAAIgC,GAEjBC,cAAe,SAACZ,EAAOC,GAAW,IACxBK,EAAQL,EAAQE,QAAhBG,IACRN,EAAMM,GAAKzB,aAAemB,EAAMM,GAAKzB,aAEvCgC,iBAAkB,SAACb,EAAOC,GAAY,IAC5BK,EAAQL,EAAQE,QAAhBG,IACRN,EAAMM,GAAK1B,aAAeoB,EAAMM,GAAK1B,aAEvCkC,kBAAmB,SAACd,EAAOC,GAAY,IAAD,EACZA,EAAQE,QAAxBG,EAD4B,EAC5BA,IAAKS,EADuB,EACvBA,OACbf,EAAMM,GAAKd,IAAMuB,MAIR/B,IAAf,Q,EAGIA,EAAMiB,QADRF,E,EAAAA,WAAYU,E,EAAAA,UAAWG,E,EAAAA,cAAeC,E,EAAAA,iBAAkBC,E,EAAAA,kBCjJpDrC,EAAc,CAClBC,EAAE,EACFC,EAAE,EACFC,aAAY,EACZC,aAAY,EACZC,OAAM,EACNC,aAAY,GAERiC,EAAa/B,YAAY,CAC7BC,KAAK,aACLC,aAAa,CAAC,aAEVD,KAAK,QACLE,GAAG,eACHG,GAAG,IACHC,GAAG,IACHC,MAAM,GACNC,UAAU,CACRH,GAAG,IACHC,GAAG,KAELG,MAAM,CAAC,CACLT,KAAK,2BACLU,IAAI,GACJJ,GAAG,EACHK,OAAO,IACP,CACAX,KAAK,uCACLU,IAAI,IACJJ,GAAG,GACHK,OAAO,MAENpB,GAtBM,aAwBTS,KAAK,YACLE,GAAG,eACHG,GAAG,KACHC,GAAG,IACHC,MAAM,GACNC,UAAU,CACRH,GAAG,KACHC,GAAG,KAELG,MAAM,CAAC,CACLT,KAAK,eACLU,IAAI,GACJJ,GAAG,EACHK,OAAO,IACP,CACAX,KAAK,2BACLU,IAAI,IACJJ,GAAG,GACHK,OAAO,MAENpB,IAGPqB,SAAS,CACPmB,gBAAgB,SAACjB,EAAOC,GAAY,IAC1BC,EAAiBD,EAAQE,QAAzBD,aACRF,EAAMI,KAAI,SAACC,EAAMC,GACf,OAAOJ,EAAaE,KAAI,SAAAG,GACtB,OAAGF,EAAMnB,OAAOqB,EAAEC,IAAI,SAElBR,EAAMM,GAAKxB,OAAQ,EACnBkB,EAAMM,GAAK5B,EAAI6B,EAAEC,IAAI,KACrBR,EAAMM,GAAK3B,EAAI4B,EAAEC,IAAI,MAEZ,YAInBU,mBAAoB,SAAClB,EAAOC,GAAW,IAC7BK,EAAQL,EAAQE,QAAhBG,IACRN,EAAMM,GAAKzB,aAAemB,EAAMM,GAAKzB,aAEvCsC,sBAAuB,SAACnB,EAAOC,GAAY,IACjCK,EAAQL,EAAQE,QAAhBG,IACRN,EAAMM,GAAK1B,aAAeoB,EAAMM,GAAK1B,aAEvCwC,kBAAmB,SAACpB,EAAOC,GAAY,IAAD,EACZA,EAAQE,QAAxBG,EAD4B,EAC5BA,IAAKe,EADuB,EACvBA,OACbrB,EAAMM,GAAKf,IAAM8B,GAEnBC,eAAgB,SAACtB,EAAOC,GAAY,IAC1BK,EAAQL,EAAQE,QAAhBG,IACRN,EAAMM,GAAKxB,OAAQ,EACnBkB,EAAMM,GAAKf,GAAKS,EAAMM,GAAKZ,UAAUH,GACrCS,EAAMM,GAAKd,GAAKQ,EAAMM,GAAKZ,UAAUF,OAI5BwB,IAAf,Q,EACiHA,EAAWf,QAA7GgB,E,EAAAA,gBAAiBC,E,EAAAA,mBAAoBC,E,EAAAA,sBAAuBC,E,EAAAA,kBAAmBE,E,EAAAA,e,OC7FxFC,EAAe,GAAfA,EAAqB,GAsBrBC,EAPqB,WAEzB,IAF6C,IAAlBC,EAAiB,uDAAV,aAC5BC,EAAO,GACLC,EAAE,EAAEA,EAAEJ,EAAWI,IACvBD,EAAKE,KAAKH,EAAOE,EAAE,aAErB,OAAOD,EAEkBG,EArBA,WAEzB,IAFiD,IAAvBC,EAAsB,uDAAb,EAAEC,EAAW,uDAAL,GACrCL,EAAO,GACLC,EAAE,EAAEA,EAAEJ,EAAWI,IACvBD,EAAKE,KAAK,CACRlD,EAAEiD,EACFhD,EAAEmD,EACFC,MAAMA,EACNC,MAAM,EACNC,OAAO,EACPC,eAAc,IAGlB,OAAOR,KAUHS,EAAWlD,YAAY,CAC3BC,KAAK,WACLC,aAAcqC,EACd1B,SAAS,CACPsC,WAAW,SAACpC,EAAOqC,GAEjB,IAF2B,IAAD,EACyBA,EAAOlC,QAAlDmC,EADkB,EAClBA,SAAUjD,EADQ,EACRA,KAAMkD,EADE,EACFA,YADE,IACWC,gBADX,MACoB,EADpB,EAElBb,EAAE,EAAEA,EAAGtC,EAAK,EAAGsC,IAClBW,EAAS5D,EAAEiD,GAAIJ,EAAW,IAC3BvB,EAAMsC,EAAS3D,GAAG2D,EAAS5D,EAAEiD,GAAGI,MAAMQ,EACtCvC,EAAMsC,EAAS3D,GAAG2D,EAAS5D,EAAEiD,GAAGO,eAAc,EAC9ClC,EAAMsC,EAAS3D,GAAG2D,EAAS5D,EAAEiD,GAAGK,MAAMQ,EACtCxC,EAAMsC,EAAS3D,GAAG2D,EAAS5D,EAAEiD,GAAGM,OAAO,GAEtCK,EAAS3D,EAAEgD,GAAIJ,EAAW,IAC3BvB,EAAMsC,EAAS3D,EAAEgD,GAAGW,EAAS5D,GAAGqD,MAAMQ,EACtCvC,EAAMsC,EAAS3D,EAAEgD,GAAGW,EAAS5D,GAAGwD,eAAc,EAC9ClC,EAAMsC,EAAS3D,EAAEgD,GAAGW,EAAS5D,GAAGsD,MAAMQ,EACtCxC,EAAMsC,EAAS3D,EAAEgD,GAAGW,EAAS5D,GAAGuD,OAAO,GAEtCK,EAAS5D,EAAEiD,GAAG,IACf3B,EAAMsC,EAAS3D,GAAG2D,EAAS5D,EAAEiD,GAAGI,MAAMQ,EACtCvC,EAAMsC,EAAS3D,GAAG2D,EAAS5D,EAAEiD,GAAGO,eAAc,EAC9ClC,EAAMsC,EAAS3D,GAAG2D,EAAS5D,EAAEiD,GAAGK,MAAMQ,EACtCxC,EAAMsC,EAAS3D,GAAG2D,EAAS5D,EAAEiD,GAAGM,OAAO,GAEtCK,EAAS3D,EAAEgD,GAAG,IACf3B,EAAMsC,EAAS3D,EAAEgD,GAAGW,EAAS5D,GAAGqD,MAAMQ,EACtCvC,EAAMsC,EAAS3D,EAAEgD,GAAGW,EAAS5D,GAAGwD,eAAc,EAC9ClC,EAAMsC,EAAS3D,EAAEgD,GAAGW,EAAS5D,GAAGsD,MAAMQ,EACtCxC,EAAMsC,EAAS3D,EAAEgD,GAAGW,EAAS5D,GAAGuD,OAAO,IAI7CQ,QAAQ,SAACzC,EAAOqC,GAEd,IAFwB,IAAD,EACwCA,EAAOlC,QAA9DmC,EADe,EACfA,SAAUjD,EADK,EACLA,KAAMkD,EADD,EACCA,YAAaG,EADd,EACcA,sBAC7Bf,EAAE,EAAEA,EAAGtC,EAAK,EAAGsC,IAClBW,EAAS5D,EAAEiD,GAAIJ,EAAW,IAC3BvB,EAAMsC,EAAS3D,GAAG2D,EAAS5D,EAAEiD,GAAGI,MAAMQ,EACtCvC,EAAMsC,EAAS3D,GAAG2D,EAAS5D,EAAEiD,GAAGO,eAAc,EAC9ClC,EAAMsC,EAAS3D,GAAG2D,EAAS5D,EAAEiD,GAAGK,MAAM,GACtChC,EAAMsC,EAAS3D,GAAG2D,EAAS5D,EAAEiD,GAAGM,OAAO,GAEtCK,EAAS3D,EAAEgD,GAAIJ,EAAW,IAC3BvB,EAAMsC,EAAS3D,EAAEgD,GAAGW,EAAS5D,GAAGqD,MAAMQ,EACtCvC,EAAMsC,EAAS3D,EAAEgD,GAAGW,EAAS5D,GAAGwD,eAAc,EAC9ClC,EAAMsC,EAAS3D,EAAEgD,GAAGW,EAAS5D,GAAGsD,MAAM,GACtChC,EAAMsC,EAAS3D,EAAEgD,GAAGW,EAAS5D,GAAGuD,OAAO,EACvCjC,EAAMsC,EAAS3D,GAAG2D,EAAS5D,EAAEiD,GAAGK,MAAM,GACtChC,EAAMsC,EAAS3D,GAAG2D,EAAS5D,EAAEiD,GAAGM,OAAO,GAEtCK,EAAS5D,EAAEiD,GAAG,IACf3B,EAAMsC,EAAS3D,GAAG2D,EAAS5D,EAAEiD,GAAGI,MAAMQ,EACtCvC,EAAMsC,EAAS3D,GAAG2D,EAAS5D,EAAEiD,GAAGO,eAAc,GAE7CI,EAAS3D,EAAEgD,GAAG,IACf3B,EAAMsC,EAAS3D,EAAEgD,GAAGW,EAAS5D,GAAGqD,MAAMQ,EACtCvC,EAAMsC,EAAS3D,EAAEgD,GAAGW,EAAS5D,GAAGwD,eAAc,EAC9ClC,EAAMsC,EAAS3D,EAAEgD,GAAGW,EAAS5D,GAAGsD,MAAM,GACtChC,EAAMsC,EAAS3D,EAAEgD,GAAGW,EAAS5D,GAAGuD,OAAO,GAG3CS,EAAsBtC,KAAI,SAAAG,GACxB,OAAOP,EAAMO,EAAE5B,GAAG4B,EAAE7B,GAAGwD,eAAc,MAGzCS,UAAU,SAAC3C,EAAOqC,GAEhB,IAF0B,IAAD,EACsCA,EAAOlC,QAA9DmC,EADiB,EACjBA,SAAUjD,EADO,EACPA,KAAMkD,EADC,EACDA,YAAaG,EADZ,EACYA,sBAC7Bf,EAAE,EAAEA,EAAGtC,EAAK,EAAGsC,IAClBW,EAAS5D,EAAEiD,GAAIJ,EAAW,IAC3BvB,EAAMsC,EAAS3D,GAAG2D,EAAS5D,EAAEiD,GAAGI,MAAMQ,EACtCvC,EAAMsC,EAAS3D,GAAG2D,EAAS5D,EAAEiD,GAAGO,eAAc,EAC9ClC,EAAMsC,EAAS3D,GAAG2D,EAAS5D,EAAEiD,GAAGK,MAAM,GACtChC,EAAMsC,EAAS3D,GAAG2D,EAAS5D,EAAEiD,GAAGM,OAAO,GAEtCK,EAAS3D,EAAEgD,GAAIJ,EAAW,IAC3BvB,EAAMsC,EAAS3D,EAAEgD,GAAGW,EAAS5D,GAAGqD,MAAMQ,EACtCvC,EAAMsC,EAAS3D,EAAEgD,GAAGW,EAAS5D,GAAGwD,eAAc,EAC9ClC,EAAMsC,EAAS3D,EAAEgD,GAAGW,EAAS5D,GAAGsD,MAAM,GACtChC,EAAMsC,EAAS3D,EAAEgD,GAAGW,EAAS5D,GAAGuD,OAAO,GAEtCK,EAAS5D,EAAEiD,GAAG,IACf3B,EAAMsC,EAAS3D,GAAG2D,EAAS5D,EAAEiD,GAAGI,MAAMQ,EACtCvC,EAAMsC,EAAS3D,GAAG2D,EAAS5D,EAAEiD,GAAGO,eAAc,EAC9ClC,EAAMsC,EAAS3D,GAAG2D,EAAS5D,EAAEiD,GAAGK,MAAM,GACtChC,EAAMsC,EAAS3D,GAAG2D,EAAS5D,EAAEiD,GAAGM,OAAO,GAEtCK,EAAS3D,EAAEgD,GAAG,IACf3B,EAAMsC,EAAS3D,EAAEgD,GAAGW,EAAS5D,GAAGqD,MAAMQ,EACtCvC,EAAMsC,EAAS3D,EAAEgD,GAAGW,EAAS5D,GAAGwD,eAAc,EAC9ClC,EAAMsC,EAAS3D,EAAEgD,GAAGW,EAAS5D,GAAGsD,MAAM,GACtChC,EAAMsC,EAAS3D,EAAEgD,GAAGW,EAAS5D,GAAGuD,OAAO,GAG3CS,EAAsBtC,KAAI,SAAAG,GACxB,OACEP,EAAMO,EAAE5B,GAAG4B,EAAE7B,GAAGwD,eAAc,EAC9BlC,EAAMO,EAAE5B,GAAG4B,EAAE7B,GAAGuD,OAAO,SAMlBE,IAAf,Q,EACkDA,EAASlC,QAA5CmC,E,EAAAA,WAAYK,E,EAAAA,QAASE,E,EAAAA,UC3H9BC,EAAUC,IAAaC,MAChBC,EAAqB,SAAC,GAE9B,IADHC,EACE,EADFA,WAGEhE,EAEEgE,EAFFhE,MAAOgC,EAELgC,EAFKhC,WAAYmB,EAEjBa,EAFiBb,SAAUc,EAE3BD,EAF2BC,aAAcC,EAEzCF,EAFyCE,SAC3CC,EACEH,EADFG,aAAcC,EACZJ,EADYI,YAAaC,EACzBL,EADyBK,cAsB7B,OAAO,cAAC,IAAMC,SAAP,UACJnB,EAAS/B,KAAI,SAAAC,GACZ,OAAOA,EAAMD,KAAI,SAACG,EAAEgD,GAClB,OAAO,cAAC,SAAD,CACLC,YAAajD,EAAE2B,cACfuB,WAAYlD,EAAE2B,cACdD,OAAQ1B,EAAE0B,OAEVyB,MAAO,GACPC,OAAQ,GACRjF,EAAO,GAAJ6B,EAAE7B,EACLC,EAAO,GAAJ4B,EAAE5B,EACLiF,KAAMrD,EAAEwB,MACRC,MAAOzB,EAAEyB,MACTY,QAASA,EACTiB,WAAY,WACV,OAAQZ,EAAaa,MACnB,IAAK,OACHX,EAAa,CACXY,MAAM,4BACNC,QAAO,EACP1B,SAAS,CACP5D,EAAE6B,EAAE7B,EAAGC,EAAE4B,EAAE5B,KAGfuE,EAASd,EAAW,CAClBE,SAAS,CACP5D,EAAEM,EAAMiE,EAAa3C,KAAK5B,EAC1BC,EAAEK,EAAMiE,EAAa3C,KAAK3B,GAE5BU,KAAKL,EAAMiE,EAAa3C,KAAKjB,KAC7BkD,YAAY,WACZC,SAAS,MAEX,MACF,IAAK,SACH,GAxDmB,SAAC9D,EAAEC,GAClC,IAAIsF,GAAU,EAOd,OANAjD,EAAWZ,KAAI,SAAAG,GAEb,OADmBA,EAAEzB,OAAQJ,IAAI6B,EAAE7B,GAAKC,IAAI4B,EAAE5B,EAErCsF,GAAQ,EACJ,QAERA,EAgDQC,CAAyB3D,EAAE7B,EAAE6B,EAAE5B,GAAG,CACnC,IAAMwF,EA/CE,SAACzF,EAAEC,GACzB,IAAIyF,EAAO,GAOX,OANApD,EAAWZ,KAAI,SAACG,EAAEgD,GAEhB,OADmBhD,EAAEzB,OAAQJ,IAAI6B,EAAE7B,GAAKC,IAAI4B,EAAE5B,EAErCyF,EAAK,2BAAI7D,GAAL,IAAOD,IAAIiD,IACX,QAERa,EAuC0BC,CAAgB9D,EAAE7B,EAAE6B,EAAE5B,GACzC0E,EAAc,CACZW,QAAO,EACPM,SAAS,aACPhE,IAAK2C,EAAa3C,KACftB,EAAMiE,EAAa3C,MAExBiE,OAAO,aACLjE,IAAK6D,EAAW7D,KACb6D,KAGPjB,EAASd,EAAW,CAClBE,SAAS,CACP5D,EAAEM,EAAMiE,EAAa3C,KAAK5B,EAC1BC,EAAEK,EAAMiE,EAAa3C,KAAK3B,GAE5BU,KAAKL,EAAMiE,EAAa3C,KAAKhB,OAC7BiD,YAAY,WACZC,SAAS,UAGXY,GAAY,GACZF,EAASd,EAAW,CAClBE,SAAS,CACP5D,EAAEM,EAAMiE,EAAa3C,KAAK5B,EAC1BC,EAAEK,EAAMiE,EAAa3C,KAAK3B,GAE5BU,KAAKL,EAAMiE,EAAa3C,KAAKkE,QAC7BjC,YAAY,WACZC,SAAS,KAGb,MACF,QACE,UAjEDe,YChCFkB,EAAa,SAAC,GAErB,IADJC,EACG,EADHA,MAGE1F,EAME0F,EANF1F,MACAiE,EAKEyB,EALFzB,aACA0B,EAIED,EAJFC,UACAzB,EAGEwB,EAHFxB,SACAE,EAEEsB,EAFFtB,YACAD,EACEuB,EADFvB,aAEF,OAAO,eAAC,WAAD,CACLzE,EAAG,IACHC,EAAG,IACHiG,KAAM,SAAAC,GACJA,EAAEC,UAAU,EAAZ,WAAyB,GACzBD,EAAEE,UAAF,YACAF,EAAEG,iBAAiB,IAAI,GAAG,IAAI,IAAI,GAClCH,EAAEI,WAPC,UAUL,cAAC,OAAD,CACEC,KAAMP,EAAUZ,MAChBoB,OAAQ,GACRzG,EAAG,EACHC,GAAI,GACJyG,MAAO,IAAIvC,IAAe,CACxBwC,WAAY,2CACZC,SAAU,GACVC,KAAK,CAAC,UAAW,eAGrB,cAAC,OAAD,CACE/B,aAAa,EACbC,YAAY,EACZ0B,OAAQ,GACRD,KAAM,eACNxG,GAAI,GACJC,EAAG,GACHyG,MAAO,IAAIvC,IAAe,CACxBwC,WAAY,2CACZC,SAAU,GACVC,KAAK,CAAC,UAAW,aAEnB1B,WAAY,WACV,OAAQZ,EAAaa,MACnB,IAAK,OACHZ,EAASzC,EAAU,CACjBH,IAAK2C,EAAa3C,IAClBI,QAAQiE,EAAUrC,SAAS5D,EAC3BiC,QAAQgE,EAAUrC,SAAS3D,KAE7BuE,EAASd,EAAW,CAClBE,SAAS,CACP5D,EAAEM,EAAMiE,EAAa3C,KAAK5B,EAC1BC,EAAEK,EAAMiE,EAAa3C,KAAK3B,GAE5BU,KAAKL,EAAMiE,EAAa3C,KAAKjB,KAC7BkD,YAAY,WACZC,SAAS,KAEXY,GAAY,GACZD,GAAa,SAAAqC,GACX,OAAO,2BAAIA,GAAX,IAAiBxB,QAAO,OAE1B,MACF,QACE,WAIR,cAAC,OAAD,CACER,aAAa,EACbC,YAAY,EACZ0B,OAAQ,GACRD,KAAM,eACNxG,EAAG,GACHC,EAAG,GACHyG,MAAO,IAAIvC,IAAe,CACxBwC,WAAY,2CACZC,SAAU,GACVC,KAAK,CAAC,UAAW,aAEnB1B,WAAY,WACV,OAAQZ,EAAaa,MACnB,IAAK,OACHZ,EAASd,EAAW,CAClBE,SAAS,CACP5D,EAAEM,EAAMiE,EAAa3C,KAAK5B,EAC1BC,EAAEK,EAAMiE,EAAa3C,KAAK3B,GAE5BU,KAAKL,EAAMiE,EAAa3C,KAAKjB,KAC7BkD,YAAY,WACZC,SAAS,KAEXY,GAAY,GACZD,GAAa,SAAAqC,GACX,OAAO,2BAAIA,GAAX,IAAiBxB,QAAO,OAE1B,MACF,QACE,e,QC1GCyB,EAAYC,YAAO,CAC9BC,SAAU,CACRC,WAAW,CACT,CACE1G,KAAK,WACLR,EAAE,EACFC,EAAE,IAGNkH,gBAAgB,CACd,CACE3G,KAAK,QACLR,EAAE,GACFC,EAAE,IAGNmH,MAAO,SAAAC,GACL,IAAIC,EAAY,EAMhB,OALED,EAAU3F,KAAI,SAAAG,GACZ,OAAGA,EAAEzB,MACIkH,GAAazF,EAAEhB,GAChB,UAELyG,EAAU,IAEnBC,OAAQ,SAAAC,GACN,IAAIF,EAAY,EAMhB,OALEE,EAAU9F,KAAI,SAAAG,GACZ,OAAGA,EAAEzB,MACIkH,GAAazF,EAAEhB,GAChB,UAELyG,EAAU,KAGrBG,SAAU,CACRP,WAAW,CACT,CACE1G,KAAK,WACLR,EAAE,EACFC,EAAE,GACD,CACDO,KAAK,SACLR,EAAE,EACFC,EAAE,KAGNkH,gBAAgB,CACd,CACE3G,KAAK,YACLR,EAAE,GACFC,EAAE,OC9CGyH,EAAW,SAAC,GAEnB,IADJ1B,EACG,EADHA,MAGE2B,EACwD3B,EADxD2B,YAAarH,EAC2C0F,EAD3C1F,MAAOiE,EACoCyB,EADpCzB,aAAcjC,EACsB0D,EADtB1D,WAClCsF,EAAwD5B,EAAxD4B,SAAUlD,EAA8CsB,EAA9CtB,YAAamD,EAAiC7B,EAAjC6B,YAAaC,EAAoB9B,EAApB8B,gBAHnC,EAImCC,mBAAS,CAAC,UAAW,YAJxD,mBAIOC,EAJP,KAIkBC,EAJlB,KAKH,OAAO,eAAC,WAAD,CACLjI,EAAG,IACHC,EAAG,IACHiG,KAAM,SAAAC,GACJA,EAAEC,UAAU,EAAZ,WAAyB,GACzBD,EAAEE,UAAF,YACAF,EAAEG,iBAAiB,IAAI,GAAG,IAAI,IAAI,GAClCH,EAAEI,WAPC,UAUL,cAAC,OAAD,CACEC,KAAMoB,EAASvC,MACfoB,OAAQ,GACRzG,EAAG,EACHC,GAAI,GACJyG,MAAO,IAAIvC,IAAe,CACxBwC,WAAY,2CACZC,SAAU,GACVC,KAAMmB,MAGV,cAAC,OAAD,CACElD,aAAa,EACbC,YAAY,EACZ0B,OAAQ,GACRD,KAAM,eACNxG,EAAG,EACHC,EAAG,GACHyG,MAAO,IAAIvC,IAAe,CACxBwC,WAAY,2CACZC,SAAU,GACVC,KAAK,CAAC,UAAW,aAEnB1B,WAAY,WACV,OAAQZ,EAAaa,MACnB,IAAK,SACH,IAAM8C,EAAWnB,EAAUoB,MAAM,CAACR,EAAY,UACxCS,EAAYrB,EAAUoB,MAAM,CAACR,EAAY,WAC5CO,EAAS5F,IACV2F,EAAa,CAAC,UAAW,YACzBH,EAAgB,CACdlG,IAAI,EACJwD,KAAK,aAEPyC,EAAY,CACVxC,MAAM,4BACNC,QAAO,KAEF8C,EAAU9H,IACjB2H,EAAa,CAAC,UAAW,YACzBH,EAAgB,CACdlG,IAAI,EACJwD,KAAK,cAEPyC,EAAY,CACVxC,MAAM,4BACNC,QAAO,MAGTZ,GAAY,GACZmD,EAAY,CACVxC,MAAM,GACNC,QAAO,KAGX,MACF,IAAK,WAQL,IAAK,YACHZ,GAAY,GACZuD,EAAa,CAAC,UAAW,YACzBJ,EAAY,CACVxC,MAAM,GACNC,QAAO,IAET,MACF,QACE,eChGC+C,EAAS,IAAIlE,IACpBmE,EAAsC,cAA3BC,OAAOC,SAASF,SAAuB,kBAAkB,KAE1ED,EACGI,IAAI,wBADP,UACkCH,EADlC,mCAEGG,IAAI,uBAFP,UAEiCH,EAFjC,kCAGGG,IAAI,uBAHP,UAGiCH,EAHjC,kCAIGG,IAAI,sBAJP,UAIgCH,EAJhC,iCAKGG,IAAI,eALP,UAKyBH,EALzB,0BAMGG,IAAI,uBANP,UAMiCH,EANjC,kCAOGG,IAAI,gBAPP,UAO0BH,EAP1B,2BAQGG,IAAI,qBARP,UAQ+BH,EAR/B,gCASGG,IAAI,cATP,UASwBH,EATxB,yBAUGG,IAAI,yBAVP,UAUmCH,EAVnC,oCAWGG,IAAI,kBAXP,UAW4BH,EAX5B,6BAYGG,IAAI,cAZP,UAYwBH,EAZxB,0CAaGG,IAAI,mBAbP,UAa6BH,EAb7B,+CAcGI,OClBI,ICQMC,EAAc,SAAC,GAAa,IAAX3C,EAAU,EAAVA,MAE1B4C,EACE5C,EADF4C,WAAYlE,EACVsB,EADUtB,YAAaC,EACvBqB,EADuBrB,cAAekE,EACtC7C,EADsC6C,aAAcrE,EACpDwB,EADoDxB,SAFlB,EAIAuD,mBAAS,CAC7CnG,IAAI,IALgC,mBAI9BkH,EAJ8B,KAIlBC,EAJkB,KAOhCC,EAAqB,SAAC,GAAwB,IAAD,IAArBC,UAAqB,MAAlB,EAAkB,MAAfC,UAAe,MAAZ,EAAY,EAATC,EAAS,EAATA,KACxC,OAAO,eAAC,YAAD,CAAWnJ,EAAGiJ,EAAIhJ,EAAGiJ,EAAIE,kBAAkB,EAA3C,UACL,cAAC,OAAD,CACE5C,KAAM,SACNxG,EAAG,IACHC,EAAG,EACHyG,MAAO,IAAIvC,IAAe,CAAEwC,WAAY,2CACtCC,SAAU,GACVC,KAAK,CAAC,UAAW,eAGrB,cAAC,OAAD,CACEL,KAAM2C,EAAKzI,GACXV,EAAG,GACHC,GAAI,EACJyG,MAAO,IAAIvC,IAAe,CAAEwC,WAAY,2CACtCC,SAAU,GACVC,KAAK,cAGT,cAAC,OAAD,CACEL,KAAI,UAAK2C,EAAKtI,GAAV,cAAkBsI,EAAKnI,UAAUH,IACrCb,EAAG,GACHC,EAAG,GACHyG,MAAO,IAAIvC,IAAe,CAAEwC,WAAY,2CACtCC,SAAU,GACVC,KAAK,cAGT,cAAC,OAAD,CACEL,KAAI,UAAK2C,EAAKrI,GAAV,cAAkBqI,EAAKnI,UAAUF,IACrCd,EAAG,GACHC,EAAG,GACHyG,MAAO,IAAIvC,IAAe,CAAEwC,WAAY,2CACtCC,SAAU,GACVC,KAAK,cAGT,cAAC,SAAD,CACE7B,MAAO,GACPC,OAAQ,GACRjF,EAAG,EACHC,EAAG,EACHoJ,MAAOhB,EAAOiB,UAAP,UAAoBH,EAAK3I,KAAzB,kBAA8C2I,OAEvD,cAAC,OAAD,CACE3C,KAAI,iCACJxG,EAAG,EACHC,EAAG,GACHyG,MAAO,IAAIvC,IAAe,CAAEwC,WAAY,2CACtCC,SAAU,GACVC,KAAK,cAGT,cAAC,WAAD,CACE7G,EAAG,EACHC,EAAG,IACHsD,OAAQ,EACR2C,KAAM,SAAAC,GACJA,EAAEC,UAAU,EAAZ,WAAyB,GACzBD,EAAEE,UAAF,YACAF,EAAEG,gBAAgB,EAAE,EAAE,IAAI,IAAI,GAC9BH,EAAEI,aAGL4C,EAAKlI,MAAMS,KAAI,SAACC,EAAMC,GACrB,IAAM2H,EAAcJ,EAAKrI,GAAKa,EAAMb,IAAM,EAC1C,OAAO,cAAC,IAAM8D,SAAP,UACL,cAAC,OAAD,CACErB,OAAQ,EACRuB,YAAayE,EACbxE,YAAY,EACZyB,KAAM7E,EAAMnB,KACZR,EAAG,GACHC,EAAG,IAAS,GAAJ2B,EACR8E,MAAO,IAAIvC,IAAe,CAAEwC,WAAY,2CACtCC,SAAU,GACVC,KAAQiC,EAAWlH,MAAMA,GAAM2H,EAAe,CAAC,UAAW,WACxDA,EAAc,UAAY,UAC5BC,WAAaV,EAAWlH,MAAMA,EAAO,IAAM,MAE7CuD,WAAY,kBAAI4D,EAAc,CAC5BnH,IAAKA,QAfiBA,UAsB5B6H,EAAmB,SAAC,GAAwB,IAAD,IAArBR,UAAqB,MAAlB,EAAkB,MAAfC,UAAe,MAAZ,EAAY,EAATC,EAAS,EAATA,KACtC,OAAO,eAAC,YAAD,CAAWnJ,EAAGiJ,EAAIhJ,EAAGiJ,EAAIE,kBAAkB,EAA3C,UACL,cAAC,OAAD,CACE5C,KAAM,SACNxG,EAAG,EACHC,EAAG,EACHyG,MAAO,IAAIvC,IAAe,CAAEwC,WAAY,2CACtCC,SAAU,GACVC,KAAK,CAAC,UAAW,eAGrB,cAAC,OAAD,CACEL,KAAM2C,EAAKzI,GACX+F,OAAQ,CAACzG,EAAE,EAAEC,EAAE,GACfD,EAAG,IACHC,GAAI,EACJyG,MAAO,IAAIvC,IAAe,CAAEwC,WAAY,2CACtCC,SAAU,GACVC,KAAK,cAGT,cAAC,OAAD,CACEL,KAAI,UAAK2C,EAAKtI,GAAV,cAAkBsI,EAAKnI,UAAUH,IACrC4F,OAAQ,CAACzG,EAAE,EAAEC,EAAE,GACfD,EAAG,IACHC,EAAG,GACHyG,MAAO,IAAIvC,IAAe,CAAEwC,WAAY,2CACtCC,SAAU,GACVC,KAAK,cAGT,cAAC,OAAD,CACEL,KAAI,UAAK2C,EAAKrI,GAAV,cAAkBqI,EAAKnI,UAAUF,IACrC2F,OAAQ,CAACzG,EAAE,EAAEC,EAAE,GACfD,EAAG,IACHC,EAAG,GACHyG,MAAO,IAAIvC,IAAe,CAAEwC,WAAY,2CACtCC,SAAU,GACVC,KAAK,cAGT,cAAC,SAAD,CACE7B,MAAO,GACPC,OAAQ,GACRjF,EAAG,IACHC,EAAG,EACHoJ,MAAOhB,EAAOiB,UAAP,UAAoBH,EAAK3I,KAAzB,kBAA8C2I,WAIrDO,EAAe,SAAC,GAAoB,IAAlBT,EAAiB,EAAjBA,GAAIC,EAAa,EAAbA,GAAIC,EAAS,EAATA,KAC9B,OAAO,eAAC,YAAD,CAAWnJ,EAAGiJ,EAAIhJ,EAAGiJ,EAAIE,kBAAkB,EAA3C,UACL,cAAC,WAAD,CACEpJ,EAAG,EACHC,EAAG,EACHsD,OAAQ,EACR2C,KAAM,SAAAC,GACJA,EAAEC,UAAU,EAAZ,WAAyB,GACzBD,EAAEE,UAAF,YACAF,EAAEG,gBAAgB,EAAE,EAAE,IAAI,IAAI,GAC9BH,EAAEI,aAGN,cAAC,OAAD,CACEC,KAAI,qBACJjD,OAAQ,EACRvD,EAAG,GACHC,EAAG,GACHyG,MAAO,IAAIvC,IAAe,CAAEwC,WAAY,2CACtCC,SAAU,GACVC,KAAK,cAGT,cAAC,OAAD,CACEL,KAAI,UAAK2C,EAAKvD,SAAS3E,MAAM6H,EAAWlH,KAAKpB,MAC7C+C,OAAQ,EACRvD,EAAG,GACHC,EAAG,GACHyG,MAAO,IAAIvC,IAAe,CAAEwC,WAAY,2CACtCC,SAAU,GACVC,KAAK,cAGT,cAAC,OAAD,CACEL,KAAI,2BACJjD,OAAQ,EACRvD,EAAG,GACHC,EAAG,GACHyG,MAAO,IAAIvC,IAAe,CAAEwC,WAAY,2CACtCC,SAAU,GACVC,KAAK,cAGT,cAAC,OAAD,CACEL,KAAI,UAAK2C,EAAKvD,SAAS3E,MAAM6H,EAAWlH,KAAKV,KAC7CqC,OAAQ,EACRvD,EAAG,IACHC,EAAG,GACHyG,MAAO,IAAIvC,IAAe,CAAEwC,WAAY,2CACtCC,SAAU,GACVC,KAAK,cAGT,cAAC,OAAD,CACEL,KAAI,2BACJjD,OAAQ,EACRvD,EAAG,GACHC,EAAG,GACHyG,MAAO,IAAIvC,IAAe,CAAEwC,WAAY,2CACtCC,SAAU,GACVC,KAAK,cAGT,cAAC,OAAD,CACEL,KAAI,UACF,IACA2C,EAAKvD,SAAS3E,MAAM6H,EAAWlH,KAAKT,OACpCgI,EAAKtD,OAAO9E,MAHV,KAKJwC,OAAQ,EACRvD,EAAG,IACHC,EAAG,GACHyG,MAAO,IAAIvC,IAAe,CAAEwC,WAAY,2CACtCC,SAAU,GACVC,KAAK,cAGT,cAAC,OAAD,CACEL,KAAI,qBACJjD,OAAQ,EACRvD,EAAG,GACHC,EAAG,IACHyG,MAAO,IAAIvC,IAAe,CAAEwC,WAAY,2CACtCC,SAAU,GACVC,KAAK,cAGT,cAAC,OAAD,CACEL,KAAI,UAAK2C,EAAKvD,SAAS3E,MAAM6H,EAAWlH,KAAKd,IAC7CyC,OAAQ,EACRvD,EAAG,GACHC,EAAG,IACHyG,MAAO,IAAIvC,IAAe,CAAEwC,WAAY,2CACtCC,SAAU,GACVC,KAAK,kBAKb,OAAO,eAAC,WAAD,CACL7G,EAAG,IACHC,EAAG,IACHsD,OAAQ,GACR2C,KAAM,SAAAC,GACJA,EAAEC,UAAU,EAAZ,WAAyB,GACzBD,EAAEE,UAAF,YACAF,EAAEG,iBAAiB,KAAK,IAAI,IAAI,IAAI,GACpCH,EAAEI,WARC,UAWL,cAACyC,EAAD,CACEC,IAAK,IACLC,IAAK,IACLC,KAAMP,EAAWhD,WAEnB,cAAC6D,EAAD,CACER,GAAI,GACJC,IAAK,IACLC,KAAMP,EAAW/C,SAEnB,cAAC6D,EAAD,CACET,GAAI,EACJC,IAAK,IACLC,KAAMP,IAER,cAAC,OAAD,CACE9D,aAAa,EACbC,YAAY,EACZyB,KAAM,eACNC,OAAQ,GACRzG,EAAG,IACHC,EAAG,IACHyG,MAAO,IAAIvC,IAAe,CACxBwC,WAAY,2CACZC,SAAU,GACVC,KAAK,YAEP1B,WAAY,WACV,IDnSNwE,EACAC,ECkSYC,GDnSZF,ECoSQf,EAAWhD,SAAS3E,MAAM6H,EAAWlH,KAAKT,ODnSlDyI,ECoSQhB,EAAW/C,OAAO9E,QDlST,IACiB4I,EAAcC,EAC5BE,KAAKC,MAAoB,IAAdD,KAAKE,SAAe,KCkS7CxF,EAASpC,EAAkB,CACzBR,IAAKgH,EAAWhD,SAAShE,IACzBS,OAAQuG,EAAWhD,SAAS3E,MAAM6H,EAAWlH,KAAKd,MAEjD+I,GACDrF,EAAS9B,EAAkB,CACzBd,IAAKgH,EAAW/C,OAAOjE,IACvBe,OAAQiG,EAAWhD,SAAS3E,MAAM6H,EAAWlH,KAAKV,OAGtD2H,EAAa,CACXvD,QAAO,EACPF,KAAK,OACLQ,SAAS,CACPhE,IAAIgH,EAAWhD,SAAShE,IACxBX,MAAM2H,EAAWhD,SAAS3E,MAAM6H,EAAWlH,KAC3CqI,OAAOrB,EAAWhD,SAAS9E,IAE7B+E,OAAO,CACLjE,IAAIgH,EAAW/C,OAAOjE,IACtBiI,MAAMA,EACNK,SAAStB,EAAW/C,OAAOhF,MAG/B8D,EAAc,CACZW,QAAO,EACPM,SAAS,CAAEhE,IAAI,IACfiE,OAAO,CAAEjE,IAAI,SAInB,cAAC,OAAD,CACEkD,aAAa,EACbC,YAAY,EACZyB,KAAM,eACNC,OAAQ,GACRzG,EAAG,IACHC,EAAG,IACHyG,MAAO,IAAIvC,IAAe,CACxBwC,WAAY,2CACZC,SAAU,GACVC,KAAK,YAEP1B,WAAY,WACVT,GAAY,GACZC,EAAc,CACZW,QAAO,EACPM,SAAS,CAAEhE,IAAI,IACfiE,OAAO,CAAEjE,IAAI,a,QCnVVuI,EAAiB,SAAC,GAI1B,IAAD,IAHFvE,gBAGE,MAHO,GAGP,MAFF3E,aAEE,MAFI,GAEJ,EADFmJ,EACE,EADFA,YAEA,OAAQxE,EAASpF,MACf,IAAI,WACF,OAAO,cAAC,GAAD,CACL6J,UAAWpJ,EAAMT,KACjB8J,aAAc1E,EAASpF,KACvB4J,YAAaA,IAEjB,QACE,SAIAG,GAAgB,SAAC,GAIlB,IAHHF,EAGE,EAHFA,UACAC,EAEE,EAFFA,aACAF,EACE,EADFA,YACE,EACgCrC,mBAAS,CAAE/H,EAAE,EAAGC,EAAE,EAAGuK,QAAQ,MAD7D,mBACM5G,EADN,KACgB6G,EADhB,KAiDF,OAHAC,qBAAU,YA5CI,SACZL,EACAI,EACAL,GAIIK,EAAY,CAAEzK,EAAE,IAAIC,EAAE,GAAGuK,QAAQ,MACjC,IAQMG,EAAQ,WACZ,IAAMC,EAAUC,YAAW,WACzBJ,EAAY,CAAEzK,EAAE,EAAGC,EAAE,GAAIuK,QAAQ,MACjCJ,EAAY,CAAEhF,KAAK,UAEnB0F,MACA,KACF,OAAO,kBAAKC,aAAaH,KAErBE,EAAQ,WACZ,IAAMF,EAAUC,YAAW,WACzBJ,EAAY,CAAEzK,GAAG,IAAKC,EAAE,GAAIuK,QAAQ,MACpCJ,EAAY,CAAEhF,KAAK,YAEnB4F,MACA,KACF,OAAO,kBAAKD,aAAaH,KAErBI,EAAQ,WACZ,IAAMJ,EAAUC,YAAW,WACzBJ,EAAY,CAAEzK,EAAE,IAAIC,EAAE,GAAIuK,QAAQ,OAClC,KACF,OAAO,kBAAKO,aAAaH,KA7BTC,YAAW,WACzBJ,EAAY,CAAEzK,EAAE,IAAKC,EAAE,GAAIuK,QAAQ,MAEnCG,MACA,KAgCRM,CAAMZ,EAAUI,EAAYL,KAC5B,CAAEC,EAAWD,IACPC,GACN,IAAI,eAoBJ,QACE,OAAO,cAAC,SAAD,CACLa,KAAM,CAAElL,EAAE,IAAKC,EAAE,IACjBkL,GAAI,CAAEnL,EAAE4D,EAAS5D,EAAGC,EAAE2D,EAAS3D,GAC/BmL,OAAQ,CACNC,KAAK,EACLb,QAAS5G,EAAS4G,QAClBc,SAAS,IANN,SASN,SAAAtF,GAAK,OACJ,cAAC,SAAD,aACEzC,OAAQ,EACRyB,MAAO,IACPC,OAAQ,IACRwB,OAAQ,GACR4C,MAAOhB,EAAOiB,UAAP,UAAoBgB,EAApB,iBAAgDnB,MACnDnD,SCxGDuF,GAAkB,SAAC,GAE1B,IADJvF,EACG,EADHA,MAEQ2B,EAC+C3B,EAD/C2B,YAAa6D,EACkCxF,EADlCwF,UAAWlL,EACuB0F,EADvB1F,MAAOgC,EACgB0D,EADhB1D,WACrCoC,EAAqDsB,EAArDtB,YAAamE,EAAwC7C,EAAxC6C,aAAchB,EAA0B7B,EAA1B6B,YAAarD,EAAawB,EAAbxB,SAClCqB,EAAW2F,EAAX3F,OAHL,EAI+BkC,mBAASyD,EAAU3F,OAAOqE,UAJzD,mBAIKuB,EAJL,KAMGC,GANH,KAMY,SAAC,GAGV,IAAD,IAFH9F,gBAEG,MAFM,GAEN,MADHC,cACG,MADI,GACJ,EACH,OAAO,cAAC,WAAD,CACL7F,GAAI,IACJC,GAAI,IACJsD,OAAQ,GACR2C,KAAM,SAAAC,GACJA,EAAEE,UAAF,YACAF,EAAEG,gBAAgB,EAAE,EAAE,IAAI,GAAG,GAC7BH,EAAEI,WAPC,SAUL,eAAC,YAAD,CAAW6C,kBAAkB,EAA7B,UACE,cAAC,WAAD,CACEpJ,EAAG,IACHC,EAAG,GACHiG,KAAM,SAAAC,GACJA,EAAEE,UAAF,YACAF,EAAEG,iBAAiB,IAAI,GAAG,GAAG,GAAG,IAChCH,EAAEI,WANN,SASE,cAAC,OAAD,CACEC,KAAI,SACJxG,EAAG,EAAGC,EAAG,EACTwG,OAAQ,GACRC,MAAO,IAAIvC,IAAe,CAAEwC,WAAY,2CACtCC,SAAU,GACVC,KAAK,gBAGX,cAAC,WAAD,CACE7G,EAAG,IACHC,EAAG,GACHiG,KAAM,SAAAC,GACJA,EAAEE,UAAF,YACAF,EAAEG,iBAAiB,IAAI,GAAG,GAAG,GAAG,IAChCH,EAAEI,WANN,SASE,cAAC,OAAD,CACEC,KAAI,SACJxG,EAAG,EAAGC,EAAG,EACTwG,OAAQ,GACRC,MAAO,IAAIvC,IAAe,CAAEwC,WAAY,2CACtCC,SAAU,GACVC,KAAK,gBAIX,cAAC,SAAD,CACE7B,MAAO,GACPC,OAAQ,GACRjF,EAAG,GACHC,EAAG,GACHoJ,MAAOhB,EAAOiB,UAAP,UAAoBzD,EAAOrF,KAA3B,kBAAgD2I,OAEzD,cAAC,OAAD,CACE3C,KAAI,UAAKiF,EAAL,cAAmB5F,EAAO7E,UAAUH,IACxC4F,OAAQ,CAACzG,EAAE,EAAEC,EAAE,GACfD,EAAG,IAAKC,EAAG,GACXyG,MAAO,IAAIvC,IAAe,CAAEwC,WAAY,2CACtCC,SAAU,GACVC,KAAK,cAET,cAAC,WAAD,CACE7G,EAAG,IAAKC,EAAG,GACXsD,OAAQ,EACR2C,KAAM,SAAAC,GACJA,EAAEE,UAAF,YACAF,EAAEG,gBAAgB,EAAE,GAAG,IAAI,GAAG,GAC9BH,EAAEI,aAGN,cAAC,WAAD,CACEvG,EAAG,IAAKC,EAAG,GACXsD,OAAQ,EACR2C,KAAM,SAAAC,GACJA,EAAEE,UAAF,YACAF,EAAEG,gBAAgB,EAAE,GAAG,IAAI,GAAG,GAC9BH,EAAEI,aAIN,cAAC,SAAD,CACEvB,MAAO,GACPC,OAAQ,GACRjF,EAAG,IACHC,EAAG,GACHoJ,MAAOhB,EAAOiB,UAAP,UAAoB1D,EAASpF,KAA7B,kBAAkD2I,OAE3D,cAAC,OAAD,CACE3C,KAAI,UAAKZ,EAAS/E,GAAd,cAAsB+E,EAAS5E,UAAUH,IAC7C4F,OAAQ,CAACzG,EAAE,EAAEC,EAAE,GACfD,EAAG,IAAKC,EAAG,GACXyG,MAAO,IAAIvC,IAAe,CAAEwC,WAAY,2CACtCC,SAAU,GACVC,KAAK,cAET,cAAC,WAAD,CACE7G,EAAG,IAAKC,EAAG,GACXsD,OAAQ,EACR2C,KAAM,SAAAC,GACJA,EAAEE,UAAF,YACAF,EAAEG,gBAAgB,EAAE,GAAG,IAAI,GAAG,GAC9BH,EAAEI,aAGN,cAAC,WAAD,CACEvG,EAAG,IAAKC,EAAG,GACXsD,OAAQ,EACR2C,KAAM,SAAAC,GACJA,EAAEE,UAAF,YACAF,EAAEG,gBAAgB,EAAE,GAAG,IAAI,GAAG,GAC9BH,EAAEI,oBAONoF,EAAY,WAChB,OAAO,cAAC,WAAD,CACL3L,GAAI,IACJC,EAAG,IACHsD,OAAQ,GACR2C,KAAM,SAAAC,GACJA,EAAEE,UAAF,YACAF,EAAEG,gBAAgB,EAAE,EAAE,IAAI,IAAI,GAC9BH,EAAEI,cAKFqF,EAAgB,WAAK,IAAD,EACU7D,mBAAS,CAAE3C,KAAK,YAD1B,mBAChByG,EADgB,KACNzB,EADM,OAEMrC,mBAAS,CAAE+D,IAAI,IAAKC,SAAU,MAFpC,mBAEhBC,EAFgB,KAERC,EAFQ,OAGUlE,mBAAS,CAAE+D,IAAI,IAAKC,SAAU,MAHxC,mBAGhBG,EAHgB,KAGNC,EAHM,KAIxB,OAAO,eAAC,YAAD,CAAW/C,kBAAkB,EAA7B,UACY,YAAhByC,EAASzG,MAAkB,cAAC,SAAD,CAC1B8F,KAAM,CAAElL,GAAG,IAAKC,GAAG,KACnBkL,GAAI,CAAEnL,EAAGgM,EAAOF,IAAK7L,GAAG,KACxBmL,OAAQ,CAAEW,SAAUC,EAAOD,UAC3BK,OAAQ,YACW,MAAdJ,EAAOF,IACRG,EAAU,CACRH,IAAI,IACJC,SAAU,MAGZE,EAAU,CACRH,KAAK,IACLC,UAAU,OAbU,SAkBzB,SAAA/F,GAAK,OACJ,cAAC,SAAD,aACEzC,OAAQ,EACRyB,MAAO,KACPC,OAAQ,IACRwB,OAAQ,GACR4C,MAAOhB,EAAOiB,UAAP,UAAoB3B,EAApB,QAAsCwB,MACzCnD,OAGO,UAAhB6F,EAASzG,MAAgB,cAAC,SAAD,CACxB8F,KAAM,CAAElL,GAAG,IAAKC,GAAG,KACnBkL,GAAI,CAAEnL,EAAGkM,EAASJ,IAAK7L,GAAG,KAC1BmL,OAAQ,CAAEW,SAAUG,EAASH,UAC7BK,OAAQ,YACa,MAAhBF,EAASJ,IACVK,EAAY,CACVL,IAAI,IACJC,SAAU,MAGZI,EAAY,CACVL,KAAK,IACLC,UAAU,OAbQ,SAkBvB,SAAA/F,GAAK,OACJ,cAAC,SAAD,aACEzC,OAAQ,EACRyB,MAAO,KACPC,OAAQ,IACRwB,OAAQ,GACR4C,MAAOhB,EAAOiB,UAAP,UAAoB3B,EAApB,QAAsCwB,MACzCnD,OAGQ,SAAjBwF,EAAUpG,KACT,cAACsG,EAAD,CACE9F,SAAUtF,EAAuC,kBAA1BkL,EAAU5F,SAAShE,IAAgB,EAAE4J,EAAU5F,SAAShE,KAC/EiE,OAAQvD,EAA0C,kBAAxBkJ,EAAU3F,OAAOjE,IAAgB,EAAE4J,EAAU3F,OAAOjE,OAEhF,cAAC8J,EAAD,CACE9F,SAAUtD,EAA0C,kBAAxBkJ,EAAU3F,OAAOjE,IAAgB,EAAE4J,EAAU3F,OAAOjE,KAChFiE,OAAQvF,EAAuC,kBAA1BkL,EAAU5F,SAAShE,IAAgB,EAAE4J,EAAU5F,SAAShE,OAGjF,cAAC,EAAD,CACEgE,SAAUtF,EAAuC,kBAA1BkL,EAAU5F,SAAShE,IAAgB,EAAE4J,EAAU5F,SAAShE,KAC/EX,MAAOuK,EAAU5F,SAAS3E,MAC1BmJ,YAAaA,IAEf,cAACuB,EAAD,IACA,cAAC,WAAD,CACEpI,OAAQ,GACRuB,aAAa,EACbC,YAAY,EACZ/E,EAAG,IACHC,EAAG,IACHiG,KAAM,SAAAC,GACJA,EAAEE,UAAF,YACAF,EAAEG,iBAAiB,GAAG,EAAE,GAAG,GAAG,GAC9BH,EAAEI,WAEJpB,WAAY,WACV0D,EAAa,CACXvD,QAAO,EACPF,KAAK,GACLQ,SAAS,CAAEhE,IAAI,GAAIX,MAAM,GAAIgJ,OAAO,GACpCpE,OAAO,CAAEjE,IAAI,GAAIiI,OAAM,EAAOK,SAAS,KAGrB,SAAjBsB,EAAUpG,MACX9C,EAAWuD,EAAOjE,KAAKf,IAAM,GAE7B2D,EAAS5B,EAAe,CAAEhB,IAAIiE,EAAOjE,OACrCiG,EAAY,CACVxC,MAAM,sBAAD,OAAQ/C,EAAWuD,EAAOjE,KAAKlB,GAA/B,KACL4E,QAAO,KAGTZ,GAAY,IA5BlB,SAgCE,cAAC,OAAD,CAAM8B,KAAI,mBAAYxG,EAAG,EAAGC,EAAG,EAC7ByG,MAAO,IAAIvC,IAAe,CAAEwC,WAAY,2CACtCC,SAAU,GACVC,KAAK,oBAMf,OAAO,cAAC,WAAD,CACL7G,EAAG,IACHC,EAAG,IACHsD,OAAQ,GACR2C,KAAM,SAAAC,GACJA,EAAEE,UAAF,YACAF,EAAEG,iBAAiB,KAAK,IAAI,IAAI,IAAI,GACpCH,EAAEI,WAPC,SAUL,cAACqF,EAAD,OClRSS,GAAe,SAAC,GAUvB,IATJC,EASG,EATHA,UACAC,EAQG,EARHA,SACAC,EAOG,EAPHA,SACAC,EAMG,EANHA,eACAC,EAKG,EALHA,UACAC,EAIG,EAJHA,UACA7E,EAGG,EAHHA,gBACApD,EAEG,EAFHA,YACAF,EACG,EADHA,SAEMoI,EACD,IADCA,EAED,IAECC,EAAe,GACfC,EAAiB,GANpB,EAOyC/E,mBAASf,YAAO,CAAC,CACzD+F,GAAG,EACH1H,MAAM,eACN2C,UAAU,CAAC,UAAW,YACtB,CACA+E,GAAG,EACH1H,MAAM,eACN2C,UAAU,CAAC,UAAW,YACtB,CACA+E,GAAG,EACH1H,MAAM,eACN2C,UAAU,CAAC,UAAW,YACtB,CACA+E,GAAG,EACH1H,MAAM,eACN2C,UAAU,CAAC,UAAW,eAtBvB,mBAOIgF,EAPJ,KAOoBC,EAPpB,KAwBHX,EAAU5K,KAAI,SAACG,GACb,OACEgL,EAAa3J,KAAK,CAAElD,EAAE6B,EAAE7B,EAAGC,EAAE4B,EAAE5B,IAC/B6M,EAAe5J,KAAK,CAAElD,EAAE6B,EAAE7B,EAAGC,EAAE4B,EAAE5B,OAGrCwM,EAAe/K,KAAI,SAACG,GAClB,OAAOgL,EAAa3J,KAAK,CAAElD,EAAE6B,EAAE7B,EAAGC,EAAE4B,EAAE5B,OAExC,IA8BMiN,EAAa,SAAC,GAAW,EAATC,KAAU,IACxBC,EA/Bc,SACpBC,EACAC,EACAC,GAMA,IAJA,IAAIH,GAAW,EACTI,EAAef,EAAegB,QAAO,SAAA5L,GAAC,OAAEA,EAAEzB,SAC1CsN,EAAoB,GAApBA,EAA0B,GAC1BC,EAAgB,GACd1K,EAAE,EAAGA,EAAIsK,EAAUtK,IAAI,CAC7B,IAAM2K,EAAWP,GAAQpK,EAAE,IAAIyK,EAAmBA,EAAkBL,GAAQpK,EAAE,GACxE4K,EAAWP,GAAQrK,EAAE,IAAIyK,EAAmBA,EAAkBJ,GAAQrK,EAAE,GACxE6K,EAAYT,GAAQpK,EAAE,IAAI,EAAK,EAAIoK,GAAQpK,EAAE,GAC7C8K,EAAYT,GAAQrK,EAAE,IAAI,EAAK,EAAIqK,GAAQrK,EAAE,GACnD0K,EAAczK,KACZ,CAAElD,EAAE4N,EAAS3N,EAAEqN,GACf,CAAEtN,EAAE8N,EAAU7N,EAAEqN,GAChB,CAAEtN,EAAEqN,EAAQpN,EAAE4N,GACd,CAAE7N,EAAEqN,EAAQpN,EAAE8N,IAUlB,OAPAP,EAAa9L,KAAI,SAAAsM,GACf,OAAOL,EAAcjM,KAAI,SAAAG,GACvB,OAAGmM,EAAIhO,IAAI6B,EAAE7B,GAAGgO,EAAI/N,IAAI4B,EAAE5B,EACjBmN,GAAW,EACP,WAGVA,EAGUa,CAAc1B,EAASvM,EAAEuM,EAAStM,EAAEsM,EAAS3L,QAC9D,OAAOoM,EAAetL,KAAI,SAACsM,EAAIpM,GAC7B,OAAO,cAAC,OAAD,CAELkD,YACmB,IAAhBkJ,EAAIlM,IAAI,OACTsL,EAEFrI,YAAY,EACZyB,KAAMwH,EAAIlM,IAAI,SACd9B,EAAG,GACHC,EAAG,EAAG,GAAG2B,EACT8E,MAAO,IAAIvC,IAAe,CACxBwC,WAAY,2CACZC,SAAU,GACVC,KAAuB,IAAhBmH,EAAIlM,IAAI,OAAasL,EAAsBY,EAAIlM,IAAI,aAAaoM,OAAhC,YAEzCC,YAAa,WACXlB,GAAkB,SAAAnG,GAAI,OACpBA,EAAKsH,MAAM,CAACxM,EAAI,YAAY,GAAG,eAGnCyM,WAAY,WACVpB,GAAkB,SAAAnG,GAAI,OACpBA,EAAKsH,MAAM,CAACxM,EAAI,YAAY,GAAG,eAGnCuD,WAAY,SAACmJ,GACX,OAAQN,EAAIlM,IAAI,OACd,KAAK,EACHgG,EAAgB,CACdlG,IAAI4K,EACJpH,KAAK,SAEPZ,EAAST,EAAQ,CACfH,SAAS,CACP5D,EAAEuM,EAASvM,EACXC,EAAEsM,EAAStM,GAEbU,KAAK4L,EAAS5L,KACdkD,YAAY,WACZG,sBAAuB6I,KAEzBrI,EAAStC,EAAc,CACrBN,IAAI4K,KAEN,MACF,KAAK,EACH1E,EAAgB,CACdlG,IAAI4K,EACJpH,KAAK,WAEPZ,EAAStC,EAAc,CACrBN,IAAI4K,KAENhI,EAASP,EAAU,CACjBL,SAAS,CACP5D,EAAEuM,EAASvM,EACXC,EAAEsM,EAAStM,GAEbU,KAAK4L,EAAS3L,OACdiD,YAAY,WACZG,sBAAuB8I,KAEzB,MACF,KAAK,EACHhF,EAAgB,CACdlG,IAAI4K,EACJpH,KAAK,WAEPZ,EAASrC,EAAiB,CACxBP,IAAI4K,KAENhI,EAAStC,EAAc,CACrBN,IAAI4K,KAEN,MACF,KAAK,EACH9H,GAAY,GACZF,EAAStC,EAAc,CACrBN,IAAI4K,KAEN,MACF,QACE,OAAO+B,QAAQC,IAAIF,EAAEzI,WAjFtBjE,OAuFX,OAAO,cAAC,WAAD,CACL5B,EAAe,MAAZ0M,EAAgBA,EAAUE,EAC7B3M,EAAgB,MAAZ0M,GAA6B,MAAZA,EAAiBA,EAAUC,EAChDrJ,OAAQ,EACR2C,KAAM,SAAAC,GACJA,EAAEC,UAAU,EAAZ,WAAyB,GACzBD,EAAEE,UAAF,YACAF,EAAEG,gBAAgB,EAAE,EAAE,GAAG,IAAI,GAC7BH,EAAEI,WARC,SAUN,cAAC2G,EAAD,OChLUuB,GAAc,SAAC,GAMtB,IALJnC,EAKG,EALHA,UACAE,EAIG,EAJHA,SACAkC,EAGG,EAHHA,YACAhK,EAEG,EAFHA,YACAF,EACG,EADHA,SAEMmK,EAAkB,WACtB,OAAOrC,EAAUrL,MAAMS,KAAI,SAACC,EAAMC,GAC9B,OAAO,eAAC,IAAMgD,SAAP,WACP,cAAC,OAAD,CACE5E,GAAI,GACJC,EAAY,GAAJ2B,EAAJ,GACJ4E,KAAI,UAAK7E,EAAMnB,MACfkG,MAAO,IAAIvC,IAAe,CACxBwC,WAAY,2CACZC,SAAU,GACVC,KAAK,cAGT,cAAC,OAAD,CACE7G,EAA4B,GAApB2B,EAAMnB,KAAKoO,OAAf,GACJ3O,EAAY,GAAJ2B,EAAJ,GACJ4E,KAAI,cAAS7E,EAAMT,IAAf,YAAsBS,EAAMb,GAA5B,OACJ4F,MAAO,IAAIvC,IAAe,CACxBwC,WAAY,2CACZC,SAAU,GACVC,KAAK,gBAlBmBjF,OAwBlC,OAAO,eAAC,WAAD,CACL5B,EAAG,IACHC,EAAG,IACHsD,OAAQ,GACR2C,KAAM,SAAAC,GACJA,EAAEC,UAAU,EAAZ,WAAyB,GACzBD,EAAEE,UAAF,YACAF,EAAEG,iBAAiB,KAAK,IAAI,IAAI,IAAI,GACpCH,EAAEI,WARC,UAWL,cAAC,WAAD,CACEvG,EAAG,IACHC,GAAI,IACJ6E,aAAa,EACbC,YAAY,EACZI,WAAY,SAACmJ,GACX5J,GAAY,GACZF,EAASkK,EAAY,CACnB9M,IAAI4K,MAGRtG,KAAM,SAAAC,GACJA,EAAEE,UAAF,YACAF,EAAEG,iBAAiB,IAAI,GAAG,GAAG,GAAG,IAChCH,EAAEI,WAdN,SAiBE,cAAC,OAAD,CACEE,OAAQ,GACRD,KAAI,IACJE,MAAO,IAAIvC,IAAe,CACxBwC,WAAY,2CACZC,SAAU,GACVC,KAAK,gBAIX,cAAC,SAAD,CACE7B,MAAO,GACPC,OAAQ,GACRjF,GAAI,IACJC,GAAI,GACJoJ,MAAOhB,EAAOiB,UAAP,UAAoBgD,EAAU9L,KAA9B,kBAAmD2I,OAE5D,cAAC,OAAD,CACEnJ,GAAI,IACJC,EAAG,GACHuG,KAAM8F,EAAU5L,GAChBgG,MAAO,IAAIvC,IAAe,CACxBwC,WAAY,2CACZC,SAAU,GACVC,KAAK,cAGT,cAAC,OAAD,CACE7G,GAAI,IACJC,EAAG,GACHuG,KAAI,MACJE,MAAO,IAAIvC,IAAe,CACxBwC,WAAY,2CACZC,SAAU,GACVC,KAAK,cAGT,cAAC,OAAD,CACE7G,GAAI,IACJC,EAAG,GACHuG,KAAI,UAAK8F,EAAUzL,GAAf,cAAuByL,EAAUtL,UAAUH,IAC/C6F,MAAO,IAAIvC,IAAe,CACxBwC,WAAY,2CACZC,SAAU,GACVC,KAAK,cAGT,cAAC,OAAD,CACE7G,GAAI,IACJC,EAAG,GACHuG,KAAI,MACJE,MAAO,IAAIvC,IAAe,CACxBwC,WAAY,2CACZC,SAAU,GACVC,KAAK,cAGT,cAAC,OAAD,CACE7G,GAAI,IACJC,EAAG,GACHuG,KAAI,UAAK8F,EAAUxL,GAAf,cAAuBwL,EAAUtL,UAAUF,IAC/C4F,MAAO,IAAIvC,IAAe,CACxBwC,WAAY,2CACZC,SAAU,GACVC,KAAK,cAGT,cAAC,OAAD,CACE7G,GAAI,GACJC,GAAI,GACJuG,KAAM,eACNE,MAAO,IAAIvC,IAAe,CACxBwC,WAAY,2CACZC,SAAU,GACVC,KAAK,cAGT,cAAC8H,EAAD,QCrISE,GAAQ,SAAC,GAEjB,IADHC,EACE,EADFA,WAGExO,EAMEwO,EANFxO,MACAgC,EAKEwM,EALFxM,WAHA,EAQEwM,EAJFC,gBAJA,MAISC,QAJT,EAKAtK,EAGEoK,EAHFpK,YACAoD,EAEEgH,EAFFhH,gBACAtD,EACEsK,EADFtK,SAEF,OAAOlE,EAAMoB,KAAI,SAACC,EAAMC,GACtB,OAAO,eAAC,IAAMgD,SAAP,WACJjD,EAAMvB,OAAO,cAAC,SAAD,CACZ0E,YAAaiK,EACbhK,YAAY,EACZC,MAAO,GACPC,OAAQ,GACRjF,EAAW,GAAR2B,EAAM3B,EACTC,EAAW,GAAR0B,EAAM1B,EACTsD,OAAQ,EACR4K,YAAa,WACX3J,EAASd,EAAW,CAClBE,SAAS,CACP5D,EAAE2B,EAAM3B,EACRC,EAAE0B,EAAM1B,GAEVU,KAAKgB,EAAMhB,KACXkD,YAAY,WACZC,SAAS,OAGbuK,WAAY,WACV7J,EAASd,EAAW,CAClBE,SAAS,CACP5D,EAAE2B,EAAM3B,EACRC,EAAE0B,EAAM1B,GAEVU,KAAKgB,EAAMhB,KACXkD,YAAY,WACZC,SAAS,MAGbqB,WAAY,WACVT,GAAY,GACZF,EAAStC,EAAc,CACrBN,IAAIA,KAEN4C,EAASd,EAAW,CAClBE,SAAS,CACP5D,EAAE2B,EAAM3B,EACRC,EAAE0B,EAAM1B,GAEVU,KAAKgB,EAAMhB,KACXkD,YAAY,WACZC,SAAS,MAGbuF,MAAOhB,EAAOiB,UAAP,UAAoB3H,EAAMnB,KAA1B,kBAA+C2I,OAEvDxH,EAAMxB,aAAa,cAAC,GAAD,CAClBmM,UAAWhM,EACXiM,SAAU5K,EACV6K,SAAU5K,EACV6K,eAAgBnK,EAChBoK,UAAoB,GAAR/K,EAAM3B,EAAM,GACxB2M,UAAoB,GAARhL,EAAM1B,EAClB6H,gBAAiBA,EACjBpD,YAAaA,EACbF,SAAUA,IAEX7C,EAAMzB,aAAa,cAAC,GAAD,CAClBoM,UAAW3K,EACX6K,SAAU5K,EACV8M,YAAavM,EACbuC,YAAaA,EACbF,SAAUA,MAhEc5C,OChBnBqN,GAAoB,SAAC,GAM5B,IALJzC,EAKG,EALHA,SACAE,EAIG,EAJHA,UACAC,EAGG,EAHHA,UACAjI,EAEG,EAFHA,YACAF,EACG,EADHA,SAEMoI,EACD,IADCA,EAED,IAHF,EAKyC7E,mBAASf,YAAO,CAAC,CACzD+F,GAAG,EACH1H,MAAM,eACN2C,UAAU,CAAC,UAAW,YACtB,CACA+E,GAAG,EACH1H,MAAM,eACN2C,UAAU,CAAC,UAAW,eAZvB,mBAKIgF,EALJ,KAKoBC,EALpB,KAcGC,EAAa,SAAC,GAAW,EAATC,KACpB,OAAOH,EAAetL,KAAI,SAACsM,EAAIpM,GAC7B,OAAO,cAAC,OAAD,CAELkD,aAAa,EACbC,YAAY,EACZyB,KAAMwH,EAAIlM,IAAI,SACd9B,EAAG,GACHC,EAAG,EAAG,GAAG2B,EACT8E,MAAO,IAAIvC,IAAe,CACxBwC,WAAY,2CACZC,SAAU,GACVC,KAAKmH,EAAIlM,IAAI,aAAaoM,SAE5BC,YAAa,WACXlB,GAAkB,SAAAnG,GAAI,OACpBA,EAAKsH,MAAM,CAACxM,EAAI,YAAY,GAAG,eAGnCyM,WAAY,WACVpB,GAAkB,SAAAnG,GAAI,OACpBA,EAAKsH,MAAM,CAACxM,EAAI,YAAY,GAAG,eAGnCuD,WAAY,SAACmJ,GACX,OAAQN,EAAIlM,IAAI,OACd,KAAK,EACH0C,EAAS/B,EAAsB,CAC7Bb,IAAI4K,KAENhI,EAAShC,EAAmB,CAC1BZ,IAAI4K,KAEN,MACF,KAAK,EACH9H,GAAY,GACZF,EAAShC,EAAmB,CAC1BZ,IAAI4K,KAEN,MACF,QACE,OAAO+B,QAAQC,IAAIF,EAAEzI,WAtCtBjE,OA4CX,OAAO,cAAC,WAAD,CACL5B,EAAe,MAAZ0M,EAAgBA,EAAUE,EAC7B3M,EAAgB,MAAZ0M,GAA6B,MAAZA,EAAiBA,EAAUC,EAChDrJ,OAAQ,EACR2C,KAAM,SAAAC,GACJA,EAAEC,UAAU,EAAZ,WAAyB,GACzBD,EAAEE,UAAF,YACAF,EAAEG,gBAAgB,EAAE,EAAE,GAAG,GAAG,GAC5BH,EAAEI,WARC,SAUN,cAAC2G,EAAD,OC1EUgC,GAAa,SAAC,GAEtB,IADHC,EACE,EADFA,gBAGE7M,EAIE6M,EAJF7M,WAFA,EAME6M,EAHFJ,gBAHA,MAGSC,QAHT,EAIAtK,EAEEyK,EAFFzK,YACAF,EACE2K,EADF3K,SAEF,OAAOlC,EAAWZ,KAAI,SAACC,EAAMC,GAC3B,OAAO,eAAC,IAAMgD,SAAP,WACJjD,EAAMvB,OAAO,cAAC,SAAD,CACZ0E,YAAaiK,EACbhK,YAAY,EACZC,MAAO,GACPC,OAAQ,GACRjF,EAAW,GAAR2B,EAAM3B,EACTC,EAAW,GAAR0B,EAAM1B,EACTsD,OAAQ,EACR4B,WAAY,WACVT,GAAY,GACZF,EAAShC,EAAmB,CAC1BZ,IAAIA,MAGRyH,MAAOhB,EAAOiB,UAAP,UAAoB3H,EAAMnB,KAA1B,kBAA+C2I,OAEvDxH,EAAMxB,aAAa,cAAC,GAAD,CAClBqM,SAAU5K,EACV8K,UAAoB,GAAR/K,EAAM3B,EAAM,GACxB2M,UAAoB,GAARhL,EAAM1B,EAClByE,YAAaA,EACbF,SAAUA,IAEX7C,EAAMzB,aAAa,cAAC,GAAD,CAClBoM,UAAW3K,EACX6K,SAAU5K,EACV8M,YAAajM,EACbiC,YAAaA,EACbF,SAAUA,MA7Bc5C,OCFnBwN,GAAS,WAAM,IAAD,EACerH,mBAAS,YADxB,mBACjBJ,EADiB,aAEiBI,mBAAS,CACjDnG,IAAI,EACJwD,KAAK,UAJkB,mBAEjBb,EAFiB,KAEHuD,EAFG,OAMSC,mBAAS,CACzC1C,MAAM,GACNC,QAAO,IARgB,mBAMjBsC,EANiB,KAMPC,EANO,OAUWE,mBAAS,CAC3C1C,MAAM,GACNC,QAAO,EACP1B,SAAS,CACP5D,EAAE,EAAEC,EAAE,KAde,mBAUjBgG,EAViB,KAUNxB,EAVM,OAiBasD,mBAAS,CAC7CzC,QAAO,EACPM,SAAS,CAAEhE,IAAI,IACfiE,OAAO,CAAEjE,IAAI,MApBU,mBAiBjBgH,EAjBiB,KAiBLjE,EAjBK,OAsBWoD,mBAAS,CAC3CzC,QAAO,EACPF,KAAK,GACLQ,SAAS,CAAEhE,IAAI,GAAIX,MAAM,GAAIgJ,OAAO,GACpCpE,OAAO,CAAEjE,IAAI,GAAIiI,OAAM,EAAOK,SAAS,KA1BhB,mBAsBjBsB,EAtBiB,KAsBN3C,EAtBM,OAsCSd,oBAAS,GAtClB,mBAsCjBgH,EAtCiB,KAsCPrK,EAtCO,KAuCnBjB,EAAW4L,aAAY,SAAA/N,GAAK,OAAEA,EAAMmC,YACpCnD,EAAQ+O,aAAY,SAAA/N,GAAK,OAAEA,EAAMhB,SACjCgC,EAAa+M,aAAY,SAAA/N,GAAK,OAAEA,EAAMgB,cACtCkC,EAAW8K,cAUjB,OARA5E,qBAAU,WACRlG,EAASnD,EAAW,CAClBG,aAAauF,EAAUoB,MAAM,CAACR,EAAY,kBAE5CnD,EAASjC,EAAgB,CACvBf,aAAauF,EAAUoB,MAAM,CAACR,EAAY,yBAE5C,CAAEnD,EAAUmD,IACP,eAAC,QAAD,CACL3C,MAAO,IACPC,OAAQ,IACRsK,QAAS,CACPC,aAAa,EACbC,WAAW,EACXC,gBAAgB,OANb,UAQL,eAAC,YAAD,CAAWtG,kBAAkB,EAA7B,UACE,cAAC,SAAD,CACEpE,MAAO,IACPC,OAAQ,IACR1B,OAAQ,EACR8F,MAAOhB,EAAOiB,UAAP,UAAoB3B,EAApB,aAA2CwB,OAEpD,cAAC,EAAD,CAAoB7E,WAAY,CAC9BhE,QACAgC,aACAmB,WACAc,eACAC,WACAC,eACAC,cACAC,mBAEF,cAAC,GAAD,CAAOmK,WAAY,CACjBxO,QACAgC,aACAyM,WACArK,cACAoD,kBACAtD,cAEF,cAAC,GAAD,CAAY2K,gBAAiB,CAC1B7M,aACAyM,WACArK,cACAF,iBAGJyB,EAAUX,QAAQ,cAAC,EAAD,CACjBU,MAAO,CACL1F,QACAiE,eACA0B,YACAzB,WACAE,cACAD,kBAGHmD,EAAStC,QACR,cAAC,EAAD,CACEU,MAAO,CACL2B,cACArH,QACAiE,eACAjC,aACAsF,WACAlD,cACAmD,cACAC,qBAGLc,EAAWtD,QACV,cAAC,EAAD,CACEU,MAAO,CACL4C,aACAlE,cACAC,gBACAkE,eACArE,cAGLgH,EAAUlG,QACT,cAAC,GAAD,CACEU,MAAO,CACL2B,cACA6D,YACAlL,QACAgC,aACAoC,cACAmE,eACAhB,cACArD,kB,sWCpJV,IAAMmL,GAAcC,YAAH,MAGXC,GAAYC,IAAOC,IAAV,MAYFC,GAAM,WAAM,IAAD,EACgBjI,oBAAS,GADzB,mBACdkI,EADc,KACFC,EADE,KAOtB,OALAxF,qBAAU,WACRrC,EAAO8H,WAAW1H,KAAI,WACpByH,GAAc,SAGX,eAACL,GAAD,WACL,cAACF,GAAD,IACCM,EAAW,cAAC,GAAD,IACV,sBAAMG,UAAU,UAAhB,2BCjBSC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,QCHRQ,GAAcC,aAAgB,CAClCzQ,QACAmD,WACAnB,eAEW0O,GAAQC,aAAYH,ICFjCI,IAASC,OAAO,cAAC,IAAD,CAAUH,MAAOA,GAAjB,SAAwB,cAAC,GAAD,MAAmBI,SAASC,eAAe,SACnFhB,O","file":"static/js/main.2661f35e.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nconst basicCommon = {\r\n  x:0,\r\n  y:0,\r\n  checkStatus:false,\r\n  boardStatus:false,\r\n  debut:false,\r\n  roundAttack:false,\r\n};\r\nconst chess = createSlice({\r\n  name:'chess',\r\n  initialState:[\r\n    {\r\n      name:'Tanjirou',\r\n      cn:'竃門 碳治郎',\r\n      step:3,\r\n      attack:2,\r\n      hp:1500,\r\n      sp:100,\r\n      dodge:65,\r\n      fullValue:{\r\n        hp:1500,\r\n        sp:100\r\n      },\r\n      skill:[{ \r\n        name:'斬擊',\r\n        atk:50,\r\n        sp:0,\r\n        hitfix:0\r\n      },{ \r\n        name:'叄之型―流流舞',\r\n        atk:200,\r\n        sp:5,\r\n        hitfix:10\r\n      },{ \r\n        name:'捌之型―滝壺',\r\n        atk:200,\r\n        sp:5,\r\n        hitfix:5\r\n      },{\r\n        name:'拾之型―生生流轉',\r\n        atk:500,\r\n        sp:10,\r\n        hitfix:20\r\n      }],\r\n      ...basicCommon\r\n    },{\r\n      name:'Nezuko',\r\n      step:2,\r\n      attack:1,\r\n      hp:2200,\r\n      sp:200,\r\n      dodge:50,\r\n      fullValue:{\r\n        hp:2200,\r\n        sp:200\r\n      },\r\n      skill:[{ \r\n        name:'爪擊',\r\n        atk:50,\r\n        sp:0,\r\n        hitfix:0\r\n      },{ \r\n        name:'踢擊',\r\n        atk:120,\r\n        sp:5,\r\n        hitfix:0\r\n      },{ \r\n        name:'血鬼術',\r\n        atk:1000,\r\n        sp:100,\r\n        hitfix:0\r\n      }],\r\n      ...basicCommon\r\n    },{\r\n      name:'Inosuke',\r\n      cn:'嘴平 伊之助',\r\n      step:4,\r\n      attack:3,\r\n      hp:1800,\r\n      sp:80,\r\n      dodge:40,\r\n      fullValue:{\r\n        hp:1800,\r\n        sp:80\r\n      },\r\n      skill:[{ \r\n        name:'斬擊',\r\n        atk:50,\r\n        sp:0,\r\n        hitfix:0\r\n      },{ \r\n        name:'壹之牙―穿透刺射',\r\n        atk:120,\r\n        sp:2,\r\n        hitfix:0\r\n      },{ \r\n        name:'貳之牙―利刃對劈',\r\n        atk:200,\r\n        sp:5,\r\n        hitfix:0\r\n      },{\r\n        name:'叄之牙―獠牙撕扯',\r\n        atk:400,\r\n        sp:8,\r\n        hitfix:0\r\n      }],\r\n      ...basicCommon\r\n    }\r\n  ],\r\n  reducers:{\r\n    stageDebut:(state, actions)=> {\r\n      const { isDebutChess } = actions.payload;\r\n      state.map((value,key)=>{\r\n        return isDebutChess.map(v=>{\r\n          if(value.name===v.get('name')){\r\n            return (\r\n              state[key].debut = true,\r\n              state[key].x = v.get('x'),\r\n              state[key].y = v.get('y')\r\n            );\r\n          }else return null;\r\n        })\r\n      })\r\n    },\r\n    chessMove: (state, actions)=>{\r\n      const { key, changeX, changeY } = actions.payload;\r\n      state[key].x = changeX;\r\n      state[key].y = changeY;\r\n    },\r\n    chessSelected: (state, actions)=>{\r\n      const { key } = actions.payload;\r\n      state[key].boardStatus = !state[key].boardStatus;\r\n    },\r\n    chessCheckStatus: (state, actions)=> {\r\n      const { key } = actions.payload;\r\n      state[key].checkStatus = !state[key].checkStatus;\r\n    },\r\n    chessAttackResult: (state, actions)=> {\r\n      const { key, lessSp } = actions.payload;\r\n      state[key].sp -= lessSp;\r\n    }\r\n  }\r\n});\r\nexport default chess.reducer;\r\nexport const { \r\n  stageDebut, chessMove, chessSelected, chessCheckStatus, chessAttackResult \r\n} = chess.actions;","import { createSlice } from '@reduxjs/toolkit';\r\nconst basicCommon = {\r\n  x:0,\r\n  y:0,\r\n  checkStatus:false,\r\n  boardStatus:false,\r\n  debut:false,\r\n  roundAttack:false,\r\n};\r\nconst enemyChess = createSlice({\r\n  name:'enemyChess',\r\n  initialState:[\r\n    {\r\n      name:'Teoni',\r\n      cn:'手鬼',\r\n      hp:2000,\r\n      sp:100,\r\n      dodge:20,\r\n      fullValue:{\r\n        hp:2000,\r\n        sp:100\r\n      },\r\n      skill:[{ \r\n        name:'胡亂毆打',\r\n        atk:50,\r\n        sp:0,\r\n        hitfix:10\r\n      },{ \r\n        name:'你是第十四個',\r\n        atk:300,\r\n        sp:10,\r\n        hitfix:20\r\n      }],\r\n      ...basicCommon\r\n    },{\r\n      name:'Nomanooni',\r\n      cn:'沼鬼',\r\n      hp:1500,\r\n      sp:200,\r\n      dodge:30,\r\n      fullValue:{\r\n        hp:1500,\r\n        sp:200\r\n      },\r\n      skill:[{ \r\n        name:'爪擊',\r\n        atk:70,\r\n        sp:0,\r\n        hitfix:15\r\n      },{ \r\n        name:'分身攻擊',\r\n        atk:600,\r\n        sp:15,\r\n        hitfix:30\r\n      }],\r\n      ...basicCommon\r\n    }\r\n  ],\r\n  reducers:{\r\n    enemyStageDebut:(state, actions)=> {\r\n      const { isDebutChess } = actions.payload;\r\n      state.map((value,key)=>{\r\n        return isDebutChess.map(v=>{\r\n          if(value.name===v.get('name')){\r\n            return (\r\n              state[key].debut = true,\r\n              state[key].x = v.get('x'),\r\n              state[key].y = v.get('y')\r\n            );\r\n          }else return null;\r\n        })\r\n      })\r\n    },\r\n    enemyChessSelected: (state, actions)=>{\r\n      const { key } = actions.payload;\r\n      state[key].boardStatus = !state[key].boardStatus;\r\n    },\r\n    enemyChessCheckStatus: (state, actions)=> {\r\n      const { key } = actions.payload;\r\n      state[key].checkStatus = !state[key].checkStatus;\r\n    },\r\n    enemyChessDefense: (state, actions)=> {\r\n      const { key, damage } = actions.payload;\r\n      state[key].hp -= damage;\r\n    },\r\n    enemyChessDead: (state, actions)=> {\r\n      const { key } = actions.payload;\r\n      state[key].debut = false;\r\n      state[key].hp = state[key].fullValue.hp;\r\n      state[key].sp = state[key].fullValue.sp;\r\n    }\r\n  }\r\n});\r\nexport default enemyChess.reducer;\r\nexport const { enemyStageDebut, enemyChessSelected, enemyChessCheckStatus, enemyChessDefense, enemyChessDead } = enemyChess.actions;","import { createSlice } from '@reduxjs/toolkit';\r\nconst mapLimit = { x:20, y:15 };\r\nconst createTraverseLine = (traverse=0,color='')=>{\r\n  const list = [];\r\n  for(let i=0;i<mapLimit.x;i++){\r\n    list.push({\r\n      x:i,\r\n      y:traverse,\r\n      color:color,\r\n      alpha:0,\r\n      zIndex:1,\r\n      isInteractive:false\r\n    });\r\n  };\r\n  return list;\r\n};\r\nconst createStraightLine = ( method=()=>{} )=>{\r\n  const list = [];\r\n  for(let i=0;i<mapLimit.y;i++){\r\n    list.push(method(i,'0x383838'));\r\n  };\r\n  return list;\r\n};\r\nconst createInitialState = createStraightLine(createTraverseLine);\r\nconst chessMap = createSlice({\r\n  name:'chessMap',\r\n  initialState: createInitialState,\r\n  reducers:{\r\n    MoveSelect:(state, action)=>{\r\n      const { position, step, changeColor, alphaVal=1} = action.payload;\r\n      for(let i=0;i<(step+1);i++){\r\n        if(position.x+i<=(mapLimit.x-1)){\r\n          state[position.y][position.x+i].color=changeColor;\r\n          state[position.y][position.x+i].isInteractive=false;\r\n          state[position.y][position.x+i].alpha=alphaVal;\r\n          state[position.y][position.x+i].zIndex=1;\r\n        };\r\n        if(position.y+i<=(mapLimit.y-1)){\r\n          state[position.y+i][position.x].color=changeColor;\r\n          state[position.y+i][position.x].isInteractive=false;\r\n          state[position.y+i][position.x].alpha=alphaVal;\r\n          state[position.y+i][position.x].zIndex=1;\r\n        };\r\n        if(position.x-i>=0){\r\n          state[position.y][position.x-i].color=changeColor;\r\n          state[position.y][position.x-i].isInteractive=false;\r\n          state[position.y][position.x-i].alpha=alphaVal;\r\n          state[position.y][position.x-i].zIndex=1;\r\n        };\r\n        if(position.y-i>=0){\r\n          state[position.y-i][position.x].color=changeColor;\r\n          state[position.y-i][position.x].isInteractive=false;\r\n          state[position.y-i][position.x].alpha=alphaVal;\r\n          state[position.y-i][position.x].zIndex=1;\r\n        };\r\n      }\r\n    },\r\n    GetMove:(state, action)=>{\r\n      const { position, step, changeColor, currentChessPositions } = action.payload;\r\n      for(let i=0;i<(step+1);i++){\r\n        if(position.x+i<=(mapLimit.x-1)){\r\n          state[position.y][position.x+i].color=changeColor;\r\n          state[position.y][position.x+i].isInteractive=true;\r\n          state[position.y][position.x+i].alpha=0.5;\r\n          state[position.y][position.x+i].zIndex=1;\r\n        };\r\n        if(position.y+i<=(mapLimit.y-1)){\r\n          state[position.y+i][position.x].color=changeColor;\r\n          state[position.y+i][position.x].isInteractive=true;\r\n          state[position.y+i][position.x].alpha=0.5;\r\n          state[position.y+i][position.x].zIndex=1;\r\n          state[position.y][position.x-i].alpha=0.5;\r\n          state[position.y][position.x-i].zIndex=1;\r\n        };\r\n        if(position.x-i>=0){\r\n          state[position.y][position.x-i].color=changeColor;\r\n          state[position.y][position.x-i].isInteractive=true;\r\n        };\r\n        if(position.y-i>=0){\r\n          state[position.y-i][position.x].color=changeColor;\r\n          state[position.y-i][position.x].isInteractive=true;\r\n          state[position.y-i][position.x].alpha=0.5;\r\n          state[position.y-i][position.x].zIndex=1;\r\n        };\r\n      }\r\n      currentChessPositions.map(v=>{\r\n        return state[v.y][v.x].isInteractive=false;\r\n      });\r\n    },\r\n    GetAttack:(state, action)=>{\r\n      const { position, step, changeColor, currentChessPositions } = action.payload;\r\n      for(let i=0;i<(step+1);i++){\r\n        if(position.x+i<=(mapLimit.x-1)){\r\n          state[position.y][position.x+i].color=changeColor;\r\n          state[position.y][position.x+i].isInteractive=true;\r\n          state[position.y][position.x+i].alpha=0.5;\r\n          state[position.y][position.x+i].zIndex=3;\r\n        };\r\n        if(position.y+i<=(mapLimit.y-1)){\r\n          state[position.y+i][position.x].color=changeColor;\r\n          state[position.y+i][position.x].isInteractive=true;\r\n          state[position.y+i][position.x].alpha=0.5;\r\n          state[position.y+i][position.x].zIndex=3;\r\n        };\r\n        if(position.x-i>=0){\r\n          state[position.y][position.x-i].color=changeColor;\r\n          state[position.y][position.x-i].isInteractive=true;\r\n          state[position.y][position.x-i].alpha=0.5;\r\n          state[position.y][position.x-i].zIndex=3;\r\n        };\r\n        if(position.y-i>=0){\r\n          state[position.y-i][position.x].color=changeColor;\r\n          state[position.y-i][position.x].isInteractive=true;\r\n          state[position.y-i][position.x].alpha=0.5;\r\n          state[position.y-i][position.x].zIndex=3;\r\n        };\r\n      }\r\n      currentChessPositions.map(v=>{\r\n        return (\r\n          state[v.y][v.x].isInteractive=false,\r\n          state[v.y][v.x].zIndex=1\r\n        )\r\n      });\r\n    }\r\n  }\r\n});\r\nexport default chessMap.reducer;\r\nexport const { MoveSelect, GetMove, GetAttack } = chessMap.actions;\r\n","import React, {} from 'react';\r\nimport * as PIXI from \"pixi.js\";\r\nimport { Sprite } from '@inlet/react-pixi/animated';\r\nimport { MoveSelect } from '../../reducer/map';\r\nconst texture = PIXI.Texture.WHITE;\r\nexport const CreateCheckerboard = ({\r\n  reduxProps\r\n})=>{\r\n  const { \r\n    chess, enemyChess, chessMap, currentChess, dispatch, \r\n    setTipStatus, setMoveStep, setBattleInfo\r\n  } = reduxProps;\r\n  const checkMatchAttackPosition = (x,y)=>{\r\n    let isMatch = false;\r\n    enemyChess.map(v=>{\r\n      const checkMatch = v.debut&&(x===v.x)&&(y===v.y);\r\n      if(checkMatch){\r\n        return isMatch=true;\r\n      }else return null;\r\n    });\r\n    return isMatch;\r\n  };\r\n  const getCurrentEnemy = (x,y)=>{\r\n    let item = {};\r\n    enemyChess.map((v,k)=>{\r\n      const checkMatch = v.debut&&(x===v.x)&&(y===v.y);\r\n      if(checkMatch){\r\n        return item={...v,key:k}\r\n      }else return null;\r\n    });\r\n    return item;\r\n  };\r\n  return <React.Fragment>\r\n    {chessMap.map(value=> {\r\n      return value.map((v,k)=>{\r\n        return <Sprite\r\n          interactive={v.isInteractive}\r\n          buttonMode={v.isInteractive}\r\n          zIndex={v.zIndex}\r\n          key={k}\r\n          width={40}\r\n          height={40}\r\n          x={v.x*40}\r\n          y={v.y*40}\r\n          tint={v.color}\r\n          alpha={v.alpha}\r\n          texture={texture}\r\n          pointertap={()=>{\r\n            switch (currentChess.type) {\r\n              case \"MOVE\":\r\n                setTipStatus({\r\n                  title:'確定移動?',\r\n                  status:true,\r\n                  position:{\r\n                    x:v.x, y:v.y\r\n                  }\r\n                });\r\n                dispatch(MoveSelect({\r\n                  position:{ \r\n                    x:chess[currentChess.key].x, \r\n                    y:chess[currentChess.key].y,\r\n                  },\r\n                  step:chess[currentChess.key].step,\r\n                  changeColor:'0x06d6a0',\r\n                  alphaVal:0.5\r\n                }));\r\n                break;\r\n              case \"ATTACK\":\r\n                if(checkMatchAttackPosition(v.x,v.y)){\r\n                  const targetData = getCurrentEnemy(v.x,v.y);\r\n                  setBattleInfo({\r\n                    status:true,\r\n                    attacker:{ \r\n                      key: currentChess.key,\r\n                      ...chess[currentChess.key]\r\n                    },\r\n                    target:{\r\n                      key: targetData.key,\r\n                      ...targetData\r\n                    }\r\n                  });\r\n                  dispatch(MoveSelect({\r\n                    position:{ \r\n                      x:chess[currentChess.key].x, \r\n                      y:chess[currentChess.key].y,\r\n                    },\r\n                    step:chess[currentChess.key].attack,\r\n                    changeColor:'0x383838',\r\n                    alphaVal:0\r\n                  }));\r\n                }else {\r\n                  setMoveStep(true);\r\n                  dispatch(MoveSelect({\r\n                    position:{ \r\n                      x:chess[currentChess.key].x, \r\n                      y:chess[currentChess.key].y,\r\n                    },\r\n                    step:chess[currentChess.key].acttack,\r\n                    changeColor:'0x383838',\r\n                    alphaVal:0\r\n                  }));\r\n                };\r\n                break;\r\n              default:\r\n                return;\r\n            }; \r\n          }}\r\n        />\r\n      });\r\n    })}\r\n  </React.Fragment>\r\n};","import React from 'react';\r\n// import { fromJS } from 'immutable';\r\nimport { Graphics, Text } from '@inlet/react-pixi/animated';\r\nimport { chessMove } from \"../../reducer/chess\";\r\nimport { MoveSelect } from '../../reducer/map';\r\nimport * as PIXI from \"pixi.js\";\r\n\r\nexport const ConfirmTip = ({\r\n  props,\r\n})=> {\r\n  const { \r\n    chess,\r\n    currentChess,\r\n    tipStatus,\r\n    dispatch,\r\n    setMoveStep, \r\n    setTipStatus\r\n  } = props;\r\n  return <Graphics\r\n    x={400}\r\n    y={300}\r\n    draw={g=> {\r\n      g.lineStyle(1,`0xffffff`,1);\r\n      g.beginFill(`0x22223b`);\r\n      g.drawRoundedRect(-90,-50,180,100,8);\r\n      g.endFill();\r\n    }}\r\n  >\r\n    <Text\r\n      text={tipStatus.title}\r\n      anchor={0.5}\r\n      x={0}\r\n      y={-20}\r\n      style={new PIXI.TextStyle({\r\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 20,\r\n        fill:['#ffffff', '#ffffff'],\r\n      })}\r\n    />\r\n    <Text\r\n      interactive={true}\r\n      buttonMode={true}\r\n      anchor={0.5}\r\n      text={'確定'}\r\n      x={-30}\r\n      y={20}\r\n      style={new PIXI.TextStyle({\r\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 20,\r\n        fill:['#ffffff', '#ffffff'],\r\n      })}\r\n      pointertap={()=>{\r\n        switch (currentChess.type) {\r\n          case \"MOVE\":\r\n            dispatch(chessMove({\r\n              key: currentChess.key,\r\n              changeX:tipStatus.position.x,\r\n              changeY:tipStatus.position.y\r\n            }));\r\n            dispatch(MoveSelect({\r\n              position:{ \r\n                x:chess[currentChess.key].x, \r\n                y:chess[currentChess.key].y,\r\n              },\r\n              step:chess[currentChess.key].step,\r\n              changeColor:'0x383838',\r\n              alphaVal:0\r\n            }));\r\n            setMoveStep(true);\r\n            setTipStatus(prev=>{\r\n              return {...prev, status:false }\r\n            });\r\n            break;\r\n          default:\r\n            return;\r\n        }\r\n      }}\r\n    />\r\n    <Text\r\n      interactive={true}\r\n      buttonMode={true}\r\n      anchor={0.5}\r\n      text={'取消'}\r\n      x={30}\r\n      y={20}\r\n      style={new PIXI.TextStyle({\r\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 20,\r\n        fill:['#ffffff', '#ffffff'],\r\n      })}\r\n      pointertap={()=>{\r\n        switch (currentChess.type) {\r\n          case \"MOVE\":\r\n            dispatch(MoveSelect({\r\n              position:{ \r\n                x:chess[currentChess.key].x, \r\n                y:chess[currentChess.key].y,\r\n              },\r\n              step:chess[currentChess.key].step,\r\n              changeColor:'0x383838',\r\n              alphaVal:0\r\n            }));\r\n            setMoveStep(true);\r\n            setTipStatus(prev=>{\r\n              return {...prev, status:false }\r\n            })\r\n            break;\r\n          default:\r\n            return;\r\n        }\r\n      }}\r\n    />\r\n  </Graphics>\r\n};","import { fromJS } from \"immutable\";\r\n\r\nexport const stageRule = fromJS({\r\n  stageOne: {\r\n    debutChess:[\r\n      { \r\n        name:'Tanjirou',\r\n        x:3,\r\n        y:7\r\n      },\r\n    ],\r\n    debutEnemyChess:[\r\n      {\r\n        name:'Teoni',\r\n        x:16,\r\n        y:7\r\n      },\r\n    ],\r\n    isWin: enemyList => {\r\n      let totalLife = 0;\r\n        enemyList.map(v => {\r\n          if(v.debut){\r\n            return totalLife += v.hp;\r\n          }return null;\r\n        });\r\n      return totalLife>0 ? false : true ;\r\n    },\r\n    isLose: chessList => {\r\n      let totalLife = 0;\r\n        chessList.map(v => {\r\n          if(v.debut){\r\n            return totalLife += v.hp;\r\n          }return null;\r\n        });\r\n      return totalLife>0 ? false : true ;\r\n    }\r\n  },\r\n  stageTwo: {\r\n    debutChess:[\r\n      { \r\n        name:'Tanjirou',\r\n        x:3,\r\n        y:9\r\n      }, { \r\n        name:'Nezuko',\r\n        x:3,\r\n        y:11\r\n      }\r\n    ],\r\n    debutEnemyChess:[\r\n      {\r\n        name:'Nomanooni',\r\n        x:16,\r\n        y:7\r\n      }\r\n    ]\r\n  }\r\n});","import React,{ useState } from 'react';\r\n// import { fromJS } from 'immutable';\r\nimport { Graphics, Text } from '@inlet/react-pixi/animated';\r\nimport * as PIXI from \"pixi.js\";\r\n// rule\r\nimport { stageRule } from \"../../constants/stageRule\";\r\n\r\nexport const UsualTip = ({\r\n  props,\r\n})=> {\r\n  const {\r\n    stageStatus, chess, currentChess, enemyChess,\r\n    usualTip, setMoveStep, setUsualTip, setCurrentChess } = props;\r\n    const [ textColor, setTextColor ] = useState(['#ffffff', '#ffffff']);\r\n  return <Graphics\r\n    x={400}\r\n    y={300}\r\n    draw={g=> {\r\n      g.lineStyle(1,`0xffffff`,1);\r\n      g.beginFill(`0x22223b`);\r\n      g.drawRoundedRect(-90,-50,180,100,8);\r\n      g.endFill();\r\n    }}\r\n  >\r\n    <Text\r\n      text={usualTip.title}\r\n      anchor={0.5}\r\n      x={0}\r\n      y={-20}\r\n      style={new PIXI.TextStyle({\r\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 20,\r\n        fill: textColor,\r\n      })}\r\n    />\r\n    <Text\r\n      interactive={true}\r\n      buttonMode={true}\r\n      anchor={0.5}\r\n      text={'確定'}\r\n      x={0}\r\n      y={20}\r\n      style={new PIXI.TextStyle({\r\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 20,\r\n        fill:['#ffffff', '#ffffff'],\r\n      })}\r\n      pointertap={()=>{\r\n        switch (currentChess.type) {\r\n          case \"ATTACK\":\r\n            const checkWin = stageRule.getIn([stageStatus,'isWin']);\r\n            const checkLose = stageRule.getIn([stageStatus,'isLose']);\r\n            if(checkWin(enemyChess)){\r\n              setTextColor(['#ffffff', '#06d6a0']);\r\n              setCurrentChess({\r\n                key:0,\r\n                type:\"CHECKWIN\"\r\n              });\r\n              setUsualTip({\r\n                title:`作戰獲勝!`,\r\n                status:true,\r\n              });\r\n            }else if(checkLose(chess)){\r\n              setTextColor(['#dc2f02', '#d00000']);\r\n              setCurrentChess({\r\n                key:0,\r\n                type:\"CHECKLOSE\"\r\n              });\r\n              setUsualTip({\r\n                title:`作戰失敗!`,\r\n                status:true,\r\n              });\r\n            }else {\r\n              setMoveStep(true);\r\n              setUsualTip({\r\n                title:``,\r\n                status:false,\r\n              });\r\n            }\r\n            break;\r\n          case \"CHECKWIN\":\r\n            setMoveStep(true);\r\n            setTextColor(['#ffffff', '#ffffff']);\r\n            setUsualTip({\r\n              title:``,\r\n              status:false,\r\n            });\r\n            break;\r\n          case \"CHECKLOSE\":\r\n            setMoveStep(true);\r\n            setTextColor(['#ffffff', '#ffffff']);\r\n            setUsualTip({\r\n              title:``,\r\n              status:false,\r\n            });\r\n            break;\r\n          default:\r\n            return;\r\n        }\r\n      }}\r\n    />\r\n  </Graphics>\r\n};","import * as PIXI from \"pixi.js\";\r\nexport const loader = new PIXI.Loader();\r\nconst hostname = window.location.hostname==='localhost'?'./Demon-Slayer/':'./';\r\n\r\nloader\r\n  .add('Tanjirou-head-default',`${hostname}imgs/Tanjirou/head-default.png`)\r\n  .add('Tanjirou-fight-typeA',`${hostname}imgs/Tanjirou/fight-typeA.png`)\r\n  .add('Tanjirou-fight-typeB',`${hostname}imgs/Tanjirou/fight-typeB.png`)\r\n  .add('Nezuko-head-default',`${hostname}imgs/Nezuko/head-default.jpg`)\r\n  .add('Nezuko-fight',`${hostname}imgs/Nezuko/fight.png`)\r\n  .add('Inosuke-head-default',`${hostname}imgs/Inosuke/head-default.jpg`)\r\n  .add('Inosuke-fight',`${hostname}imgs/Inosuke/fight.png`)\r\n  .add('Teoni-head-default',`${hostname}imgs/Teoni/head-default.png`)\r\n  .add('Teoni-fight',`${hostname}imgs/Teoni/fight.png`)\r\n  .add('Nomanooni-head-default',`${hostname}imgs/Nomanooni/head-default.jpg`)\r\n  .add('Nomanooni-fight',`${hostname}imgs/Nomanooni/fight.png`)\r\n  .add('stageOne-BG',`${hostname}imgs/background/stage1-background.png`)\r\n  .add('stageOne-main-BG',`${hostname}imgs/background/stage1-main-background.jpg`)\r\n  .load();\r\n","export const ProbabilityCount = (\r\n  attackerHit,\r\n  targetDodge\r\n)=>{\r\n  const basicHit = 100;\r\n  const hitProbability = basicHit + attackerHit - targetDodge;\r\n  const checkRamdom = Math.round(Math.random()*100 + 1);\r\n  if(hitProbability < checkRamdom) {\r\n    return false\r\n  }else return true;\r\n};","import React,{ useState } from 'react';\r\nimport { Container, Sprite, Graphics, Text } from '@inlet/react-pixi/animated';\r\nimport { loader } from '../DataLoader';\r\nimport * as PIXI from \"pixi.js\";\r\nimport { ProbabilityCount } from \"../Common/ProbabilityCount\";\r\nimport { chessAttackResult } from \"../../reducer/chess\";\r\nimport { enemyChessDefense } from \"../../reducer/enemyChess\";\r\n\r\nexport const BattleBoard = ({ props })=>{\r\n  const { \r\n    battleInfo, setMoveStep, setBattleInfo, setAnimeShow, dispatch\r\n  } = props;\r\n  const [ atkSelectd, setAtkSelectd ] = useState({\r\n    key:0,\r\n  });\r\n  const CreateAttackerInfo = ({ pX=0, pY=0, data })=>{\r\n    return <Container x={pX} y={pY} sortableChildren={true}>\r\n      <Text\r\n        text={'攻'}\r\n        x={220}\r\n        y={0}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 30,\r\n          fill:['#ffffff', '#00ff99'],\r\n        })}\r\n      />\r\n      <Text\r\n        text={data.cn}\r\n        x={60}\r\n        y={-3}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 16,\r\n          fill:'#ffffff',\r\n        })}\r\n      />\r\n      <Text\r\n        text={`${data.hp} / ${data.fullValue.hp}`}\r\n        x={60}\r\n        y={17}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 16,\r\n          fill:'#ff6b6b',\r\n        })}\r\n      />\r\n      <Text\r\n        text={`${data.sp} / ${data.fullValue.sp}`}\r\n        x={60}\r\n        y={34}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 16,\r\n          fill:'#0466c8',\r\n        })}\r\n      />\r\n      <Sprite\r\n        width={50}\r\n        height={50}\r\n        x={0}\r\n        y={0}\r\n        image={loader.resources[`${data.name}-head-default`].data}\r\n      />\r\n      <Text\r\n        text={`招式選擇：`}\r\n        x={0}\r\n        y={80}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 16,\r\n          fill:'#ffffff',\r\n        })}\r\n      />\r\n      <Graphics\r\n        x={0}\r\n        y={115}\r\n        zIndex={1}\r\n        draw={g=> {\r\n          g.lineStyle(1,`0xffffff`,1);\r\n          g.beginFill(`0x0f0f1b`);\r\n          g.drawRoundedRect(0,0,240,180,8);\r\n          g.endFill();\r\n        }}\r\n      />\r\n      {data.skill.map((value,key)=>{\r\n        const skillCanUse = data.sp - value.sp >= 0;\r\n        return <React.Fragment key={key}>\r\n          <Text\r\n            zIndex={2}\r\n            interactive={skillCanUse}\r\n            buttonMode={true}\r\n            text={value.name}\r\n            x={20}\r\n            y={130+(key*24)}\r\n            style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n              fontSize: 16,\r\n              fill: ((atkSelectd.key===key)&&skillCanUse) ? ['#ffffff', '#00ff99'] :  \r\n                skillCanUse ? '#ffffff' : '#8d99ae',\r\n              fontWeight: (atkSelectd.key===key) ? 600 : 300\r\n            })}\r\n            pointertap={()=>setAtkSelectd({\r\n              key: key\r\n            })}\r\n          />\r\n        </React.Fragment>\r\n      })}\r\n    </Container>\r\n  };\r\n  const CreateTargetInfo = ({ pX=0, pY=0, data })=>{\r\n    return <Container x={pX} y={pY} sortableChildren={true}>\r\n      <Text\r\n        text={'防'}\r\n        x={0}\r\n        y={0}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 30,\r\n          fill:['#ffffff', '#ee6c4d'],\r\n        })}\r\n      />\r\n      <Text\r\n        text={data.cn}\r\n        anchor={{x:1,y:0}}\r\n        x={190}\r\n        y={-3}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 16,\r\n          fill:'#ffffff',\r\n        })}\r\n      />\r\n      <Text\r\n        text={`${data.hp} / ${data.fullValue.hp}`}\r\n        anchor={{x:1,y:0}}\r\n        x={190}\r\n        y={17}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 16,\r\n          fill:'#ff6b6b',\r\n        })}\r\n      />\r\n      <Text\r\n        text={`${data.sp} / ${data.fullValue.sp}`}\r\n        anchor={{x:1,y:0}}\r\n        x={190}\r\n        y={34}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 16,\r\n          fill:'#0466c8',\r\n        })}\r\n      />\r\n      <Sprite\r\n        width={50}\r\n        height={50}\r\n        x={200}\r\n        y={0}\r\n        image={loader.resources[`${data.name}-head-default`].data}\r\n      />\r\n    </Container>\r\n  };\r\n  const ForecastInfo = ({ pX, pY, data })=>{\r\n    return <Container x={pX} y={pY} sortableChildren={true}>\r\n      <Graphics\r\n        x={0}\r\n        y={0}\r\n        zIndex={1}\r\n        draw={g=> {\r\n          g.lineStyle(1,`0x00ff99`,1);\r\n          g.beginFill(`0x0f0f1b`);\r\n          g.drawRoundedRect(0,0,265,215,8);\r\n          g.endFill();\r\n        }}\r\n      />\r\n      <Text\r\n        text={`招式：`}\r\n        zIndex={2}\r\n        x={20}\r\n        y={20}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 20,\r\n          fill:'#ffffff'\r\n        })}\r\n      />\r\n      <Text\r\n        text={`${data.attacker.skill[atkSelectd.key].name}`}\r\n        zIndex={2}\r\n        x={80}\r\n        y={22}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 16,\r\n          fill:'#00ff99'\r\n        })}\r\n      />\r\n      <Text\r\n        text={`攻擊力：`}\r\n        zIndex={2}\r\n        x={20}\r\n        y={50}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 20,\r\n          fill:'#ffffff'\r\n        })}\r\n      />\r\n      <Text\r\n        text={`${data.attacker.skill[atkSelectd.key].atk}`}\r\n        zIndex={2}\r\n        x={100}\r\n        y={52}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 18,\r\n          fill:'#fdc500'\r\n        })}\r\n      />\r\n      <Text\r\n        text={`命中率：`}\r\n        zIndex={2}\r\n        x={20}\r\n        y={80}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 20,\r\n          fill:'#ffffff'\r\n        })}\r\n      />\r\n      <Text\r\n        text={`${\r\n          100 +\r\n          data.attacker.skill[atkSelectd.key].hitfix -\r\n          data.target.dodge\r\n        }%`}\r\n        zIndex={2}\r\n        x={100}\r\n        y={82}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 18,\r\n          fill:'#ffffff'\r\n        })}\r\n      />\r\n      <Text\r\n        text={`消耗：`}\r\n        zIndex={2}\r\n        x={20}\r\n        y={110}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 20,\r\n          fill:'#ffffff'\r\n        })}\r\n      />\r\n      <Text\r\n        text={`${data.attacker.skill[atkSelectd.key].sp}`}\r\n        zIndex={2}\r\n        x={80}\r\n        y={110}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 18,\r\n          fill:'#0466c8'\r\n        })}\r\n      />\r\n    </Container>\r\n  };\r\n  return <Graphics\r\n    x={400}\r\n    y={300}\r\n    zIndex={99}\r\n    draw={g=> {\r\n      g.lineStyle(1,`0xffffff`,1);\r\n      g.beginFill(`0x22223b`);\r\n      g.drawRoundedRect(-300,-200,600,400,8);\r\n      g.endFill();\r\n    }}\r\n  >\r\n    <CreateAttackerInfo\r\n      pX={-270}\r\n      pY={-180}\r\n      data={battleInfo.attacker}\r\n    />\r\n    <CreateTargetInfo\r\n      pX={20}\r\n      pY={-180}\r\n      data={battleInfo.target}\r\n    />\r\n    <ForecastInfo\r\n      pX={0}\r\n      pY={-100}\r\n      data={battleInfo}\r\n    />\r\n    <Text\r\n      interactive={true}\r\n      buttonMode={true}\r\n      text={'攻擊'}\r\n      anchor={0.5}\r\n      x={180}\r\n      y={160}\r\n      style={new PIXI.TextStyle({\r\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 20,\r\n        fill:'#ffffff',\r\n      })}\r\n      pointertap={()=>{\r\n        const isHit = ProbabilityCount(\r\n          battleInfo.attacker.skill[atkSelectd.key].hitfix,\r\n          battleInfo.target.dodge\r\n        );\r\n        dispatch(chessAttackResult({\r\n          key: battleInfo.attacker.key,\r\n          lessSp: battleInfo.attacker.skill[atkSelectd.key].sp\r\n        }));\r\n        if(isHit){\r\n          dispatch(enemyChessDefense({\r\n            key: battleInfo.target.key,\r\n            damage: battleInfo.attacker.skill[atkSelectd.key].atk\r\n          }));\r\n        };\r\n        setAnimeShow({\r\n          status:true,\r\n          type:'USER',\r\n          attacker:{ \r\n            key:battleInfo.attacker.key,\r\n            skill:battleInfo.attacker.skill[atkSelectd.key],\r\n            prevSP:battleInfo.attacker.sp\r\n          },\r\n          target:{ \r\n            key:battleInfo.target.key,\r\n            isHit:isHit,\r\n            prevLife:battleInfo.target.hp\r\n          }\r\n        });\r\n        setBattleInfo({\r\n          status:false,\r\n          attacker:{ key:'' },\r\n          target:{ key:'' }\r\n        });\r\n      }}\r\n    />\r\n    <Text\r\n      interactive={true}\r\n      buttonMode={true}\r\n      text={'取消'}\r\n      anchor={0.5}\r\n      x={240}\r\n      y={160}\r\n      style={new PIXI.TextStyle({\r\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 20,\r\n        fill:'#ffffff',\r\n      })}\r\n      pointertap={()=>{\r\n        setMoveStep(true);\r\n        setBattleInfo({\r\n          status:false,\r\n          attacker:{ key:'' },\r\n          target:{ key:'' }\r\n        })\r\n      }}\r\n    />\r\n  </Graphics>\r\n};","import React,{ useState, useEffect } from \"react\";\r\nimport { loader } from '../components/DataLoader';\r\nimport { Spring } from 'react-spring/renderprops';\r\nimport { Sprite } from '@inlet/react-pixi/animated';\r\n\r\nexport const ChessSkillShow = ({\r\n  attacker={},\r\n  skill={},\r\n  setBGstatus\r\n})=>{\r\n  switch (attacker.name) {\r\n    case `Tanjirou`:\r\n      return <TanjirouSkill\r\n        skillName={skill.name}\r\n        attackerName={attacker.name}\r\n        setBGstatus={setBGstatus}\r\n      />\r\n    default:\r\n      return;\r\n  };\r\n};\r\n// Tanjirou\r\nconst TanjirouSkill = ({\r\n  skillName,\r\n  attackerName,\r\n  setBGstatus\r\n})=>{\r\n  const [ position, setPosition ] = useState({ x:0, y:0, tension:170 });\r\n  const steps = (\r\n    skillName,\r\n    setPosition,\r\n    setBGstatus\r\n  ) => {\r\n    switch (skillName) {\r\n      default:\r\n        setPosition({ x:550,y:50,tension:100 });\r\n        const start = ()=>{\r\n          const timeout = setTimeout(() => {\r\n            setPosition({ x:250, y:50, tension:100 });\r\n            // callback\r\n            step1();\r\n          },2000);\r\n          return ()=> clearTimeout(timeout);\r\n        };\r\n        const step1 = ()=>{\r\n          const timeout = setTimeout(() => {\r\n            setPosition({ x:0, y:50, tension:100 });\r\n            setBGstatus({ type:'SKILL' });\r\n            // callback\r\n            step2();\r\n          },3000);\r\n          return ()=> clearTimeout(timeout);\r\n        };\r\n        const step2 = ()=>{\r\n          const timeout = setTimeout(() => {\r\n            setPosition({ x:-250, y:50, tension:1000 });\r\n            setBGstatus({ type:'STANDBY' });\r\n            // callback\r\n            step3();\r\n          },3000);\r\n          return ()=> clearTimeout(timeout);\r\n        };\r\n        const step3 = ()=>{\r\n          const timeout = setTimeout(() => {\r\n            setPosition({ x:550,y:50, tension:50 });\r\n          },3000);\r\n          return ()=> clearTimeout(timeout);\r\n        };\r\n        start();\r\n        break;\r\n    }\r\n  };\r\n  useEffect(()=>{\r\n    steps(skillName,setPosition,setBGstatus);\r\n  },[ skillName, setBGstatus ]);\r\n  switch (skillName) {\r\n    case `斬擊`:\r\n      return <Spring\r\n          from={{ x:550, y:50 }}\r\n          to={{ x:position.x, y:position.y }}\r\n          config={{ \r\n            mass:1,\r\n            tension: position.tension,\r\n            friction:20,\r\n          }}\r\n        >\r\n        {props => \r\n          <Sprite\r\n            zIndex={2}\r\n            width={200}\r\n            height={200}\r\n            anchor={0.5}\r\n            image={loader.resources[`${attackerName}-fight-typeA`].data}\r\n            {...props}\r\n          />}\r\n        </Spring>\r\n    default:\r\n      return <Spring\r\n        from={{ x:550, y:50 }}\r\n        to={{ x:position.x, y:position.y }}\r\n        config={{ \r\n          mass:1,\r\n          tension: position.tension,\r\n          friction:20,\r\n        }}\r\n      >\r\n      {props => \r\n        <Sprite\r\n          zIndex={2}\r\n          width={200}\r\n          height={200}\r\n          anchor={0.5}\r\n          image={loader.resources[`${attackerName}-fight-typeA`].data}\r\n          {...props}\r\n        />}\r\n      </Spring>\r\n  };\r\n};\r\n","import React,{ useState } from 'react';\r\nimport { Container, Sprite, Graphics, Text } from '@inlet/react-pixi/animated';\r\nimport { loader } from '../DataLoader';\r\nimport * as PIXI from \"pixi.js\";\r\nimport { Spring } from 'react-spring/renderprops';\r\nimport { enemyChessDead } from \"../../reducer/enemyChess\";\r\n// skill\r\nimport { ChessSkillShow } from \"../../constants/ChessSkillShow\";\r\n\r\nexport const BattleAnimeShow = ({\r\n  props\r\n}) =>{\r\n  const { stageStatus, animeShow, chess, enemyChess, \r\n    setMoveStep, setAnimeShow, setUsualTip, dispatch } = props;\r\n  const { target } = animeShow;\r\n  const [ targetHp, setTargetHp ] = useState(animeShow.target.prevLife);\r\n  // TopBar\r\n  const TopBar = ({\r\n    attacker={},\r\n    target={},\r\n  })=> {\r\n    return <Graphics \r\n      x={-400}\r\n      y={-300}\r\n      zIndex={98}\r\n      draw={g=> {\r\n        g.beginFill(`0x000f23`);\r\n        g.drawRoundedRect(0,0,800,80,0);\r\n        g.endFill();\r\n      }}\r\n    >\r\n      <Container sortableChildren={true}>\r\n        <Graphics\r\n          x={370}\r\n          y={40}\r\n          draw={g=> {\r\n            g.beginFill(`0x364958`);\r\n            g.drawRoundedRect(-21,-21,42,42,50);\r\n            g.endFill();\r\n          }}\r\n        >\r\n          <Text \r\n            text={`守`} \r\n            x={0} y={0}\r\n            anchor={0.5}\r\n            style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n              fontSize: 24,\r\n              fill:'#ffffff',\r\n            })}/>\r\n        </Graphics>\r\n        <Graphics\r\n          x={420}\r\n          y={40}\r\n          draw={g=> {\r\n            g.beginFill(`0xfe7f2d`);\r\n            g.drawRoundedRect(-21,-21,42,42,50);\r\n            g.endFill();\r\n          }}\r\n        >\r\n          <Text \r\n            text={`攻`} \r\n            x={0} y={0}\r\n            anchor={0.5}\r\n            style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n              fontSize: 24,\r\n              fill:'#ffffff',\r\n            })}/>\r\n        </Graphics>\r\n        {/* target */}\r\n        <Sprite\r\n          width={50}\r\n          height={50}\r\n          x={50}\r\n          y={15}\r\n          image={loader.resources[`${target.name}-head-default`].data}\r\n        />\r\n        <Text \r\n          text={`${targetHp} / ${target.fullValue.hp}`}\r\n          anchor={{x:1,y:0}} \r\n          x={320} y={10}\r\n          style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n            fontSize: 18,\r\n            fill:'#e71d36',\r\n          })}/>\r\n        <Graphics\r\n          x={320} y={35}\r\n          zIndex={1}\r\n          draw={g=> {\r\n            g.beginFill(`0x333533`);\r\n            g.drawRoundedRect(0,0,-200,10,0);\r\n            g.endFill();\r\n          }}\r\n        />\r\n        <Graphics\r\n          x={320} y={35}\r\n          zIndex={2}\r\n          draw={g=> {\r\n            g.beginFill(`0xe71d36`);\r\n            g.drawRoundedRect(0,0,-200,10,0);\r\n            g.endFill();\r\n          }}\r\n        />\r\n        {/* attacker */}\r\n        <Sprite\r\n          width={50}\r\n          height={50}\r\n          x={690}\r\n          y={15}\r\n          image={loader.resources[`${attacker.name}-head-default`].data}\r\n        />\r\n        <Text \r\n          text={`${attacker.hp} / ${attacker.fullValue.hp}`}\r\n          anchor={{x:1,y:0}} \r\n          x={670} y={10}\r\n          style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n            fontSize: 18,\r\n            fill:'#e71d36',\r\n          })}/>\r\n        <Graphics\r\n          x={670} y={35}\r\n          zIndex={1}\r\n          draw={g=> {\r\n            g.beginFill(`0x333533`);\r\n            g.drawRoundedRect(0,0,-200,10,0);\r\n            g.endFill();\r\n          }}\r\n        />\r\n        <Graphics\r\n          x={670} y={35}\r\n          zIndex={2}\r\n          draw={g=> {\r\n            g.beginFill(`0xe71d36`);\r\n            g.drawRoundedRect(0,0,-200,10,0);\r\n            g.endFill();\r\n          }}\r\n        />\r\n      </Container>\r\n    </Graphics>\r\n  };\r\n  // Bottombar\r\n  const Bottombar = ()=> {\r\n    return <Graphics \r\n      x={-400}\r\n      y={150}\r\n      zIndex={98}\r\n      draw={g=> {\r\n        g.beginFill(`0x000f23`);\r\n        g.drawRoundedRect(0,0,800,150,0);\r\n        g.endFill();\r\n      }}\r\n    ></Graphics>\r\n  };\r\n  // CreateContent\r\n  const CreateContent = ()=>{\r\n    const [ BGstatus, setBGstatus ] = useState({ type:'STANDBY' });\r\n    const [ BGprop, setBGpops ] = useState({ toX:400, duration: 20000 });\r\n    const [ SkBGprop, setSkBGpops ] = useState({ toX:400, duration: 500 });\r\n    return <Container sortableChildren={true}>\r\n      {BGstatus.type==='STANDBY'&&<Spring\r\n        from={{ x:-400, y:-100 }}\r\n        to={{ x: BGprop.toX, y:-100 }}\r\n        config={{ duration: BGprop.duration }}\r\n        onRest={()=>{\r\n          if(BGprop.toX===-400){\r\n            setBGpops({\r\n              toX:400,\r\n              duration: 20000\r\n            });\r\n          }else {\r\n            setBGpops({\r\n              toX:-400,\r\n              duration:-1000\r\n            });\r\n          };\r\n        }}\r\n      >\r\n        {props => \r\n          <Sprite\r\n            zIndex={1}\r\n            width={1600}\r\n            height={500}\r\n            anchor={0.5}\r\n            image={loader.resources[`${stageStatus}-BG`].data}\r\n            {...props}\r\n        />}\r\n      </Spring>}\r\n      {BGstatus.type==='SKILL'&&<Spring\r\n        from={{ x:-400, y:-100 }}\r\n        to={{ x: SkBGprop.toX, y:-100 }}\r\n        config={{ duration: SkBGprop.duration }}\r\n        onRest={()=>{\r\n          if(SkBGprop.toX===-400){\r\n            setSkBGpops({\r\n              toX:400,\r\n              duration: 500\r\n            });\r\n          }else {\r\n            setSkBGpops({\r\n              toX:-400,\r\n              duration:-1000\r\n            });\r\n          };\r\n        }}\r\n      >\r\n        {props => \r\n          <Sprite\r\n            zIndex={1}\r\n            width={1600}\r\n            height={500}\r\n            anchor={0.5}\r\n            image={loader.resources[`${stageStatus}-BG`].data}\r\n            {...props}\r\n        />}\r\n      </Spring>}\r\n      {animeShow.type===\"USER\"?\r\n        <TopBar\r\n          attacker={chess[typeof(animeShow.attacker.key)!=='number'?0:animeShow.attacker.key]}\r\n          target={enemyChess[typeof(animeShow.target.key)!=='number'?0:animeShow.target.key]}\r\n        />:\r\n        <TopBar\r\n          attacker={enemyChess[typeof(animeShow.target.key)!=='number'?0:animeShow.target.key]}\r\n          target={chess[typeof(animeShow.attacker.key)!=='number'?0:animeShow.attacker.key]}\r\n        />\r\n      }\r\n      <ChessSkillShow\r\n        attacker={chess[typeof(animeShow.attacker.key)!=='number'?0:animeShow.attacker.key]}\r\n        skill={animeShow.attacker.skill}\r\n        setBGstatus={setBGstatus}\r\n      />\r\n      <Bottombar/>\r\n      <Graphics\r\n        zIndex={99}\r\n        interactive={true}\r\n        buttonMode={true}\r\n        x={315}\r\n        y={255}\r\n        draw={g=> {\r\n          g.beginFill(`0x586f7c`);\r\n          g.drawRoundedRect(-6,-3,75,30,6);\r\n          g.endFill();\r\n        }}\r\n        pointertap={()=>{\r\n          setAnimeShow({\r\n            status:false,\r\n            type:'',\r\n            attacker:{ key:'', skill:{}, prevSP:0 },\r\n            target:{ key:'', isHit:false, prevLife:0 }\r\n          });\r\n          // result check line\r\n          if(animeShow.type===\"USER\" &&\r\n            enemyChess[target.key].hp <= 0\r\n          ){\r\n            dispatch(enemyChessDead({ key:target.key }));\r\n            setUsualTip({\r\n              title:`已擊敗 ${enemyChess[target.key].cn}!`,\r\n              status:true,\r\n            });\r\n          }else {\r\n            setMoveStep(true);\r\n          };\r\n        }}\r\n      >\r\n        <Text text={`戰鬥 off`} x={0} y={0}\r\n          style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n            fontSize: 18,\r\n            fill:'#c0fdff',\r\n          })}\r\n        />\r\n      </Graphics>\r\n    </Container>\r\n  };\r\n  return <Graphics\r\n    x={400}\r\n    y={300}\r\n    zIndex={99}\r\n    draw={g=> {\r\n      g.beginFill(`0x011627`);\r\n      g.drawRoundedRect(-400,-300,800,600,0);\r\n      g.endFill();\r\n    }}\r\n  >\r\n    <CreateContent/>\r\n  </Graphics>\r\n};","import React,{ useState } from 'react';\r\nimport { fromJS } from 'immutable';\r\nimport { Graphics, Text } from '@inlet/react-pixi/animated';\r\nimport { GetMove, GetAttack } from '../../reducer/map';\r\nimport { chessSelected, chessCheckStatus } from \"../../reducer/chess\";\r\nimport * as PIXI from \"pixi.js\";\r\n\r\nexport const ChessUIBoard = ({\r\n  ChessData,\r\n  ChessVal,\r\n  ChessKey,\r\n  EnemyChessData,\r\n  positionX,\r\n  positionY,\r\n  setCurrentChess,\r\n  setMoveStep,\r\n  dispatch\r\n})=> {\r\n  const specialPosition = {\r\n    x: 720,\r\n    y: 490\r\n  };\r\n  const forMoveArray = [];\r\n  const forAttackArray = [];\r\n  const [textInforArray, setTextInforArray] = useState(fromJS([{\r\n      id:1, \r\n      title:\"移動\",\r\n      textColor:['#ffffff', '#ffffff']\r\n    },{ \r\n      id:2,\r\n      title:\"攻擊\",\r\n      textColor:['#ffffff', '#ffffff']\r\n    },{ \r\n      id:3,\r\n      title:\"狀態\",\r\n      textColor:['#ffffff', '#ffffff']\r\n    },{ \r\n      id:4,\r\n      title:\"返回\",\r\n      textColor:['#ffffff', '#ffffff']\r\n  }]));\r\n  ChessData.map((v)=>{\r\n    return (\r\n      forMoveArray.push({ x:v.x, y:v.y }),\r\n      forAttackArray.push({ x:v.x, y:v.y })\r\n    );\r\n  });\r\n  EnemyChessData.map((v)=>{\r\n    return forMoveArray.push({ x:v.x, y:v.y });\r\n  });\r\n  const compareAttack = (\r\n    chessX,\r\n    chessY,\r\n    chessAtk\r\n  )=>{\r\n    let isAttack = false;\r\n    const isDebutEnemy = EnemyChessData.filter(v=>v.debut);\r\n    const limitPosition = { x:19, y:14 };\r\n    const positionRange = [];\r\n    for(let i=0; i < chessAtk; i++){\r\n      const getaddX = (chessX+(i+1)>=limitPosition.x) ? limitPosition.x : chessX+(i+1);\r\n      const getaddY = (chessY+(i+1)>=limitPosition.y) ? limitPosition.y : chessY+(i+1);\r\n      const getlessX = (chessX-(i+1)<=0) ? 0 : chessX-(i+1);\r\n      const getlessY = (chessY-(i+1)<=0) ? 0 : chessY-(i+1);\r\n      positionRange.push(\r\n        { x:getaddX, y:chessY },\r\n        { x:getlessX, y:chessY },\r\n        { x:chessX, y:getaddY },\r\n        { x:chessX, y:getlessY }\r\n      );\r\n    };\r\n    isDebutEnemy.map(val=>{\r\n      return positionRange.map(v=>{\r\n        if(val.x===v.x&&val.y===v.y){\r\n          return isAttack = true;\r\n        }else return null\r\n      })\r\n    });\r\n    return isAttack;\r\n  };\r\n  const CreateText = ({ noop })=>{\r\n    const isAttack = compareAttack(ChessVal.x,ChessVal.y,ChessVal.attack);\r\n    return textInforArray.map((val,key)=>{\r\n      return <Text\r\n        key={key}\r\n        interactive={\r\n          (val.get('id')===2)?\r\n          isAttack : true\r\n        }\r\n        buttonMode={true}\r\n        text={val.get('title')}\r\n        x={10}\r\n        y={5+(25*key)}\r\n        style={new PIXI.TextStyle({\r\n          fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 20,\r\n          fill:((val.get('id')===2)&&!isAttack)? '#8d99ae' :val.get('textColor').toJS(),\r\n        })}\r\n        pointerover={()=>{\r\n          setTextInforArray(prev=>\r\n            prev.setIn([key,'textColor',1],'#00ff99')\r\n          );\r\n        }}\r\n        pointerout={()=>{\r\n          setTextInforArray(prev=>\r\n            prev.setIn([key,'textColor',1],'#ffffff')\r\n          );\r\n        }}\r\n        pointertap={(e)=>{\r\n          switch (val.get('id')) {\r\n            case 1:\r\n              setCurrentChess({ \r\n                key:ChessKey,\r\n                type:\"MOVE\"\r\n              });\r\n              dispatch(GetMove({\r\n                position:{ \r\n                  x:ChessVal.x, \r\n                  y:ChessVal.y,\r\n                },\r\n                step:ChessVal.step,\r\n                changeColor:'0x06d6a0',\r\n                currentChessPositions: forMoveArray\r\n              }));\r\n              dispatch(chessSelected({\r\n                key:ChessKey\r\n              }));\r\n              break;\r\n            case 2:\r\n              setCurrentChess({ \r\n                key:ChessKey,\r\n                type:\"ATTACK\"\r\n              });\r\n              dispatch(chessSelected({\r\n                key:ChessKey\r\n              }));\r\n              dispatch(GetAttack({\r\n                position:{ \r\n                  x:ChessVal.x, \r\n                  y:ChessVal.y,\r\n                },\r\n                step:ChessVal.attack,\r\n                changeColor:'0x00bbf9',\r\n                currentChessPositions: forAttackArray\r\n              }));\r\n              break;\r\n            case 3:\r\n              setCurrentChess({ \r\n                key:ChessKey,\r\n                type:\"STATUS\"\r\n              });\r\n              dispatch(chessCheckStatus({\r\n                key:ChessKey\r\n              }));\r\n              dispatch(chessSelected({\r\n                key:ChessKey\r\n              }));\r\n              break;\r\n            case 4 :\r\n              setMoveStep(true);\r\n              dispatch(chessSelected({\r\n                key:ChessKey\r\n              }));\r\n              break;\r\n            default:\r\n              return console.log(e.target)\r\n          };\r\n        }}\r\n      />\r\n    }\r\n  )};\r\n  return <Graphics\r\n    x={positionX!==800?positionX:specialPosition.x}\r\n    y={(positionY!==560&&positionY!==520)?positionY:specialPosition.y}\r\n    zIndex={3}\r\n    draw={g=> {\r\n      g.lineStyle(1,`0xffffff`,1);\r\n      g.beginFill(`0x22223b`);\r\n      g.drawRoundedRect(0,0,60,110,8);\r\n      g.endFill();\r\n    }}\r\n  ><CreateText/></Graphics>\r\n};","import React from 'react';\r\nimport { Sprite, Graphics, Text } from '@inlet/react-pixi/animated';\r\nimport { loader } from '../DataLoader';\r\nimport * as PIXI from \"pixi.js\";\r\n\r\nexport const ChessStatus = ({\r\n  ChessData,\r\n  ChessKey,\r\n  CheckStatus,\r\n  setMoveStep,\r\n  dispatch\r\n})=> {\r\n  const CreateSkillList = ()=>{\r\n    return ChessData.skill.map((value,key)=>{\r\n        return <React.Fragment key={key}>\r\n        <Text\r\n          x={-40}\r\n          y={-70+(key*22)}\r\n          text={`${value.name}`}\r\n          style={new PIXI.TextStyle({\r\n            fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n            fontSize: 16,\r\n            fill:'#ffb700',\r\n          })}\r\n        />\r\n        <Text\r\n          x={-35+(value.name.length * 16)}\r\n          y={-70+(key*22)}\r\n          text={`ATK:${value.atk}(${value.sp}SP)`}\r\n          style={new PIXI.TextStyle({\r\n            fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n            fontSize: 14,\r\n            fill:'#ffffff',\r\n          })}\r\n        />\r\n      </React.Fragment>\r\n    });  \r\n  };\r\n  return <Graphics\r\n    x={400}\r\n    y={300}\r\n    zIndex={99}\r\n    draw={g=> {\r\n      g.lineStyle(1,`0xffffff`,1);\r\n      g.beginFill(`0x22223b`);\r\n      g.drawRoundedRect(-250,-150,500,300,8);\r\n      g.endFill();\r\n    }}\r\n  >\r\n    <Graphics\r\n      x={220}\r\n      y={-120}\r\n      interactive={true}\r\n      buttonMode={true}\r\n      pointertap={(e)=>{\r\n        setMoveStep(true);\r\n        dispatch(CheckStatus({\r\n          key:ChessKey\r\n        }));\r\n      }}\r\n      draw={g=> {\r\n        g.beginFill(`0x02040f`);\r\n        g.drawRoundedRect(-15,-15,30,30,50);\r\n        g.endFill();\r\n      }}\r\n    >\r\n      <Text\r\n        anchor={0.5}\r\n        text={`X`}\r\n        style={new PIXI.TextStyle({\r\n          fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 16,\r\n          fill:'#ffffff',\r\n        })}\r\n      />\r\n    </Graphics>\r\n    <Sprite\r\n      width={80}\r\n      height={80}\r\n      x={-200}\r\n      y={-90}\r\n      image={loader.resources[`${ChessData.name}-head-default`].data}\r\n    />\r\n    <Text\r\n      x={-200}\r\n      y={10}\r\n      text={ChessData.cn}\r\n      style={new PIXI.TextStyle({\r\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 16,\r\n        fill:'#ffffff',\r\n      })}\r\n    />\r\n    <Text\r\n      x={-200}\r\n      y={35}\r\n      text={`HP:`}\r\n      style={new PIXI.TextStyle({\r\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 16,\r\n        fill:'#ffffff',\r\n      })}\r\n    />\r\n    <Text\r\n      x={-170}\r\n      y={35}\r\n      text={`${ChessData.hp} / ${ChessData.fullValue.hp}`}\r\n      style={new PIXI.TextStyle({\r\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 16,\r\n        fill:'#ff6b6b',\r\n      })}\r\n    />\r\n    <Text\r\n      x={-200}\r\n      y={60}\r\n      text={`SP:`}\r\n      style={new PIXI.TextStyle({\r\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 16,\r\n        fill:'#ffffff',\r\n      })}\r\n    />\r\n    <Text\r\n      x={-170}\r\n      y={60}\r\n      text={`${ChessData.sp} / ${ChessData.fullValue.sp}`}\r\n      style={new PIXI.TextStyle({\r\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 16,\r\n        fill:'#0466c8',\r\n      })}\r\n    />\r\n    <Text\r\n      x={-50}\r\n      y={-95}\r\n      text={'招式'}\r\n      style={new PIXI.TextStyle({\r\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 16,\r\n        fill:'#ffffff',\r\n      })}\r\n    />\r\n    <CreateSkillList/>\r\n  </Graphics>\r\n};","import React from 'react';\r\nimport { Sprite } from '@inlet/react-pixi/animated';\r\nimport { loader } from '../DataLoader';\r\n// reducers\r\nimport { MoveSelect } from '../../reducer/map';\r\nimport { chessSelected, chessCheckStatus } from \"../../reducer/chess\";\r\n// other part\r\nimport { ChessUIBoard } from \"./ChessUIBoard\";\r\nimport { ChessStatus } from \"../Common/ChessStatus\";\r\n\r\nexport const Chess = ({\r\n  chessProps\r\n})=>{\r\n  const { \r\n    chess,\r\n    enemyChess,\r\n    moveStep=Boolean,\r\n    setMoveStep,\r\n    setCurrentChess,\r\n    dispatch\r\n  } = chessProps;\r\n  return chess.map((value,key)=>{\r\n    return <React.Fragment key={key}>\r\n      {value.debut&&<Sprite\r\n        interactive={moveStep}\r\n        buttonMode={true}\r\n        width={40}\r\n        height={40}\r\n        x={value.x*40}\r\n        y={value.y*40}\r\n        zIndex={2}\r\n        pointerover={()=>{\r\n          dispatch(MoveSelect({\r\n            position:{ \r\n              x:value.x, \r\n              y:value.y,\r\n            },\r\n            step:value.step,\r\n            changeColor:'0x06d6a0',\r\n            alphaVal:0.5\r\n          }));\r\n        }}\r\n        pointerout={()=>{\r\n          dispatch(MoveSelect({\r\n            position:{ \r\n              x:value.x, \r\n              y:value.y,\r\n            },\r\n            step:value.step,\r\n            changeColor:'0x383838',\r\n            alphaVal:0\r\n          }));\r\n        }}\r\n        pointertap={()=>{\r\n          setMoveStep(false);\r\n          dispatch(chessSelected({\r\n            key:key\r\n          }));\r\n          dispatch(MoveSelect({\r\n            position:{ \r\n              x:value.x, \r\n              y:value.y,\r\n            },\r\n            step:value.step,\r\n            changeColor:'0x383838',\r\n            alphaVal:0\r\n          }));\r\n        }}\r\n        image={loader.resources[`${value.name}-head-default`].data}\r\n      />}\r\n      {value.boardStatus&&<ChessUIBoard\r\n        ChessData={chess}\r\n        ChessVal={value}\r\n        ChessKey={key}\r\n        EnemyChessData={enemyChess}\r\n        positionX={(value.x*40)+40}\r\n        positionY={(value.y*40)}\r\n        setCurrentChess={setCurrentChess}\r\n        setMoveStep={setMoveStep}\r\n        dispatch={dispatch}\r\n      />}\r\n      {value.checkStatus&&<ChessStatus\r\n        ChessData={value}\r\n        ChessKey={key}\r\n        CheckStatus={chessCheckStatus}\r\n        setMoveStep={setMoveStep}\r\n        dispatch={dispatch}\r\n      />}\r\n    </React.Fragment>\r\n  })\r\n};","import React,{ useState } from 'react';\r\nimport { fromJS } from 'immutable';\r\nimport { Graphics, Text } from '@inlet/react-pixi/animated';\r\nimport { enemyChessSelected, enemyChessCheckStatus } from \"../../reducer/enemyChess\";\r\nimport * as PIXI from \"pixi.js\";\r\n\r\nexport const EnemyChessUIBoard = ({\r\n  ChessKey,\r\n  positionX,\r\n  positionY,\r\n  setMoveStep,\r\n  dispatch\r\n})=> {\r\n  const specialPosition = {\r\n    x: 720,\r\n    y: 535\r\n  };\r\n  const [textInforArray, setTextInforArray] = useState(fromJS([{\r\n      id:1,\r\n      title:\"狀態\",\r\n      textColor:['#ffffff', '#ffffff']\r\n    },{ \r\n      id:2,\r\n      title:\"返回\",\r\n      textColor:['#ffffff', '#ffffff']\r\n  }]));\r\n  const CreateText = ({ noop })=>{\r\n    return textInforArray.map((val,key)=>{\r\n      return <Text\r\n        key={key}\r\n        interactive={true}\r\n        buttonMode={true}\r\n        text={val.get('title')}\r\n        x={10}\r\n        y={5+(25*key)}\r\n        style={new PIXI.TextStyle({\r\n          fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 20,\r\n          fill:val.get('textColor').toJS(),\r\n        })}\r\n        pointerover={()=>{\r\n          setTextInforArray(prev=>\r\n            prev.setIn([key,'textColor',1],'#9d4edd')\r\n          );\r\n        }}\r\n        pointerout={()=>{\r\n          setTextInforArray(prev=>\r\n            prev.setIn([key,'textColor',1],'#ffffff')\r\n          );\r\n        }}\r\n        pointertap={(e)=>{\r\n          switch (val.get('id')) {\r\n            case 1:\r\n              dispatch(enemyChessCheckStatus({\r\n                key:ChessKey\r\n              }));\r\n              dispatch(enemyChessSelected({\r\n                key:ChessKey\r\n              }));\r\n              break;\r\n            case 2 :\r\n              setMoveStep(true);\r\n              dispatch(enemyChessSelected({\r\n                key:ChessKey\r\n              }));\r\n              break;\r\n            default:\r\n              return console.log(e.target)\r\n          };\r\n        }}\r\n      />\r\n    }\r\n  )};\r\n  return <Graphics\r\n    x={positionX!==800?positionX:specialPosition.x}\r\n    y={(positionY!==560&&positionY!==520)?positionY:specialPosition.y}\r\n    zIndex={3}\r\n    draw={g=> {\r\n      g.lineStyle(1,`0xffffff`,1);\r\n      g.beginFill(`0x22223b`);\r\n      g.drawRoundedRect(0,0,60,62,8);\r\n      g.endFill();\r\n    }}\r\n  ><CreateText/></Graphics>\r\n}","import React from 'react';\r\nimport { Sprite } from '@inlet/react-pixi/animated';\r\nimport { loader } from '../DataLoader';\r\n// reducers\r\nimport { enemyChessSelected, enemyChessCheckStatus } from \"../../reducer/enemyChess\";\r\n// other part\r\nimport { EnemyChessUIBoard } from \"./EnemyChessUIBoard\";\r\nimport { ChessStatus } from \"../Common/ChessStatus\";\r\n\r\nexport const EnemyChess = ({\r\n  enemyChessProps\r\n})=>{\r\n  const { \r\n    enemyChess,\r\n    moveStep=Boolean,\r\n    setMoveStep,\r\n    dispatch\r\n  } = enemyChessProps;\r\n  return enemyChess.map((value,key)=>{\r\n    return <React.Fragment key={key}>\r\n      {value.debut&&<Sprite\r\n        interactive={moveStep}\r\n        buttonMode={true}\r\n        width={40}\r\n        height={40}\r\n        x={value.x*40}\r\n        y={value.y*40}\r\n        zIndex={2}\r\n        pointertap={()=>{\r\n          setMoveStep(false);\r\n          dispatch(enemyChessSelected({\r\n            key:key\r\n          }));\r\n        }}\r\n        image={loader.resources[`${value.name}-head-default`].data}\r\n      />}\r\n      {value.boardStatus&&<EnemyChessUIBoard\r\n        ChessKey={key}\r\n        positionX={(value.x*40)+40}\r\n        positionY={(value.y*40)}\r\n        setMoveStep={setMoveStep}\r\n        dispatch={dispatch}\r\n      />}\r\n      {value.checkStatus&&<ChessStatus\r\n        ChessData={value}\r\n        ChessKey={key}\r\n        CheckStatus={enemyChessCheckStatus}\r\n        setMoveStep={setMoveStep}\r\n        dispatch={dispatch}\r\n      />}\r\n    </React.Fragment>\r\n  })\r\n};\r\n","import React,{ useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Stage, Container, Sprite } from '@inlet/react-pixi/animated';\r\n// reducers\r\nimport { stageDebut } from \"../reducer/chess\";\r\nimport { enemyStageDebut } from \"../reducer/enemyChess\";\r\n// other part\r\nimport { CreateCheckerboard } from './Common/Checkerboard';\r\nimport { ConfirmTip } from \"./Common/ConfirmTips\";\r\nimport { UsualTip } from \"./Common/UsualTip\";\r\nimport { BattleBoard } from \"./Common/BattleBoard\";\r\nimport { BattleAnimeShow } from \"./Common/BattleAnimeShow\";\r\nimport { Chess } from \"../components/Chess/Chess\";\r\nimport { EnemyChess } from \"../components/EnemyChess/EnemyChess\";\r\n// rule\r\nimport { stageRule } from \"../constants/stageRule\";\r\nimport { loader } from './DataLoader';\r\nexport const Canvas = ()=> {\r\n  const [ stageStatus, setStageStatus ] = useState('stageOne');\r\n  const [ currentChess, setCurrentChess ] = useState({\r\n    key:0,\r\n    type:\"MOVE\"\r\n  });\r\n  const [ usualTip, setUsualTip ] = useState({\r\n    title:``,\r\n    status:false,\r\n  })\r\n  const [ tipStatus, setTipStatus ] = useState({\r\n    title:``,\r\n    status:false,\r\n    position:{\r\n      x:0,y:0\r\n    },\r\n  });\r\n  const [ battleInfo, setBattleInfo ] = useState({\r\n    status:false,\r\n    attacker:{ key:'' },\r\n    target:{ key:'' }\r\n  });\r\n  const [ animeShow, setAnimeShow ] = useState({\r\n    status:false,\r\n    type:'',\r\n    attacker:{ key:'', skill:{}, prevSP:0 },\r\n    target:{ key:'', isHit:false, prevLife:0 }\r\n  });\r\n\r\n  // const [ animeShow, setAnimeShow ] = useState({\r\n  //   status:true,\r\n  //   type:'USER',\r\n  //   attacker:{ key:0, skill:{\r\n  //     name: \"斬擊\", atk: 50, sp: 0, hitfix: 0\r\n  //   }, prevSP:100 },\r\n  //   target:{ key:0, isHit:false, prevLife:2000 }\r\n  // });\r\n\r\n  const [ moveStep, setMoveStep ] = useState(true);\r\n  const chessMap = useSelector(state=>state.chessMap);\r\n  const chess = useSelector(state=>state.chess);\r\n  const enemyChess = useSelector(state=>state.enemyChess);\r\n  const dispatch = useDispatch();\r\n  // debut\r\n  useEffect(()=>{\r\n    dispatch(stageDebut({ \r\n      isDebutChess:stageRule.getIn([stageStatus,'debutChess'])\r\n    }));\r\n    dispatch(enemyStageDebut({ \r\n      isDebutChess:stageRule.getIn([stageStatus,'debutEnemyChess'])\r\n    }));\r\n  },[ dispatch, stageStatus ]);\r\n  return <Stage\r\n    width={800}\r\n    height={600}\r\n    options={{\r\n      autoDensity: true, \r\n      antialias: true,\r\n      backgroundColor:0x01262a\r\n    }}>\r\n    <Container sortableChildren={true}>\r\n      <Sprite\r\n        width={800}\r\n        height={600}\r\n        zIndex={1}\r\n        image={loader.resources[`${stageStatus}-main-BG`].data}\r\n      />\r\n      <CreateCheckerboard reduxProps={{ \r\n        chess,\r\n        enemyChess,\r\n        chessMap,\r\n        currentChess,\r\n        dispatch,\r\n        setTipStatus,\r\n        setMoveStep,\r\n        setBattleInfo\r\n      }}/>\r\n      <Chess chessProps={{\r\n        chess,\r\n        enemyChess,\r\n        moveStep,\r\n        setMoveStep,\r\n        setCurrentChess,\r\n        dispatch\r\n      }}/>\r\n      <EnemyChess enemyChessProps={{\r\n         enemyChess,\r\n         moveStep,\r\n         setMoveStep,\r\n         dispatch\r\n      }}/>\r\n    </Container>\r\n    {tipStatus.status&&<ConfirmTip \r\n      props={{\r\n        chess,\r\n        currentChess,\r\n        tipStatus,\r\n        dispatch,\r\n        setMoveStep,\r\n        setTipStatus\r\n      }}\r\n    />}\r\n    {usualTip.status&&\r\n      <UsualTip\r\n        props={{\r\n          stageStatus,\r\n          chess,\r\n          currentChess,\r\n          enemyChess,\r\n          usualTip,\r\n          setMoveStep,\r\n          setUsualTip,\r\n          setCurrentChess\r\n        }}\r\n      />}\r\n    {battleInfo.status&&\r\n      <BattleBoard\r\n        props={{\r\n          battleInfo,\r\n          setMoveStep,\r\n          setBattleInfo,\r\n          setAnimeShow,\r\n          dispatch\r\n        }}\r\n      />}\r\n    {animeShow.status&&\r\n      <BattleAnimeShow \r\n        props={{\r\n          stageStatus,\r\n          animeShow,\r\n          chess,\r\n          enemyChess,\r\n          setMoveStep,\r\n          setAnimeShow,\r\n          setUsualTip,\r\n          dispatch\r\n        }}\r\n      />}\r\n  </Stage>\r\n};","import React, { useState, useEffect } from 'react';\r\nimport styled, { createGlobalStyle } from 'styled-components';\r\nimport { Canvas } from './Canvas';\r\nimport { loader } from './DataLoader';\r\nconst GlobalStyle = createGlobalStyle`\r\n  body { background:#1d2430; }\r\n`;\r\nconst StyledApp = styled.div`\r\n  position: relative;\r\n  display:flex;\r\n  align-items:center;\r\n  justify-content:center;\r\n  width:100%;\r\n  height:100vh;\r\n  .loading {\r\n    color: #fff;\r\n    font-size:24px;\r\n  }\r\n`;\r\nexport const App = ()=> {\r\n  const [ dataIsDone, setDataIsDone ] = useState(false);\r\n  useEffect(()=>{\r\n    loader.onComplete.add(()=>{\r\n      setDataIsDone(true);\r\n    });\r\n  });\r\n  return <StyledApp>\r\n    <GlobalStyle/>\r\n    {dataIsDone?<Canvas />:\r\n      <span className=\"loading\">Loading..</span>}\r\n  </StyledApp>\r\n};\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { createStore, combineReducers } from 'redux';\r\nimport chess from './chess';\r\nimport chessMap from './map';\r\nimport enemyChess from './enemyChess';\r\nconst rootReducer = combineReducers({\r\n  chess,\r\n  chessMap,\r\n  enemyChess\r\n});\r\nexport const store = createStore(rootReducer);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { App } from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './reducer/index';\r\n\r\nReactDOM.render(<Provider store={store}><App /></Provider>,document.getElementById('root'));\r\nreportWebVitals();\r\n"],"sourceRoot":""}