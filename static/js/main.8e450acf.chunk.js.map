{"version":3,"sources":["components/reducer/chess.js","components/reducer/map.js","components/reducer/index.js","components/DataLoader.js","components/Checkerboard.js","components/Canvas.js","components/App.js","reportWebVitals.js","index.js"],"names":["initialState","Tanjirou","x","y","Nezuko","Inosuke","method","list","i","push","createStraightLine","traverse","color","name","combineReducers","chess","state","action","type","map","xkey","Xkey","ykey","Ykey","loader","PIXI","hostname","window","location","add","load","texture","WHITE","CreateCheckerboard","store","createStore","reducer","getState","value","key","v","k","Object","keys","chessVal","dispatch","interactive","buttonMode","width","height","pointerover","e","currentTarget","alpha","pointerout","pointertap","console","log","image","resources","data","tint","Canvas","options","autoDensity","antialias","backgroundColor","GlobalStyle","createGlobalStyle","StyledApp","styled","div","App","useState","dataIsDone","setDataIsDone","useEffect","onComplete","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8e450acf.chunk.js","sourcesContent":["const initialState = {\r\n  Tanjirou:{\r\n    x:10,\r\n    y:10,\r\n  },\r\n  Nezuko:{\r\n    x:12,\r\n    y:12,\r\n  },\r\n  Inosuke:{\r\n    x:20,\r\n    y:15\r\n  }\r\n}\r\nexport default function chessMove(state=initialState ,action) {\r\n  switch (action.type) {\r\n    case action.type: {\r\n      const type = action.type;\r\n      if(state[type]&&state[type]){\r\n        state[type].x=action.x;\r\n        state[type].y=action.y;\r\n      };\r\n      return state\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n};","const createTraverseLine = (traverse=0,color='')=>{\r\n  const list = [];\r\n  for(let i=0;i<20;i++){\r\n    list.push({\r\n      x:i,\r\n      y:traverse,\r\n      color:color,\r\n      name:'none'\r\n    });\r\n  };\r\n  return list;\r\n};\r\nconst createStraightLine = ( method=()=>{} )=>{\r\n  const list = [];\r\n  for(let i=0;i<15;i++){\r\n    list.push(method(i,'0x00bcd4'));\r\n  };\r\n  return list;\r\n};\r\nconst initialState = createStraightLine(createTraverseLine);\r\nexport default function updateMap(state=initialState ,action) {\r\n  switch (action.type) {\r\n    case 'IsChess': {\r\n      const xkey = action.Xkey ? action.Xkey : 0;\r\n      const ykey = action.Ykey ? action.Ykey : 0;\r\n      state[ykey][xkey].name = action.name;\r\n      return state\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n};\r\n\r\n","import { combineReducers } from 'redux';\r\nimport chess from './chess';\r\nimport map from './map';\r\nexport default combineReducers({\r\n  chess,\r\n  map\r\n});","import * as PIXI from \"pixi.js\";\r\nexport const loader = new PIXI.Loader();\r\nconst hostname = window.location.hostname==='localhost'?'./Demon-Slayer/':'./';\r\n\r\nloader\r\n  .add('Tanjirou-head-default',`${hostname}imgs/Tanjirou/head-default.jpg`)\r\n  .add('Tanjirou-fight',`${hostname}imgs/Tanjirou/fight.png`)\r\n  .add('Nezuko-head-default',`${hostname}imgs/Nezuko/head-default.jpg`)\r\n  .add('Nezuko-fight',`${hostname}imgs/Nezuko/fight.png`)\r\n  .add('Inosuke-head-default',`${hostname}imgs/Inosuke/head-default.jpg`)\r\n  .add('Inosuke-fight',`${hostname}imgs/Inosuke/fight.png`)\r\n  .load();\r\n","import React from 'react';\r\nimport * as PIXI from \"pixi.js\";\r\nimport { Sprite, Container } from '@inlet/react-pixi';\r\nimport { createStore } from 'redux';\r\nimport reducer from './reducer/index';\r\nimport { loader } from './DataLoader';\r\n\r\nconst texture = PIXI.Texture.WHITE;\r\nexport const CreateCheckerboard = ()=>{\r\n  const store = createStore(reducer);\r\n  const { chess, map } = store.getState();\r\n  map.map((value,key)=> {\r\n    return value.map((v,k)=>{\r\n      return Object.keys(chess).map((chessVal)=>{\r\n        if(chess[chessVal].x===k+1&&chess[chessVal].y===key+1){\r\n          return store.dispatch({ type:'IsChess', Xkey:k, Ykey:key, name: chessVal});\r\n        }else return null;\r\n      })\r\n    })\r\n  });\r\n  return <Container>\r\n    {map.map((value,key)=> {\r\n      return value.map((v,k)=>{\r\n        if(v.name !== 'none'){\r\n          return <Sprite\r\n            interactive={true}\r\n            buttonMode={true}\r\n            key={k}\r\n            width={40}\r\n            height={40}\r\n            x={v.x*40}\r\n            y={v.y*40}\r\n            pointerover={(e)=>e.currentTarget.alpha = 1}\r\n            pointerout={(e)=>e.currentTarget.alpha = 0.5}\r\n            pointertap={()=>console.log(`x: ${k+1}, y: ${key+1}`,map)}\r\n            image={loader.resources[`${v.name}-head-default`].data}\r\n          />\r\n        }else return <Sprite\r\n          key={k}\r\n          width={40}\r\n          height={40}\r\n          x={v.x*40}\r\n          y={v.y*40}\r\n          tint={'0x383838'}\r\n          texture={texture}\r\n        />\r\n        });\r\n      })}\r\n  </Container>\r\n};","import React from 'react';\r\nimport { Stage } from '@inlet/react-pixi/animated';\r\nimport { CreateCheckerboard } from '../components/Checkerboard';\r\n\r\nexport const Canvas = ()=> {\r\n  return <Stage\r\n    width={800}\r\n    height={600}\r\n    options={{\r\n      autoDensity: true, \r\n      antialias: true,\r\n      backgroundColor:0x01262a\r\n    }}>\r\n    <CreateCheckerboard/>\r\n  </Stage>\r\n};","import React, { useState, useEffect } from 'react';\r\nimport styled, { createGlobalStyle } from 'styled-components';\r\nimport { Canvas } from './Canvas';\r\nimport { loader } from './DataLoader';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  body { background:#1d2430; }\r\n`;\r\nconst StyledApp = styled.div`\r\n  position: relative;\r\n  display:flex;\r\n  align-items:center;\r\n  justify-content:center;\r\n  width:100%;\r\n  height:100vh;\r\n  .loading {\r\n    color: #fff;\r\n    font-size:24px;\r\n  }\r\n`;\r\nexport const App = ()=> {\r\n  const [ dataIsDone, setDataIsDone ] = useState(false);\r\n  useEffect(()=>{\r\n    loader.onComplete.add(()=>{\r\n      setDataIsDone(true);\r\n    });\r\n  });\r\n  return <StyledApp>\r\n    <GlobalStyle/>\r\n    {dataIsDone?<Canvas />:\r\n      <span className=\"loading\">Loading..</span>}\r\n  </StyledApp>\r\n};\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { App } from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(<React.StrictMode><App /></React.StrictMode>,document.getElementById('root'));\r\nreportWebVitals();\r\n"],"sourceRoot":""}