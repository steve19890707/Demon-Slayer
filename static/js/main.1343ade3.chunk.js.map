{"version":3,"sources":["reducer/chess.js","reducer/enemyChess.js","reducer/map.js","components/Common/Checkerboard.js","components/Common/ConfirmTips.js","constants/stageRule.js","components/Common/UsualTip.js","components/DataLoader.js","components/Common/ProbabilityCount.js","components/Common/BattleBoard.js","components/Common/BattleAnimeShow/AinmeShowBG.js","components/Common/BattleAnimeShow/TopBar.js","constants/lines.js","components/Common/BattleAnimeShow/BottomBar.js","constants/SkillShowProtoType.js","constants/ChessSkillShow/TanjirouSkill/steps.js","constants/ChessSkillShow/TanjirouSkill/ShowType.js","constants/ChessSkillShow/TanjirouSkill/Index.js","constants/ChessSkillShow/Index.js","constants/EnemyChessSkillShow/TeoniSkill/steps.js","constants/EnemyChessSkillShow/TeoniSkill/ShowType.js","constants/EnemyChessSkillShow/TeoniSkill/Index.js","constants/EnemyChessSkillShow/Index.js","components/Common/BattleAnimeShow/Index.js","components/Chess/ChessUIBoard.js","components/Common/ChessStatus.js","components/Chess/Chess.js","components/EnemyChess/EnemyChessUIBoard.js","components/EnemyChess/EnemyChess.js","components/Canvas.js","components/App.js","reportWebVitals.js","reducer/index.js","index.js"],"names":["basicCommon","x","y","checkStatus","boardStatus","debut","roundMove","chess","createSlice","name","initialState","cn","step","attack","hp","sp","dodge","fullValue","skill","atk","hitfix","reducers","stageDebut","state","actions","isDebutChess","payload","map","value","key","v","get","chessMove","changeX","changeY","chessSelected","chessCheckStatus","chessAttackResult","lessSp","chessMoved","roundAttack","enemyChess","enemyStageDebut","enemyChessSelected","enemyChessCheckStatus","enemyChessDefense","damage","enemyChessDead","mapLimit","createInitialState","method","list","i","push","createStraightLine","traverse","color","alpha","zIndex","isInteractive","chessMap","MoveSelect","action","position","changeColor","alphaVal","GetMove","currentChessPositions","GetAttack","texture","PIXI","WHITE","CreateCheckerboard","reduxProps","currentChess","dispatch","setTipStatus","setMoveStep","setBattleInfo","Fragment","k","interactive","buttonMode","width","height","tint","pointertap","type","title","status","isMatch","checkMatchAttackPosition","targetData","item","getCurrentEnemy","attacker","target","acttack","ConfirmTip","props","tipStatus","draw","g","lineStyle","beginFill","drawRoundedRect","endFill","text","anchor","style","fontFamily","fontSize","fill","prev","stageRule","fromJS","stageOne","debutChess","debutEnemyChess","isWin","enemyList","totalLife","isLose","chessList","stageTwo","UsualTip","stageStatus","usualTip","setUsualTip","setCurrentChess","useState","textColor","setTextColor","checkWin","getIn","checkLose","loader","hostname","window","location","add","load","BattleBoard","battleInfo","setAnimeShow","atkSelectd","setAtkSelectd","CreateAttackerInfo","pX","pY","data","sortableChildren","image","resources","skillCanUse","fontWeight","CreateTargetInfo","ForecastInfo","attackerHit","targetDodge","isHit","Math","round","random","prevSP","prevLife","AnimeShowBG","BGstatus","BGprop","SkBGprop","setSkBGpops","setBGpops","from","to","toX","config","duration","onRest","TopBar","right","left","showType","targetHp","attackerSp","hpBarCount","full","Number","spBarCount","lines","default","def","dead","BottomBar","linesStatus","showCharacter","character","randomSize","size","SkillShowProtoType","skillName","attackerName","targetLife","resultLife","resultSp","setBGstatus","setAnimeIsDone","setTargetHp","setAttackerSp","setLinesStatus","defXPostion","steps","ShowType","mass","friction","tension","setPosition","useEffect","defence","timeout","clearTimeout","step1","setTimeout","step2","run","number","TweenMax","onUpdate","numeral","format","step3","step4","TanjirouSkill","ChessSkillShow","defaultprops","isHitStep","isDead","next","isDodge","isDeadStep2","end","TeoniSkill","EnemyChessSkillShow","BattleAnimeShow","animeShow","CreateContent","animeIsDone","fetchChessType","id","clearAllTimeouts","ChessUIBoard","ChessData","ChessVal","ChessKey","EnemyChessData","positionX","positionY","specialPosition","forMoveArray","forAttackArray","textInforArray","setTextInforArray","compareUsed","chessX","chessY","checkType","isUnused","filter","val","moved","CreateText","noop","isAttack","chessAtk","isDebutEnemy","limitPosition","positionRange","getaddX","getaddY","getlessX","getlessY","compareAttack","fetchInteractive","toJS","pointerover","setIn","pointerout","e","console","log","ChessStatus","CheckStatus","CreateSkillList","length","Chess","chessProps","moveStep","Boolean","roundMoveDone","EnemyChessUIBoard","EnemyChess","enemyChessProps","Canvas","useSelector","useDispatch","options","autoDensity","antialias","backgroundColor","GlobalStyle","createGlobalStyle","StyledApp","styled","div","App","dataIsDone","setDataIsDone","onComplete","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1343ade3.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nconst basicCommon = {\r\n  x:0,\r\n  y:0,\r\n  checkStatus:false,\r\n  boardStatus:false,\r\n  debut:false,\r\n  roundMove:1\r\n};\r\nconst chess = createSlice({\r\n  name:'chess',\r\n  initialState:[\r\n    {\r\n      name:'Tanjirou',\r\n      cn:'竃門 碳治郎',\r\n      step:3,\r\n      attack:2,\r\n      hp:1500,\r\n      sp:125,\r\n      dodge:60,\r\n      fullValue:{\r\n        hp:1500,\r\n        sp:125\r\n      },\r\n      skill:[{ \r\n        name:'斬擊',\r\n        atk:150,\r\n        sp:0,\r\n        hitfix:0\r\n      },{ \r\n        name:'叄之型―流流舞',\r\n        atk:300,\r\n        sp:15,\r\n        hitfix:10\r\n      },{ \r\n        name:'捌之型―滝壺',\r\n        atk:400,\r\n        sp:25,\r\n        hitfix:5\r\n      },{\r\n        name:'拾之型―生生流轉',\r\n        atk:600,\r\n        sp:50,\r\n        hitfix:20\r\n      }],\r\n      ...basicCommon\r\n    },{\r\n      name:'Nezuko',\r\n      step:2,\r\n      attack:1,\r\n      hp:2200,\r\n      sp:200,\r\n      dodge:50,\r\n      fullValue:{\r\n        hp:2200,\r\n        sp:200\r\n      },\r\n      skill:[{ \r\n        name:'爪擊',\r\n        atk:50,\r\n        sp:0,\r\n        hitfix:0\r\n      },{ \r\n        name:'踢擊',\r\n        atk:120,\r\n        sp:5,\r\n        hitfix:0\r\n      },{ \r\n        name:'血鬼術',\r\n        atk:1000,\r\n        sp:100,\r\n        hitfix:0\r\n      }],\r\n      ...basicCommon\r\n    },{\r\n      name:'Inosuke',\r\n      cn:'嘴平 伊之助',\r\n      step:4,\r\n      attack:3,\r\n      hp:1800,\r\n      sp:80,\r\n      dodge:40,\r\n      fullValue:{\r\n        hp:1800,\r\n        sp:80\r\n      },\r\n      skill:[{ \r\n        name:'斬擊',\r\n        atk:50,\r\n        sp:0,\r\n        hitfix:0\r\n      },{ \r\n        name:'壹之牙―穿透刺射',\r\n        atk:120,\r\n        sp:2,\r\n        hitfix:0\r\n      },{ \r\n        name:'貳之牙―利刃對劈',\r\n        atk:200,\r\n        sp:5,\r\n        hitfix:0\r\n      },{\r\n        name:'叄之牙―獠牙撕扯',\r\n        atk:400,\r\n        sp:8,\r\n        hitfix:0\r\n      }],\r\n      ...basicCommon\r\n    }\r\n  ],\r\n  reducers:{\r\n    stageDebut:(state, actions)=> {\r\n      const { isDebutChess } = actions.payload;\r\n      state.map((value,key)=>{\r\n        return isDebutChess.map(v=>{\r\n          if(value.name===v.get('name')){\r\n            return (\r\n              state[key].debut = true,\r\n              state[key].x = v.get('x'),\r\n              state[key].y = v.get('y')\r\n            );\r\n          }else return null;\r\n        })\r\n      })\r\n    },\r\n    chessMove: (state, actions)=>{\r\n      const { key, changeX, changeY } = actions.payload;\r\n      state[key].x = changeX;\r\n      state[key].y = changeY;\r\n    },\r\n    chessSelected: (state, actions)=>{\r\n      const { key } = actions.payload;\r\n      state[key].boardStatus = !state[key].boardStatus;\r\n    },\r\n    chessCheckStatus: (state, actions)=> {\r\n      const { key } = actions.payload;\r\n      state[key].checkStatus = !state[key].checkStatus;\r\n    },\r\n    chessAttackResult: (state, actions)=> {\r\n      const { key, lessSp } = actions.payload;\r\n      state[key].sp -= lessSp;\r\n    },\r\n    chessMoved: (state, actions)=>{\r\n      const { key } = actions.payload;\r\n      state[key].roundMove -= 0;\r\n    },\r\n  }\r\n});\r\nexport default chess.reducer;\r\nexport const { \r\n  stageDebut, chessMove, chessSelected, chessCheckStatus, chessAttackResult, chessMoved\r\n} = chess.actions;","import { createSlice } from '@reduxjs/toolkit';\r\nconst basicCommon = {\r\n  x:0,\r\n  y:0,\r\n  checkStatus:false,\r\n  boardStatus:false,\r\n  debut:false,\r\n  roundAttack:false,\r\n};\r\nconst enemyChess = createSlice({\r\n  name:'enemyChess',\r\n  initialState:[\r\n    {\r\n      name:'Teoni',\r\n      cn:'手鬼',\r\n      hp:2000,\r\n      sp:100,\r\n      dodge:25,\r\n      fullValue:{\r\n        hp:2000,\r\n        sp:100\r\n      },\r\n      skill:[{ \r\n        name:'胡亂毆打',\r\n        atk:50,\r\n        sp:0,\r\n        hitfix:10\r\n      },{ \r\n        name:'你是第十四個',\r\n        atk:300,\r\n        sp:10,\r\n        hitfix:20\r\n      }],\r\n      ...basicCommon\r\n    },{\r\n      name:'Nomanooni',\r\n      cn:'沼鬼',\r\n      hp:1500,\r\n      sp:200,\r\n      dodge:30,\r\n      fullValue:{\r\n        hp:1500,\r\n        sp:200\r\n      },\r\n      skill:[{ \r\n        name:'爪擊',\r\n        atk:70,\r\n        sp:0,\r\n        hitfix:15\r\n      },{ \r\n        name:'分身攻擊',\r\n        atk:600,\r\n        sp:15,\r\n        hitfix:30\r\n      }],\r\n      ...basicCommon\r\n    }\r\n  ],\r\n  reducers:{\r\n    enemyStageDebut:(state, actions)=> {\r\n      const { isDebutChess } = actions.payload;\r\n      state.map((value,key)=>{\r\n        return isDebutChess.map(v=>{\r\n          if(value.name===v.get('name')){\r\n            return (\r\n              state[key].debut = true,\r\n              state[key].x = v.get('x'),\r\n              state[key].y = v.get('y')\r\n            );\r\n          }else return null;\r\n        })\r\n      })\r\n    },\r\n    enemyChessSelected: (state, actions)=>{\r\n      const { key } = actions.payload;\r\n      state[key].boardStatus = !state[key].boardStatus;\r\n    },\r\n    enemyChessCheckStatus: (state, actions)=> {\r\n      const { key } = actions.payload;\r\n      state[key].checkStatus = !state[key].checkStatus;\r\n    },\r\n    enemyChessDefense: (state, actions)=> {\r\n      const { key, damage } = actions.payload;\r\n      state[key].hp -= damage;\r\n    },\r\n    enemyChessDead: (state, actions)=> {\r\n      const { key } = actions.payload;\r\n      state[key].debut = false;\r\n      state[key].hp = state[key].fullValue.hp;\r\n      state[key].sp = state[key].fullValue.sp;\r\n    }\r\n  }\r\n});\r\nexport default enemyChess.reducer;\r\nexport const { enemyStageDebut, enemyChessSelected, enemyChessCheckStatus, enemyChessDefense, enemyChessDead } = enemyChess.actions;","import { createSlice } from '@reduxjs/toolkit';\r\nconst mapLimit = { x:20, y:15 };\r\nconst createTraverseLine = (traverse=0,color='')=>{\r\n  const list = [];\r\n  for(let i=0;i<mapLimit.x;i++){\r\n    list.push({\r\n      x:i,\r\n      y:traverse,\r\n      color:color,\r\n      alpha:0,\r\n      zIndex:1,\r\n      isInteractive:false\r\n    });\r\n  };\r\n  return list;\r\n};\r\nconst createStraightLine = ( method=()=>{} )=>{\r\n  const list = [];\r\n  for(let i=0;i<mapLimit.y;i++){\r\n    list.push(method(i,'0x383838'));\r\n  };\r\n  return list;\r\n};\r\nconst createInitialState = createStraightLine(createTraverseLine);\r\nconst chessMap = createSlice({\r\n  name:'chessMap',\r\n  initialState: createInitialState,\r\n  reducers:{\r\n    MoveSelect:(state, action)=>{\r\n      const { position, step, changeColor, alphaVal=1} = action.payload;\r\n      for(let i=0;i<(step+1);i++){\r\n        if(position.x+i<=(mapLimit.x-1)){\r\n          state[position.y][position.x+i].color=changeColor;\r\n          state[position.y][position.x+i].isInteractive=false;\r\n          state[position.y][position.x+i].alpha=alphaVal;\r\n          state[position.y][position.x+i].zIndex=1;\r\n        };\r\n        if(position.y+i<=(mapLimit.y-1)){\r\n          state[position.y+i][position.x].color=changeColor;\r\n          state[position.y+i][position.x].isInteractive=false;\r\n          state[position.y+i][position.x].alpha=alphaVal;\r\n          state[position.y+i][position.x].zIndex=1;\r\n        };\r\n        if(position.x-i>=0){\r\n          state[position.y][position.x-i].color=changeColor;\r\n          state[position.y][position.x-i].isInteractive=false;\r\n          state[position.y][position.x-i].alpha=alphaVal;\r\n          state[position.y][position.x-i].zIndex=1;\r\n        };\r\n        if(position.y-i>=0){\r\n          state[position.y-i][position.x].color=changeColor;\r\n          state[position.y-i][position.x].isInteractive=false;\r\n          state[position.y-i][position.x].alpha=alphaVal;\r\n          state[position.y-i][position.x].zIndex=1;\r\n        };\r\n      }\r\n    },\r\n    GetMove:(state, action)=>{\r\n      const { position, step, changeColor, currentChessPositions } = action.payload;\r\n      for(let i=0;i<(step+1);i++){\r\n        if(position.x+i<=(mapLimit.x-1)){\r\n          state[position.y][position.x+i].color=changeColor;\r\n          state[position.y][position.x+i].isInteractive=true;\r\n          state[position.y][position.x+i].alpha=0.5;\r\n          state[position.y][position.x+i].zIndex=1;\r\n        };\r\n        if(position.y+i<=(mapLimit.y-1)){\r\n          state[position.y+i][position.x].color=changeColor;\r\n          state[position.y+i][position.x].isInteractive=true;\r\n          state[position.y+i][position.x].alpha=0.5;\r\n          state[position.y+i][position.x].zIndex=1;\r\n          state[position.y][position.x-i].alpha=0.5;\r\n          state[position.y][position.x-i].zIndex=1;\r\n        };\r\n        if(position.x-i>=0){\r\n          state[position.y][position.x-i].color=changeColor;\r\n          state[position.y][position.x-i].isInteractive=true;\r\n        };\r\n        if(position.y-i>=0){\r\n          state[position.y-i][position.x].color=changeColor;\r\n          state[position.y-i][position.x].isInteractive=true;\r\n          state[position.y-i][position.x].alpha=0.5;\r\n          state[position.y-i][position.x].zIndex=1;\r\n        };\r\n      }\r\n      currentChessPositions.map(v=>{\r\n        return state[v.y][v.x].isInteractive=false;\r\n      });\r\n    },\r\n    GetAttack:(state, action)=>{\r\n      const { position, step, changeColor, currentChessPositions } = action.payload;\r\n      for(let i=0;i<(step+1);i++){\r\n        if(position.x+i<=(mapLimit.x-1)){\r\n          state[position.y][position.x+i].color=changeColor;\r\n          state[position.y][position.x+i].isInteractive=true;\r\n          state[position.y][position.x+i].alpha=0.5;\r\n          state[position.y][position.x+i].zIndex=3;\r\n        };\r\n        if(position.y+i<=(mapLimit.y-1)){\r\n          state[position.y+i][position.x].color=changeColor;\r\n          state[position.y+i][position.x].isInteractive=true;\r\n          state[position.y+i][position.x].alpha=0.5;\r\n          state[position.y+i][position.x].zIndex=3;\r\n        };\r\n        if(position.x-i>=0){\r\n          state[position.y][position.x-i].color=changeColor;\r\n          state[position.y][position.x-i].isInteractive=true;\r\n          state[position.y][position.x-i].alpha=0.5;\r\n          state[position.y][position.x-i].zIndex=3;\r\n        };\r\n        if(position.y-i>=0){\r\n          state[position.y-i][position.x].color=changeColor;\r\n          state[position.y-i][position.x].isInteractive=true;\r\n          state[position.y-i][position.x].alpha=0.5;\r\n          state[position.y-i][position.x].zIndex=3;\r\n        };\r\n      }\r\n      currentChessPositions.map(v=>{\r\n        return (\r\n          state[v.y][v.x].isInteractive=false,\r\n          state[v.y][v.x].zIndex=1\r\n        )\r\n      });\r\n    }\r\n  }\r\n});\r\nexport default chessMap.reducer;\r\nexport const { MoveSelect, GetMove, GetAttack } = chessMap.actions;\r\n","import React, {} from 'react';\r\nimport * as PIXI from \"pixi.js\";\r\nimport { Sprite } from '@inlet/react-pixi/animated';\r\nimport { MoveSelect } from '../../reducer/map';\r\nconst texture = PIXI.Texture.WHITE;\r\nexport const CreateCheckerboard = ({\r\n  reduxProps\r\n})=>{\r\n  const { \r\n    chess, enemyChess, chessMap, currentChess, dispatch, \r\n    setTipStatus, setMoveStep, setBattleInfo\r\n  } = reduxProps;\r\n  const checkMatchAttackPosition = (x,y)=>{\r\n    let isMatch = false;\r\n    enemyChess.map(v=>{\r\n      const checkMatch = v.debut&&(x===v.x)&&(y===v.y);\r\n      if(checkMatch){\r\n        return isMatch=true;\r\n      }else return null;\r\n    });\r\n    return isMatch;\r\n  };\r\n  const getCurrentEnemy = (x,y)=>{\r\n    let item = {};\r\n    enemyChess.map((v,k)=>{\r\n      const checkMatch = v.debut&&(x===v.x)&&(y===v.y);\r\n      if(checkMatch){\r\n        return item={...v,key:k}\r\n      }else return null;\r\n    });\r\n    return item;\r\n  };\r\n  return <React.Fragment>\r\n    {chessMap.map(value=> {\r\n      return value.map((v,k)=>{\r\n        return <Sprite\r\n          interactive={v.isInteractive}\r\n          buttonMode={v.isInteractive}\r\n          zIndex={v.zIndex}\r\n          key={k}\r\n          width={40}\r\n          height={40}\r\n          x={v.x*40}\r\n          y={v.y*40}\r\n          tint={v.color}\r\n          alpha={v.alpha}\r\n          texture={texture}\r\n          pointertap={()=>{\r\n            switch (currentChess.type) {\r\n              case \"MOVE\":\r\n                setTipStatus({\r\n                  title:'確定移動?',\r\n                  status:true,\r\n                  position:{\r\n                    x:v.x, y:v.y\r\n                  }\r\n                });\r\n                dispatch(MoveSelect({\r\n                  position:{ \r\n                    x:chess[currentChess.key].x, \r\n                    y:chess[currentChess.key].y,\r\n                  },\r\n                  step:chess[currentChess.key].step,\r\n                  changeColor:'0x06d6a0',\r\n                  alphaVal:0.5\r\n                }));\r\n                break;\r\n              case \"ATTACK\":\r\n                if(checkMatchAttackPosition(v.x,v.y)){\r\n                  const targetData = getCurrentEnemy(v.x,v.y);\r\n                  setBattleInfo({\r\n                    status:true,\r\n                    attacker:{ \r\n                      key: currentChess.key,\r\n                      ...chess[currentChess.key]\r\n                    },\r\n                    target:{\r\n                      key: targetData.key,\r\n                      ...targetData\r\n                    }\r\n                  });\r\n                  dispatch(MoveSelect({\r\n                    position:{ \r\n                      x:chess[currentChess.key].x, \r\n                      y:chess[currentChess.key].y,\r\n                    },\r\n                    step:chess[currentChess.key].attack,\r\n                    changeColor:'0x383838',\r\n                    alphaVal:0\r\n                  }));\r\n                }else {\r\n                  setMoveStep(true);\r\n                  dispatch(MoveSelect({\r\n                    position:{ \r\n                      x:chess[currentChess.key].x, \r\n                      y:chess[currentChess.key].y,\r\n                    },\r\n                    step:chess[currentChess.key].acttack,\r\n                    changeColor:'0x383838',\r\n                    alphaVal:0\r\n                  }));\r\n                };\r\n                break;\r\n              default:\r\n                return;\r\n            }; \r\n          }}\r\n        />\r\n      });\r\n    })}\r\n  </React.Fragment>\r\n};","import React from 'react';\r\n// import { fromJS } from 'immutable';\r\nimport { Graphics, Text } from '@inlet/react-pixi/animated';\r\nimport { chessMove, chessMoved } from \"../../reducer/chess\";\r\nimport { MoveSelect } from '../../reducer/map';\r\nimport * as PIXI from \"pixi.js\";\r\n\r\nexport const ConfirmTip = ({\r\n  props,\r\n})=> {\r\n  const { \r\n    chess,\r\n    currentChess,\r\n    tipStatus,\r\n    dispatch,\r\n    setMoveStep, \r\n    setTipStatus\r\n  } = props;\r\n  return <Graphics\r\n    x={400}\r\n    y={300}\r\n    draw={g=> {\r\n      g.lineStyle(1,`0xffffff`,1);\r\n      g.beginFill(`0x22223b`);\r\n      g.drawRoundedRect(-90,-50,180,100,8);\r\n      g.endFill();\r\n    }}\r\n  >\r\n    <Text\r\n      text={tipStatus.title}\r\n      anchor={0.5}\r\n      x={0}\r\n      y={-20}\r\n      style={new PIXI.TextStyle({\r\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 20,\r\n        fill:['#ffffff', '#ffffff'],\r\n      })}\r\n    />\r\n    <Text\r\n      interactive={true}\r\n      buttonMode={true}\r\n      anchor={0.5}\r\n      text={'確定'}\r\n      x={-30}\r\n      y={20}\r\n      style={new PIXI.TextStyle({\r\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 20,\r\n        fill:['#ffffff', '#ffffff'],\r\n      })}\r\n      pointertap={()=>{\r\n        switch (currentChess.type) {\r\n          case \"MOVE\":\r\n            dispatch(chessMove({\r\n              key: currentChess.key,\r\n              changeX:tipStatus.position.x,\r\n              changeY:tipStatus.position.y\r\n            }));\r\n            dispatch(chessMoved({\r\n              key: currentChess.key,\r\n            }));\r\n            dispatch(MoveSelect({\r\n              position:{ \r\n                x:chess[currentChess.key].x, \r\n                y:chess[currentChess.key].y,\r\n              },\r\n              step:chess[currentChess.key].step,\r\n              changeColor:'0x383838',\r\n              alphaVal:0\r\n            }));\r\n            setMoveStep(true);\r\n            setTipStatus(prev=>{\r\n              return {...prev, status:false }\r\n            });\r\n            break;\r\n          default:\r\n            return;\r\n        }\r\n      }}\r\n    />\r\n    <Text\r\n      interactive={true}\r\n      buttonMode={true}\r\n      anchor={0.5}\r\n      text={'取消'}\r\n      x={30}\r\n      y={20}\r\n      style={new PIXI.TextStyle({\r\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 20,\r\n        fill:['#ffffff', '#ffffff'],\r\n      })}\r\n      pointertap={()=>{\r\n        switch (currentChess.type) {\r\n          case \"MOVE\":\r\n            dispatch(MoveSelect({\r\n              position:{ \r\n                x:chess[currentChess.key].x, \r\n                y:chess[currentChess.key].y,\r\n              },\r\n              step:chess[currentChess.key].step,\r\n              changeColor:'0x383838',\r\n              alphaVal:0\r\n            }));\r\n            setMoveStep(true);\r\n            setTipStatus(prev=>{\r\n              return {...prev, status:false }\r\n            })\r\n            break;\r\n          default:\r\n            return;\r\n        }\r\n      }}\r\n    />\r\n  </Graphics>\r\n};","import { fromJS } from \"immutable\";\r\n\r\nexport const stageRule = fromJS({\r\n  stageOne: {\r\n    debutChess:[\r\n      { \r\n        name:'Tanjirou',\r\n        x:3,\r\n        y:7\r\n      },\r\n    ],\r\n    debutEnemyChess:[\r\n      {\r\n        name:'Teoni',\r\n        x:16,\r\n        y:7\r\n      },\r\n    ],\r\n    isWin: enemyList => {\r\n      let totalLife = 0;\r\n        enemyList.map(v => {\r\n          if(v.debut){\r\n            return totalLife += v.hp;\r\n          }return null;\r\n        });\r\n      return totalLife>0 ? false : true ;\r\n    },\r\n    isLose: chessList => {\r\n      let totalLife = 0;\r\n        chessList.map(v => {\r\n          if(v.debut){\r\n            return totalLife += v.hp;\r\n          }return null;\r\n        });\r\n      return totalLife>0 ? false : true ;\r\n    }\r\n  },\r\n  stageTwo: {\r\n    debutChess:[\r\n      { \r\n        name:'Tanjirou',\r\n        x:3,\r\n        y:9\r\n      }, { \r\n        name:'Nezuko',\r\n        x:3,\r\n        y:11\r\n      }\r\n    ],\r\n    debutEnemyChess:[\r\n      {\r\n        name:'Nomanooni',\r\n        x:16,\r\n        y:7\r\n      }\r\n    ]\r\n  }\r\n});","import React,{ useState } from 'react';\r\n// import { fromJS } from 'immutable';\r\nimport { Graphics, Text } from '@inlet/react-pixi/animated';\r\nimport * as PIXI from \"pixi.js\";\r\n// rule\r\nimport { stageRule } from \"../../constants/stageRule\";\r\n\r\nexport const UsualTip = ({\r\n  props,\r\n})=> {\r\n  const {\r\n    stageStatus, chess, currentChess, enemyChess,\r\n    usualTip, setMoveStep, setUsualTip, setCurrentChess } = props;\r\n    const [ textColor, setTextColor ] = useState(['#ffffff', '#ffffff']);\r\n  return <Graphics\r\n    x={400}\r\n    y={300}\r\n    draw={g=> {\r\n      g.lineStyle(1,`0xffffff`,1);\r\n      g.beginFill(`0x22223b`);\r\n      g.drawRoundedRect(-90,-50,180,100,8);\r\n      g.endFill();\r\n    }}\r\n  >\r\n    <Text\r\n      text={usualTip.title}\r\n      anchor={0.5}\r\n      x={0}\r\n      y={-20}\r\n      style={new PIXI.TextStyle({\r\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 20,\r\n        fill: textColor,\r\n      })}\r\n    />\r\n    <Text\r\n      interactive={true}\r\n      buttonMode={true}\r\n      anchor={0.5}\r\n      text={'確定'}\r\n      x={0}\r\n      y={20}\r\n      style={new PIXI.TextStyle({\r\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 20,\r\n        fill:['#ffffff', '#ffffff'],\r\n      })}\r\n      pointertap={()=>{\r\n        switch (currentChess.type) {\r\n          case \"ATTACK\":\r\n            const checkWin = stageRule.getIn([stageStatus,'isWin']);\r\n            const checkLose = stageRule.getIn([stageStatus,'isLose']);\r\n            if(checkWin(enemyChess)){\r\n              setTextColor(['#ffffff', '#06d6a0']);\r\n              setCurrentChess({\r\n                key:0,\r\n                type:\"CHECKWIN\"\r\n              });\r\n              setUsualTip({\r\n                title:`作戰獲勝!`,\r\n                status:true,\r\n              });\r\n            }else if(checkLose(chess)){\r\n              setTextColor(['#dc2f02', '#d00000']);\r\n              setCurrentChess({\r\n                key:0,\r\n                type:\"CHECKLOSE\"\r\n              });\r\n              setUsualTip({\r\n                title:`作戰失敗!`,\r\n                status:true,\r\n              });\r\n            }else {\r\n              setMoveStep(true);\r\n              setUsualTip({\r\n                title:``,\r\n                status:false,\r\n              });\r\n            }\r\n            break;\r\n          case \"CHECKWIN\":\r\n            setMoveStep(true);\r\n            setTextColor(['#ffffff', '#ffffff']);\r\n            setUsualTip({\r\n              title:``,\r\n              status:false,\r\n            });\r\n            break;\r\n          case \"CHECKLOSE\":\r\n            setMoveStep(true);\r\n            setTextColor(['#ffffff', '#ffffff']);\r\n            setUsualTip({\r\n              title:``,\r\n              status:false,\r\n            });\r\n            break;\r\n          default:\r\n            return;\r\n        }\r\n      }}\r\n    />\r\n  </Graphics>\r\n};","import * as PIXI from \"pixi.js\";\r\nexport const loader = new PIXI.Loader();\r\nconst hostname = window.location.hostname==='localhost'?'./Demon-Slayer/':'./';\r\n\r\nloader\r\n  .add('Tanjirou-head-default',`${hostname}imgs/Tanjirou/head-default.png`)\r\n  .add('Tanjirou-talk-default',`${hostname}imgs/Tanjirou/talk-default.jpg`)\r\n  .add('Tanjirou-talk-attack',`${hostname}imgs/Tanjirou/talk-attack.jpg`)\r\n  .add('Tanjirou-talk-def',`${hostname}imgs/Tanjirou/talk-default.jpg`)\r\n  .add('Tanjirou-talk-dodge',`${hostname}imgs/Tanjirou/talk-attack.jpg`)\r\n  .add('Tanjirou-fight-typeA',`${hostname}imgs/Tanjirou/fight-typeA.png`)\r\n  .add('Tanjirou-fight-typeB',`${hostname}imgs/Tanjirou/fight-typeB.png`)\r\n  .add('Nezuko-head-default',`${hostname}imgs/Nezuko/head-default.jpg`)\r\n  .add('Nezuko-fight',`${hostname}imgs/Nezuko/fight.png`)\r\n  .add('Inosuke-head-default',`${hostname}imgs/Inosuke/head-default.jpg`)\r\n  .add('Inosuke-fight',`${hostname}imgs/Inosuke/fight.png`)\r\n  .add('Teoni-head-default',`${hostname}imgs/Teoni/head-default.png`)\r\n  .add('Teoni-talk-default',`${hostname}imgs/Teoni/talk-default.jpg`)\r\n  .add('Teoni-talk-def',`${hostname}imgs/Teoni/talk-def.jpg`)\r\n  .add('Teoni-talk-dodge',`${hostname}imgs/Teoni/talk-dodge.jpg`)\r\n  .add('Teoni-talk-dead',`${hostname}imgs/Teoni/talk-dead.jpg`)\r\n  .add('Teoni-fight',`${hostname}imgs/Teoni/fight.png`)\r\n  .add('Nomanooni-head-default',`${hostname}imgs/Nomanooni/head-default.jpg`)\r\n  .add('Nomanooni-fight',`${hostname}imgs/Nomanooni/fight.png`)\r\n  .add('stageOne-BG',`${hostname}imgs/background/stage1-background.png`)\r\n  .add('stageOne-main-BG',`${hostname}imgs/background/stage1-main-background.jpg`)\r\n  .add('atkIcon',`${hostname}imgs/common/atk.png`)\r\n  .add('defIcon',`${hostname}imgs/common/def.png`)\r\n  .load();\r\n","export const ProbabilityCount = (\r\n  attackerHit,\r\n  targetDodge\r\n)=>{\r\n  const basicHit = 100;\r\n  const hitProbability = basicHit + attackerHit - targetDodge;\r\n  const checkRamdom = Math.round(Math.random()*100 + 1);\r\n  if(hitProbability < checkRamdom) {\r\n    return false\r\n  }else return true;\r\n};","import React,{ useState } from 'react';\r\nimport { Container, Sprite, Graphics, Text } from '@inlet/react-pixi/animated';\r\nimport { loader } from '../DataLoader';\r\nimport * as PIXI from \"pixi.js\";\r\nimport { ProbabilityCount } from \"../Common/ProbabilityCount\";\r\nimport { chessAttackResult, chessMoved } from \"../../reducer/chess\";\r\nimport { enemyChessDefense } from \"../../reducer/enemyChess\";\r\n\r\nexport const BattleBoard = ({ props })=>{\r\n  const { \r\n    battleInfo, setMoveStep, setBattleInfo, setAnimeShow, dispatch\r\n  } = props;\r\n  const [ atkSelectd, setAtkSelectd ] = useState({\r\n    key:0,\r\n  });\r\n  const CreateAttackerInfo = ({ pX=0, pY=0, data })=>{\r\n    return <Container x={pX} y={pY} sortableChildren={true}>\r\n      <Text\r\n        text={'攻'}\r\n        x={220}\r\n        y={0}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 30,\r\n          fill:['#ffffff', '#00ff99'],\r\n        })}\r\n      />\r\n      <Text\r\n        text={data.cn}\r\n        x={60}\r\n        y={-3}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 16,\r\n          fill:'#ffffff',\r\n        })}\r\n      />\r\n      <Text\r\n        text={`${data.hp} / ${data.fullValue.hp}`}\r\n        x={60}\r\n        y={17}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 16,\r\n          fill:'#ff6b6b',\r\n        })}\r\n      />\r\n      <Text\r\n        text={`${data.sp} / ${data.fullValue.sp}`}\r\n        x={60}\r\n        y={34}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 16,\r\n          fill:'#0466c8',\r\n        })}\r\n      />\r\n      <Sprite\r\n        width={50}\r\n        height={50}\r\n        x={0}\r\n        y={0}\r\n        image={loader.resources[`${data.name}-head-default`].data}\r\n      />\r\n      <Text\r\n        text={`招式選擇：`}\r\n        x={0}\r\n        y={80}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 16,\r\n          fill:'#ffffff',\r\n        })}\r\n      />\r\n      <Graphics\r\n        x={0}\r\n        y={115}\r\n        zIndex={1}\r\n        draw={g=> {\r\n          g.lineStyle(1,`0xffffff`,1);\r\n          g.beginFill(`0x0f0f1b`);\r\n          g.drawRoundedRect(0,0,240,180,8);\r\n          g.endFill();\r\n        }}\r\n      />\r\n      {data.skill.map((value,key)=>{\r\n        const skillCanUse = data.sp - value.sp >= 0;\r\n        return <React.Fragment key={key}>\r\n          <Text\r\n            zIndex={2}\r\n            interactive={skillCanUse}\r\n            buttonMode={true}\r\n            text={value.name}\r\n            x={20}\r\n            y={130+(key*24)}\r\n            style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n              fontSize: 16,\r\n              fill: ((atkSelectd.key===key)&&skillCanUse) ? ['#ffffff', '#00ff99'] :  \r\n                skillCanUse ? '#ffffff' : '#8d99ae',\r\n              fontWeight: (atkSelectd.key===key) ? 600 : 300\r\n            })}\r\n            pointertap={()=>setAtkSelectd({\r\n              key: key\r\n            })}\r\n          />\r\n        </React.Fragment>\r\n      })}\r\n    </Container>\r\n  };\r\n  const CreateTargetInfo = ({ pX=0, pY=0, data })=>{\r\n    return <Container x={pX} y={pY} sortableChildren={true}>\r\n      <Text\r\n        text={'防'}\r\n        x={0}\r\n        y={0}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 30,\r\n          fill:['#ffffff', '#ee6c4d'],\r\n        })}\r\n      />\r\n      <Text\r\n        text={data.cn}\r\n        anchor={{x:1,y:0}}\r\n        x={190}\r\n        y={-3}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 16,\r\n          fill:'#ffffff',\r\n        })}\r\n      />\r\n      <Text\r\n        text={`${data.hp} / ${data.fullValue.hp}`}\r\n        anchor={{x:1,y:0}}\r\n        x={190}\r\n        y={17}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 16,\r\n          fill:'#ff6b6b',\r\n        })}\r\n      />\r\n      <Text\r\n        text={`${data.sp} / ${data.fullValue.sp}`}\r\n        anchor={{x:1,y:0}}\r\n        x={190}\r\n        y={34}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 16,\r\n          fill:'#0466c8',\r\n        })}\r\n      />\r\n      <Sprite\r\n        width={50}\r\n        height={50}\r\n        x={200}\r\n        y={0}\r\n        image={loader.resources[`${data.name}-head-default`].data}\r\n      />\r\n    </Container>\r\n  };\r\n  const ForecastInfo = ({ pX, pY, data })=>{\r\n    return <Container x={pX} y={pY} sortableChildren={true}>\r\n      <Graphics\r\n        x={0}\r\n        y={0}\r\n        zIndex={1}\r\n        draw={g=> {\r\n          g.lineStyle(1,`0x00ff99`,1);\r\n          g.beginFill(`0x0f0f1b`);\r\n          g.drawRoundedRect(0,0,265,215,8);\r\n          g.endFill();\r\n        }}\r\n      />\r\n      <Text\r\n        text={`招式：`}\r\n        zIndex={2}\r\n        x={20}\r\n        y={20}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 20,\r\n          fill:'#ffffff'\r\n        })}\r\n      />\r\n      <Text\r\n        text={`${data.attacker.skill[atkSelectd.key].name}`}\r\n        zIndex={2}\r\n        x={80}\r\n        y={22}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 16,\r\n          fill:'#00ff99'\r\n        })}\r\n      />\r\n      <Text\r\n        text={`攻擊力：`}\r\n        zIndex={2}\r\n        x={20}\r\n        y={50}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 20,\r\n          fill:'#ffffff'\r\n        })}\r\n      />\r\n      <Text\r\n        text={`${data.attacker.skill[atkSelectd.key].atk}`}\r\n        zIndex={2}\r\n        x={100}\r\n        y={52}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 18,\r\n          fill:'#fdc500'\r\n        })}\r\n      />\r\n      <Text\r\n        text={`命中率：`}\r\n        zIndex={2}\r\n        x={20}\r\n        y={80}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 20,\r\n          fill:'#ffffff'\r\n        })}\r\n      />\r\n      <Text\r\n        text={`${\r\n          100 +\r\n          data.attacker.skill[atkSelectd.key].hitfix -\r\n          data.target.dodge\r\n        }%`}\r\n        zIndex={2}\r\n        x={100}\r\n        y={82}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 18,\r\n          fill:'#ffffff'\r\n        })}\r\n      />\r\n      <Text\r\n        text={`消耗：`}\r\n        zIndex={2}\r\n        x={20}\r\n        y={110}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 20,\r\n          fill:'#ffffff'\r\n        })}\r\n      />\r\n      <Text\r\n        text={`${data.attacker.skill[atkSelectd.key].sp}`}\r\n        zIndex={2}\r\n        x={80}\r\n        y={110}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 18,\r\n          fill:'#0466c8'\r\n        })}\r\n      />\r\n    </Container>\r\n  };\r\n  return <Graphics\r\n    x={400}\r\n    y={300}\r\n    zIndex={99}\r\n    draw={g=> {\r\n      g.lineStyle(1,`0xffffff`,1);\r\n      g.beginFill(`0x22223b`);\r\n      g.drawRoundedRect(-300,-200,600,400,8);\r\n      g.endFill();\r\n    }}\r\n  >\r\n    <CreateAttackerInfo\r\n      pX={-270}\r\n      pY={-180}\r\n      data={battleInfo.attacker}\r\n    />\r\n    <CreateTargetInfo\r\n      pX={20}\r\n      pY={-180}\r\n      data={battleInfo.target}\r\n    />\r\n    <ForecastInfo\r\n      pX={0}\r\n      pY={-100}\r\n      data={battleInfo}\r\n    />\r\n    <Text\r\n      interactive={true}\r\n      buttonMode={true}\r\n      text={'攻擊'}\r\n      anchor={0.5}\r\n      x={180}\r\n      y={160}\r\n      style={new PIXI.TextStyle({\r\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 20,\r\n        fill:'#ffffff',\r\n      })}\r\n      pointertap={()=>{\r\n        const isHit = ProbabilityCount(\r\n          battleInfo.attacker.skill[atkSelectd.key].hitfix,\r\n          battleInfo.target.dodge\r\n        );\r\n        dispatch(chessAttackResult({\r\n          key: battleInfo.attacker.key,\r\n          lessSp: battleInfo.attacker.skill[atkSelectd.key].sp\r\n        }));\r\n        dispatch(chessMoved({\r\n          key: battleInfo.attacker.key,\r\n        }));\r\n        if(isHit){\r\n          dispatch(enemyChessDefense({\r\n            key: battleInfo.target.key,\r\n            damage: battleInfo.attacker.skill[atkSelectd.key].atk\r\n          }));\r\n        };\r\n        setAnimeShow({\r\n          status:true,\r\n          type:'USER',\r\n          isHit: isHit,\r\n          attacker:{ \r\n            key:battleInfo.attacker.key,\r\n            skill:battleInfo.attacker.skill[atkSelectd.key],\r\n            prevSP:battleInfo.attacker.sp\r\n          },\r\n          target:{ \r\n            key:battleInfo.target.key,\r\n            isHit:isHit,\r\n            prevLife:battleInfo.target.hp\r\n          }\r\n        });\r\n        setBattleInfo({\r\n          status:false,\r\n          attacker:{ key:'' },\r\n          target:{ key:'' }\r\n        });\r\n      }}\r\n    />\r\n    <Text\r\n      interactive={true}\r\n      buttonMode={true}\r\n      text={'取消'}\r\n      anchor={0.5}\r\n      x={240}\r\n      y={160}\r\n      style={new PIXI.TextStyle({\r\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 20,\r\n        fill:'#ffffff',\r\n      })}\r\n      pointertap={()=>{\r\n        setMoveStep(true);\r\n        setBattleInfo({\r\n          status:false,\r\n          attacker:{ key:'' },\r\n          target:{ key:'' }\r\n        })\r\n      }}\r\n    />\r\n  </Graphics>\r\n};","import React from 'react';\r\nimport { Sprite } from '@inlet/react-pixi/animated';\r\nimport { Spring } from 'react-spring/renderprops';\r\nimport { loader } from '../../DataLoader';\r\n\r\nexport const AnimeShowBG = ({\r\n  props,\r\n})=>{\r\n  const { stageStatus, BGstatus, BGprop, SkBGprop, \r\n    setSkBGpops, setBGpops } = props;\r\n  return <>\r\n    {BGstatus.type==='STOP'&&<Sprite\r\n      x={-400}\r\n      y={-100}\r\n      zIndex={1}\r\n      width={1600}\r\n      height={500}\r\n      anchor={0.5}\r\n      image={loader.resources[`${stageStatus}-BG`].data}\r\n    />}\r\n    {BGstatus.type==='STANDBY'&&<Spring\r\n      from={{ x:-400, y:-100 }}\r\n      to={{ x: BGprop.toX, y:-100 }}\r\n      config={{ duration: BGprop.duration }}\r\n      onRest={()=>{\r\n        if(BGprop.toX===-400){\r\n          setBGpops({\r\n            toX:400,\r\n            duration: 20000\r\n          });\r\n        }else {\r\n          setBGpops({\r\n            toX:-400,\r\n            duration:-1000\r\n          });\r\n        };\r\n      }}\r\n    >\r\n      {props => \r\n        <Sprite\r\n          zIndex={1}\r\n          width={1600}\r\n          height={500}\r\n          anchor={0.5}\r\n          image={loader.resources[`${stageStatus}-BG`].data}\r\n          {...props}\r\n      />}\r\n    </Spring>}\r\n    {BGstatus.type==='SKILL'&&<Spring\r\n      from={{ x:-400, y:-100 }}\r\n      to={{ x: SkBGprop.toX, y:-100 }}\r\n      config={{ duration: SkBGprop.duration }}\r\n      onRest={()=>{\r\n        if(SkBGprop.toX===-400){\r\n          setSkBGpops({\r\n            toX:400,\r\n            duration: 500\r\n          });\r\n        }else {\r\n          setSkBGpops({\r\n            toX:-400,\r\n            duration:-1000\r\n          });\r\n        };\r\n      }}\r\n    >\r\n      {props => \r\n        <Sprite\r\n          zIndex={1}\r\n          width={1600}\r\n          height={500}\r\n          anchor={0.5}\r\n          image={loader.resources[`${stageStatus}-BG`].data}\r\n          {...props}\r\n      />}\r\n    </Spring>}\r\n  </>\r\n};","import React from 'react';\r\nimport { Container, Sprite, Graphics, Text } from '@inlet/react-pixi/animated';\r\nimport * as PIXI from \"pixi.js\";\r\nimport { loader } from '../../DataLoader';\r\nexport const TopBar = ({\r\n  right={},\r\n  left={},\r\n  showType='',\r\n  targetHp=0,\r\n  attackerSp=0\r\n})=> {\r\n  const hpBarCount = (hp,full)=>{\r\n    const leftVal =  Number(full) - Number(hp);\r\n    const percentage = Number(full) / 200;\r\n    const result = leftVal / percentage;\r\n    return result;\r\n  };\r\n  const spBarCount = (sp,full)=>{\r\n    const leftVal =  Number(full) - Number(sp);\r\n    const percentage = Number(full) / 100;\r\n    const result = leftVal / percentage;\r\n    return result;\r\n  };\r\n  return <Graphics \r\n    x={-400}\r\n    y={-300}\r\n    zIndex={98}\r\n    draw={g=> {\r\n      g.beginFill(`0x000f23`);\r\n      g.drawRoundedRect(0,0,800,80,0);\r\n      g.endFill();\r\n    }}\r\n  >\r\n    <Container sortableChildren={true}>\r\n      <Sprite\r\n        width={42}\r\n        height={42}\r\n        x={370}\r\n        y={40}\r\n        anchor={0.5} \r\n        image={loader.resources[`${showType===\"USER\" ? 'defIcon' : 'atkIcon' }`].data}\r\n      />\r\n      <Sprite\r\n        width={42}\r\n        height={42}\r\n        x={420}\r\n        y={40}\r\n        anchor={0.5} \r\n        image={loader.resources[`${showType===\"USER\" ? 'atkIcon' : 'defIcon' }`].data}\r\n      />\r\n      {/* left */}\r\n      <Sprite\r\n        width={50}\r\n        height={50}\r\n        x={50}\r\n        y={15}\r\n        image={loader.resources[`${left.name}-head-default`].data}\r\n      />\r\n      <Text \r\n        text={`${showType===\"USER\"?targetHp:left.hp} / ${left.fullValue.hp}`}\r\n        anchor={{x:1,y:0}} \r\n        x={320} y={10}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 18,\r\n          fill:'#e71d36',\r\n        })}/>\r\n      <Graphics\r\n        x={320} y={35}\r\n        zIndex={1}\r\n        draw={g=> {\r\n          g.beginFill(`0xe71d36`);\r\n          g.drawRoundedRect(0,0,-200,10,0);\r\n          g.endFill();\r\n        }}\r\n      />\r\n      <Graphics\r\n        x={320} y={35}\r\n        zIndex={2}\r\n        draw={g=> {\r\n          g.beginFill(`0x333533`);\r\n          g.drawRoundedRect(-200,0,hpBarCount(showType===\"USER\"?targetHp:left.hp,left.fullValue.hp),10,0);\r\n          g.endFill();\r\n        }}\r\n      />\r\n      <Text \r\n        text={`${showType===\"USER\"? left.sp : attackerSp} / ${left.fullValue.sp}`}\r\n        anchor={{x:1,y:0.3}} \r\n        x={210} y={55}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 18,\r\n          fill:'#4A86E8',\r\n        })}/>\r\n      <Graphics\r\n        x={320} y={55}\r\n        zIndex={1}\r\n        draw={g=> {\r\n          g.beginFill(`0x4A86E8`);\r\n          g.drawRoundedRect(0,0,-100,10,0);\r\n          g.endFill();\r\n        }}\r\n      />\r\n      <Graphics\r\n        x={220} y={55}\r\n        zIndex={2}\r\n        draw={g=> {\r\n          g.beginFill(`0x333533`);\r\n          g.drawRoundedRect(0,0,spBarCount(showType===\"USER\"?left.sp:attackerSp,left.fullValue.sp),10,0);\r\n          g.endFill();\r\n        }}\r\n      />\r\n      {/* right */}\r\n      <Sprite\r\n        width={50}\r\n        height={50}\r\n        x={690}\r\n        y={15}\r\n        image={loader.resources[`${right.name}-head-default`].data}\r\n      />\r\n      <Text \r\n        text={`${showType===\"USER\"?right.hp:targetHp} / ${right.fullValue.hp}`}\r\n        anchor={{x:1,y:0}} \r\n        x={670} y={10}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 18,\r\n          fill:'#e71d36',\r\n        })}/>\r\n      <Graphics\r\n        x={670} y={35}\r\n        zIndex={1}\r\n        draw={g=> {\r\n          g.beginFill(`0xe71d36`);\r\n          g.drawRoundedRect(0,0,-200,10,0);\r\n          g.endFill();\r\n        }}\r\n      />\r\n      <Graphics\r\n        x={670} y={35}\r\n        zIndex={2}\r\n        draw={g=> {\r\n          g.beginFill(`0x333533`);\r\n          g.drawRoundedRect(-200,0,hpBarCount(showType===\"USER\"?right.hp:targetHp,right.fullValue.hp),10,0);\r\n          g.endFill();\r\n        }}\r\n      />\r\n      <Text \r\n        text={`${showType===\"USER\"? attackerSp : right.sp} / ${right.fullValue.sp}`}\r\n        anchor={{x:1,y:0.3}} \r\n        x={560} y={55}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 18,\r\n          fill:'#4A86E8',\r\n        })}/>\r\n      <Graphics\r\n        x={670} y={55}\r\n        zIndex={1}\r\n        draw={g=> {\r\n          g.beginFill(`0x4A86E8`);\r\n          g.drawRoundedRect(0,0,-100,10,0);\r\n          g.endFill();\r\n        }}\r\n      />\r\n      <Graphics\r\n        x={570} y={55}\r\n        zIndex={2}\r\n        draw={g=> {\r\n          g.beginFill(`0x333533`);\r\n          g.drawRoundedRect(0,0,spBarCount(showType===\"USER\"?attackerSp:right.sp,right.fullValue.sp),10,0);\r\n          g.endFill();\r\n        }}\r\n      />\r\n    </Container>\r\n  </Graphics>\r\n};","import { fromJS } from \"immutable\";\r\nexport const lines = fromJS({\r\n  'Tanjirou': {\r\n    default:[\r\n      '(備戰中)',\r\n      '(備戰中)'\r\n    ],\r\n    attack:[\r\n      '我要成為強者，用強者的力量去保護弱者。',\r\n      '無論鬼奪走多少生命，人類的意志是怎樣都不會被打敗！'\r\n    ],\r\n    dodge:[\r\n      '危險!!',\r\n      '冷靜下來! 可以戰勝的。'\r\n    ],\r\n    def:[\r\n      '鬼殺隊不會被一點小傷給打倒!',\r\n      '不好了! 調整呼吸。'\r\n    ]\r\n  },\r\n  'Teoni': {\r\n    default:[\r\n      '(備戰中)',\r\n      '(備戰中)'\r\n    ],\r\n    attack:[\r\n      '獵鬼人是最上等的食物!!',\r\n      '看我吃了你!!'\r\n    ],\r\n    dodge:[\r\n      '沒用沒用 哈哈哈哈!',\r\n      '就這點程度嗎? 可悲的劍士。'\r\n    ],\r\n    def:[\r\n      '不久就輪到你的死期了!',\r\n      '我會吃了你!!'\r\n    ],\r\n    dead:[\r\n      '甚麼!?.....我竟然會死在獵鬼人手上.....'\r\n    ]\r\n  }\r\n});","import React, { useState } from 'react';\r\nimport { Container, Graphics, Sprite, Text } from '@inlet/react-pixi/animated';\r\nimport * as PIXI from \"pixi.js\";\r\nimport { loader } from '../../DataLoader';\r\nimport { lines } from \"../../../constants/lines\";\r\nexport const BottomBar = ({\r\n  right={},\r\n  left={},\r\n  linesStatus={}\r\n})=> {\r\n  const showCharacter = linesStatus.character===\"USER\" ? right.name : left.name;\r\n  const randomSize = lines.getIn([showCharacter,linesStatus.status]).size-1;\r\n  const [ random ] = useState(Math.round(Math.random()*randomSize));\r\n  return <Graphics \r\n    x={-400}\r\n    y={150}\r\n    zIndex={98}\r\n    draw={g=> {\r\n      g.beginFill(`0x000f23`);\r\n      g.drawRoundedRect(0,0,800,150,0);\r\n      g.endFill();\r\n    }}\r\n  >\r\n    <Container sortableChildren={true}>\r\n      <Sprite\r\n        width={100}\r\n        height={100}\r\n        x={50}\r\n        y={25}\r\n        image={loader.resources[`${showCharacter}-talk-${linesStatus.status}`].data}\r\n      />\r\n      <Text \r\n        text={lines.getIn([showCharacter,linesStatus.status,random])}\r\n        anchor={{x:0,y:0}} \r\n        x={170} y={60}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 18,\r\n          fill:'#ffff',\r\n        })}/>\r\n    </Container>\r\n  </Graphics>\r\n};","import React,{ useState, useEffect } from \"react\";\r\nexport const SkillShowProtoType = ({\r\n  skillName,\r\n  attackerName,\r\n  isHit,\r\n  targetLife,\r\n  attackerSp,\r\n  resultLife,\r\n  resultSp,\r\n  BGstatus,\r\n  setBGstatus,\r\n  setAnimeIsDone,\r\n  setTargetHp,\r\n  setAttackerSp,\r\n  setLinesStatus,\r\n  defXPostion,\r\n  steps,\r\n  ShowType\r\n})=>{\r\n  const [ position, setPosition ] = useState({ x:0, y:0, tint:0xffffff, alpha:1, mass:1, friction:20, tension:170 });\r\n  // def\r\n  useEffect(()=>{\r\n    if(BGstatus.defence && skillName==='防禦'){\r\n      const timeout = steps({\r\n        skillName:skillName,\r\n        isHit:isHit,\r\n        resultLife:resultLife,\r\n        setAnimeIsDone:setAnimeIsDone,\r\n        setLinesStatus:setLinesStatus,\r\n        setPosition:setPosition,\r\n      });\r\n      return ()=> clearTimeout(timeout);\r\n    };\r\n  },[ BGstatus.defence, skillName, isHit, resultLife, setAnimeIsDone, steps, setLinesStatus ])\r\n  // atk\r\n  useEffect(()=>{\r\n    if(skillName==='防禦'){ \r\n      setPosition(prev=>{return{ ...prev, x: defXPostion, y:10 }});\r\n      return;\r\n    };\r\n    const timeout = steps({\r\n      skillName:skillName,\r\n      isHit:isHit,\r\n      targetLife:targetLife,\r\n      attackerSp:attackerSp,\r\n      resultLife:resultLife,\r\n      resultSp:resultSp,\r\n      setBGstatus:setBGstatus,\r\n      setTargetHp:setTargetHp,\r\n      setAttackerSp:setAttackerSp,\r\n      setLinesStatus:setLinesStatus,\r\n      setPosition:setPosition\r\n    });\r\n    return ()=> clearTimeout(timeout);\r\n  },[ skillName, isHit, targetLife, attackerSp, resultLife, resultSp,\r\n    setBGstatus, setTargetHp, setAttackerSp, defXPostion, steps, setLinesStatus ]);\r\n  return <ShowType\r\n    skillName={skillName}\r\n    attackerName={attackerName}\r\n    position={position}\r\n  />\r\n};\r\n","import { TweenMax } from 'gsap';\r\nimport numeral from \"numeral\";\r\nexport const steps = ({\r\n  skillName='',\r\n  isHit=false,\r\n  targetLife=0,\r\n  attackerSp=0,\r\n  resultLife=0,\r\n  resultSp=0,\r\n  BGstatus={},\r\n  setBGstatus=null,\r\n  setAnimeIsDone=null,\r\n  setTargetHp=null,\r\n  setAttackerSp=null,\r\n  setLinesStatus=null,\r\n  setPosition=null,\r\n}) => {\r\n  // 技能動畫:\r\n  switch (skillName) {\r\n    default:\r\n      setPosition(prev=>{return{ ...prev, x:550,y:50,tension:100 }});\r\n      const start = ()=>{\r\n        setPosition(prev=>{return{ ...prev, x:250, y:50, tension:100 }});\r\n        // callback\r\n        return step1();\r\n      };\r\n      const step1 = ()=>{\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:0, y:50, tension:100 }});\r\n          setBGstatus({ type:'SKILL', defence:false });\r\n          // callback\r\n          step2();\r\n        },3000);\r\n        return timeout;\r\n      };\r\n      const step2 = ()=>{\r\n        const run =  { number: attackerSp };\r\n        TweenMax.to(run, 0.8, {\r\n          number: resultSp,\r\n          onUpdate: () => {\r\n            setAttackerSp(numeral(run.number).format(\"0\"))\r\n          },\r\n        });\r\n        setLinesStatus(prev=>{ return { ...prev, status:'attack' }});\r\n        const timeout = setTimeout(() => {\r\n          setBGstatus({ type:'STOP', defence:true });\r\n          // callback\r\n          step3();\r\n        },3000);\r\n        return timeout;\r\n      };\r\n      const step3 = ()=>{\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:-250, y:50, tension:1000 }});\r\n          // callback\r\n          step4();\r\n        },1000);\r\n        return timeout;\r\n      };\r\n      const step4 = ()=>{\r\n        const run = { number: targetLife };\r\n        if(isHit) {\r\n          TweenMax.to(run, 0.8, {\r\n            number: resultLife<0 ? 0 : resultLife,\r\n            onUpdate: () => {\r\n              setTargetHp(numeral(run.number).format(\"0\"))\r\n            },\r\n          });\r\n        };\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:550, y:50, tension:50 }});\r\n        },3000);\r\n        return timeout;\r\n      };\r\n      return start();\r\n  }\r\n};","import React from \"react\";\r\nimport { loader } from '../../../components/DataLoader';\r\nimport { Spring } from 'react-spring/renderprops';\r\nimport { Sprite } from '@inlet/react-pixi/animated';\r\n\r\nexport const ShowType = ({\r\n  skillName,\r\n  attackerName,\r\n  position,\r\n}) =>{\r\n  switch (skillName) {\r\n    case `斬擊`:\r\n      return <Spring\r\n        from={{ x:550, y:50 }}\r\n        to={{ x:position.x, y:position.y }}\r\n        config={{ \r\n          mass:1,\r\n          tension: position.tension,\r\n          friction:20,\r\n        }}\r\n      >\r\n      {props => \r\n        <Sprite\r\n          zIndex={3}\r\n          width={200}\r\n          height={200}\r\n          anchor={0.5}\r\n          image={loader.resources[`${attackerName}-fight-typeA`].data}\r\n          {...props}\r\n        />}\r\n      </Spring>\r\n    default:\r\n      return <Spring\r\n        from={{ x:550, y:50 }}\r\n        to={{ x:position.x, y:position.y }}\r\n        config={{ \r\n          mass:1,\r\n          tension: position.tension,\r\n          friction:20,\r\n        }}\r\n      >\r\n      {props => \r\n        <Sprite\r\n          zIndex={2}\r\n          width={200}\r\n          height={200}\r\n          anchor={0.5}\r\n          image={loader.resources[`${attackerName}-fight-typeB`].data}\r\n          {...props}\r\n        />}\r\n      </Spring>\r\n    };\r\n};","import React from \"react\";\r\n// part\r\nimport { SkillShowProtoType } from \"../../SkillShowProtoType\";\r\nimport { steps } from \"./steps\";\r\nimport { ShowType } from \"./ShowType\";\r\n\r\nexport const TanjirouSkill = ( props )=>{\r\n  return <SkillShowProtoType \r\n    {...props}\r\n    defXPostion={550}\r\n    steps={steps}\r\n    ShowType={ShowType}\r\n  />\r\n};","import React from \"react\";\r\nimport { TanjirouSkill } from \"./TanjirouSkill/Index\";\r\n\r\nexport const ChessSkillShow = ({\r\n  attacker={},\r\n  skill={},\r\n  BGstatus,\r\n  isHit=false,\r\n  targetLife=0,\r\n  attackerSp=0,\r\n  resultLife=0,\r\n  resultSp=0,\r\n  setBGstatus,\r\n  setAnimeIsDone,\r\n  setTargetHp,\r\n  setAttackerSp,\r\n  setLinesStatus\r\n})=>{\r\n  const defaultprops = {\r\n    skillName: skill.name,\r\n    attackerName: attacker.name,\r\n    isHit: isHit,\r\n    targetLife: targetLife,\r\n    attackerSp: attackerSp,\r\n    resultLife: resultLife,\r\n    resultSp: resultSp,\r\n    BGstatus: BGstatus,\r\n    setBGstatus: setBGstatus,\r\n    setAnimeIsDone: setAnimeIsDone,\r\n    setTargetHp: setTargetHp,\r\n    setAttackerSp: setAttackerSp,\r\n    setLinesStatus: setLinesStatus\r\n  }\r\n  switch (attacker.name) {\r\n    case `Tanjirou`:\r\n      return <TanjirouSkill {...defaultprops}/>\r\n    default:\r\n      return;\r\n  };\r\n};\r\n\r\n","export const steps = ({\r\n  skillName='',\r\n  isHit=false,\r\n  targetLife=0,\r\n  attackerSp=0,\r\n  resultLife=0,\r\n  resultSp=0,\r\n  BGstatus={},\r\n  setBGstatus=null,\r\n  setAnimeIsDone=null,\r\n  setTargetHp=null,\r\n  setAttackerSp=null,\r\n  setLinesStatus=null,\r\n  setPosition=null,\r\n}) => {\r\n  switch (skillName) {\r\n    case '防禦':\r\n      setPosition(prev=>{return{ ...prev, x:-200, tension:150 }});\r\n      const start = ()=>{\r\n        if(isHit){\r\n          return isHitStep();\r\n        }else return isDodge();\r\n      };\r\n      const isHitStep = ()=> {\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:-235, y:20, mass:2, \r\n            friction:5, tension:1000, tint:0xd00000}});\r\n          // callback\r\n          if(resultLife<=0){\r\n            return isDead({ type:'dead' });\r\n          }else return next({ type:'def' });\r\n        },1200);\r\n        return timeout;\r\n      }\r\n      const isDodge = ()=>{\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:-235, y:-10 }});\r\n          // callback\r\n          next({ type:'dodge' });\r\n        },1200);\r\n        return timeout;\r\n      };\r\n      const isDead = ({ type })=> {\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:-200, y:10, \r\n            friction:2, tint:0x03071e\r\n          }});\r\n          setLinesStatus(prev=>{ \r\n            return { \r\n              status: type,\r\n              character: prev.character===\"USER\" ? \"ENEMY\" : \"USER\"\r\n            };\r\n          });\r\n          // callback\r\n          isDeadStep2();\r\n        },5000);\r\n        return timeout;\r\n      };\r\n      const isDeadStep2 = ()=>{\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return { ...prev, alpha:0 }});\r\n          // callback\r\n          end();\r\n        },3000);\r\n        return timeout;\r\n      }\r\n      const next = ({ type })=>{\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:-200, y:10, mass:1, \r\n            friction:20, tension:170, tint:0xffffff}});\r\n          setLinesStatus(prev=>{ \r\n            return { \r\n              status: type,\r\n              character: prev.character===\"USER\" ? \"ENEMY\" : \"USER\"\r\n            };\r\n          });\r\n          // callback\r\n          end();\r\n        },5000);\r\n        return timeout;\r\n      }\r\n      const end = ()=> {\r\n        const timeout = setTimeout(() => {\r\n          // callback\r\n          setAnimeIsDone(true);\r\n        },3000);\r\n        return timeout;\r\n      };\r\n      return start();\r\n    default:\r\n      break;\r\n  }\r\n};","import React from \"react\";\r\nimport { loader } from '../../../components/DataLoader';\r\nimport { Spring } from 'react-spring/renderprops';\r\nimport { Sprite } from '@inlet/react-pixi/animated';\r\n\r\nexport const ShowType = ({\r\n  skillName,\r\n  attackerName,\r\n  position,\r\n}) =>{\r\n  switch (skillName) {\r\n    case '防禦':\r\n      return <Spring\r\n        from={{ x:-600, y:10 }}\r\n        to={{ x:position.x, y:position.y }}\r\n        config={{ \r\n          mass: position.mass,\r\n          tension: position.tension,\r\n          friction: position.friction,\r\n        }}\r\n      >\r\n      {props => \r\n        <Sprite\r\n          zIndex={2}\r\n          width={300}\r\n          height={300}\r\n          anchor={0.5}\r\n          alpha={position.alpha}\r\n          tint={position.tint}\r\n          image={loader.resources[`${attackerName}-fight`].data}\r\n          {...props}\r\n        />}\r\n      </Spring>\r\n    default:\r\n      return <Spring\r\n        from={{ x:0, y:50 }}\r\n        to={{ x:position.x, y:position.y }}\r\n        config={{ \r\n          mass:1,\r\n          tension: position.tension,\r\n          friction:20,\r\n        }}\r\n      >\r\n      {props => \r\n        <Sprite\r\n          zIndex={2}\r\n          width={300}\r\n          height={300}\r\n          anchor={0.5}\r\n          image={loader.resources[`${attackerName}-fight`].data}\r\n          {...props}\r\n        />}\r\n      </Spring>\r\n  }\r\n};","import React from \"react\";\r\n// part\r\nimport { SkillShowProtoType } from \"../../SkillShowProtoType\";\r\nimport { steps } from \"./steps\";\r\nimport { ShowType } from \"./ShowType\";\r\n\r\nexport const TeoniSkill = ( props )=>{\r\n  return <SkillShowProtoType \r\n    {...props}\r\n    defXPostion={-600}\r\n    steps={steps}\r\n    ShowType={ShowType}\r\n  />\r\n};\r\n","import React from \"react\";\r\nimport { TeoniSkill } from \"./TeoniSkill/Index\";\r\nexport const EnemyChessSkillShow = ({\r\n  attacker={},\r\n  skill={},\r\n  BGstatus,\r\n  isHit=false,\r\n  targetLife=0,\r\n  attackerSp=0,\r\n  resultLife=0,\r\n  resultSp=0,\r\n  setBGstatus,\r\n  setAnimeIsDone,\r\n  setTargetHp,\r\n  setAttackerSp,\r\n  setLinesStatus\r\n})=>{\r\n  const defaultprops = {\r\n    skillName: skill.name,\r\n    attackerName: attacker.name,\r\n    isHit: isHit,\r\n    targetLife: targetLife,\r\n    attackerSp: attackerSp,\r\n    resultLife: resultLife,\r\n    resultSp: resultSp,\r\n    BGstatus: BGstatus,\r\n    setBGstatus: setBGstatus,\r\n    setAnimeIsDone: setAnimeIsDone,\r\n    setTargetHp: setTargetHp,\r\n    setAttackerSp: setAttackerSp,\r\n    setLinesStatus: setLinesStatus\r\n  }\r\n  switch (attacker.name) {\r\n    case `Teoni`:\r\n      return <TeoniSkill {...defaultprops}/>\r\n    default:\r\n      return;\r\n  };\r\n};\r\n","import React,{ useState, useEffect } from 'react';\r\nimport { Container, Graphics, Text } from '@inlet/react-pixi/animated';\r\nimport * as PIXI from \"pixi.js\";\r\nimport { enemyChessDead } from \"../../../reducer/enemyChess\";\r\n// part\r\nimport { AnimeShowBG } from \"./AinmeShowBG\";\r\nimport { TopBar } from \"./TopBar\";\r\nimport { BottomBar } from \"./BottomBar\";\r\n// skill\r\nimport { ChessSkillShow } from \"../../../constants/ChessSkillShow/Index\";\r\nimport { EnemyChessSkillShow } from \"../../../constants/EnemyChessSkillShow/Index\";\r\n\r\nexport const BattleAnimeShow = ({\r\n  props\r\n}) =>{\r\n  const { stageStatus, animeShow, chess, enemyChess, \r\n    setMoveStep, setAnimeShow, setUsualTip, dispatch } = props;\r\n  const { target, attacker } = animeShow;\r\n  // CreateContent\r\n  const CreateContent = ()=>{\r\n    const [ BGstatus, setBGstatus ] = useState({ \r\n      type:'STANDBY',\r\n      defence: false\r\n    });\r\n    const [ BGprop, setBGpops ] = useState({ toX:400, duration: 20000 });\r\n    const [ SkBGprop, setSkBGpops ] = useState({ toX:400, duration: 500 });\r\n    const [ targetHp, setTargetHp ] = useState(target.prevLife);\r\n    const [ attackerSp, setAttackerSp ] = useState(attacker.prevSP);\r\n    const [ animeIsDone, setAnimeIsDone ] = useState(false);\r\n    const [ linesStatus, setLinesStatus ] = useState({ \r\n      character: animeShow.type,\r\n      status:'default'\r\n    });\r\n    const fetchChessType = ( type='' )=>{\r\n      switch (type) {\r\n        case 'CHESS':\r\n          if(animeShow.type===\"USER\"){\r\n            return chess[typeof(animeShow.attacker.key)!=='number'?0:animeShow.attacker.key];\r\n          }else return enemyChess[typeof(animeShow.target.key)!=='number'?0:animeShow.target.key];\r\n        case 'ENEMYCHESS':\r\n          if(animeShow.type===\"USER\"){\r\n            return enemyChess[typeof(animeShow.target.key)!=='number'?0:animeShow.target.key];\r\n          }else return chess[typeof(animeShow.attacker.key)!=='number'?0:animeShow.attacker.key];\r\n        default:\r\n          break;\r\n      }; \r\n    };\r\n    //  關閉動畫判斷\r\n    useEffect(()=>{\r\n      if(!animeIsDone){ return };\r\n      setAnimeShow({\r\n        status:false,\r\n        type:'',\r\n        isHit:false,\r\n        attacker:{ key:'', skill:{}, prevSP:0 },\r\n        target:{ key:'', isHit:false, prevLife:0 }\r\n      });\r\n      // result check line\r\n      if(animeShow.type===\"USER\" &&\r\n        enemyChess[target.key].hp <= 0\r\n      ){\r\n        dispatch(enemyChessDead({ key:target.key }));\r\n        setUsualTip({\r\n          title:`已擊敗 ${enemyChess[target.key].cn}!`,\r\n          status:true,\r\n        });\r\n      }else {\r\n        setMoveStep(true);\r\n      };\r\n    },[ animeIsDone ]);\r\n    return <Container sortableChildren={true}>\r\n      <AnimeShowBG\r\n        props={{stageStatus, BGstatus, BGprop, SkBGprop, setBGpops, setSkBGpops}}\r\n      />\r\n      <TopBar\r\n        right={chess[typeof(animeShow.attacker.key)!=='number'?0:animeShow.attacker.key]}\r\n        left={enemyChess[typeof(animeShow.target.key)!=='number'?0:animeShow.target.key]}\r\n        showType={animeShow.type}\r\n        targetHp={targetHp}\r\n        attackerSp={attackerSp}\r\n      />\r\n      <ChessSkillShow\r\n        attacker={fetchChessType('CHESS')}\r\n        skill={\r\n          animeShow.type===\"USER\"?\r\n          animeShow.attacker.skill:\r\n          { name:'防禦' }\r\n        }\r\n        BGstatus={BGstatus}\r\n        isHit={animeShow.isHit}\r\n        targetLife={target.prevLife}\r\n        attackerSp={attacker.prevSP}\r\n        resultLife={\r\n          target.prevLife -\r\n          animeShow.attacker.skill.atk \r\n        }\r\n        resultSp={\r\n          attacker.prevSP -\r\n          animeShow.attacker.skill.sp\r\n        }\r\n        setBGstatus={setBGstatus}\r\n        setAnimeIsDone={setAnimeIsDone}\r\n        setTargetHp={setTargetHp}\r\n        setAttackerSp={setAttackerSp}\r\n        setLinesStatus={setLinesStatus}\r\n      />\r\n      <EnemyChessSkillShow\r\n        attacker={fetchChessType('ENEMYCHESS')}\r\n        skill={\r\n          animeShow.type===\"USER\"?\r\n          { name:'防禦' }:\r\n          animeShow.attacker.skill\r\n        }\r\n        BGstatus={BGstatus}\r\n        isHit={animeShow.isHit}\r\n        targetLife={target.prevLife}\r\n        attackerSp={attacker.prevSP}\r\n        resultLife={\r\n          target.prevLife -\r\n          animeShow.attacker.skill.atk \r\n        }\r\n        resultSp={\r\n          attacker.prevSP -\r\n          animeShow.attacker.skill.sp\r\n        }\r\n        setBGstatus={setBGstatus}\r\n        setAnimeIsDone={setAnimeIsDone}\r\n        setTargetHp={setTargetHp}\r\n        setAttackerSp={setAttackerSp}\r\n        setLinesStatus={setLinesStatus}\r\n      />\r\n      <BottomBar\r\n        right={chess[typeof(animeShow.attacker.key)!=='number'?0:animeShow.attacker.key]}\r\n        left={enemyChess[typeof(animeShow.target.key)!=='number'?0:animeShow.target.key]}\r\n        linesStatus={linesStatus}\r\n      />\r\n      <Graphics\r\n        zIndex={99}\r\n        interactive={true}\r\n        buttonMode={true}\r\n        x={315}\r\n        y={255}\r\n        draw={g=> {\r\n          g.beginFill(`0x586f7c`);\r\n          g.drawRoundedRect(-6,-3,75,30,6);\r\n          g.endFill();\r\n        }}\r\n        pointertap={()=>{\r\n          setAnimeShow({\r\n            status:false,\r\n            type:'',\r\n            isHit:false,\r\n            attacker:{ key:'', skill:{}, prevSP:0 },\r\n            target:{ key:'', isHit:false, prevLife:0 }\r\n          });\r\n          // result check line\r\n          if(animeShow.type===\"USER\" &&\r\n            enemyChess[target.key].hp <= 0\r\n          ){\r\n            dispatch(enemyChessDead({ key:target.key }));\r\n            setUsualTip({\r\n              title:`已擊敗 ${enemyChess[target.key].cn}!`,\r\n              status:true,\r\n            });\r\n          }else {\r\n            setMoveStep(true);\r\n          };\r\n          const clearAllTimeouts = ()=>{\r\n            let id = window.setTimeout(null,0);\r\n            while (id--) { window.clearTimeout(id); };\r\n          };\r\n          clearAllTimeouts();\r\n        }}\r\n      >\r\n        <Text text={`戰鬥 off`} x={0} y={0}\r\n          style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n            fontSize: 18,\r\n            fill:'#c0fdff',\r\n          })}\r\n        />\r\n      </Graphics>\r\n    </Container>\r\n  };\r\n  return <Graphics\r\n    x={400}\r\n    y={300}\r\n    zIndex={99}\r\n    draw={g=> {\r\n      g.beginFill(`0x011627`);\r\n      g.drawRoundedRect(-400,-300,800,600,0);\r\n      g.endFill();\r\n    }}\r\n  >\r\n    <CreateContent/>\r\n  </Graphics>\r\n};","import React,{ useState } from 'react';\r\nimport { fromJS } from 'immutable';\r\nimport { Graphics, Text } from '@inlet/react-pixi/animated';\r\nimport { GetMove, GetAttack } from '../../reducer/map';\r\nimport { chessSelected, chessCheckStatus } from \"../../reducer/chess\";\r\nimport * as PIXI from \"pixi.js\";\r\n\r\nexport const ChessUIBoard = ({\r\n  ChessData,\r\n  ChessVal,\r\n  ChessKey,\r\n  EnemyChessData,\r\n  positionX,\r\n  positionY,\r\n  setCurrentChess,\r\n  setMoveStep,\r\n  dispatch\r\n})=> {\r\n  const specialPosition = {\r\n    x: 720,\r\n    y: 490\r\n  };\r\n  const forMoveArray = [];\r\n  const forAttackArray = [];\r\n  const [textInforArray, setTextInforArray] = useState(fromJS([{\r\n      id:1, \r\n      title:\"移動\",\r\n      textColor:['#ffffff', '#ffffff']\r\n    },{ \r\n      id:2,\r\n      title:\"攻擊\",\r\n      textColor:['#ffffff', '#ffffff']\r\n    },{ \r\n      id:3,\r\n      title:\"狀態\",\r\n      textColor:['#ffffff', '#ffffff']\r\n    },{ \r\n      id:4,\r\n      title:\"返回\",\r\n      textColor:['#ffffff', '#ffffff']\r\n  }]));\r\n  ChessData.map((v)=>{\r\n    return (\r\n      forMoveArray.push({ x:v.x, y:v.y }),\r\n      forAttackArray.push({ x:v.x, y:v.y })\r\n    );\r\n  });\r\n  EnemyChessData.map((v)=>{\r\n    return forMoveArray.push({ x:v.x, y:v.y });\r\n  });\r\n  const compareAttack = (\r\n    chessX,\r\n    chessY,\r\n    chessAtk\r\n  )=>{\r\n    let isAttack = false;\r\n    const isDebutEnemy = EnemyChessData.filter(v=>v.debut);\r\n    const limitPosition = { x:19, y:14 };\r\n    const positionRange = [];\r\n    for(let i=0; i < chessAtk; i++){\r\n      const getaddX = (chessX+(i+1)>=limitPosition.x) ? limitPosition.x : chessX+(i+1);\r\n      const getaddY = (chessY+(i+1)>=limitPosition.y) ? limitPosition.y : chessY+(i+1);\r\n      const getlessX = (chessX-(i+1)<=0) ? 0 : chessX-(i+1);\r\n      const getlessY = (chessY-(i+1)<=0) ? 0 : chessY-(i+1);\r\n      positionRange.push(\r\n        { x:getaddX, y:chessY },\r\n        { x:getlessX, y:chessY },\r\n        { x:chessX, y:getaddY },\r\n        { x:chessX, y:getlessY }\r\n      );\r\n    };\r\n    isDebutEnemy.map(val=>{\r\n      return positionRange.map(v=>{\r\n        if(val.x===v.x&&val.y===v.y){\r\n          return isAttack = true;\r\n        }else return null\r\n      })\r\n    });\r\n    return isAttack;\r\n  };\r\n  const compareUsed = (\r\n    chessX,\r\n    chessY,\r\n    checkType\r\n  )=>{\r\n    let isUnused = false;\r\n    const isDebutChess = ChessData.filter(v=>v.debut);\r\n    isDebutChess.map(val=>{\r\n      if(val.x===chessX&&val.y===chessY){\r\n        switch (checkType) {\r\n          case 'MOVE':\r\n          case 'ATTACK':\r\n            const moved = val.roundMove>0;\r\n            return isUnused = moved;\r\n          default:\r\n            return true;\r\n        };\r\n      }else return null;\r\n    });\r\n    return isUnused;\r\n  };\r\n  const CreateText = ({ noop })=>{\r\n    const isAttack = compareAttack(ChessVal.x,ChessVal.y,ChessVal.attack);\r\n    return textInforArray.map((val,key)=>{\r\n      const fetchInteractive = ()=>{\r\n        switch (val.get('id')) {\r\n          case 1:\r\n            return compareUsed(ChessVal.x,ChessVal.y,'MOVE');\r\n          case 2:\r\n            const result = isAttack && compareUsed(ChessVal.x,ChessVal.y,'ATTACK');\r\n            return result;\r\n          default:\r\n            return true;\r\n        };\r\n      }\r\n      return <Text\r\n        key={key}\r\n        interactive={fetchInteractive()}\r\n        buttonMode={true}\r\n        text={val.get('title')}\r\n        x={10}\r\n        y={5+(25*key)}\r\n        style={new PIXI.TextStyle({\r\n          fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 20,\r\n          fill:fetchInteractive()?val.get('textColor').toJS():'#8d99ae',\r\n        })}\r\n        pointerover={()=>{\r\n          setTextInforArray(prev=>\r\n            prev.setIn([key,'textColor',1],'#00ff99')\r\n          );\r\n        }}\r\n        pointerout={()=>{\r\n          setTextInforArray(prev=>\r\n            prev.setIn([key,'textColor',1],'#ffffff')\r\n          );\r\n        }}\r\n        pointertap={(e)=>{\r\n          switch (val.get('id')) {\r\n            case 1:\r\n              setCurrentChess({ \r\n                key:ChessKey,\r\n                type:\"MOVE\"\r\n              });\r\n              dispatch(GetMove({\r\n                position:{ \r\n                  x:ChessVal.x, \r\n                  y:ChessVal.y,\r\n                },\r\n                step:ChessVal.step,\r\n                changeColor:'0x06d6a0',\r\n                currentChessPositions: forMoveArray\r\n              }));\r\n              dispatch(chessSelected({\r\n                key:ChessKey\r\n              }));\r\n              break;\r\n            case 2:\r\n              setCurrentChess({ \r\n                key:ChessKey,\r\n                type:\"ATTACK\"\r\n              });\r\n              dispatch(chessSelected({\r\n                key:ChessKey\r\n              }));\r\n              dispatch(GetAttack({\r\n                position:{ \r\n                  x:ChessVal.x, \r\n                  y:ChessVal.y,\r\n                },\r\n                step:ChessVal.attack,\r\n                changeColor:'0x00bbf9',\r\n                currentChessPositions: forAttackArray\r\n              }));\r\n              break;\r\n            case 3:\r\n              setCurrentChess({ \r\n                key:ChessKey,\r\n                type:\"STATUS\"\r\n              });\r\n              dispatch(chessCheckStatus({\r\n                key:ChessKey\r\n              }));\r\n              dispatch(chessSelected({\r\n                key:ChessKey\r\n              }));\r\n              break;\r\n            case 4 :\r\n              setMoveStep(true);\r\n              dispatch(chessSelected({\r\n                key:ChessKey\r\n              }));\r\n              break;\r\n            default:\r\n              return console.log(e.target)\r\n          };\r\n        }}\r\n      />\r\n    }\r\n  )};\r\n  return <Graphics\r\n    x={positionX!==800?positionX:specialPosition.x}\r\n    y={(positionY!==560&&positionY!==520)?positionY:specialPosition.y}\r\n    zIndex={3}\r\n    draw={g=> {\r\n      g.lineStyle(1,`0xffffff`,1);\r\n      g.beginFill(`0x22223b`);\r\n      g.drawRoundedRect(0,0,60,110,8);\r\n      g.endFill();\r\n    }}\r\n  ><CreateText/></Graphics>\r\n};","import React from 'react';\r\nimport { Sprite, Graphics, Text } from '@inlet/react-pixi/animated';\r\nimport { loader } from '../DataLoader';\r\nimport * as PIXI from \"pixi.js\";\r\n\r\nexport const ChessStatus = ({\r\n  ChessData,\r\n  ChessKey,\r\n  CheckStatus,\r\n  setMoveStep,\r\n  dispatch\r\n})=> {\r\n  const CreateSkillList = ()=>{\r\n    return ChessData.skill.map((value,key)=>{\r\n        return <React.Fragment key={key}>\r\n        <Text\r\n          x={-40}\r\n          y={-70+(key*22)}\r\n          text={`${value.name}`}\r\n          style={new PIXI.TextStyle({\r\n            fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n            fontSize: 16,\r\n            fill:'#ffb700',\r\n          })}\r\n        />\r\n        <Text\r\n          x={-35+(value.name.length * 16)}\r\n          y={-70+(key*22)}\r\n          text={`ATK:${value.atk}(${value.sp}SP)`}\r\n          style={new PIXI.TextStyle({\r\n            fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n            fontSize: 14,\r\n            fill:'#ffffff',\r\n          })}\r\n        />\r\n      </React.Fragment>\r\n    });  \r\n  };\r\n  return <Graphics\r\n    x={400}\r\n    y={300}\r\n    zIndex={99}\r\n    draw={g=> {\r\n      g.lineStyle(1,`0xffffff`,1);\r\n      g.beginFill(`0x22223b`);\r\n      g.drawRoundedRect(-250,-150,500,300,8);\r\n      g.endFill();\r\n    }}\r\n  >\r\n    <Graphics\r\n      x={220}\r\n      y={-120}\r\n      interactive={true}\r\n      buttonMode={true}\r\n      pointertap={(e)=>{\r\n        setMoveStep(true);\r\n        dispatch(CheckStatus({\r\n          key:ChessKey\r\n        }));\r\n      }}\r\n      draw={g=> {\r\n        g.beginFill(`0x02040f`);\r\n        g.drawRoundedRect(-15,-15,30,30,50);\r\n        g.endFill();\r\n      }}\r\n    >\r\n      <Text\r\n        anchor={0.5}\r\n        text={`X`}\r\n        style={new PIXI.TextStyle({\r\n          fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 16,\r\n          fill:'#ffffff',\r\n        })}\r\n      />\r\n    </Graphics>\r\n    <Sprite\r\n      width={80}\r\n      height={80}\r\n      x={-200}\r\n      y={-90}\r\n      image={loader.resources[`${ChessData.name}-head-default`].data}\r\n    />\r\n    <Text\r\n      x={-200}\r\n      y={10}\r\n      text={ChessData.cn}\r\n      style={new PIXI.TextStyle({\r\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 16,\r\n        fill:'#ffffff',\r\n      })}\r\n    />\r\n    <Text\r\n      x={-200}\r\n      y={35}\r\n      text={`HP:`}\r\n      style={new PIXI.TextStyle({\r\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 16,\r\n        fill:'#ffffff',\r\n      })}\r\n    />\r\n    <Text\r\n      x={-170}\r\n      y={35}\r\n      text={`${ChessData.hp} / ${ChessData.fullValue.hp}`}\r\n      style={new PIXI.TextStyle({\r\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 16,\r\n        fill:'#ff6b6b',\r\n      })}\r\n    />\r\n    <Text\r\n      x={-200}\r\n      y={60}\r\n      text={`SP:`}\r\n      style={new PIXI.TextStyle({\r\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 16,\r\n        fill:'#ffffff',\r\n      })}\r\n    />\r\n    <Text\r\n      x={-170}\r\n      y={60}\r\n      text={`${ChessData.sp} / ${ChessData.fullValue.sp}`}\r\n      style={new PIXI.TextStyle({\r\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 16,\r\n        fill:'#0466c8',\r\n      })}\r\n    />\r\n    <Text\r\n      x={-50}\r\n      y={-95}\r\n      text={'招式'}\r\n      style={new PIXI.TextStyle({\r\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 16,\r\n        fill:'#ffffff',\r\n      })}\r\n    />\r\n    <CreateSkillList/>\r\n  </Graphics>\r\n};","import React from 'react';\r\nimport { Sprite } from '@inlet/react-pixi/animated';\r\nimport { loader } from '../DataLoader';\r\n// reducers\r\nimport { MoveSelect } from '../../reducer/map';\r\nimport { chessSelected, chessCheckStatus } from \"../../reducer/chess\";\r\n// other part\r\nimport { ChessUIBoard } from \"./ChessUIBoard\";\r\nimport { ChessStatus } from \"../Common/ChessStatus\";\r\n\r\nexport const Chess = ({\r\n  chessProps\r\n})=>{\r\n  const { \r\n    chess,\r\n    enemyChess,\r\n    moveStep=Boolean,\r\n    setMoveStep,\r\n    setCurrentChess,\r\n    dispatch\r\n  } = chessProps;\r\n  return chess.map((value,key)=>{\r\n    const roundMoveDone = value.roundMove===0;\r\n    return <React.Fragment key={key}>\r\n      {value.debut&&<Sprite\r\n        interactive={moveStep}\r\n        buttonMode={true}\r\n        width={40}\r\n        height={40}\r\n        x={value.x*40}\r\n        y={value.y*40}\r\n        zIndex={2}\r\n        tint={roundMoveDone?0x495057:0xffffff}\r\n        pointerover={()=>{\r\n          dispatch(MoveSelect({\r\n            position:{ \r\n              x:value.x, \r\n              y:value.y,\r\n            },\r\n            step:value.step,\r\n            changeColor:'0x06d6a0',\r\n            alphaVal:0.5\r\n          }));\r\n        }}\r\n        pointerout={()=>{\r\n          dispatch(MoveSelect({\r\n            position:{ \r\n              x:value.x, \r\n              y:value.y,\r\n            },\r\n            step:value.step,\r\n            changeColor:'0x383838',\r\n            alphaVal:0\r\n          }));\r\n        }}\r\n        pointertap={()=>{\r\n          setMoveStep(false);\r\n          dispatch(chessSelected({\r\n            key:key\r\n          }));\r\n          dispatch(MoveSelect({\r\n            position:{ \r\n              x:value.x, \r\n              y:value.y,\r\n            },\r\n            step:value.step,\r\n            changeColor:'0x383838',\r\n            alphaVal:0\r\n          }));\r\n        }}\r\n        image={loader.resources[`${value.name}-head-default`].data}\r\n      />}\r\n      {value.boardStatus&&<ChessUIBoard\r\n        ChessData={chess}\r\n        ChessVal={value}\r\n        ChessKey={key}\r\n        EnemyChessData={enemyChess}\r\n        positionX={(value.x*40)+40}\r\n        positionY={(value.y*40)}\r\n        setCurrentChess={setCurrentChess}\r\n        setMoveStep={setMoveStep}\r\n        dispatch={dispatch}\r\n      />}\r\n      {value.checkStatus&&<ChessStatus\r\n        ChessData={value}\r\n        ChessKey={key}\r\n        CheckStatus={chessCheckStatus}\r\n        setMoveStep={setMoveStep}\r\n        dispatch={dispatch}\r\n      />}\r\n    </React.Fragment>\r\n  })\r\n};","import React,{ useState } from 'react';\r\nimport { fromJS } from 'immutable';\r\nimport { Graphics, Text } from '@inlet/react-pixi/animated';\r\nimport { enemyChessSelected, enemyChessCheckStatus } from \"../../reducer/enemyChess\";\r\nimport * as PIXI from \"pixi.js\";\r\n\r\nexport const EnemyChessUIBoard = ({\r\n  ChessKey,\r\n  positionX,\r\n  positionY,\r\n  setMoveStep,\r\n  dispatch\r\n})=> {\r\n  const specialPosition = {\r\n    x: 720,\r\n    y: 535\r\n  };\r\n  const [textInforArray, setTextInforArray] = useState(fromJS([{\r\n      id:1,\r\n      title:\"狀態\",\r\n      textColor:['#ffffff', '#ffffff']\r\n    },{ \r\n      id:2,\r\n      title:\"返回\",\r\n      textColor:['#ffffff', '#ffffff']\r\n  }]));\r\n  const CreateText = ({ noop })=>{\r\n    return textInforArray.map((val,key)=>{\r\n      return <Text\r\n        key={key}\r\n        interactive={true}\r\n        buttonMode={true}\r\n        text={val.get('title')}\r\n        x={10}\r\n        y={5+(25*key)}\r\n        style={new PIXI.TextStyle({\r\n          fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 20,\r\n          fill:val.get('textColor').toJS(),\r\n        })}\r\n        pointerover={()=>{\r\n          setTextInforArray(prev=>\r\n            prev.setIn([key,'textColor',1],'#9d4edd')\r\n          );\r\n        }}\r\n        pointerout={()=>{\r\n          setTextInforArray(prev=>\r\n            prev.setIn([key,'textColor',1],'#ffffff')\r\n          );\r\n        }}\r\n        pointertap={(e)=>{\r\n          switch (val.get('id')) {\r\n            case 1:\r\n              dispatch(enemyChessCheckStatus({\r\n                key:ChessKey\r\n              }));\r\n              dispatch(enemyChessSelected({\r\n                key:ChessKey\r\n              }));\r\n              break;\r\n            case 2 :\r\n              setMoveStep(true);\r\n              dispatch(enemyChessSelected({\r\n                key:ChessKey\r\n              }));\r\n              break;\r\n            default:\r\n              return console.log(e.target)\r\n          };\r\n        }}\r\n      />\r\n    }\r\n  )};\r\n  return <Graphics\r\n    x={positionX!==800?positionX:specialPosition.x}\r\n    y={(positionY!==560&&positionY!==520)?positionY:specialPosition.y}\r\n    zIndex={3}\r\n    draw={g=> {\r\n      g.lineStyle(1,`0xffffff`,1);\r\n      g.beginFill(`0x22223b`);\r\n      g.drawRoundedRect(0,0,60,62,8);\r\n      g.endFill();\r\n    }}\r\n  ><CreateText/></Graphics>\r\n}","import React from 'react';\r\nimport { Sprite } from '@inlet/react-pixi/animated';\r\nimport { loader } from '../DataLoader';\r\n// reducers\r\nimport { enemyChessSelected, enemyChessCheckStatus } from \"../../reducer/enemyChess\";\r\n// other part\r\nimport { EnemyChessUIBoard } from \"./EnemyChessUIBoard\";\r\nimport { ChessStatus } from \"../Common/ChessStatus\";\r\n\r\nexport const EnemyChess = ({\r\n  enemyChessProps\r\n})=>{\r\n  const { \r\n    enemyChess,\r\n    moveStep=Boolean,\r\n    setMoveStep,\r\n    dispatch\r\n  } = enemyChessProps;\r\n  return enemyChess.map((value,key)=>{\r\n    return <React.Fragment key={key}>\r\n      {value.debut&&<Sprite\r\n        interactive={moveStep}\r\n        buttonMode={true}\r\n        width={40}\r\n        height={40}\r\n        x={value.x*40}\r\n        y={value.y*40}\r\n        zIndex={2}\r\n        pointertap={()=>{\r\n          setMoveStep(false);\r\n          dispatch(enemyChessSelected({\r\n            key:key\r\n          }));\r\n        }}\r\n        image={loader.resources[`${value.name}-head-default`].data}\r\n      />}\r\n      {value.boardStatus&&<EnemyChessUIBoard\r\n        ChessKey={key}\r\n        positionX={(value.x*40)+40}\r\n        positionY={(value.y*40)}\r\n        setMoveStep={setMoveStep}\r\n        dispatch={dispatch}\r\n      />}\r\n      {value.checkStatus&&<ChessStatus\r\n        ChessData={value}\r\n        ChessKey={key}\r\n        CheckStatus={enemyChessCheckStatus}\r\n        setMoveStep={setMoveStep}\r\n        dispatch={dispatch}\r\n      />}\r\n    </React.Fragment>\r\n  })\r\n};\r\n","import React,{ useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Stage, Container, Sprite } from '@inlet/react-pixi/animated';\r\n// reducers\r\nimport { stageDebut } from \"../reducer/chess\";\r\nimport { enemyStageDebut } from \"../reducer/enemyChess\";\r\n// other part\r\nimport { CreateCheckerboard } from './Common/Checkerboard';\r\nimport { ConfirmTip } from \"./Common/ConfirmTips\";\r\nimport { UsualTip } from \"./Common/UsualTip\";\r\nimport { BattleBoard } from \"./Common/BattleBoard\";\r\nimport { BattleAnimeShow } from \"./Common/BattleAnimeShow/Index\";\r\nimport { Chess } from \"../components/Chess/Chess\";\r\nimport { EnemyChess } from \"../components/EnemyChess/EnemyChess\";\r\n// rule\r\nimport { stageRule } from \"../constants/stageRule\";\r\nimport { loader } from './DataLoader';\r\nexport const Canvas = ()=> {\r\n  const [ stageStatus, setStageStatus ] = useState('stageOne');\r\n  const [ currentChess, setCurrentChess ] = useState({\r\n    key:0,\r\n    type:\"MOVE\"\r\n  });\r\n  const [ usualTip, setUsualTip ] = useState({\r\n    title:``,\r\n    status:false,\r\n  })\r\n  const [ tipStatus, setTipStatus ] = useState({\r\n    title:``,\r\n    status:false,\r\n    position:{\r\n      x:0,y:0\r\n    },\r\n  });\r\n  const [ battleInfo, setBattleInfo ] = useState({\r\n    status:false,\r\n    attacker:{ key:'' },\r\n    target:{ key:'' }\r\n  });\r\n\r\n  const [ animeShow, setAnimeShow ] = useState({\r\n    status:false,\r\n    type:'',\r\n    attacker:{ key:'', skill:{}, prevSP:0 },\r\n    target:{ key:'', isHit:false, prevLife:0 }\r\n  });\r\n  const [ moveStep, setMoveStep ] = useState(true);\r\n\r\n  // const [ animeShow, setAnimeShow ] = useState({\r\n  //   status:true,\r\n  //   type:'USER',\r\n  //   isHit:true,\r\n  //   attacker:{ key:0, skill:{\r\n  //     name: \"斬擊\", atk: 1300, sp: 15, hitfix: 0\r\n  //   }, prevSP:125 },\r\n  //   target:{ key:0, isHit:false, prevLife:2000 }\r\n  // });\r\n  // const [ moveStep, setMoveStep ] = useState(false);\r\n\r\n  const chessMap = useSelector(state=>state.chessMap);\r\n  const chess = useSelector(state=>state.chess);\r\n  const enemyChess = useSelector(state=>state.enemyChess);\r\n  const dispatch = useDispatch();\r\n  // debut\r\n  useEffect(()=>{\r\n    dispatch(stageDebut({ \r\n      isDebutChess:stageRule.getIn([stageStatus,'debutChess'])\r\n    }));\r\n    dispatch(enemyStageDebut({ \r\n      isDebutChess:stageRule.getIn([stageStatus,'debutEnemyChess'])\r\n    }));\r\n  },[ dispatch, stageStatus ]);\r\n  return <Stage\r\n    width={800}\r\n    height={600}\r\n    options={{\r\n      autoDensity: true, \r\n      antialias: true,\r\n      backgroundColor:0x01262a\r\n    }}>\r\n    <Container sortableChildren={true}>\r\n      <Sprite\r\n        width={800}\r\n        height={600}\r\n        zIndex={1}\r\n        image={loader.resources[`${stageStatus}-main-BG`].data}\r\n      />\r\n      <CreateCheckerboard reduxProps={{ \r\n        chess,\r\n        enemyChess,\r\n        chessMap,\r\n        currentChess,\r\n        dispatch,\r\n        setTipStatus,\r\n        setMoveStep,\r\n        setBattleInfo\r\n      }}/>\r\n      <Chess chessProps={{\r\n        chess,\r\n        enemyChess,\r\n        moveStep,\r\n        setMoveStep,\r\n        setCurrentChess,\r\n        dispatch\r\n      }}/>\r\n      <EnemyChess enemyChessProps={{\r\n         enemyChess,\r\n         moveStep,\r\n         setMoveStep,\r\n         dispatch\r\n      }}/>\r\n    </Container>\r\n    {tipStatus.status&&<ConfirmTip \r\n      props={{\r\n        chess,\r\n        currentChess,\r\n        tipStatus,\r\n        dispatch,\r\n        setMoveStep,\r\n        setTipStatus\r\n      }}\r\n    />}\r\n    {usualTip.status&&\r\n      <UsualTip\r\n        props={{\r\n          stageStatus,\r\n          chess,\r\n          currentChess,\r\n          enemyChess,\r\n          usualTip,\r\n          setMoveStep,\r\n          setUsualTip,\r\n          setCurrentChess\r\n        }}\r\n      />}\r\n    {battleInfo.status&&\r\n      <BattleBoard\r\n        props={{\r\n          battleInfo,\r\n          setMoveStep,\r\n          setBattleInfo,\r\n          setAnimeShow,\r\n          dispatch\r\n        }}\r\n      />}\r\n    {animeShow.status&&\r\n      <BattleAnimeShow \r\n        props={{\r\n          stageStatus,\r\n          animeShow,\r\n          chess,\r\n          enemyChess,\r\n          setMoveStep,\r\n          setAnimeShow,\r\n          setUsualTip,\r\n          dispatch\r\n        }}\r\n      />}\r\n  </Stage>\r\n};","import React, { useState, useEffect } from 'react';\r\nimport styled, { createGlobalStyle } from 'styled-components';\r\nimport { Canvas } from './Canvas';\r\nimport { loader } from './DataLoader';\r\nconst GlobalStyle = createGlobalStyle`\r\n  body { background:#1d2430; }\r\n`;\r\nconst StyledApp = styled.div`\r\n  position: relative;\r\n  display:flex;\r\n  align-items:center;\r\n  justify-content:center;\r\n  width:100%;\r\n  height:100vh;\r\n  .loading {\r\n    color: #fff;\r\n    font-size:24px;\r\n  }\r\n`;\r\nexport const App = ()=> {\r\n  const [ dataIsDone, setDataIsDone ] = useState(false);\r\n  useEffect(()=>{\r\n    loader.onComplete.add(()=>{\r\n      setDataIsDone(true);\r\n    });\r\n  });\r\n  return <StyledApp>\r\n    <GlobalStyle/>\r\n    {dataIsDone?<Canvas />:\r\n      <span className=\"loading\">Loading..</span>}\r\n  </StyledApp>\r\n};\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { createStore, combineReducers } from 'redux';\r\nimport chess from './chess';\r\nimport chessMap from './map';\r\nimport enemyChess from './enemyChess';\r\nconst rootReducer = combineReducers({\r\n  chess,\r\n  chessMap,\r\n  enemyChess\r\n});\r\nexport const store = createStore(rootReducer);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { App } from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './reducer/index';\r\n\r\nReactDOM.render(<Provider store={store}><App /></Provider>,document.getElementById('root'));\r\nreportWebVitals();\r\n"],"sourceRoot":""}