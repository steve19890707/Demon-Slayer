{"version":3,"sources":["reducer/chess.js","reducer/enemyChess.js","reducer/map.js","components/Common/Checkerboard.js","components/Common/ConfirmTips.js","constants/stageRule.js","components/Common/UsualTip.js","components/DataLoader.js","components/Common/ProbabilityCount.js","components/Common/BattleBoard.js","components/Common/BattleAnimeShow/AinmeShowBG.js","components/Common/BattleAnimeShow/TopBar.js","constants/lines.js","components/Common/BattleAnimeShow/BottomBar.js","constants/SkillShowProtoType.js","constants/ChessSkillShow/TanjirouSkill/steps.js","constants/ChessSkillShow/TanjirouSkill/ShowType.js","constants/ChessSkillShow/TanjirouSkill/Index.js","constants/ChessSkillShow/Nezuko/steps.js","constants/ChessSkillShow/Nezuko/ShowType.js","constants/ChessSkillShow/Nezuko/Index.js","constants/ChessSkillShow/Index.js","constants/EnemyChessSkillShow/TeoniSkill/steps.js","constants/EnemyChessSkillShow/TeoniSkill/ShowType.js","constants/EnemyChessSkillShow/TeoniSkill/Index.js","constants/EnemyChessSkillShow/Index.js","components/Common/BattleAnimeShow/Index.js","components/Common/OtherTab.js","components/Common/EnemyRoundTab/EnemyList.js","components/Common/EnemyRoundTab/ChessList.js","components/Common/EnemyRoundTab/Information.js","components/Common/EnemyRoundTab/Index.js","components/Chess/ChessUIBoard.js","components/Common/ChessStatus.js","components/Chess/Chess.js","components/EnemyChess/EnemyChessUIBoard.js","components/EnemyChess/EnemyChess.js","components/Canvas.js","components/App.js","reportWebVitals.js","reducer/index.js","index.js"],"names":["basicCommon","x","y","checkStatus","boardStatus","debut","roundMove","chess","createSlice","name","initialState","cn","id","step","attack","hp","sp","dodge","fullValue","skill","atk","hitfix","reducers","stageDebut","state","actions","isDebutChess","payload","map","value","key","v","get","chessMove","changeX","changeY","chessSelected","chessCheckStatus","chessDefense","damage","chessAttackResult","lessSp","chessDead","chessMoved","chessRoundRest","i","length","roundAttack","enemyChess","enemyStageDebut","enemyChessSelected","enemyChessCheckStatus","enemyChessDefense","enemyChessAttackResult","enemyChessDead","mapLimit","createInitialState","method","list","push","createStraightLine","traverse","color","alpha","zIndex","isInteractive","chessMap","MoveSelect","action","position","changeColor","alphaVal","GetMove","currentChessPositions","GetAttack","texture","PIXI","WHITE","CreateCheckerboard","reduxProps","currentChess","dispatch","setTipStatus","setMoveStep","setBattleInfo","Fragment","k","interactive","buttonMode","width","height","tint","pointertap","type","title","status","isMatch","checkMatchAttackPosition","targetData","item","getCurrentEnemy","attacker","target","acttack","ConfirmTip","props","tipStatus","setOtherTab","setRoundNum","setUsualTip","draw","g","lineStyle","beginFill","drawRoundedRect","endFill","text","anchor","style","fontFamily","fontSize","fill","prev","stageRule","fromJS","stageOne","debutChess","debutEnemyChess","ruleText","win","lose","isWin","enemyList","totalLife","isLose","chessList","stageTwo","UsualTip","stageStatus","usualTip","setCurrentChess","setEnemyRoundTab","useState","textColor","setTextColor","checkWin","getIn","checkLose","oder","loader","hostname","window","location","add","load","ProbabilityCount","attackerHit","targetDodge","Math","round","random","BattleBoard","battleInfo","setAnimeShow","atkSelectd","setAtkSelectd","CreateAttackerInfo","pX","pY","data","sortableChildren","image","resources","skillCanUse","fontWeight","CreateTargetInfo","ForecastInfo","isHit","prevSP","prevLife","AnimeShowBG","BGstatus","BGprop","SkBGprop","setSkBGpops","setBGpops","from","to","toX","config","duration","onRest","TopBar","right","left","showType","targetHp","attackerSp","hpBarCount","full","Number","spBarCount","lines","default","def","dead","BottomBar","linesStatus","showCharacter","character","randomSize","size","SkillShowProtoType","skillName","attackerName","targetLife","resultLife","resultSp","setBGstatus","setAnimeIsDone","setTargetHp","setAttackerSp","setLinesStatus","defXPostion","steps","ShowType","mass","friction","tension","setPosition","useEffect","defence","timeout","clearTimeout","isHitStep","setTimeout","isDead","next","isDodge","isDeadStep2","end","step1","step2","run","number","TweenMax","onUpdate","numeral","format","step3","step4","TanjirouSkill","NezukoSkill","ChessSkillShow","defaultprops","TeoniSkill","EnemyChessSkillShow","BattleAnimeShow","animeShow","CreateContent","animeIsDone","fetchChessType","clearAllTimeouts","OtherTab","roundNum","EnemyList","enemyRandomSkill","ChessList","defChess","setDefChess","distance","Information","atkEnemy","EnemyRoundTab","enemyRoundTab","filter","enemySkill","enemySp","totalSize","getAtkSkill","getCurrentChessKey","getKey","find","ChessUIBoard","ChessData","ChessVal","ChessKey","EnemyChessData","positionX","positionY","specialPosition","forMoveArray","forAttackArray","textInforArray","setTextInforArray","compareUsed","chessX","chessY","checkType","isUnused","val","moved","CreateText","noop","isAttack","chessAtk","isDebutEnemy","limitPosition","positionRange","getaddX","getaddY","getlessX","getlessY","compareAttack","fetchInteractive","toJS","pointerover","setIn","pointerout","e","console","log","ChessStatus","CheckStatus","CreateSkillList","Chess","chessProps","moveStep","Boolean","roundMoveDone","EnemyChessUIBoard","EnemyChess","enemyChessProps","Canvas","otherTab","useSelector","useDispatch","options","autoDensity","antialias","backgroundColor","GlobalStyle","createGlobalStyle","StyledApp","styled","div","App","dataIsDone","setDataIsDone","onComplete","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3e274a55.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nconst basicCommon = {\n  x:0,\n  y:0,\n  checkStatus:false,\n  boardStatus:false,\n  debut:false,\n  roundMove:1\n};\nconst chess = createSlice({\n  name:'chess',\n  initialState:[\n    {\n      name:'Tanjirou',\n      cn:'竈門 炭治郎',\n      id:1,\n      step:3,\n      attack:2,\n      hp:1500,\n      sp:125,\n      dodge:80,\n      fullValue:{\n        hp:1500,\n        sp:125\n      },\n      skill:[{ \n        name:'斬擊',\n        atk:200,\n        sp:0,\n        hitfix:0\n      },{ \n        name:'叄之型―流流舞',\n        atk:350,\n        sp:15,\n        hitfix:10\n      },{ \n        name:'捌之型―滝壺',\n        atk:500,\n        sp:25,\n        hitfix:5\n      },{\n        name:'拾之型―生生流轉',\n        atk:850,\n        sp:50,\n        hitfix:20\n      }],\n      ...basicCommon\n    },{\n      name:'Nezuko',\n      cn:'竈門 禰豆子',\n      id:2,\n      step:2,\n      attack:1,\n      hp:2200,\n      sp:200,\n      dodge:80,\n      fullValue:{\n        hp:2200,\n        sp:200\n      },\n      skill:[{ \n        name:'爪擊',\n        atk:150,\n        sp:0,\n        hitfix:0\n      },{ \n        name:'踢擊',\n        atk:250,\n        sp:10,\n        hitfix:15\n      },{ \n        name:'血鬼術',\n        atk:1000,\n        sp:80,\n        hitfix:35\n      }],\n      ...basicCommon\n    },{\n      name:'Inosuke',\n      cn:'嘴平 伊之助',\n      id:3,\n      step:4,\n      attack:3,\n      hp:1800,\n      sp:80,\n      dodge:40,\n      fullValue:{\n        hp:1800,\n        sp:80\n      },\n      skill:[{ \n        name:'斬擊',\n        atk:50,\n        sp:0,\n        hitfix:0\n      },{ \n        name:'壹之牙―穿透刺射',\n        atk:120,\n        sp:2,\n        hitfix:0\n      },{ \n        name:'貳之牙―利刃對劈',\n        atk:200,\n        sp:5,\n        hitfix:0\n      },{\n        name:'叄之牙―獠牙撕扯',\n        atk:400,\n        sp:8,\n        hitfix:0\n      }],\n      ...basicCommon\n    }\n  ],\n  reducers:{\n    stageDebut:(state, actions)=> {\n      const { isDebutChess } = actions.payload;\n      state.map((value,key)=>{\n        return isDebutChess.map(v=>{\n          if(value.name===v.get('name')){\n            return (\n              state[key].debut = true,\n              state[key].x = v.get('x'),\n              state[key].y = v.get('y')\n            );\n          }else return null;\n        })\n      })\n    },\n    chessMove: (state, actions)=>{\n      const { key, changeX, changeY } = actions.payload;\n      state[key].x = changeX;\n      state[key].y = changeY;\n    },\n    chessSelected: (state, actions)=>{\n      const { key } = actions.payload;\n      state[key].boardStatus = !state[key].boardStatus;\n    },\n    chessCheckStatus: (state, actions)=> {\n      const { key } = actions.payload;\n      state[key].checkStatus = !state[key].checkStatus;\n    },\n    chessDefense: (state, actions)=>{\n      const { key, damage } = actions.payload;\n      state[key].hp -= damage;\n    },\n    chessAttackResult: (state, actions)=> {\n      const { key, lessSp } = actions.payload;\n      state[key].sp -= lessSp;\n    },\n    chessDead: (state, actions)=> {\n      const { key } = actions.payload;\n      state[key].debut = false;\n      state[key].hp = state[key].fullValue.hp;\n      state[key].sp = state[key].fullValue.sp;\n    },\n    chessMoved: (state, actions)=>{\n      const { key } = actions.payload;\n      state[key].roundMove -= 1;\n    },\n    chessRoundRest:(state)=>{\n      for(let i=0;i<state.length;i++){\n        state[i].roundMove = 1;\n      };\n    },\n  }\n});\nexport default chess.reducer;\nexport const { \n  stageDebut, chessMove, chessSelected, chessCheckStatus, chessAttackResult, \n  chessDead, chessMoved, chessDefense, chessRoundRest\n} = chess.actions;","import { createSlice } from '@reduxjs/toolkit';\nconst basicCommon = {\n  x:0,\n  y:0,\n  checkStatus:false,\n  boardStatus:false,\n  debut:false,\n  roundAttack:false,\n};\nconst enemyChess = createSlice({\n  name:'enemyChess',\n  initialState:[\n    {\n      name:'Teoni',\n      cn:'手鬼',\n      id:1,\n      hp:2000,\n      sp:100,\n      dodge:25,\n      fullValue:{\n        hp:2000,\n        sp:100\n      },\n      skill:[{ \n        name:'胡亂毆打',\n        atk:150,\n        sp:0,\n        hitfix:10\n      },{ \n        name:'你是第十四個',\n        atk:500,\n        sp:25,\n        hitfix:20\n      }],\n      ...basicCommon\n    },{\n      name:'Nomanooni',\n      cn:'沼鬼',\n      id:2,\n      hp:1500,\n      sp:200,\n      dodge:30,\n      fullValue:{\n        hp:1500,\n        sp:200\n      },\n      skill:[{ \n        name:'爪擊',\n        atk:70,\n        sp:0,\n        hitfix:15\n      },{ \n        name:'分身攻擊',\n        atk:600,\n        sp:15,\n        hitfix:30\n      }],\n      ...basicCommon\n    }\n  ],\n  reducers:{\n    enemyStageDebut:(state, actions)=> {\n      const { isDebutChess } = actions.payload;\n      state.map((value,key)=>{\n        return isDebutChess.map(v=>{\n          if(value.name===v.get('name')){\n            return (\n              state[key].debut = true,\n              state[key].x = v.get('x'),\n              state[key].y = v.get('y')\n            );\n          }else return null;\n        })\n      })\n    },\n    enemyChessSelected: (state, actions)=>{\n      const { key } = actions.payload;\n      state[key].boardStatus = !state[key].boardStatus;\n    },\n    enemyChessCheckStatus: (state, actions)=> {\n      const { key } = actions.payload;\n      state[key].checkStatus = !state[key].checkStatus;\n    },\n    enemyChessDefense: (state, actions)=> {\n      const { key, damage } = actions.payload;\n      state[key].hp -= damage;\n    },\n    enemyChessAttackResult: (state, actions)=> {\n      const { key, lessSp } = actions.payload;\n      state[key].sp -= lessSp;\n    },\n    enemyChessDead: (state, actions)=> {\n      const { key } = actions.payload;\n      state[key].debut = false;\n      state[key].hp = state[key].fullValue.hp;\n      state[key].sp = state[key].fullValue.sp;\n    },\n  }\n});\nexport default enemyChess.reducer;\nexport const { \n  enemyStageDebut, enemyChessSelected, enemyChessCheckStatus, enemyChessDefense, \n  enemyChessAttackResult, enemyChessDead \n} = enemyChess.actions;","import { createSlice } from '@reduxjs/toolkit';\nconst mapLimit = { x:20, y:15 };\nconst createTraverseLine = (traverse=0,color='')=>{\n  const list = [];\n  for(let i=0;i<mapLimit.x;i++){\n    list.push({\n      x:i,\n      y:traverse,\n      color:color,\n      alpha:0,\n      zIndex:1,\n      isInteractive:false\n    });\n  };\n  return list;\n};\nconst createStraightLine = ( method=()=>{} )=>{\n  const list = [];\n  for(let i=0;i<mapLimit.y;i++){\n    list.push(method(i,'0x383838'));\n  };\n  return list;\n};\nconst createInitialState = createStraightLine(createTraverseLine);\nconst chessMap = createSlice({\n  name:'chessMap',\n  initialState: createInitialState,\n  reducers:{\n    MoveSelect:(state, action)=>{\n      const { position, step, changeColor, alphaVal=1} = action.payload;\n      for(let i=0;i<(step+1);i++){\n        if(position.x+i<=(mapLimit.x-1)){\n          state[position.y][position.x+i].color=changeColor;\n          state[position.y][position.x+i].isInteractive=false;\n          state[position.y][position.x+i].alpha=alphaVal;\n          state[position.y][position.x+i].zIndex=1;\n        };\n        if(position.y+i<=(mapLimit.y-1)){\n          state[position.y+i][position.x].color=changeColor;\n          state[position.y+i][position.x].isInteractive=false;\n          state[position.y+i][position.x].alpha=alphaVal;\n          state[position.y+i][position.x].zIndex=1;\n        };\n        if(position.x-i>=0){\n          state[position.y][position.x-i].color=changeColor;\n          state[position.y][position.x-i].isInteractive=false;\n          state[position.y][position.x-i].alpha=alphaVal;\n          state[position.y][position.x-i].zIndex=1;\n        };\n        if(position.y-i>=0){\n          state[position.y-i][position.x].color=changeColor;\n          state[position.y-i][position.x].isInteractive=false;\n          state[position.y-i][position.x].alpha=alphaVal;\n          state[position.y-i][position.x].zIndex=1;\n        };\n      }\n    },\n    GetMove:(state, action)=>{\n      const { position, step, changeColor, currentChessPositions } = action.payload;\n      for(let i=0;i<(step+1);i++){\n        if(position.x+i<=(mapLimit.x-1)){\n          state[position.y][position.x+i].color=changeColor;\n          state[position.y][position.x+i].isInteractive=true;\n          state[position.y][position.x+i].alpha=0.5;\n          state[position.y][position.x+i].zIndex=1;\n        };\n        if(position.y+i<=(mapLimit.y-1)){\n          state[position.y+i][position.x].color=changeColor;\n          state[position.y+i][position.x].isInteractive=true;\n          state[position.y+i][position.x].alpha=0.5;\n          state[position.y+i][position.x].zIndex=1;\n        };\n        if(position.x-i>=0){\n          state[position.y][position.x-i].color=changeColor;\n          state[position.y][position.x-i].isInteractive=true;\n          state[position.y][position.x-i].alpha=0.5;\n          state[position.y][position.x-i].zIndex=1;\n        };\n        if(position.y-i>=0){\n          state[position.y-i][position.x].color=changeColor;\n          state[position.y-i][position.x].isInteractive=true;\n          state[position.y-i][position.x].alpha=0.5;\n          state[position.y-i][position.x].zIndex=1;\n        };\n      }\n      currentChessPositions.map(v=>{\n        return state[v.y][v.x].isInteractive=false;\n      });\n    },\n    GetAttack:(state, action)=>{\n      const { position, step, changeColor, currentChessPositions } = action.payload;\n      for(let i=0;i<(step+1);i++){\n        if(position.x+i<=(mapLimit.x-1)){\n          state[position.y][position.x+i].color=changeColor;\n          state[position.y][position.x+i].isInteractive=true;\n          state[position.y][position.x+i].alpha=0.5;\n          state[position.y][position.x+i].zIndex=3;\n        };\n        if(position.y+i<=(mapLimit.y-1)){\n          state[position.y+i][position.x].color=changeColor;\n          state[position.y+i][position.x].isInteractive=true;\n          state[position.y+i][position.x].alpha=0.5;\n          state[position.y+i][position.x].zIndex=3;\n        };\n        if(position.x-i>=0){\n          state[position.y][position.x-i].color=changeColor;\n          state[position.y][position.x-i].isInteractive=true;\n          state[position.y][position.x-i].alpha=0.5;\n          state[position.y][position.x-i].zIndex=3;\n        };\n        if(position.y-i>=0){\n          state[position.y-i][position.x].color=changeColor;\n          state[position.y-i][position.x].isInteractive=true;\n          state[position.y-i][position.x].alpha=0.5;\n          state[position.y-i][position.x].zIndex=3;\n        };\n      }\n      currentChessPositions.map(v=>{\n        return (\n          state[v.y][v.x].isInteractive=false,\n          state[v.y][v.x].zIndex=1\n        )\n      });\n    }\n  }\n});\nexport default chessMap.reducer;\nexport const { MoveSelect, GetMove, GetAttack } = chessMap.actions;\n","import React, {} from 'react';\nimport * as PIXI from \"pixi.js\";\nimport { Sprite } from '@inlet/react-pixi/animated';\nimport { MoveSelect } from '../../reducer/map';\nconst texture = PIXI.Texture.WHITE;\nexport const CreateCheckerboard = ({\n  reduxProps\n})=>{\n  const { \n    chess, enemyChess, chessMap, currentChess, dispatch, \n    setTipStatus, setMoveStep, setBattleInfo\n  } = reduxProps;\n  const checkMatchAttackPosition = (x,y)=>{\n    let isMatch = false;\n    enemyChess.map(v=>{\n      const checkMatch = v.debut&&(x===v.x)&&(y===v.y);\n      if(checkMatch){\n        return isMatch=true;\n      }else return null;\n    });\n    return isMatch;\n  };\n  const getCurrentEnemy = (x,y)=>{\n    let item = {};\n    enemyChess.map((v,k)=>{\n      const checkMatch = v.debut&&(x===v.x)&&(y===v.y);\n      if(checkMatch){\n        return item={...v,key:k}\n      }else return null;\n    });\n    return item;\n  };\n  return <React.Fragment>\n    {chessMap.map(value=> {\n      return value.map((v,k)=>{\n        return <Sprite\n          interactive={v.isInteractive}\n          buttonMode={v.isInteractive}\n          zIndex={v.zIndex}\n          key={k}\n          width={40}\n          height={40}\n          x={v.x*40}\n          y={v.y*40}\n          tint={v.color}\n          alpha={v.alpha}\n          texture={texture}\n          pointertap={()=>{\n            switch (currentChess.type) {\n              case \"MOVE\":\n                setTipStatus({\n                  title:'確定移動?',\n                  status:true,\n                  position:{\n                    x:v.x, y:v.y\n                  }\n                });\n                dispatch(MoveSelect({\n                  position:{ \n                    x:chess[currentChess.key].x, \n                    y:chess[currentChess.key].y,\n                  },\n                  step:chess[currentChess.key].step,\n                  changeColor:'0x06d6a0',\n                  alphaVal:0.5\n                }));\n                break;\n              case \"ATTACK\":\n                if(checkMatchAttackPosition(v.x,v.y)){\n                  const targetData = getCurrentEnemy(v.x,v.y);\n                  setBattleInfo({\n                    status:true,\n                    attacker:{ \n                      key: currentChess.key,\n                      ...chess[currentChess.key]\n                    },\n                    target:{\n                      key: targetData.key,\n                      ...targetData\n                    }\n                  });\n                  dispatch(MoveSelect({\n                    position:{ \n                      x:chess[currentChess.key].x, \n                      y:chess[currentChess.key].y,\n                    },\n                    step:chess[currentChess.key].attack,\n                    changeColor:'0x383838',\n                    alphaVal:0\n                  }));\n                }else {\n                  setMoveStep(true);\n                  dispatch(MoveSelect({\n                    position:{ \n                      x:chess[currentChess.key].x, \n                      y:chess[currentChess.key].y,\n                    },\n                    step:chess[currentChess.key].acttack,\n                    changeColor:'0x383838',\n                    alphaVal:0\n                  }));\n                };\n                break;\n              default:\n                return;\n            }; \n          }}\n        />\n      });\n    })}\n  </React.Fragment>\n};","import React from 'react';\n// import { fromJS } from 'immutable';\nimport { Graphics, Text } from '@inlet/react-pixi/animated';\nimport { chessMove, chessMoved } from \"../../reducer/chess\";\nimport { MoveSelect } from '../../reducer/map';\nimport * as PIXI from \"pixi.js\";\n\nexport const ConfirmTip = ({\n  props,\n})=> {\n  const { \n    chess,\n    currentChess,\n    tipStatus,\n    dispatch,\n    setMoveStep, \n    setTipStatus,\n    setOtherTab,\n    setRoundNum,\n    setUsualTip\n  } = props;\n  return <Graphics\n    x={400}\n    y={300}\n    draw={g=> {\n      g.lineStyle(1,`0xffffff`,1);\n      g.beginFill(`0x22223b`);\n      g.drawRoundedRect(-90,-50,180,100,8);\n      g.endFill();\n    }}\n  >\n    <Text\n      text={tipStatus.title}\n      anchor={0.5}\n      x={0}\n      y={-20}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 20,\n        fill:['#ffffff', '#ffffff'],\n      })}\n    />\n    <Text\n      interactive={true}\n      buttonMode={true}\n      anchor={0.5}\n      text={'確定'}\n      x={-30}\n      y={20}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 20,\n        fill:['#ffffff', '#ffffff'],\n      })}\n      pointertap={()=>{\n        switch (currentChess.type) {\n          case \"MOVE\":\n            dispatch(chessMove({\n              key: currentChess.key,\n              changeX:tipStatus.position.x,\n              changeY:tipStatus.position.y\n            }));\n            dispatch(chessMoved({\n              key: currentChess.key,\n            }));\n            dispatch(MoveSelect({\n              position:{ \n                x:chess[currentChess.key].x, \n                y:chess[currentChess.key].y,\n              },\n              step:chess[currentChess.key].step,\n              changeColor:'0x383838',\n              alphaVal:0\n            }));\n            setMoveStep(true);\n            setTipStatus(prev=>{\n              return {...prev, status:false }\n            });\n            break;\n          case \"ENDROUND\":\n            setOtherTab(false);\n            setRoundNum(prev=>prev+=1);\n            setTipStatus(prev=>{\n              return {...prev, status:false }\n            });\n            setUsualTip({\n              title:'敵方回合',\n              status:true\n            })\n            break;\n          default:\n            return;\n        }\n      }}\n    />\n    <Text\n      interactive={true}\n      buttonMode={true}\n      anchor={0.5}\n      text={'取消'}\n      x={30}\n      y={20}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 20,\n        fill:['#ffffff', '#ffffff'],\n      })}\n      pointertap={()=>{\n        switch (currentChess.type) {\n          case \"MOVE\":\n            dispatch(MoveSelect({\n              position:{ \n                x:chess[currentChess.key].x, \n                y:chess[currentChess.key].y,\n              },\n              step:chess[currentChess.key].step,\n              changeColor:'0x383838',\n              alphaVal:0\n            }));\n            setMoveStep(true);\n            setTipStatus(prev=>{\n              return {...prev, status:false }\n            });\n            break;\n          case \"ENDROUND\":\n            setTipStatus(prev=>{\n              return {...prev, status:false }\n            });\n            break;\n          default:\n            return;\n        }\n      }}\n    />\n  </Graphics>\n};","import { fromJS } from \"immutable\";\n\nexport const stageRule = fromJS({\n  stageOne: {\n    debutChess:[\n      { \n        name:'Tanjirou',\n        x:3,\n        y:7\n      },{ \n        name:'Nezuko',\n        x:3,\n        y:9\n      }\n    ],\n    debutEnemyChess:[\n      {\n        name:'Teoni',\n        x:16,\n        y:7\n      }\n    ],\n    ruleText:{\n      win:'擊敗手鬼。',\n      lose:'竃門 碳治郎 戰敗。'\n    },\n    isWin: enemyList => {\n      let totalLife = 0;\n        enemyList.map(v => {\n          if(v.debut){\n            return totalLife += v.hp;\n          }return null;\n        });\n      return totalLife>0 ? false : true ;\n    },\n    isLose: chessList => {\n      let totalLife = 0;\n        chessList.map(v => {\n          if(v.debut){\n            return totalLife += v.hp;\n          }return null;\n        });\n      return totalLife>0 ? false : true ;\n    }\n  },\n  stageTwo: {\n    debutChess:[\n      { \n        name:'Tanjirou',\n        x:3,\n        y:9\n      }, { \n        name:'Nezuko',\n        x:3,\n        y:11\n      }\n    ],\n    debutEnemyChess:[\n      {\n        name:'Nomanooni',\n        x:16,\n        y:7\n      }\n    ]\n  }\n});","import React,{ useState } from 'react';\n// import { fromJS } from 'immutable';\nimport { Graphics, Text } from '@inlet/react-pixi/animated';\nimport * as PIXI from \"pixi.js\";\n// rule\nimport { stageRule } from \"../../constants/stageRule\";\n\nexport const UsualTip = ({\n  props,\n})=> {\n  const {\n    stageStatus, chess, currentChess, enemyChess,\n    usualTip, setMoveStep, setUsualTip, setCurrentChess, setEnemyRoundTab } = props;\n    const [ textColor, setTextColor ] = useState(['#ffffff', '#ffffff']);\n  return <Graphics\n    x={400}\n    y={300}\n    draw={g=> {\n      g.lineStyle(1,`0xffffff`,1);\n      g.beginFill(`0x22223b`);\n      g.drawRoundedRect(-90,-50,180,100,8);\n      g.endFill();\n    }}\n  >\n    <Text\n      text={usualTip.title}\n      anchor={0.5}\n      x={0}\n      y={-20}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 20,\n        fill: textColor,\n      })}\n    />\n    <Text\n      interactive={true}\n      buttonMode={true}\n      anchor={0.5}\n      text={'確定'}\n      x={0}\n      y={20}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 20,\n        fill:['#ffffff', '#ffffff'],\n      })}\n      pointertap={()=>{\n        switch (currentChess.type) {\n          case \"ATTACK\":\n            const checkWin = stageRule.getIn([stageStatus,'isWin']);\n            const checkLose = stageRule.getIn([stageStatus,'isLose']);\n            if(checkWin(enemyChess)){\n              setTextColor(['#ffffff', '#06d6a0']);\n              setCurrentChess({\n                key:0,\n                type:\"CHECKWIN\"\n              });\n              setUsualTip({\n                title:`作戰獲勝!`,\n                status:true,\n              });\n            }else if(checkLose(chess)){\n              setTextColor(['#dc2f02', '#d00000']);\n              setCurrentChess({\n                key:0,\n                type:\"CHECKLOSE\"\n              });\n              setUsualTip({\n                title:`作戰失敗!`,\n                status:true,\n              });\n            }else {\n              setMoveStep(true);\n              setUsualTip({\n                title:``,\n                status:false,\n              });\n            }\n            break;\n          case \"CHECKWIN\":\n            setMoveStep(true);\n            setTextColor(['#ffffff', '#ffffff']);\n            setUsualTip({\n              title:``,\n              status:false,\n            });\n            break;\n          case \"CHECKLOSE\":\n            setMoveStep(true);\n            setTextColor(['#ffffff', '#ffffff']);\n            setUsualTip({\n              title:``,\n              status:false,\n            });\n            break;\n          case \"ENDROUND\":\n            setEnemyRoundTab({\n              oder:0,\n              status:true\n            });\n            setUsualTip({\n              title:``,\n              status:false\n            });\n            break;\n          default:\n            return;\n        }\n      }}\n    />\n  </Graphics>\n};","import * as PIXI from \"pixi.js\";\nexport const loader = new PIXI.Loader();\nconst hostname = window.location.hostname==='localhost'?'./Demon-Slayer/':'./';\n\nloader\n  .add('Tanjirou-head-default',`${hostname}imgs/Tanjirou/head-default.png`)\n  .add('Tanjirou-talk-default',`${hostname}imgs/Tanjirou/talk-default.jpg`)\n  .add('Tanjirou-talk-attack',`${hostname}imgs/Tanjirou/talk-attack.jpg`)\n  .add('Tanjirou-talk-def',`${hostname}imgs/Tanjirou/talk-def.jpg`)\n  .add('Tanjirou-talk-dodge',`${hostname}imgs/Tanjirou/talk-dodge.jpg`)\n  .add('Tanjirou-talk-dead',`${hostname}imgs/Tanjirou/talk-dead.jpg`)\n  .add('Tanjirou-fight-typeA',`${hostname}imgs/Tanjirou/fight-typeA.png`)\n  .add('Tanjirou-fight-typeB',`${hostname}imgs/Tanjirou/fight-typeB.png`)\n  .add('Nezuko-head-default',`${hostname}imgs/Nezuko/head-default.jpg`)\n  .add('Nezuko-talk-default',`${hostname}imgs/Nezuko/talk-default.jpg`)\n  .add('Nezuko-talk-attack',`${hostname}imgs/Nezuko/talk-attack.jpg`)\n  .add('Nezuko-talk-def',`${hostname}imgs/Nezuko/talk-def.jpg`)\n  .add('Nezuko-talk-dodge',`${hostname}imgs/Nezuko/talk-dodge.jpg`)\n  .add('Nezuko-talk-dead',`${hostname}imgs/Nezuko/talk-dead.jpg`)\n  .add('Nezuko-fight',`${hostname}imgs/Nezuko/fight.png`)\n  .add('Inosuke-head-default',`${hostname}imgs/Inosuke/head-default.jpg`)\n  .add('Inosuke-fight',`${hostname}imgs/Inosuke/fight.png`)\n  .add('Teoni-head-default',`${hostname}imgs/Teoni/head-default.png`)\n  .add('Teoni-talk-default',`${hostname}imgs/Teoni/talk-default.jpg`)\n  .add('Teoni-talk-attack',`${hostname}imgs/Teoni/talk-attack.jpg`)\n  .add('Teoni-talk-def',`${hostname}imgs/Teoni/talk-def.jpg`)\n  .add('Teoni-talk-dodge',`${hostname}imgs/Teoni/talk-dodge.jpg`)\n  .add('Teoni-talk-dead',`${hostname}imgs/Teoni/talk-dead.jpg`)\n  .add('Teoni-fight',`${hostname}imgs/Teoni/fight.png`)\n  .add('Nomanooni-head-default',`${hostname}imgs/Nomanooni/head-default.jpg`)\n  .add('Nomanooni-fight',`${hostname}imgs/Nomanooni/fight.png`)\n  .add('stageOne-BG',`${hostname}imgs/background/stage1-background.png`)\n  .add('stageOne-main-BG',`${hostname}imgs/background/stage1-main-background.jpg`)\n  .add('atkIcon',`${hostname}imgs/common/atk.png`)\n  .add('defIcon',`${hostname}imgs/common/def.png`)\n  .add('otherIcon',`${hostname}imgs/common/other.png`)\n  .add('closeIcon',`${hostname}imgs/common/close.png`)\n  .add('endBtn',`${hostname}imgs/common/end.png`)\n  .add('fightOff',`${hostname}imgs/common/fightOff.png`)\n  .add('fightDef',`${hostname}imgs/common/fightDef.png`)\n  .load();\n","export const ProbabilityCount = (\n  attackerHit,\n  targetDodge\n)=>{\n  const basicHit = 100;\n  const hitProbability = basicHit + attackerHit - targetDodge;\n  const checkRamdom = Math.round(Math.random()*100 + 1);\n  if(hitProbability < checkRamdom) {\n    return false\n  }else return true;\n};","import React,{ useState } from 'react';\nimport { Container, Sprite, Graphics, Text } from '@inlet/react-pixi/animated';\nimport { loader } from '../DataLoader';\nimport * as PIXI from \"pixi.js\";\nimport { ProbabilityCount } from \"../Common/ProbabilityCount\";\nimport { chessAttackResult, chessMoved } from \"../../reducer/chess\";\nimport { enemyChessDefense } from \"../../reducer/enemyChess\";\n\nexport const BattleBoard = ({ props })=>{\n  const { \n    battleInfo, setMoveStep, setBattleInfo, setAnimeShow, dispatch\n  } = props;\n  const [ atkSelectd, setAtkSelectd ] = useState({\n    key:0,\n  });\n  const CreateAttackerInfo = ({ pX=0, pY=0, data })=>{\n    return <Container x={pX} y={pY} sortableChildren={true}>\n      <Text\n        text={'攻'}\n        x={220}\n        y={0}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 30,\n          fill:['#ffffff', '#00ff99'],\n        })}\n      />\n      <Text\n        text={data.cn}\n        x={60}\n        y={-3}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 16,\n          fill:'#ffffff',\n        })}\n      />\n      <Text\n        text={`${data.hp} / ${data.fullValue.hp}`}\n        x={60}\n        y={17}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 16,\n          fill:'#ff6b6b',\n        })}\n      />\n      <Text\n        text={`${data.sp} / ${data.fullValue.sp}`}\n        x={60}\n        y={34}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 16,\n          fill:'#0466c8',\n        })}\n      />\n      <Sprite\n        width={50}\n        height={50}\n        x={0}\n        y={0}\n        image={loader.resources[`${data.name}-head-default`].data}\n      />\n      <Text\n        text={`招式選擇：`}\n        x={0}\n        y={80}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 16,\n          fill:'#ffffff',\n        })}\n      />\n      <Graphics\n        x={0}\n        y={115}\n        zIndex={1}\n        draw={g=> {\n          g.lineStyle(1,`0xffffff`,1);\n          g.beginFill(`0x0f0f1b`);\n          g.drawRoundedRect(0,0,240,180,8);\n          g.endFill();\n        }}\n      />\n      {data.skill.map((value,key)=>{\n        const skillCanUse = data.sp - value.sp >= 0;\n        return <React.Fragment key={key}>\n          <Text\n            zIndex={2}\n            interactive={skillCanUse}\n            buttonMode={true}\n            text={value.name}\n            x={20}\n            y={130+(key*24)}\n            style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n              fontSize: 16,\n              fill: ((atkSelectd.key===key)&&skillCanUse) ? ['#ffffff', '#00ff99'] :  \n                skillCanUse ? '#ffffff' : '#8d99ae',\n              fontWeight: (atkSelectd.key===key) ? 600 : 300\n            })}\n            pointertap={()=>setAtkSelectd({\n              key: key\n            })}\n          />\n        </React.Fragment>\n      })}\n    </Container>\n  };\n  const CreateTargetInfo = ({ pX=0, pY=0, data })=>{\n    return <Container x={pX} y={pY} sortableChildren={true}>\n      <Text\n        text={'防'}\n        x={0}\n        y={0}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 30,\n          fill:['#ffffff', '#ee6c4d'],\n        })}\n      />\n      <Text\n        text={data.cn}\n        anchor={{x:1,y:0}}\n        x={190}\n        y={-3}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 16,\n          fill:'#ffffff',\n        })}\n      />\n      <Text\n        text={`${data.hp} / ${data.fullValue.hp}`}\n        anchor={{x:1,y:0}}\n        x={190}\n        y={17}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 16,\n          fill:'#ff6b6b',\n        })}\n      />\n      <Text\n        text={`${data.sp} / ${data.fullValue.sp}`}\n        anchor={{x:1,y:0}}\n        x={190}\n        y={34}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 16,\n          fill:'#0466c8',\n        })}\n      />\n      <Sprite\n        width={50}\n        height={50}\n        x={200}\n        y={0}\n        image={loader.resources[`${data.name}-head-default`].data}\n      />\n    </Container>\n  };\n  const ForecastInfo = ({ pX, pY, data })=>{\n    return <Container x={pX} y={pY} sortableChildren={true}>\n      <Graphics\n        x={0}\n        y={0}\n        zIndex={1}\n        draw={g=> {\n          g.lineStyle(1,`0x00ff99`,1);\n          g.beginFill(`0x0f0f1b`);\n          g.drawRoundedRect(0,0,265,215,8);\n          g.endFill();\n        }}\n      />\n      <Text\n        text={`招式：`}\n        zIndex={2}\n        x={20}\n        y={20}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 20,\n          fill:'#ffffff'\n        })}\n      />\n      <Text\n        text={`${data.attacker.skill[atkSelectd.key].name}`}\n        zIndex={2}\n        x={80}\n        y={22}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 16,\n          fill:'#00ff99'\n        })}\n      />\n      <Text\n        text={`攻擊力：`}\n        zIndex={2}\n        x={20}\n        y={50}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 20,\n          fill:'#ffffff'\n        })}\n      />\n      <Text\n        text={`${data.attacker.skill[atkSelectd.key].atk}`}\n        zIndex={2}\n        x={100}\n        y={52}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 18,\n          fill:'#fdc500'\n        })}\n      />\n      <Text\n        text={`命中率：`}\n        zIndex={2}\n        x={20}\n        y={80}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 20,\n          fill:'#ffffff'\n        })}\n      />\n      <Text\n        text={`${\n          100 +\n          ((data.attacker.skill[atkSelectd.key].hitfix - data.target.dodge)>=0 ? 0 :\n            (data.attacker.skill[atkSelectd.key].hitfix - data.target.dodge))\n        }%`}\n        zIndex={2}\n        x={100}\n        y={82}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 18,\n          fill:'#ffffff'\n        })}\n      />\n      <Text\n        text={`消耗：`}\n        zIndex={2}\n        x={20}\n        y={110}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 20,\n          fill:'#ffffff'\n        })}\n      />\n      <Text\n        text={`${data.attacker.skill[atkSelectd.key].sp}`}\n        zIndex={2}\n        x={80}\n        y={110}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 18,\n          fill:'#0466c8'\n        })}\n      />\n    </Container>\n  };\n  return <Graphics\n    x={400}\n    y={300}\n    zIndex={99}\n    draw={g=> {\n      g.lineStyle(1,`0xffffff`,1);\n      g.beginFill(`0x22223b`);\n      g.drawRoundedRect(-300,-200,600,400,8);\n      g.endFill();\n    }}\n  >\n    <CreateAttackerInfo\n      pX={-270}\n      pY={-180}\n      data={battleInfo.attacker}\n    />\n    <CreateTargetInfo\n      pX={20}\n      pY={-180}\n      data={battleInfo.target}\n    />\n    <ForecastInfo\n      pX={0}\n      pY={-100}\n      data={battleInfo}\n    />\n    <Text\n      interactive={true}\n      buttonMode={true}\n      text={'攻擊'}\n      anchor={0.5}\n      x={180}\n      y={160}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 20,\n        fill:'#ffffff',\n      })}\n      pointertap={()=>{\n        const isHit = ProbabilityCount(\n          battleInfo.attacker.skill[atkSelectd.key].hitfix,\n          battleInfo.target.dodge\n        );\n        dispatch(chessAttackResult({\n          key: battleInfo.attacker.key,\n          lessSp: battleInfo.attacker.skill[atkSelectd.key].sp\n        }));\n        dispatch(chessMoved({\n          key: battleInfo.attacker.key,\n        }));\n        if(isHit){\n          dispatch(enemyChessDefense({\n            key: battleInfo.target.key,\n            damage: battleInfo.attacker.skill[atkSelectd.key].atk\n          }));\n        };\n        setAnimeShow({\n          status:true,\n          type:'USER',\n          isHit: isHit,\n          attacker:{ \n            key:battleInfo.attacker.key,\n            skill:battleInfo.attacker.skill[atkSelectd.key],\n            prevSP:battleInfo.attacker.sp\n          },\n          target:{ \n            key:battleInfo.target.key,\n            isHit:isHit,\n            prevLife:battleInfo.target.hp\n          }\n        });\n        setBattleInfo({\n          status:false,\n          attacker:{ key:'' },\n          target:{ key:'' }\n        });\n      }}\n    />\n    <Text\n      interactive={true}\n      buttonMode={true}\n      text={'取消'}\n      anchor={0.5}\n      x={240}\n      y={160}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 20,\n        fill:'#ffffff',\n      })}\n      pointertap={()=>{\n        setMoveStep(true);\n        setBattleInfo({\n          status:false,\n          attacker:{ key:'' },\n          target:{ key:'' }\n        })\n      }}\n    />\n  </Graphics>\n};","import React from 'react';\nimport { Sprite } from '@inlet/react-pixi/animated';\nimport { Spring } from 'react-spring/renderprops';\nimport { loader } from '../../DataLoader';\n\nexport const AnimeShowBG = ({\n  props,\n})=>{\n  const { stageStatus, BGstatus, BGprop, SkBGprop, \n    setSkBGpops, setBGpops } = props;\n  return <>\n    {BGstatus.type==='STOP'&&<Sprite\n      x={-400}\n      y={-100}\n      zIndex={1}\n      width={1600}\n      height={500}\n      anchor={0.5}\n      image={loader.resources[`${stageStatus}-BG`].data}\n    />}\n    {BGstatus.type==='STANDBY'&&<Spring\n      from={{ x:-400, y:-100 }}\n      to={{ x: BGprop.toX, y:-100 }}\n      config={{ duration: BGprop.duration }}\n      onRest={()=>{\n        if(BGprop.toX===-400){\n          setBGpops({\n            toX:400,\n            duration: 20000\n          });\n        }else {\n          setBGpops({\n            toX:-400,\n            duration:-1000\n          });\n        };\n      }}\n    >\n      {props => \n        <Sprite\n          zIndex={1}\n          width={1600}\n          height={500}\n          anchor={0.5}\n          image={loader.resources[`${stageStatus}-BG`].data}\n          {...props}\n      />}\n    </Spring>}\n    {BGstatus.type==='ENEMYSTANDBY'&&<Spring\n      from={{ x:400, y:-100 }}\n      to={{ x: -BGprop.toX, y:-100 }}\n      config={{ duration: BGprop.duration }}\n      onRest={()=>{\n        if(-BGprop.toX===400){\n          setBGpops({\n            toX:400,\n            duration: 20000\n          });\n        }else {\n          setBGpops({\n            toX:-400,\n            duration:-1000\n          });\n        };\n      }}\n    >\n      {props => \n        <Sprite\n          zIndex={1}\n          width={1600}\n          height={500}\n          anchor={0.5}\n          image={loader.resources[`${stageStatus}-BG`].data}\n          {...props}\n      />}\n    </Spring>}\n    {BGstatus.type==='SKILL'&&<Spring\n      from={{ x:-400, y:-100 }}\n      to={{ x: SkBGprop.toX, y:-100 }}\n      config={{ duration: SkBGprop.duration }}\n      onRest={()=>{\n        if(SkBGprop.toX===-400){\n          setSkBGpops({\n            toX:400,\n            duration: 500\n          });\n        }else {\n          setSkBGpops({\n            toX:-400,\n            duration:-1000\n          });\n        };\n      }}\n    >\n      {props => \n        <Sprite\n          zIndex={1}\n          width={1600}\n          height={500}\n          anchor={0.5}\n          image={loader.resources[`${stageStatus}-BG`].data}\n          {...props}\n      />}\n    </Spring>}\n    {BGstatus.type==='ENEMYSKILL'&&<Spring\n      from={{ x:400, y:-100 }}\n      to={{ x: -SkBGprop.toX, y:-100 }}\n      config={{ duration: SkBGprop.duration }}\n      onRest={()=>{\n        if(-SkBGprop.toX===400){\n          setSkBGpops({\n            toX:400,\n            duration: 500\n          });\n        }else {\n          setSkBGpops({\n            toX:-400,\n            duration:-1000\n          });\n        };\n      }}\n    >\n      {props => \n        <Sprite\n          zIndex={1}\n          width={1600}\n          height={500}\n          anchor={0.5}\n          image={loader.resources[`${stageStatus}-BG`].data}\n          {...props}\n      />}\n    </Spring>}\n  </>\n};","import React from 'react';\nimport { Container, Sprite, Graphics, Text } from '@inlet/react-pixi/animated';\nimport * as PIXI from \"pixi.js\";\nimport { loader } from '../../DataLoader';\nexport const TopBar = ({\n  right={},\n  left={},\n  showType='',\n  targetHp=0,\n  attackerSp=0\n})=> {\n  const hpBarCount = (hp,full)=>{\n    const leftVal =  Number(full) - Number(hp);\n    const percentage = Number(full) / 200;\n    const result = leftVal / percentage;\n    return result;\n  };\n  const spBarCount = (sp,full)=>{\n    const leftVal =  Number(full) - Number(sp);\n    const percentage = Number(full) / 100;\n    const result = leftVal / percentage;\n    return result;\n  };\n  return <Graphics \n    x={-400}\n    y={-300}\n    zIndex={98}\n    draw={g=> {\n      g.beginFill(`0x000f23`);\n      g.drawRoundedRect(0,0,800,80,0);\n      g.endFill();\n    }}\n  >\n    <Container sortableChildren={true}>\n      <Sprite\n        width={42}\n        height={42}\n        x={370}\n        y={40}\n        anchor={0.5} \n        image={loader.resources[`${showType===\"USER\" ? 'defIcon' : 'atkIcon' }`].data}\n      />\n      <Sprite\n        width={42}\n        height={42}\n        x={420}\n        y={40}\n        anchor={0.5} \n        image={loader.resources[`${showType===\"USER\" ? 'atkIcon' : 'defIcon' }`].data}\n      />\n      {/* left */}\n      <Sprite\n        width={50}\n        height={50}\n        x={50}\n        y={15}\n        image={loader.resources[`${left.name}-head-default`].data}\n      />\n      <Text \n        text={`${showType===\"USER\"?targetHp:left.hp} / ${left.fullValue.hp}`}\n        anchor={{x:1,y:0}} \n        x={320} y={10}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 18,\n          fill:'#e71d36',\n        })}/>\n      <Graphics\n        x={320} y={35}\n        zIndex={1}\n        draw={g=> {\n          g.beginFill(`0xe71d36`);\n          g.drawRoundedRect(0,0,-200,10,0);\n          g.endFill();\n        }}\n      />\n      <Graphics\n        x={320} y={35}\n        zIndex={2}\n        draw={g=> {\n          g.beginFill(`0x333533`);\n          g.drawRoundedRect(-200,0,hpBarCount(showType===\"USER\"?targetHp:left.hp,left.fullValue.hp),10,0);\n          g.endFill();\n        }}\n      />\n      <Text \n        text={`${showType===\"USER\"? left.sp : attackerSp} / ${left.fullValue.sp}`}\n        anchor={{x:1,y:0.3}} \n        x={210} y={55}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 18,\n          fill:'#4A86E8',\n        })}/>\n      <Graphics\n        x={320} y={55}\n        zIndex={1}\n        draw={g=> {\n          g.beginFill(`0x4A86E8`);\n          g.drawRoundedRect(0,0,-100,10,0);\n          g.endFill();\n        }}\n      />\n      <Graphics\n        x={220} y={55}\n        zIndex={2}\n        draw={g=> {\n          g.beginFill(`0x333533`);\n          g.drawRoundedRect(0,0,spBarCount(showType===\"USER\"?left.sp:attackerSp,left.fullValue.sp),10,0);\n          g.endFill();\n        }}\n      />\n      {/* right */}\n      <Sprite\n        width={50}\n        height={50}\n        x={690}\n        y={15}\n        image={loader.resources[`${right.name}-head-default`].data}\n      />\n      <Text \n        text={`${showType===\"USER\"?right.hp:targetHp} / ${right.fullValue.hp}`}\n        anchor={{x:1,y:0}} \n        x={670} y={10}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 18,\n          fill:'#e71d36',\n        })}/>\n      <Graphics\n        x={670} y={35}\n        zIndex={1}\n        draw={g=> {\n          g.beginFill(`0xe71d36`);\n          g.drawRoundedRect(0,0,-200,10,0);\n          g.endFill();\n        }}\n      />\n      <Graphics\n        x={670} y={35}\n        zIndex={2}\n        draw={g=> {\n          g.beginFill(`0x333533`);\n          g.drawRoundedRect(-200,0,hpBarCount(showType===\"USER\"?right.hp:targetHp,right.fullValue.hp),10,0);\n          g.endFill();\n        }}\n      />\n      <Text \n        text={`${showType===\"USER\"? attackerSp : right.sp} / ${right.fullValue.sp}`}\n        anchor={{x:1,y:0.3}} \n        x={560} y={55}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 18,\n          fill:'#4A86E8',\n        })}/>\n      <Graphics\n        x={670} y={55}\n        zIndex={1}\n        draw={g=> {\n          g.beginFill(`0x4A86E8`);\n          g.drawRoundedRect(0,0,-100,10,0);\n          g.endFill();\n        }}\n      />\n      <Graphics\n        x={570} y={55}\n        zIndex={2}\n        draw={g=> {\n          g.beginFill(`0x333533`);\n          g.drawRoundedRect(0,0,spBarCount(showType===\"USER\"?attackerSp:right.sp,right.fullValue.sp),10,0);\n          g.endFill();\n        }}\n      />\n    </Container>\n  </Graphics>\n};","import { fromJS } from \"immutable\";\nexport const lines = fromJS({\n  'Tanjirou': {\n    default:[\n      '(備戰中)',\n      '(備戰中)'\n    ],\n    attack:[\n      '我要成為強者，用強者的力量去保護弱者。',\n      '無論鬼奪走多少生命，人類的意志是怎樣都不會被打敗！'\n    ],\n    dodge:[\n      '危險!!',\n      '冷靜下來! 可以戰勝的。'\n    ],\n    def:[\n      '鬼殺隊不會被一點小傷給打倒!',\n      '不好了! 調整呼吸。'\n    ],\n    dead:[\n      '對不起....鱗瀧師傅..',\n      '禰豆子...'\n    ]\n  },\n  'Nezuko': {\n    default:[\n      '(備戰中)',\n      '(備戰中)'\n    ],\n    attack:[\n      '......!!(人類是家人)',\n      '......!!(打倒惡鬼)'\n    ],\n    dodge:[\n      '......!!(危險)',\n      '......!!(沒事的)'\n    ],\n    def:[\n      '......!!(危險)',\n      '......!!(沒事的)'\n    ],\n    dead:[\n      '......!?',\n      '.....(哥哥)'\n    ]\n  },\n  'Teoni': {\n    default:[\n      '(備戰中)',\n      '(備戰中)'\n    ],\n    attack:[\n      '獵鬼人是最上等的食物!!',\n      '看我吃了你!!'\n    ],\n    dodge:[\n      '沒用沒用 哈哈哈哈!',\n      '就這點程度嗎? 可悲的劍士。'\n    ],\n    def:[\n      '不久就輪到你的死期了!',\n      '我會吃了你!!'\n    ],\n    dead:[\n      '甚麼!?.....我竟然會死在獵鬼人手上.....',\n      '甚麼!?.....我竟然會死在獵鬼人手上.....'\n    ]\n  }\n});","import React, { useState } from 'react';\nimport { Container, Graphics, Sprite, Text } from '@inlet/react-pixi/animated';\nimport * as PIXI from \"pixi.js\";\nimport { loader } from '../../DataLoader';\nimport { lines } from \"../../../constants/lines\";\nexport const BottomBar = ({\n  right={},\n  left={},\n  linesStatus={}\n})=> {\n  const showCharacter = linesStatus.character===\"USER\" ? right.name : left.name;\n  const randomSize = lines.getIn([showCharacter,linesStatus.status]).size-1;\n  const [ random ] = useState(Math.round(Math.random()*randomSize));\n  return <Graphics \n    x={-400}\n    y={150}\n    zIndex={98}\n    draw={g=> {\n      g.beginFill(`0x000f23`);\n      g.drawRoundedRect(0,0,800,150,0);\n      g.endFill();\n    }}\n  >\n    <Container sortableChildren={true}>\n      <Sprite\n        width={100}\n        height={100}\n        x={50}\n        y={25}\n        image={loader.resources[`${showCharacter}-talk-${linesStatus.status}`].data}\n      />\n      <Text \n        text={lines.getIn([showCharacter,linesStatus.status,random])}\n        anchor={{x:0,y:0}} \n        x={170} y={60}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 18,\n          fill:'#ffff',\n        })}/>\n    </Container>\n  </Graphics>\n};","import React,{ useState, useEffect } from \"react\";\nexport const SkillShowProtoType = ({\n  skillName,\n  attackerName,\n  isHit,\n  targetLife,\n  attackerSp,\n  resultLife,\n  resultSp,\n  BGstatus,\n  setBGstatus,\n  setAnimeIsDone,\n  setTargetHp,\n  setAttackerSp,\n  setLinesStatus,\n  defXPostion,\n  steps,\n  ShowType\n})=>{\n  const [ position, setPosition ] = useState({ x:0, y:0, tint:0xffffff, alpha:1, mass:1, friction:20, tension:170 });\n  // def\n  useEffect(()=>{\n    if(BGstatus.defence && skillName==='防禦'){\n      const timeout = steps({\n        skillName:skillName,\n        isHit:isHit,\n        resultLife:resultLife,\n        setAnimeIsDone:setAnimeIsDone,\n        setLinesStatus:setLinesStatus,\n        setPosition:setPosition,\n      });\n      return ()=> clearTimeout(timeout);\n    };\n  },[ BGstatus.defence, skillName, isHit, resultLife, setAnimeIsDone, steps, setLinesStatus ])\n  // atk\n  useEffect(()=>{\n    if(skillName==='防禦'){ \n      setPosition(prev=>{return{ ...prev, x: defXPostion, y:10 }});\n      return;\n    };\n    const timeout = steps({\n      skillName:skillName,\n      isHit:isHit,\n      targetLife:targetLife,\n      attackerSp:attackerSp,\n      resultLife:resultLife,\n      resultSp:resultSp,\n      setBGstatus:setBGstatus,\n      setTargetHp:setTargetHp,\n      setAttackerSp:setAttackerSp,\n      setLinesStatus:setLinesStatus,\n      setPosition:setPosition\n    });\n    return ()=> clearTimeout(timeout);\n  },[ skillName, isHit, targetLife, attackerSp, resultLife, resultSp,\n    setBGstatus, setTargetHp, setAttackerSp, defXPostion, steps, setLinesStatus ]);\n  return <ShowType\n    skillName={skillName}\n    attackerName={attackerName}\n    position={position}\n  />\n};\n","import { TweenMax } from 'gsap';\nimport numeral from \"numeral\";\nexport const steps = ({\n  skillName='',\n  isHit=false,\n  targetLife=0,\n  attackerSp=0,\n  resultLife=0,\n  resultSp=0,\n  BGstatus={},\n  setBGstatus=null,\n  setAnimeIsDone=null,\n  setTargetHp=null,\n  setAttackerSp=null,\n  setLinesStatus=null,\n  setPosition=null,\n}) => {\n  // 技能動畫:\n  switch (skillName) {\n    case '防禦':\n      setPosition(prev=>{return{ ...prev, x:200, y:50, tension:100 }});\n      const defStart = ()=>{\n        if(isHit){\n          return isHitStep();\n        }else return isDodge();\n      };\n      const isHitStep = ()=> {\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:250, y:50, mass:2, \n            friction:5, tension:1000, tint:0xd00000}});\n          // callback\n          if(resultLife<=0){\n            return isDead({ type:'dead' });\n          }else return next({ type:'def' });\n        },1200);\n        return timeout;\n      };\n      const isDodge = ()=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:250, y:0 }});\n          // callback\n          next({ type:'dodge' });\n        },1200);\n        return timeout;\n      };\n      const isDead = ({ type })=> {\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:200, y:50, \n            friction:2, tint:0x03071e\n          }});\n          setLinesStatus(prev=>{ \n            return { \n              status: type,\n              character: prev.character===\"USER\" ? \"ENEMY\" : \"USER\"\n            };\n          });\n          // callback\n          isDeadStep2();\n        },5000);\n        return timeout;\n      };\n      const isDeadStep2 = ()=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return { ...prev, alpha:0 }});\n          // callback\n          end();\n        },3000);\n        return timeout;\n      };\n      const next = ({ type })=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:200, y:50, mass:1, \n            friction:20, tension:170, tint:0xffffff}});\n          setLinesStatus(prev=>{ \n            return { \n              status: type,\n              character: prev.character===\"USER\" ? \"ENEMY\" : \"USER\"\n            };\n          });\n          // callback\n          end();\n        },5000);\n        return timeout;\n      };\n      const end = ()=> {\n        const timeout = setTimeout(() => {\n          // callback\n          setAnimeIsDone(true);\n        },3000);\n        return timeout;\n      };\n      return defStart();\n    // ATK\n    default:\n      setBGstatus({ type:'STANDBY', defence:false });\n      setPosition(prev=>{return{ ...prev, x:550,y:50,tension:100 }});\n      const atkStart = ()=>{\n        setPosition(prev=>{return{ ...prev, x:250, y:50, tension:100 }});\n        // callback\n        return step1();\n      };\n      const step1 = ()=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:0, y:50, tension:100 }});\n          setBGstatus({ type:'SKILL', defence:false });\n          // callback\n          step2();\n        },3000);\n        return timeout;\n      };\n      const step2 = ()=>{\n        const run =  { number: attackerSp };\n        TweenMax.to(run, 0.8, {\n          number: resultSp,\n          onUpdate: () => {\n            setAttackerSp(numeral(run.number).format(\"0\"))\n          },\n        });\n        setLinesStatus(prev=>{ return { ...prev, status:'attack' }});\n        const timeout = setTimeout(() => {\n          setBGstatus({ type:'STOP', defence:true });\n          // callback\n          step3();\n        },3000);\n        return timeout;\n      };\n      const step3 = ()=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:-250, y:50, tension:1000 }});\n          // callback\n          step4();\n        },1000);\n        return timeout;\n      };\n      const step4 = ()=>{\n        const run = { number: targetLife };\n        if(isHit) {\n          TweenMax.to(run, 0.8, {\n            number: resultLife<0 ? 0 : resultLife,\n            onUpdate: () => {\n              setTargetHp(numeral(run.number).format(\"0\"))\n            },\n          });\n        };\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:550, y:50, tension:50 }});\n        },3000);\n        return timeout;\n      };\n      return atkStart();\n  }\n};","import React from \"react\";\nimport { loader } from '../../../components/DataLoader';\nimport { Spring } from 'react-spring/renderprops';\nimport { Sprite } from '@inlet/react-pixi/animated';\n\nexport const ShowType = ({\n  skillName,\n  attackerName,\n  position,\n}) =>{\n  switch (skillName) {\n    case `斬擊`:\n      return <Spring\n        from={{ x:550, y:50 }}\n        to={{ x:position.x, y:position.y }}\n        config={{ \n          mass:1,\n          tension: position.tension,\n          friction:20,\n        }}\n      >\n      {props => \n        <Sprite\n          zIndex={3}\n          width={200}\n          height={200}\n          anchor={0.5}\n          image={loader.resources[`${attackerName}-fight-typeA`].data}\n          {...props}\n        />}\n      </Spring>\n    case `防禦`:\n      return <Spring\n        from={{ x:650, y:50 }}\n        to={{ x:position.x, y:position.y }}\n        config={{ \n          mass:1,\n          tension: position.tension,\n          friction:20,\n        }}\n      >\n      {props => \n        <Sprite\n          zIndex={2}\n          width={200}\n          height={200}\n          anchor={0.5}\n          alpha={position.alpha}\n          tint={position.tint}\n          image={loader.resources[`${attackerName}-fight-typeA`].data}\n          {...props}\n        />}\n      </Spring>\n    default:\n      return <Spring\n        from={{ x:550, y:50 }}\n        to={{ x:position.x, y:position.y }}\n        config={{ \n          mass:1,\n          tension: position.tension,\n          friction:20,\n        }}\n      >\n      {props => \n        <Sprite\n          zIndex={2}\n          width={200}\n          height={200}\n          anchor={0.5}\n          image={loader.resources[`${attackerName}-fight-typeB`].data}\n          {...props}\n        />}\n      </Spring>\n    };\n};","import React from \"react\";\n// part\nimport { SkillShowProtoType } from \"../../SkillShowProtoType\";\nimport { steps } from \"./steps\";\nimport { ShowType } from \"./ShowType\";\n\nexport const TanjirouSkill = ( props )=>{\n  return <SkillShowProtoType \n    {...props}\n    defXPostion={550}\n    steps={steps}\n    ShowType={ShowType}\n  />\n};","import { TweenMax } from 'gsap';\nimport numeral from \"numeral\";\nexport const steps = ({\n  skillName='',\n  isHit=false,\n  targetLife=0,\n  attackerSp=0,\n  resultLife=0,\n  resultSp=0,\n  BGstatus={},\n  setBGstatus=null,\n  setAnimeIsDone=null,\n  setTargetHp=null,\n  setAttackerSp=null,\n  setLinesStatus=null,\n  setPosition=null,\n}) => {\n  // 技能動畫:\n  switch (skillName) {\n    case '防禦':\n      setPosition(prev=>{return{ ...prev, x:200, y:50, tension:100 }});\n      const defStart = ()=>{\n        if(isHit){\n          return isHitStep();\n        }else return isDodge();\n      };\n      const isHitStep = ()=> {\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:250, y:50, mass:2, \n            friction:5, tension:1000, tint:0xd00000}});\n          // callback\n          if(resultLife<=0){\n            return isDead({ type:'dead' });\n          }else return next({ type:'def' });\n        },1200);\n        return timeout;\n      };\n      const isDodge = ()=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:250, y:0 }});\n          // callback\n          next({ type:'dodge' });\n        },1200);\n        return timeout;\n      };\n      const isDead = ({ type })=> {\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:200, y:50, \n            friction:2, tint:0x03071e\n          }});\n          setLinesStatus(prev=>{ \n            return { \n              status: type,\n              character: prev.character===\"USER\" ? \"ENEMY\" : \"USER\"\n            };\n          });\n          // callback\n          isDeadStep2();\n        },5000);\n        return timeout;\n      };\n      const isDeadStep2 = ()=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return { ...prev, alpha:0 }});\n          // callback\n          end();\n        },3000);\n        return timeout;\n      };\n      const next = ({ type })=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:200, y:50, mass:1, \n            friction:20, tension:170, tint:0xffffff}});\n          setLinesStatus(prev=>{ \n            return { \n              status: type,\n              character: prev.character===\"USER\" ? \"ENEMY\" : \"USER\"\n            };\n          });\n          // callback\n          end();\n        },5000);\n        return timeout;\n      };\n      const end = ()=> {\n        const timeout = setTimeout(() => {\n          // callback\n          setAnimeIsDone(true);\n        },3000);\n        return timeout;\n      };\n      return defStart();\n    // ATK\n    default:\n      setBGstatus({ type:'STANDBY', defence:false });\n      setPosition(prev=>{return{ ...prev, x:550,y:50,tension:100 }});\n      const atkStart = ()=>{\n        setPosition(prev=>{return{ ...prev, x:250, y:50, tension:100 }});\n        // callback\n        return step1();\n      };\n      const step1 = ()=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:0, y:50, tension:100 }});\n          setBGstatus({ type:'SKILL', defence:false });\n          // callback\n          step2();\n        },3000);\n        return timeout;\n      };\n      const step2 = ()=>{\n        const run =  { number: attackerSp };\n        TweenMax.to(run, 0.8, {\n          number: resultSp,\n          onUpdate: () => {\n            setAttackerSp(numeral(run.number).format(\"0\"))\n          },\n        });\n        setLinesStatus(prev=>{ return { ...prev, status:'attack' }});\n        const timeout = setTimeout(() => {\n          setBGstatus({ type:'STOP', defence:true });\n          // callback\n          step3();\n        },3000);\n        return timeout;\n      };\n      const step3 = ()=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:-250, y:50, tension:1000 }});\n          // callback\n          step4();\n        },1000);\n        return timeout;\n      };\n      const step4 = ()=>{\n        const run = { number: targetLife };\n        if(isHit) {\n          TweenMax.to(run, 0.8, {\n            number: resultLife<0 ? 0 : resultLife,\n            onUpdate: () => {\n              setTargetHp(numeral(run.number).format(\"0\"))\n            },\n          });\n        };\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:550, y:50, tension:50 }});\n        },3000);\n        return timeout;\n      };\n      return atkStart();\n  }\n};","import React from \"react\";\nimport { loader } from '../../../components/DataLoader';\nimport { Spring } from 'react-spring/renderprops';\nimport { Sprite } from '@inlet/react-pixi/animated';\n\nexport const ShowType = ({\n  skillName,\n  attackerName,\n  position,\n}) =>{\n  switch (skillName) {\n    case `防禦`:\n      return <Spring\n        from={{ x:650, y:50 }}\n        to={{ x:position.x, y:position.y }}\n        config={{ \n          mass:1,\n          tension: position.tension,\n          friction:20,\n        }}\n      >\n      {props => \n        <Sprite\n          zIndex={2}\n          width={200}\n          height={200}\n          anchor={0.5}\n          alpha={position.alpha}\n          tint={position.tint}\n          image={loader.resources[`${attackerName}-fight`].data}\n          {...props}\n        />}\n      </Spring>\n    default:\n      return <Spring\n        from={{ x:550, y:50 }}\n        to={{ x:position.x, y:position.y }}\n        config={{ \n          mass:1,\n          tension: position.tension,\n          friction:20,\n        }}\n      >\n      {props => \n        <Sprite\n          zIndex={3}\n          width={200}\n          height={200}\n          anchor={0.5}\n          image={loader.resources[`${attackerName}-fight`].data}\n          {...props}\n        />}\n      </Spring>\n    };\n};","import React from \"react\";\n// part\nimport { SkillShowProtoType } from \"../../SkillShowProtoType\";\nimport { steps } from \"./steps\";\nimport { ShowType } from \"./ShowType\";\n\nexport const NezukoSkill = ( props )=>{\n  return <SkillShowProtoType \n    {...props}\n    defXPostion={550}\n    steps={steps}\n    ShowType={ShowType}\n  />\n};","import React from \"react\";\nimport { TanjirouSkill } from \"./TanjirouSkill/Index\";\nimport { NezukoSkill } from \"./Nezuko/Index\";\nexport const ChessSkillShow = ({\n  attacker={},\n  skill={},\n  BGstatus,\n  isHit=false,\n  targetLife=0,\n  attackerSp=0,\n  resultLife=0,\n  resultSp=0,\n  setBGstatus,\n  setAnimeIsDone,\n  setTargetHp,\n  setAttackerSp,\n  setLinesStatus\n})=>{\n  const defaultprops = {\n    skillName: skill.name,\n    attackerName: attacker.name,\n    isHit: isHit,\n    targetLife: targetLife,\n    attackerSp: attackerSp,\n    resultLife: resultLife,\n    resultSp: resultSp,\n    BGstatus: BGstatus,\n    setBGstatus: setBGstatus,\n    setAnimeIsDone: setAnimeIsDone,\n    setTargetHp: setTargetHp,\n    setAttackerSp: setAttackerSp,\n    setLinesStatus: setLinesStatus\n  }\n  switch (attacker.name) {\n    case `Tanjirou`:\n      return <TanjirouSkill {...defaultprops}/>\n    case `Nezuko`:\n      return <NezukoSkill {...defaultprops}/>\n    default:\n      return;\n  };\n};\n\n","import { TweenMax } from 'gsap';\nimport numeral from \"numeral\";\nexport const steps = ({\n  skillName='',\n  isHit=false,\n  targetLife=0,\n  attackerSp=0,\n  resultLife=0,\n  resultSp=0,\n  BGstatus={},\n  setBGstatus=null,\n  setAnimeIsDone=null,\n  setTargetHp=null,\n  setAttackerSp=null,\n  setLinesStatus=null,\n  setPosition=null,\n}) => {\n  switch (skillName) {\n    case '防禦':\n      setPosition(prev=>{return{ ...prev, x:-200, tension:150 }});\n      const defStart = ()=>{\n        if(isHit){\n          return isHitStep();\n        }else return isDodge();\n      };\n      const isHitStep = ()=> {\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:-235, y:20, mass:2, \n            friction:5, tension:1000, tint:0xd00000}});\n          // callback\n          if(resultLife<=0){\n            return isDead({ type:'dead' });\n          }else return next({ type:'def' });\n        },1200);\n        return timeout;\n      }\n      const isDodge = ()=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:-235, y:-10 }});\n          // callback\n          next({ type:'dodge' });\n        },1200);\n        return timeout;\n      };\n      const isDead = ({ type })=> {\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:-200, y:10, \n            friction:2, tint:0x03071e\n          }});\n          setLinesStatus(prev=>{ \n            return { \n              status: type,\n              character: prev.character===\"USER\" ? \"ENEMY\" : \"USER\"\n            };\n          });\n          // callback\n          isDeadStep2();\n        },5000);\n        return timeout;\n      };\n      const isDeadStep2 = ()=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return { ...prev, alpha:0 }});\n          // callback\n          end();\n        },3000);\n        return timeout;\n      };\n      const next = ({ type })=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:-200, y:10, mass:1, \n            friction:20, tension:170, tint:0xffffff}});\n          setLinesStatus(prev=>{ \n            return { \n              status: type,\n              character: prev.character===\"USER\" ? \"ENEMY\" : \"USER\"\n            };\n          });\n          // callback\n          end();\n        },5000);\n        return timeout;\n      };\n      const end = ()=> {\n        const timeout = setTimeout(() => {\n          // callback\n          setAnimeIsDone(true);\n        },3000);\n        return timeout;\n      };\n      return defStart();\n    // ATK\n    default:\n      setBGstatus({ type:'ENEMYSTANDBY', defence:false });\n      setPosition(prev=>{return{ ...prev, x:-600, tension:100 }});\n      const atkStart = ()=>{\n        setPosition(prev=>{\n          return{ ...prev, x:-200, tension:100 }});\n        // callback\n        return step1();\n      };\n      const step1 = ()=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:0, tension:100 }});\n          setBGstatus({ type:'ENEMYSKILL', defence:false });\n          // callback\n          step2();\n        },3000);\n        return timeout;\n      };\n      const step2 = ()=>{\n        const run =  { number: attackerSp };\n        TweenMax.to(run, 0.8, {\n          number: resultSp,\n          onUpdate: () => {\n            setAttackerSp(numeral(run.number).format(\"0\"))\n          },\n        });\n        setLinesStatus(prev=>{ return { ...prev, status:'attack' }});\n        const timeout = setTimeout(() => {\n          setBGstatus({ type:'STOP', defence:true });\n          // callback\n          step3();\n        },3000);\n        return timeout;\n      };\n      const step3 = ()=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:175, tension:1000 }});\n          // callback\n          step4();\n        },1000);\n        return timeout;\n      };\n      const step4 = ()=>{\n        const run = { number: targetLife };\n        if(isHit) {\n          TweenMax.to(run, 0.8, {\n            number: resultLife<0 ? 0 : resultLife,\n            onUpdate: () => {\n              setTargetHp(numeral(run.number).format(\"0\"))\n            },\n          });\n        };\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:-600, tension:50 }});\n        },3000);\n        return timeout;\n      };\n      return atkStart();\n  }\n};","import React from \"react\";\nimport { loader } from '../../../components/DataLoader';\nimport { Spring } from 'react-spring/renderprops';\nimport { Sprite } from '@inlet/react-pixi/animated';\n\nexport const ShowType = ({\n  skillName,\n  attackerName,\n  position,\n}) =>{\n  switch (skillName) {\n    case '防禦':\n      return <Spring\n        from={{ x:-600, y:10 }}\n        to={{ x:position.x, y:position.y }}\n        config={{ \n          mass: position.mass,\n          tension: position.tension,\n          friction: position.friction,\n        }}\n      >\n      {props => \n        <Sprite\n          zIndex={2}\n          width={300}\n          height={300}\n          anchor={0.5}\n          alpha={position.alpha}\n          tint={position.tint}\n          image={loader.resources[`${attackerName}-fight`].data}\n          {...props}\n        />}\n      </Spring>\n    default:\n      return <Spring\n        from={{ x:-600, y:50 }}\n        to={{ x:position.x, y:position.y }}\n        config={{ \n          mass:1,\n          tension: position.tension,\n          friction:20,\n        }}\n      >\n      {props => \n        <Sprite\n          zIndex={3}\n          width={300}\n          height={300}\n          anchor={0.5}\n          image={loader.resources[`${attackerName}-fight`].data}\n          {...props}\n        />}\n      </Spring>\n  }\n};","import React from \"react\";\n// part\nimport { SkillShowProtoType } from \"../../SkillShowProtoType\";\nimport { steps } from \"./steps\";\nimport { ShowType } from \"./ShowType\";\n\nexport const TeoniSkill = ( props )=>{\n  return <SkillShowProtoType \n    {...props}\n    defXPostion={-600}\n    steps={steps}\n    ShowType={ShowType}\n  />\n};\n","import React from \"react\";\nimport { TeoniSkill } from \"./TeoniSkill/Index\";\nexport const EnemyChessSkillShow = ({\n  attacker={},\n  skill={},\n  BGstatus,\n  isHit=false,\n  targetLife=0,\n  attackerSp=0,\n  resultLife=0,\n  resultSp=0,\n  setBGstatus,\n  setAnimeIsDone,\n  setTargetHp,\n  setAttackerSp,\n  setLinesStatus\n})=>{\n  const defaultprops = {\n    skillName: skill.name,\n    attackerName: attacker.name,\n    isHit: isHit,\n    targetLife: targetLife,\n    attackerSp: attackerSp,\n    resultLife: resultLife,\n    resultSp: resultSp,\n    BGstatus: BGstatus,\n    setBGstatus: setBGstatus,\n    setAnimeIsDone: setAnimeIsDone,\n    setTargetHp: setTargetHp,\n    setAttackerSp: setAttackerSp,\n    setLinesStatus: setLinesStatus\n  }\n  switch (attacker.name) {\n    case `Teoni`:\n      return <TeoniSkill {...defaultprops}/>\n    default:\n      return;\n  };\n};\n","import React,{ useState, useEffect } from 'react';\nimport { Container, Graphics, Sprite } from '@inlet/react-pixi/animated';\nimport { chessDead, chessRoundRest } from \"../../../reducer/chess\";\nimport { enemyChessDead } from \"../../../reducer/enemyChess\";\nimport { loader } from '../../DataLoader';\n// part\nimport { AnimeShowBG } from \"./AinmeShowBG\";\nimport { TopBar } from \"./TopBar\";\nimport { BottomBar } from \"./BottomBar\";\n// skill\nimport { ChessSkillShow } from \"../../../constants/ChessSkillShow/Index\";\nimport { EnemyChessSkillShow } from \"../../../constants/EnemyChessSkillShow/Index\";\n\nexport const BattleAnimeShow = ({\n  props\n}) =>{\n  const { stageStatus, animeShow, chess, enemyChess, \n    setMoveStep, setAnimeShow, setUsualTip, dispatch } = props;\n  const { target, attacker } = animeShow;\n  // CreateContent\n  const CreateContent = ()=>{\n    const [ BGstatus, setBGstatus ] = useState({ \n      type:'STANDBY',\n      defence: false\n    });\n    const [ BGprop, setBGpops ] = useState({ toX:400, duration: 20000 });\n    const [ SkBGprop, setSkBGpops ] = useState({ toX:400, duration: 500 });\n    const [ targetHp, setTargetHp ] = useState(target.prevLife);\n    const [ attackerSp, setAttackerSp ] = useState(attacker.prevSP);\n    const [ animeIsDone, setAnimeIsDone ] = useState(false);\n    const [ linesStatus, setLinesStatus ] = useState({ \n      character: animeShow.type,\n      status:'default'\n    });\n    const fetchChessType = ( type='' )=>{\n      switch (type) {\n        case 'CHESS':\n          if(animeShow.type===\"USER\"){\n            return chess[typeof(animeShow.attacker.key)!=='number'?0:animeShow.attacker.key];\n          }else return chess[typeof(animeShow.target.key)!=='number'?0:animeShow.target.key];\n        case 'ENEMYCHESS':\n          if(animeShow.type===\"USER\"){\n            return enemyChess[typeof(animeShow.target.key)!=='number'?0:animeShow.target.key];\n          }else return enemyChess[typeof(animeShow.attacker.key)!=='number'?0:animeShow.attacker.key];\n        default:\n          break;\n      }; \n    };\n    //  關閉動畫判斷\n    useEffect(()=>{\n      if(!animeIsDone){ return };\n      setAnimeShow({\n        status:false,\n        type:'',\n        isHit:false,\n        attacker:{ key:'', skill:{}, prevSP:0 },\n        target:{ key:'', isHit:false, prevLife:0 }\n      });\n      // result check line\n      if(animeShow.type===\"USER\" &&\n        enemyChess[target.key].hp <= 0\n      ){\n        dispatch(enemyChessDead({ key:target.key }));\n        setUsualTip({\n          title:`已擊敗 ${enemyChess[target.key].cn}!`,\n          status:true,\n        });\n      }else if(animeShow.type===\"ENEMY\" &&\n        chess[target.key].hp <= 0\n      ){\n        dispatch(chessDead({ key:target.key }));\n        setUsualTip({\n          title:`${chess[target.key].cn} 戰敗`,\n          status:true,\n        });\n      }else {\n        setMoveStep(true);\n      };\n      if(animeShow.type===\"ENEMY\"){\n        dispatch(chessRoundRest());\n      };\n    },[ animeIsDone ]);\n    return <Container sortableChildren={true}>\n      <AnimeShowBG\n        props={{stageStatus, BGstatus, BGprop, SkBGprop, setBGpops, setSkBGpops}}\n      />\n      <TopBar\n        right={fetchChessType('CHESS')}\n        left={fetchChessType('ENEMYCHESS')}\n        showType={animeShow.type}\n        targetHp={targetHp}\n        attackerSp={attackerSp}\n      />\n      <ChessSkillShow\n        attacker={fetchChessType('CHESS')}\n        skill={\n          animeShow.type===\"USER\"?\n          animeShow.attacker.skill:\n          { name:'防禦' }\n        }\n        BGstatus={BGstatus}\n        isHit={animeShow.isHit}\n        targetLife={target.prevLife}\n        attackerSp={attacker.prevSP}\n        resultLife={\n          target.prevLife -\n          animeShow.attacker.skill.atk \n        }\n        resultSp={\n          attacker.prevSP -\n          animeShow.attacker.skill.sp\n        }\n        setBGstatus={setBGstatus}\n        setAnimeIsDone={setAnimeIsDone}\n        setTargetHp={setTargetHp}\n        setAttackerSp={setAttackerSp}\n        setLinesStatus={setLinesStatus}\n      />\n      <EnemyChessSkillShow\n        attacker={fetchChessType('ENEMYCHESS')}\n        skill={\n          animeShow.type===\"USER\"?\n          { name:'防禦' }:\n          animeShow.attacker.skill\n        }\n        BGstatus={BGstatus}\n        isHit={animeShow.isHit}\n        targetLife={target.prevLife}\n        attackerSp={attacker.prevSP}\n        resultLife={\n          target.prevLife -\n          animeShow.attacker.skill.atk \n        }\n        resultSp={\n          attacker.prevSP -\n          animeShow.attacker.skill.sp\n        }\n        setBGstatus={setBGstatus}\n        setAnimeIsDone={setAnimeIsDone}\n        setTargetHp={setTargetHp}\n        setAttackerSp={setAttackerSp}\n        setLinesStatus={setLinesStatus}\n      />\n      <BottomBar\n        right={fetchChessType('CHESS')}\n        left={fetchChessType('ENEMYCHESS')}\n        linesStatus={linesStatus}\n      />\n      <Sprite\n        zIndex={99}\n        interactive={true}\n        buttonMode={true}\n        width={75}\n        height={35}\n        x={310}\n        y={240}\n        image={loader.resources[`fightOff`].data}\n        pointertap={()=>{\n          setAnimeShow({\n            status:false,\n            type:'',\n            isHit:false,\n            attacker:{ key:'', skill:{}, prevSP:0 },\n            target:{ key:'', isHit:false, prevLife:0 }\n          });\n          // result check line\n          if(animeShow.type===\"USER\" &&\n            enemyChess[target.key].hp <= 0\n          ){\n            dispatch(enemyChessDead({ key:target.key }));\n            setUsualTip({\n              title:`已擊敗 ${enemyChess[target.key].cn}!`,\n              status:true,\n            });\n          }else if(animeShow.type===\"ENEMY\" &&\n            chess[target.key].hp <= 0\n          ){\n            dispatch(chessDead({ key:target.key }));\n            setUsualTip({\n              title:`${chess[target.key].cn} 戰敗`,\n              status:true,\n            });\n          }else {\n            setMoveStep(true);\n          };\n          if(animeShow.type===\"ENEMY\"){\n            dispatch(chessRoundRest());\n          };\n          const clearAllTimeouts = ()=>{\n            let id = window.setTimeout(null,0);\n            while (id--) { window.clearTimeout(id); };\n          };\n          clearAllTimeouts();\n        }}\n      />\n    </Container>\n  };\n  return <Graphics\n    x={400}\n    y={300}\n    zIndex={99}\n    draw={g=> {\n      g.beginFill(`0x011627`);\n      g.drawRoundedRect(-400,-300,800,600,0);\n      g.endFill();\n    }}\n  >\n    <CreateContent/>\n  </Graphics>\n};","import React from 'react';\nimport { Sprite, Graphics, Text } from '@inlet/react-pixi/animated';\nimport { loader } from '../DataLoader';\nimport * as PIXI from \"pixi.js\";\nimport { stageRule } from \"../../constants/stageRule\";\nexport const OtherTab = ({ props })=> {\n  const {\n    stageStatus='',\n    roundNum=Number,\n    setMoveStep,\n    setOtherTab,\n    setTipStatus,\n    setCurrentChess\n  } = props;\n  return <Graphics\n    x={400}\n    y={300}\n    draw={g=> {\n      g.lineStyle(1,`0xffffff`,1);\n      g.beginFill(`0x22223b`);\n      g.drawRoundedRect(-200,-150,400,300,8);\n      g.endFill();\n    }}\n  >\n    <Sprite\n      interactive={true}\n      buttonMode={true}\n      width={25}\n      height={25}\n      anchor={0.5}\n      x={175}\n      y={-125}\n      image={loader.resources[`closeIcon`].data}\n      pointertap={()=>{\n        setMoveStep(true);\n        setOtherTab(false);\n        setTipStatus(prev=>{\n          return {...prev, status:false }\n        });\n      }}\n    />\n    <Sprite\n      interactive={true}\n      buttonMode={true}\n      width={75}\n      height={35}\n      x={105}\n      y={90}\n      image={loader.resources[`endBtn`].data}\n      pointertap={()=>{\n        setCurrentChess({\n          key:0,\n          type:\"ENDROUND\"\n        });\n        setTipStatus(prev=>{\n          return {...prev,\n            title:`結束回合?`, \n            status:true\n          }\n        });\n      }}\n    />\n    <Text\n      text={'作戰目的'}\n      x={-170}\n      y={-125}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 18,\n        fill:['#ffffff', '#00ff99'],\n      })}\n    />\n    <Text\n      text={stageRule.getIn([stageStatus,'ruleText','win'])}\n      x={-150}\n      y={-90}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 16,\n        fill:['#ffffff', '#ffffff'],\n      })}\n    />\n    <Text\n      text={'戰敗條件'}\n      x={-170}\n      y={-40}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 18,\n        fill:['#ffffff', '#ee6c4d'],\n      })}\n    />\n    <Text\n      text={stageRule.getIn([stageStatus,'ruleText','lose'])}\n      x={-150}\n      y={-5}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 16,\n        fill:['#ffffff', '#ffffff'],\n      })}\n    />\n    <Text\n      text={'回合數'}\n      x={-170}\n      y={45}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 18,\n        fill:['#ffffff', '#8d99ae'],\n      })}\n    />\n    <Text\n      text={`第 ${roundNum} 回`}\n      x={-150}\n      y={80}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 16,\n        fill:['#ffffff', '#ffffff'],\n      })}\n    />\n  </Graphics>\n};\n\n","import React from 'react';\nimport { Container, Sprite, Text } from '@inlet/react-pixi/animated';\nimport { loader } from '../../DataLoader';\nimport * as PIXI from \"pixi.js\";\nexport const EnemyList = ({ \n  oder=0,\n  enemyRandomSkill=0,\n  enemyList=[]\n})=>{\n  const skill = enemyList[oder].skill;\n  return <Container sortableChildren={true}>\n    <Sprite\n      width={65}\n      height={65}\n      anchor={0.5}\n      x={175}\n      y={-75}\n      image={loader.resources[`${enemyList[oder].name}-head-default`].data}\n    />\n    <Text \n      text={`${enemyList[oder].cn} / 技能`}\n      anchor={{x:0.5}}\n      x={175} y={-30}\n      style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 18,\n        fill:'#ffffff',\n      })}/>\n    <Text \n      text={`${skill[enemyRandomSkill].name}`}\n      anchor={{x:0.5}}\n      x={175} y={10}\n      style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 20,\n        fill:['#f15bb5','#e0aaff'],\n      })}/>\n    <Text \n      text={`ATK / ${skill[enemyRandomSkill].atk}`}\n      anchor={{x:0.5}}\n      x={175} y={40}\n      style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 18,\n        fill:['#f15bb5','#e0aaff'],\n      })}/>\n  </Container>\n};","import React from 'react';\nimport { Container, Graphics, Sprite } from '@inlet/react-pixi/animated';\nimport { loader } from '../../DataLoader';\nexport const ChessList = ({\n  chessList,\n  defChess,\n  setDefChess\n})=>{\n  return <Container sortableChildren={true}>\n    <Graphics\n      x={-250}\n      y={-180}\n      zIndex={1}\n      draw={g=> {\n        g.lineStyle(1,`0xffffff`,1);\n        g.beginFill(`0x0f0f1b`);\n        g.drawRoundedRect(0,0,100,360,8);\n        g.endFill();\n      }}\n    />\n    {chessList.map((v,k)=>{\n      const distance = k * 85;\n      return <React.Fragment key={k}>\n        <Sprite\n          interactive={true}\n          buttonMode={true}\n          width={65}\n          height={65}\n          anchor={0.5}\n          zIndex={2}\n          x={-200}\n          y={-125 + distance}\n          image={loader.resources[`${v.name}-head-default`].data}\n          pointertap={()=>setDefChess(k)}\n        />\n        {k===defChess&&<Graphics\n          anchor={0.5}\n          x={-200}\n          y={-125 + distance}\n          zIndex={1}\n          draw={g=> {\n            g.beginFill(`0x7b2cbf`);\n            g.drawRoundedRect(-38,-38,76,76,5);\n            g.endFill();\n          }}\n        />}\n      </React.Fragment>\n    })}\n  </Container>\n};","import React from 'react';\nimport { Container, Graphics, Text } from '@inlet/react-pixi/animated';\nimport * as PIXI from \"pixi.js\";\n\nexport const Information = ({\n  defChess, chessList, atkEnemy\n})=>{\n  const dodge = chessList[defChess].dodge - atkEnemy.hitfix>=0 ? chessList[defChess].dodge - atkEnemy.hitfix : 0;\n  return <Container sortableChildren={true}>\n    <Graphics\n      x={-125} y={-150}\n    >\n      <Text \n        text={`選擇防禦：${chessList[defChess].cn}`}\n        anchor={{x:0}}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 18,\n          fill:'#ffffff',\n        })}/>\n      <Text \n        text={`HP：${chessList[defChess].hp}`}\n        anchor={{x:0}}\n        y={30}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 18,\n          fill:'#ff6b6b',\n        })}/>\n      <Text \n        text={`迴避率：${dodge}%`}\n        anchor={{x:0}}\n        y={60}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 18,\n          fill:['#ffffff', '#4cc9f0'],\n        })}/>\n    </Graphics>\n  </Container>\n}","import React,{ useState } from 'react';\nimport { Graphics, Sprite } from '@inlet/react-pixi/animated';\nimport { loader } from '../../DataLoader';\nimport { ProbabilityCount } from \"../../Common/ProbabilityCount\";\nimport { chessDefense } from \"../../../reducer/chess\";\nimport { enemyChessAttackResult } from \"../../../reducer/enemyChess\";\n// common part\nimport { EnemyList } from \"./EnemyList\";\nimport { ChessList } from \"./ChessList\";\nimport { Information } from \"./Information\";\nexport const EnemyRoundTab = ({ props })=> {\n  const [ defChess, setDefChess ] = useState(0);\n  const { enemyRoundTab, chess, enemyChess,\n    setEnemyRoundTab, setAnimeShow, setCurrentChess, dispatch } = props;\n  const chessList = chess.filter(v=>v.debut);\n  const enemyList = enemyChess.filter(v=>v.debut);\n  const enemySkill = enemyList[enemyRoundTab.oder].skill;\n  const enemySp = enemyList[enemyRoundTab.oder].sp;\n  const getAtkSkill = ()=>{\n    const totalSize = enemySkill.length-1;\n    const random = Math.round(Math.random()*totalSize);\n    const checkSp = (enemySp===0)||(enemySkill[random].sp>enemySp);\n    return checkSp ? 0 : random;\n  };\n  const enemyRandomSkill = getAtkSkill();\n  const getCurrentChessKey = ({ chess, debut, key })=>{\n    let getKey;\n    chess.find((v,k)=>{\n      if(v.id===debut[key].id){\n        return getKey = k;\n      }else return null;\n    });\n    return getKey;\n  };\n  return <Graphics\n    x={400}\n    y={300}\n    zIndex={99}\n    draw={g=> {\n      g.lineStyle(1,`0xffffff`,1);\n      g.beginFill(`0x22223b`);\n      g.drawRoundedRect(-300,-200,600,400,8);\n      g.endFill();\n    }}\n  >\n    <ChessList\n      chessList={chessList}\n      defChess={defChess}\n      setDefChess={setDefChess}\n    />\n    <Information\n      defChess={defChess}\n      chessList={chessList}\n      atkEnemy={enemyList[enemyRoundTab.oder].skill[enemyRandomSkill]}\n    />\n    <EnemyList\n      oder={enemyRoundTab.oder}\n      enemyRandomSkill={enemyRandomSkill}\n      enemyList={enemyList}\n    />\n    <Sprite\n      interactive={true}\n      buttonMode={true}\n      width={90}\n      height={42}\n      anchor={0.5}\n      zIndex={2}\n      x={230}\n      y={155}\n      image={loader.resources[`fightDef`].data}\n      pointertap={()=>{\n        const isHit = ProbabilityCount(\n          enemyList[enemyRoundTab.oder].skill[enemyRandomSkill].hitfix,\n          chessList[defChess].dodge\n        );\n        setCurrentChess(prev=>{return{...prev,type:\"ATTACK\"}});\n        dispatch(enemyChessAttackResult({\n          key: getCurrentChessKey({\n            chess: enemyChess,\n            debut: enemyList,\n            key: enemyRoundTab.oder\n          }),\n          lessSp:enemyList[enemyRoundTab.oder].skill[enemyRandomSkill].sp\n        }));\n        if(isHit){\n          dispatch(chessDefense({\n            key: getCurrentChessKey({\n              chess: chess,\n              debut: chessList,\n              key: defChess\n            }),\n            damage: enemyList[enemyRoundTab.oder].skill[enemyRandomSkill].atk\n          }));\n        };\n        setEnemyRoundTab(prev=>{return{...prev, status:false}});\n        setAnimeShow({\n          status:true,\n          type:'ENEMY',\n          isHit: isHit,\n          attacker:{ \n            key: getCurrentChessKey({\n              chess: enemyChess,\n              debut: enemyList,\n              key: enemyRoundTab.oder\n            }),\n            skill:enemyList[enemyRoundTab.oder].skill[enemyRandomSkill],\n            prevSP:enemyList[enemyRoundTab.oder].sp\n          },\n          target:{ \n            key: getCurrentChessKey({\n              chess: chess,\n              debut: chessList,\n              key: defChess\n            }),\n            isHit:isHit,\n            prevLife:chessList[defChess].hp\n          }\n        });\n      }}\n    />\n  </Graphics>\n};","import React,{ useState } from 'react';\nimport { fromJS } from 'immutable';\nimport { Graphics, Text } from '@inlet/react-pixi/animated';\nimport { GetMove, GetAttack } from '../../reducer/map';\nimport { chessSelected, chessCheckStatus } from \"../../reducer/chess\";\nimport * as PIXI from \"pixi.js\";\n\nexport const ChessUIBoard = ({\n  ChessData,\n  ChessVal,\n  ChessKey,\n  EnemyChessData,\n  positionX,\n  positionY,\n  setCurrentChess,\n  setMoveStep,\n  dispatch\n})=> {\n  const specialPosition = {\n    x: 720,\n    y: 490\n  };\n  const forMoveArray = [];\n  const forAttackArray = [];\n  const [textInforArray, setTextInforArray] = useState(fromJS([{\n      id:1, \n      title:\"移動\",\n      textColor:['#ffffff', '#ffffff']\n    },{ \n      id:2,\n      title:\"攻擊\",\n      textColor:['#ffffff', '#ffffff']\n    },{ \n      id:3,\n      title:\"狀態\",\n      textColor:['#ffffff', '#ffffff']\n    },{ \n      id:4,\n      title:\"返回\",\n      textColor:['#ffffff', '#ffffff']\n  }]));\n  ChessData.map((v)=>{\n    return (\n      forMoveArray.push({ x:v.x, y:v.y }),\n      forAttackArray.push({ x:v.x, y:v.y })\n    );\n  });\n  EnemyChessData.map((v)=>{\n    return forMoveArray.push({ x:v.x, y:v.y });\n  });\n  const compareAttack = (\n    chessX,\n    chessY,\n    chessAtk\n  )=>{\n    let isAttack = false;\n    const isDebutEnemy = EnemyChessData.filter(v=>v.debut);\n    const limitPosition = { x:19, y:14 };\n    const positionRange = [];\n    for(let i=0; i < chessAtk; i++){\n      const getaddX = (chessX+(i+1)>=limitPosition.x) ? limitPosition.x : chessX+(i+1);\n      const getaddY = (chessY+(i+1)>=limitPosition.y) ? limitPosition.y : chessY+(i+1);\n      const getlessX = (chessX-(i+1)<=0) ? 0 : chessX-(i+1);\n      const getlessY = (chessY-(i+1)<=0) ? 0 : chessY-(i+1);\n      positionRange.push(\n        { x:getaddX, y:chessY },\n        { x:getlessX, y:chessY },\n        { x:chessX, y:getaddY },\n        { x:chessX, y:getlessY }\n      );\n    };\n    isDebutEnemy.map(val=>{\n      return positionRange.map(v=>{\n        if(val.x===v.x&&val.y===v.y){\n          return isAttack = true;\n        }else return null\n      })\n    });\n    return isAttack;\n  };\n  const compareUsed = (\n    chessX,\n    chessY,\n    checkType\n  )=>{\n    let isUnused = false;\n    const isDebutChess = ChessData.filter(v=>v.debut);\n    isDebutChess.map(val=>{\n      if(val.x===chessX&&val.y===chessY){\n        switch (checkType) {\n          case 'MOVE':\n          case 'ATTACK':\n            const moved = val.roundMove>0;\n            return isUnused = moved;\n          default:\n            return true;\n        };\n      }else return null;\n    });\n    return isUnused;\n  };\n  const CreateText = ({ noop })=>{\n    const isAttack = compareAttack(ChessVal.x,ChessVal.y,ChessVal.attack);\n    return textInforArray.map((val,key)=>{\n      const fetchInteractive = ()=>{\n        switch (val.get('id')) {\n          case 1:\n            return compareUsed(ChessVal.x,ChessVal.y,'MOVE');\n          case 2:\n            const result = isAttack && compareUsed(ChessVal.x,ChessVal.y,'ATTACK');\n            return result;\n          default:\n            return true;\n        };\n      }\n      return <Text\n        key={key}\n        interactive={fetchInteractive()}\n        buttonMode={true}\n        text={val.get('title')}\n        x={10}\n        y={5+(25*key)}\n        style={new PIXI.TextStyle({\n          fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 20,\n          fill:fetchInteractive()?val.get('textColor').toJS():'#8d99ae',\n        })}\n        pointerover={()=>{\n          setTextInforArray(prev=>\n            prev.setIn([key,'textColor',1],'#00ff99')\n          );\n        }}\n        pointerout={()=>{\n          setTextInforArray(prev=>\n            prev.setIn([key,'textColor',1],'#ffffff')\n          );\n        }}\n        pointertap={(e)=>{\n          switch (val.get('id')) {\n            case 1:\n              setCurrentChess({ \n                key:ChessKey,\n                type:\"MOVE\"\n              });\n              dispatch(GetMove({\n                position:{ \n                  x:ChessVal.x, \n                  y:ChessVal.y,\n                },\n                step:ChessVal.step,\n                changeColor:'0x06d6a0',\n                currentChessPositions: forMoveArray\n              }));\n              dispatch(chessSelected({\n                key:ChessKey\n              }));\n              break;\n            case 2:\n              setCurrentChess({ \n                key:ChessKey,\n                type:\"ATTACK\"\n              });\n              dispatch(chessSelected({\n                key:ChessKey\n              }));\n              dispatch(GetAttack({\n                position:{ \n                  x:ChessVal.x, \n                  y:ChessVal.y,\n                },\n                step:ChessVal.attack,\n                changeColor:'0x00bbf9',\n                currentChessPositions: forAttackArray\n              }));\n              break;\n            case 3:\n              setCurrentChess({ \n                key:ChessKey,\n                type:\"STATUS\"\n              });\n              dispatch(chessCheckStatus({\n                key:ChessKey\n              }));\n              dispatch(chessSelected({\n                key:ChessKey\n              }));\n              break;\n            case 4 :\n              setMoveStep(true);\n              dispatch(chessSelected({\n                key:ChessKey\n              }));\n              break;\n            default:\n              return console.log(e.target)\n          };\n        }}\n      />\n    }\n  )};\n  return <Graphics\n    x={positionX!==800?positionX:specialPosition.x}\n    y={(positionY!==560&&positionY!==520)?positionY:specialPosition.y}\n    zIndex={3}\n    draw={g=> {\n      g.lineStyle(1,`0xffffff`,1);\n      g.beginFill(`0x22223b`);\n      g.drawRoundedRect(0,0,60,110,8);\n      g.endFill();\n    }}\n  ><CreateText/></Graphics>\n};","import React from 'react';\nimport { Sprite, Graphics, Text } from '@inlet/react-pixi/animated';\nimport { loader } from '../DataLoader';\nimport * as PIXI from \"pixi.js\";\n\nexport const ChessStatus = ({\n  ChessData,\n  ChessKey,\n  CheckStatus,\n  setMoveStep,\n  dispatch\n})=> {\n  const CreateSkillList = ()=>{\n    return ChessData.skill.map((value,key)=>{\n        return <React.Fragment key={key}>\n        <Text\n          x={-40}\n          y={-70+(key*22)}\n          text={`${value.name}`}\n          style={new PIXI.TextStyle({\n            fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n            fontSize: 16,\n            fill:'#ffb700',\n          })}\n        />\n        <Text\n          x={-35+(value.name.length * 16)}\n          y={-70+(key*22)}\n          text={`ATK:${value.atk}(${value.sp}SP)`}\n          style={new PIXI.TextStyle({\n            fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n            fontSize: 14,\n            fill:'#ffffff',\n          })}\n        />\n      </React.Fragment>\n    });  \n  };\n  return <Graphics\n    x={400}\n    y={300}\n    zIndex={99}\n    draw={g=> {\n      g.lineStyle(1,`0xffffff`,1);\n      g.beginFill(`0x22223b`);\n      g.drawRoundedRect(-250,-150,500,300,8);\n      g.endFill();\n    }}\n  >\n    <Sprite\n      interactive={true}\n      buttonMode={true}\n      width={25}\n      height={25}\n      anchor={0.5}\n      x={220}\n      y={-120}\n      image={loader.resources[`closeIcon`].data}\n      pointertap={()=>{\n        setMoveStep(true);\n        dispatch(CheckStatus({\n          key:ChessKey\n        }));\n      }}\n    />\n    <Sprite\n      width={80}\n      height={80}\n      x={-200}\n      y={-90}\n      image={loader.resources[`${ChessData.name}-head-default`].data}\n    />\n    <Text\n      x={-200}\n      y={10}\n      text={ChessData.cn}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 16,\n        fill:'#ffffff',\n      })}\n    />\n    <Text\n      x={-200}\n      y={35}\n      text={`HP:`}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 16,\n        fill:'#ffffff',\n      })}\n    />\n    <Text\n      x={-170}\n      y={35}\n      text={`${ChessData.hp} / ${ChessData.fullValue.hp}`}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 16,\n        fill:'#ff6b6b',\n      })}\n    />\n    <Text\n      x={-200}\n      y={60}\n      text={`SP:`}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 16,\n        fill:'#ffffff',\n      })}\n    />\n    <Text\n      x={-170}\n      y={60}\n      text={`${ChessData.sp} / ${ChessData.fullValue.sp}`}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 16,\n        fill:'#0466c8',\n      })}\n    />\n    <Text\n      x={-50}\n      y={-95}\n      text={'招式'}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 16,\n        fill:'#ffffff',\n      })}\n    />\n    <CreateSkillList/>\n  </Graphics>\n};","import React from 'react';\nimport { Sprite } from '@inlet/react-pixi/animated';\nimport { loader } from '../DataLoader';\n// reducers\nimport { MoveSelect } from '../../reducer/map';\nimport { chessSelected, chessCheckStatus } from \"../../reducer/chess\";\n// other part\nimport { ChessUIBoard } from \"./ChessUIBoard\";\nimport { ChessStatus } from \"../Common/ChessStatus\";\n\nexport const Chess = ({\n  chessProps\n})=>{\n  const { \n    chess,\n    enemyChess,\n    moveStep=Boolean,\n    setMoveStep,\n    setCurrentChess,\n    dispatch\n  } = chessProps;\n  return chess.map((value,key)=>{\n    const roundMoveDone = value.roundMove===0;\n    return <React.Fragment key={key}>\n      {value.debut&&<Sprite\n        interactive={moveStep}\n        buttonMode={true}\n        width={40}\n        height={40}\n        x={value.x*40}\n        y={value.y*40}\n        zIndex={2}\n        tint={roundMoveDone?0x495057:0xffffff}\n        pointerover={()=>{\n          dispatch(MoveSelect({\n            position:{ \n              x:value.x, \n              y:value.y,\n            },\n            step:value.step,\n            changeColor:'0x06d6a0',\n            alphaVal:0.5\n          }));\n        }}\n        pointerout={()=>{\n          dispatch(MoveSelect({\n            position:{ \n              x:value.x, \n              y:value.y,\n            },\n            step:value.step,\n            changeColor:'0x383838',\n            alphaVal:0\n          }));\n        }}\n        pointertap={()=>{\n          setMoveStep(false);\n          dispatch(chessSelected({\n            key:key\n          }));\n          dispatch(MoveSelect({\n            position:{ \n              x:value.x, \n              y:value.y,\n            },\n            step:value.step,\n            changeColor:'0x383838',\n            alphaVal:0\n          }));\n        }}\n        image={loader.resources[`${value.name}-head-default`].data}\n      />}\n      {value.boardStatus&&<ChessUIBoard\n        ChessData={chess}\n        ChessVal={value}\n        ChessKey={key}\n        EnemyChessData={enemyChess}\n        positionX={(value.x*40)+40}\n        positionY={(value.y*40)}\n        setCurrentChess={setCurrentChess}\n        setMoveStep={setMoveStep}\n        dispatch={dispatch}\n      />}\n      {value.checkStatus&&<ChessStatus\n        ChessData={value}\n        ChessKey={key}\n        CheckStatus={chessCheckStatus}\n        setMoveStep={setMoveStep}\n        dispatch={dispatch}\n      />}\n    </React.Fragment>\n  })\n};","import React,{ useState } from 'react';\nimport { fromJS } from 'immutable';\nimport { Graphics, Text } from '@inlet/react-pixi/animated';\nimport { enemyChessSelected, enemyChessCheckStatus } from \"../../reducer/enemyChess\";\nimport * as PIXI from \"pixi.js\";\n\nexport const EnemyChessUIBoard = ({\n  ChessKey,\n  positionX,\n  positionY,\n  setMoveStep,\n  dispatch\n})=> {\n  const specialPosition = {\n    x: 720,\n    y: 535\n  };\n  const [textInforArray, setTextInforArray] = useState(fromJS([{\n      id:1,\n      title:\"狀態\",\n      textColor:['#ffffff', '#ffffff']\n    },{ \n      id:2,\n      title:\"返回\",\n      textColor:['#ffffff', '#ffffff']\n  }]));\n  const CreateText = ({ noop })=>{\n    return textInforArray.map((val,key)=>{\n      return <Text\n        key={key}\n        interactive={true}\n        buttonMode={true}\n        text={val.get('title')}\n        x={10}\n        y={5+(25*key)}\n        style={new PIXI.TextStyle({\n          fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 20,\n          fill:val.get('textColor').toJS(),\n        })}\n        pointerover={()=>{\n          setTextInforArray(prev=>\n            prev.setIn([key,'textColor',1],'#9d4edd')\n          );\n        }}\n        pointerout={()=>{\n          setTextInforArray(prev=>\n            prev.setIn([key,'textColor',1],'#ffffff')\n          );\n        }}\n        pointertap={(e)=>{\n          switch (val.get('id')) {\n            case 1:\n              dispatch(enemyChessCheckStatus({\n                key:ChessKey\n              }));\n              dispatch(enemyChessSelected({\n                key:ChessKey\n              }));\n              break;\n            case 2 :\n              setMoveStep(true);\n              dispatch(enemyChessSelected({\n                key:ChessKey\n              }));\n              break;\n            default:\n              return console.log(e.target)\n          };\n        }}\n      />\n    }\n  )};\n  return <Graphics\n    x={positionX!==800?positionX:specialPosition.x}\n    y={(positionY!==560&&positionY!==520)?positionY:specialPosition.y}\n    zIndex={3}\n    draw={g=> {\n      g.lineStyle(1,`0xffffff`,1);\n      g.beginFill(`0x22223b`);\n      g.drawRoundedRect(0,0,60,62,8);\n      g.endFill();\n    }}\n  ><CreateText/></Graphics>\n}","import React from 'react';\nimport { Sprite } from '@inlet/react-pixi/animated';\nimport { loader } from '../DataLoader';\n// reducers\nimport { enemyChessSelected, enemyChessCheckStatus } from \"../../reducer/enemyChess\";\n// other part\nimport { EnemyChessUIBoard } from \"./EnemyChessUIBoard\";\nimport { ChessStatus } from \"../Common/ChessStatus\";\n\nexport const EnemyChess = ({\n  enemyChessProps\n})=>{\n  const { \n    enemyChess,\n    moveStep=Boolean,\n    setMoveStep,\n    dispatch\n  } = enemyChessProps;\n  return enemyChess.map((value,key)=>{\n    return <React.Fragment key={key}>\n      {value.debut&&<Sprite\n        interactive={moveStep}\n        buttonMode={true}\n        width={40}\n        height={40}\n        x={value.x*40}\n        y={value.y*40}\n        zIndex={2}\n        pointertap={()=>{\n          setMoveStep(false);\n          dispatch(enemyChessSelected({\n            key:key\n          }));\n        }}\n        image={loader.resources[`${value.name}-head-default`].data}\n      />}\n      {value.boardStatus&&<EnemyChessUIBoard\n        ChessKey={key}\n        positionX={(value.x*40)+40}\n        positionY={(value.y*40)}\n        setMoveStep={setMoveStep}\n        dispatch={dispatch}\n      />}\n      {value.checkStatus&&<ChessStatus\n        ChessData={value}\n        ChessKey={key}\n        CheckStatus={enemyChessCheckStatus}\n        setMoveStep={setMoveStep}\n        dispatch={dispatch}\n      />}\n    </React.Fragment>\n  })\n};\n","import React,{ useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Stage, Container, Sprite } from '@inlet/react-pixi/animated';\n// reducers\nimport { stageDebut } from \"../reducer/chess\";\nimport { enemyStageDebut } from \"../reducer/enemyChess\";\n// other part\nimport { CreateCheckerboard } from './Common/Checkerboard';\nimport { ConfirmTip } from \"./Common/ConfirmTips\";\nimport { UsualTip } from \"./Common/UsualTip\";\nimport { BattleBoard } from \"./Common/BattleBoard\";\nimport { BattleAnimeShow } from \"./Common/BattleAnimeShow/Index\";\nimport { OtherTab } from \"./Common/OtherTab\";\nimport { EnemyRoundTab } from \"./Common/EnemyRoundTab/Index\";\nimport { Chess } from \"../components/Chess/Chess\";\nimport { EnemyChess } from \"../components/EnemyChess/EnemyChess\";\n// rule\nimport { stageRule } from \"../constants/stageRule\";\nimport { loader } from './DataLoader';\nexport const Canvas = ()=> {\n  const [ stageStatus, setStageStatus ] = useState('stageOne');\n  const [ roundNum, setRoundNum ] = useState(1);\n  const [ otherTab, setOtherTab ] = useState(false);\n  const [ enemyRoundTab, setEnemyRoundTab ] = useState({\n    oder:0,\n    status:false\n  });\n  const [ currentChess, setCurrentChess ] = useState({\n    key:0,\n    type:\"MOVE\"\n  });\n  const [ usualTip, setUsualTip ] = useState({\n    title:``,\n    status:false,\n  });\n  const [ tipStatus, setTipStatus ] = useState({\n    title:``,\n    status:false,\n    position:{\n      x:0,y:0\n    },\n  });\n  const [ battleInfo, setBattleInfo ] = useState({\n    status:false,\n    attacker:{ key:'' },\n    target:{ key:'' }\n  });\n  const [ animeShow, setAnimeShow ] = useState({\n    status:false,\n    type:'',\n    attacker:{ key:'', skill:{}, prevSP:0 },\n    target:{ key:'', isHit:false, prevLife:0 }\n  });\n  const [ moveStep, setMoveStep ] = useState(true);\n  const chessMap = useSelector(state=>state.chessMap);\n  const chess = useSelector(state=>state.chess);\n  const enemyChess = useSelector(state=>state.enemyChess);\n  const dispatch = useDispatch();\n  // debut\n  useEffect(()=>{\n    dispatch(stageDebut({ \n      isDebutChess:stageRule.getIn([stageStatus,'debutChess'])\n    }));\n    dispatch(enemyStageDebut({ \n      isDebutChess:stageRule.getIn([stageStatus,'debutEnemyChess'])\n    }));\n  },[ dispatch, stageStatus ]);\n  return <Stage\n    width={800}\n    height={600}\n    options={{\n      autoDensity: true, \n      antialias: true,\n      backgroundColor:0x01262a\n    }}>\n    <Container sortableChildren={true}>\n      <Sprite\n        width={30}\n        height={30}\n        anchor={0.5} \n        x={760}\n        y={40}\n        zIndex={99}\n        interactive={moveStep}\n        buttonMode={true}\n        image={loader.resources[`otherIcon`].data}\n        pointertap={()=>{\n          setOtherTab(true);\n          setMoveStep(false);\n        }}\n      />\n      <Sprite\n        width={800}\n        height={600}\n        zIndex={1}\n        image={loader.resources[`${stageStatus}-main-BG`].data}\n      />\n      <CreateCheckerboard reduxProps={{ \n        chess,\n        enemyChess,\n        chessMap,\n        currentChess,\n        dispatch,\n        setTipStatus,\n        setMoveStep,\n        setBattleInfo\n      }}/>\n      <Chess chessProps={{\n        chess,\n        enemyChess,\n        moveStep,\n        setMoveStep,\n        setCurrentChess,\n        dispatch\n      }}/>\n      <EnemyChess enemyChessProps={{\n        enemyChess,\n        moveStep,\n        setMoveStep,\n        dispatch\n      }}/>\n    </Container>\n    {otherTab&&\n      <OtherTab\n        props={{\n          stageStatus,\n          roundNum,\n          setMoveStep,\n          setOtherTab,\n          setTipStatus,\n          setCurrentChess\n        }}\n      />}\n    {tipStatus.status&&\n      <ConfirmTip \n        props={{\n          chess,\n          currentChess,\n          tipStatus,\n          dispatch,\n          setMoveStep,\n          setTipStatus,\n          setOtherTab,\n          setRoundNum,\n          setUsualTip\n        }}\n      />}\n    {usualTip.status&&\n      <UsualTip\n        props={{\n          stageStatus,\n          chess,\n          currentChess,\n          enemyChess,\n          usualTip,\n          setMoveStep,\n          setUsualTip,\n          setCurrentChess,\n          setEnemyRoundTab\n        }}\n      />}\n    {battleInfo.status&&\n      <BattleBoard\n        props={{\n          battleInfo,\n          setMoveStep,\n          setBattleInfo,\n          setAnimeShow,\n          dispatch\n        }}\n      />}\n    {animeShow.status&&\n      <BattleAnimeShow \n        props={{\n          stageStatus,\n          animeShow,\n          chess,\n          enemyChess,\n          setMoveStep,\n          setAnimeShow,\n          setUsualTip,\n          dispatch\n        }}\n      />}\n    {enemyRoundTab.status&&\n      <EnemyRoundTab\n        props={{\n          enemyRoundTab,\n          chess,\n          enemyChess,\n          setEnemyRoundTab,\n          setAnimeShow,\n          setCurrentChess,\n          dispatch\n        }}\n      />}\n  </Stage>\n};","import React, { useState, useEffect } from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport { Canvas } from './Canvas';\nimport { loader } from './DataLoader';\nconst GlobalStyle = createGlobalStyle`\n  body { background:#1d2430; }\n`;\nconst StyledApp = styled.div`\n  position: relative;\n  display:flex;\n  align-items:center;\n  justify-content:center;\n  width:100%;\n  height:100vh;\n  .loading {\n    color: #fff;\n    font-size:24px;\n  }\n`;\nexport const App = ()=> {\n  const [ dataIsDone, setDataIsDone ] = useState(false);\n  useEffect(()=>{\n    loader.onComplete.add(()=>{\n      setDataIsDone(true);\n    });\n  });\n  return <StyledApp>\n    <GlobalStyle/>\n    {dataIsDone?<Canvas />:\n      <span className=\"loading\">Loading..</span>}\n  </StyledApp>\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, combineReducers } from 'redux';\nimport chess from './chess';\nimport chessMap from './map';\nimport enemyChess from './enemyChess';\nconst rootReducer = combineReducers({\n  chess,\n  chessMap,\n  enemyChess\n});\nexport const store = createStore(rootReducer);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './reducer/index';\n\nReactDOM.render(<Provider store={store}><App /></Provider>,document.getElementById('root'));\nreportWebVitals();\n"],"sourceRoot":""}