{"version":3,"sources":["reducer/chess.js","reducer/enemyChess.js","components/DataLoader.js","components/Common/GameStart/Index.js","reducer/map.js","components/Common/Checkerboard.js","components/Common/ConfirmTips.js","constants/stageRule.js","components/Common/UsualTip.js","components/Common/ProbabilityCount.js","components/Common/BattleBoard.js","components/Common/BattleAnimeShow/AinmeShowBG.js","components/Common/BattleAnimeShow/TopBar.js","constants/lines.js","components/Common/BattleAnimeShow/BottomBar.js","constants/SkillShowProtoType.js","constants/ChessSkillShow/TanjirouSkill/steps.js","constants/ChessSkillShow/TanjirouSkill/ShowType.js","constants/ChessSkillShow/TanjirouSkill/Index.js","constants/ChessSkillShow/Nezuko/steps.js","constants/ChessSkillShow/Nezuko/ShowType.js","constants/ChessSkillShow/Nezuko/Index.js","constants/ChessSkillShow/Index.js","constants/EnemyChessSkillShow/TeoniSkill/steps.js","constants/EnemyChessSkillShow/TeoniSkill/ShowType.js","constants/EnemyChessSkillShow/TeoniSkill/Index.js","constants/EnemyChessSkillShow/Index.js","components/Common/BattleAnimeShow/Index.js","components/Common/OtherTab.js","components/Common/EnemyRoundTab/EnemyList.js","components/Common/EnemyRoundTab/ChessList.js","components/Common/EnemyRoundTab/Information.js","components/Common/EnemyRoundTab/Index.js","components/Chess/ChessUIBoard.js","components/Common/ChessStatus.js","components/Chess/Chess.js","components/EnemyChess/EnemyChessUIBoard.js","components/EnemyChess/EnemyChess.js","components/Canvas.js","components/App.js","reportWebVitals.js","reducer/index.js","index.js"],"names":["basicCommon","x","y","checkStatus","boardStatus","debut","roundMove","chess","createSlice","name","initialState","cn","id","step","attack","hp","sp","dodge","fullValue","skill","atk","hitfix","reducers","stageDebut","state","actions","isDebutChess","payload","map","value","key","v","get","chessMove","changeX","changeY","chessSelected","chessCheckStatus","chessDefense","damage","chessAttackResult","lessSp","chessDead","chessMoved","chessRoundRest","i","length","roundAttack","enemyChess","enemyStageDebut","enemyChessSelected","enemyChessCheckStatus","enemyChessDefense","enemyChessAttackResult","enemyChessDead","hostname","window","location","loader","PIXI","audioData","open","Howl","src","preload","loop","round","KimetsuNoYaiba","KimetsuNoYaibaEnemy","videos","Tanjirou","skill3","from","add","load","GameStart","props","setRoundStart","setCurrentBGM","useState","logoWidth","setLogoWidth","start","setStart","startBtn","setStartBtn","useTick","delta","prev","Math","floor","useEffect","sortableChildren","anchor","width","height","image","resources","data","interactive","buttonMode","pointertap","fade","zIndex","draw","g","beginFill","drawRoundedRect","endFill","play","text","style","fontFamily","fontSize","fill","mapLimit","createInitialState","method","list","push","createStraightLine","traverse","color","alpha","isInteractive","chessMap","MoveSelect","action","position","changeColor","alphaVal","GetMove","currentChessPositions","GetAttack","texture","WHITE","CreateCheckerboard","reduxProps","currentChess","dispatch","setTipStatus","setMoveStep","setBattleInfo","Fragment","k","tint","type","title","status","isMatch","checkMatchAttackPosition","targetData","item","getCurrentEnemy","attacker","target","acttack","ConfirmTip","tipStatus","currentBGM","setOtherTab","setRoundNum","setUsualTip","setFadeBGM","lineStyle","stageRule","fromJS","stageOne","debutChess","debutEnemyChess","ruleText","win","lose","isWin","enemyList","totalLife","isLose","chessList","stageTwo","UsualTip","stageStatus","usualTip","setCurrentChess","setEnemyRoundTab","textColor","setTextColor","checkWin","getIn","checkLose","oder","ProbabilityCount","attackerHit","targetDodge","random","BattleBoard","battleInfo","setAnimeShow","atkSelectd","setAtkSelectd","CreateAttackerInfo","pX","pY","skillCanUse","fontWeight","CreateTargetInfo","ForecastInfo","isHit","prevSP","prevLife","AnimeShowBG","BGstatus","BGprop","SkBGprop","setSkBGpops","setBGpops","to","toX","config","duration","onRest","TopBar","right","left","showType","targetHp","attackerSp","hpBarCount","full","Number","spBarCount","lines","default","def","dead","BottomBar","linesStatus","showCharacter","character","randomSize","size","SkillShowProtoType","skillName","attackerName","targetLife","resultLife","resultSp","setBGstatus","setAnimeIsDone","setTargetHp","setAttackerSp","setLinesStatus","setShowSkill","defXPostion","steps","ShowType","mass","friction","tension","setPosition","defence","timeout","clearTimeout","isHitStep","setTimeout","isDead","next","seconds","isDodge","isDeadStep2","end","skill3step1","skill3step2","run","number","TweenMax","onUpdate","numeral","format","baseTexture","resource","source","callback","skill3step3","step1","step2","step3","step4","TanjirouSkill","NezukoSkill","ChessSkillShow","defaultprops","TeoniSkill","EnemyChessSkillShow","BattleAnimeShow","animeShow","CreateContent","animeIsDone","showSkill","fetchChessType","CreateSkillSprite","video","videoDom","onended","currentTime","clearAllTimeouts","OtherTab","roundNum","EnemyList","enemyRandomSkill","ChessList","defChess","setDefChess","distance","Information","atkEnemy","EnemyRoundTab","enemyRoundTab","filter","enemySkill","enemySp","totalSize","getAtkSkill","getCurrentChessKey","getKey","find","ChessUIBoard","ChessData","ChessVal","ChessKey","EnemyChessData","positionX","positionY","specialPosition","forMoveArray","forAttackArray","textInforArray","setTextInforArray","compareUsed","chessX","chessY","checkType","isUnused","val","moved","CreateText","noop","isAttack","chessAtk","isDebutEnemy","limitPosition","positionRange","getaddX","getaddY","getlessX","getlessY","compareAttack","fetchInteractive","toJS","pointerover","setIn","pointerout","e","console","log","ChessStatus","CheckStatus","CreateSkillList","Chess","chessProps","moveStep","Boolean","roundMoveDone","EnemyChessUIBoard","EnemyChess","enemyChessProps","Canvas","roundStart","otherTab","fadeBGM","useSelector","useDispatch","stop","volume","Howler","options","autoDensity","antialias","backgroundColor","isDesktop","device","desktop","GlobalStyle","createGlobalStyle","StyledApp","styled","div","App","dataIsDone","setDataIsDone","gameStart","setGameStart","progress","setProgress","mp3load","setMp3load","on","onProgress","onComplete","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.790a7cd5.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nconst basicCommon = {\n  x:0,\n  y:0,\n  checkStatus:false,\n  boardStatus:false,\n  debut:false,\n  roundMove:1\n};\nconst chess = createSlice({\n  name:'chess',\n  initialState:[\n    {\n      name:'Tanjirou',\n      cn:'竈門 炭治郎',\n      id:1,\n      step:3,\n      attack:2,\n      hp:1500,\n      sp:125,\n      dodge:80,\n      fullValue:{\n        hp:1500,\n        sp:125\n      },\n      skill:[{ \n        name:'斬擊',\n        atk:200,\n        sp:0,\n        hitfix:0\n      },{ \n        name:'叄之型―流流舞',\n        atk:350,\n        sp:15,\n        hitfix:10\n      },{ \n        name:'捌之型―滝壺',\n        atk:500,\n        sp:25,\n        hitfix:5\n      },{\n        name:'拾之型―生生流轉',\n        atk:850,\n        sp:50,\n        hitfix:20\n      }],\n      ...basicCommon\n    },{\n      name:'Nezuko',\n      cn:'竈門 禰豆子',\n      id:2,\n      step:2,\n      attack:1,\n      hp:2200,\n      sp:200,\n      dodge:80,\n      fullValue:{\n        hp:2200,\n        sp:200\n      },\n      skill:[{ \n        name:'爪擊',\n        atk:150,\n        sp:0,\n        hitfix:0\n      },{ \n        name:'踢擊',\n        atk:250,\n        sp:10,\n        hitfix:15\n      },{ \n        name:'血鬼術',\n        atk:1000,\n        sp:80,\n        hitfix:35\n      }],\n      ...basicCommon\n    },{\n      name:'Inosuke',\n      cn:'嘴平 伊之助',\n      id:3,\n      step:4,\n      attack:3,\n      hp:1800,\n      sp:80,\n      dodge:40,\n      fullValue:{\n        hp:1800,\n        sp:80\n      },\n      skill:[{ \n        name:'斬擊',\n        atk:50,\n        sp:0,\n        hitfix:0\n      },{ \n        name:'壹之牙―穿透刺射',\n        atk:120,\n        sp:2,\n        hitfix:0\n      },{ \n        name:'貳之牙―利刃對劈',\n        atk:200,\n        sp:5,\n        hitfix:0\n      },{\n        name:'叄之牙―獠牙撕扯',\n        atk:400,\n        sp:8,\n        hitfix:0\n      }],\n      ...basicCommon\n    }\n  ],\n  reducers:{\n    stageDebut:(state, actions)=> {\n      const { isDebutChess } = actions.payload;\n      state.map((value,key)=>{\n        return isDebutChess.map(v=>{\n          if(value.name===v.get('name')){\n            return (\n              state[key].debut = true,\n              state[key].x = v.get('x'),\n              state[key].y = v.get('y')\n            );\n          }else return null;\n        })\n      })\n    },\n    chessMove: (state, actions)=>{\n      const { key, changeX, changeY } = actions.payload;\n      state[key].x = changeX;\n      state[key].y = changeY;\n    },\n    chessSelected: (state, actions)=>{\n      const { key } = actions.payload;\n      state[key].boardStatus = !state[key].boardStatus;\n    },\n    chessCheckStatus: (state, actions)=> {\n      const { key } = actions.payload;\n      state[key].checkStatus = !state[key].checkStatus;\n    },\n    chessDefense: (state, actions)=>{\n      const { key, damage } = actions.payload;\n      state[key].hp -= damage;\n    },\n    chessAttackResult: (state, actions)=> {\n      const { key, lessSp } = actions.payload;\n      state[key].sp -= lessSp;\n    },\n    chessDead: (state, actions)=> {\n      const { key } = actions.payload;\n      state[key].debut = false;\n      state[key].hp = state[key].fullValue.hp;\n      state[key].sp = state[key].fullValue.sp;\n    },\n    chessMoved: (state, actions)=>{\n      const { key } = actions.payload;\n      state[key].roundMove -= 1;\n    },\n    chessRoundRest:(state)=>{\n      for(let i=0;i<state.length;i++){\n        state[i].roundMove = 1;\n      };\n    },\n  }\n});\nexport default chess.reducer;\nexport const { \n  stageDebut, chessMove, chessSelected, chessCheckStatus, chessAttackResult, \n  chessDead, chessMoved, chessDefense, chessRoundRest\n} = chess.actions;","import { createSlice } from '@reduxjs/toolkit';\nconst basicCommon = {\n  x:0,\n  y:0,\n  checkStatus:false,\n  boardStatus:false,\n  debut:false,\n  roundAttack:false,\n};\nconst enemyChess = createSlice({\n  name:'enemyChess',\n  initialState:[\n    {\n      name:'Teoni',\n      cn:'手鬼',\n      id:1,\n      hp:2000,\n      sp:100,\n      dodge:25,\n      fullValue:{\n        hp:2000,\n        sp:100\n      },\n      skill:[{ \n        name:'胡亂毆打',\n        atk:150,\n        sp:0,\n        hitfix:10\n      },{ \n        name:'你是第十四個',\n        atk:500,\n        sp:25,\n        hitfix:20\n      }],\n      ...basicCommon\n    },{\n      name:'Nomanooni',\n      cn:'沼鬼',\n      id:2,\n      hp:1500,\n      sp:200,\n      dodge:30,\n      fullValue:{\n        hp:1500,\n        sp:200\n      },\n      skill:[{ \n        name:'爪擊',\n        atk:70,\n        sp:0,\n        hitfix:15\n      },{ \n        name:'分身攻擊',\n        atk:600,\n        sp:15,\n        hitfix:30\n      }],\n      ...basicCommon\n    }\n  ],\n  reducers:{\n    enemyStageDebut:(state, actions)=> {\n      const { isDebutChess } = actions.payload;\n      state.map((value,key)=>{\n        return isDebutChess.map(v=>{\n          if(value.name===v.get('name')){\n            return (\n              state[key].debut = true,\n              state[key].x = v.get('x'),\n              state[key].y = v.get('y')\n            );\n          }else return null;\n        })\n      })\n    },\n    enemyChessSelected: (state, actions)=>{\n      const { key } = actions.payload;\n      state[key].boardStatus = !state[key].boardStatus;\n    },\n    enemyChessCheckStatus: (state, actions)=> {\n      const { key } = actions.payload;\n      state[key].checkStatus = !state[key].checkStatus;\n    },\n    enemyChessDefense: (state, actions)=> {\n      const { key, damage } = actions.payload;\n      state[key].hp -= damage;\n    },\n    enemyChessAttackResult: (state, actions)=> {\n      const { key, lessSp } = actions.payload;\n      state[key].sp -= lessSp;\n    },\n    enemyChessDead: (state, actions)=> {\n      const { key } = actions.payload;\n      state[key].debut = false;\n      state[key].hp = state[key].fullValue.hp;\n      state[key].sp = state[key].fullValue.sp;\n    },\n  }\n});\nexport default enemyChess.reducer;\nexport const { \n  enemyStageDebut, enemyChessSelected, enemyChessCheckStatus, enemyChessDefense, \n  enemyChessAttackResult, enemyChessDead \n} = enemyChess.actions;","import * as PIXI from \"pixi.js\";\nimport { Howl } from 'howler';\nconst hostname = window.location.hostname==='localhost'?'./Demon-Slayer/':'./';\nexport const loader = new PIXI.Loader();\nexport const audioData = {\n  open: new Howl({\n    src: [`${hostname}audio/bgm-open.mp3`],\n    preload: 'metadata',\n    loop: true\n  }),\n  round: new Howl({\n    src: [`${hostname}audio/bgm-round.mp3`],\n    preload: 'metadata',\n    loop: true\n  }),\n  KimetsuNoYaiba: new Howl({\n    src: [`${hostname}audio/bgm-KimetsuNoYaiba.mp3`],\n    preload: 'metadata',\n    loop: true\n  }),\n  KimetsuNoYaibaEnemy: new Howl({\n    src: [`${hostname}audio/bgm-KimetsuNoYaibaEnemy.mp3`],\n    preload: 'metadata',\n    loop: true\n  }),\n};\nexport const videos = {\n  Tanjirou: {\n    skill3: PIXI.Texture.from(`${hostname}video/Tanjirou/skill3.mp4`)\n  }\n};\n\nloader\n  .add('Tanjirou-head-default',`${hostname}imgs/Tanjirou/head-default.png`)\n  .add('Tanjirou-talk-default',`${hostname}imgs/Tanjirou/talk-default.jpg`)\n  .add('Tanjirou-talk-attack',`${hostname}imgs/Tanjirou/talk-attack.jpg`)\n  .add('Tanjirou-talk-def',`${hostname}imgs/Tanjirou/talk-def.jpg`)\n  .add('Tanjirou-talk-dodge',`${hostname}imgs/Tanjirou/talk-dodge.jpg`)\n  .add('Tanjirou-talk-dead',`${hostname}imgs/Tanjirou/talk-dead.jpg`)\n  .add('Tanjirou-fight-typeA',`${hostname}imgs/Tanjirou/fight-typeA.png`)\n  .add('Tanjirou-fight-typeB',`${hostname}imgs/Tanjirou/fight-typeB.png`)\n  .add('Nezuko-head-default',`${hostname}imgs/Nezuko/head-default.jpg`)\n  .add('Nezuko-talk-default',`${hostname}imgs/Nezuko/talk-default.jpg`)\n  .add('Nezuko-talk-attack',`${hostname}imgs/Nezuko/talk-attack.jpg`)\n  .add('Nezuko-talk-def',`${hostname}imgs/Nezuko/talk-def.jpg`)\n  .add('Nezuko-talk-dodge',`${hostname}imgs/Nezuko/talk-dodge.jpg`)\n  .add('Nezuko-talk-dead',`${hostname}imgs/Nezuko/talk-dead.jpg`)\n  .add('Nezuko-fight',`${hostname}imgs/Nezuko/fight.png`)\n  .add('Inosuke-head-default',`${hostname}imgs/Inosuke/head-default.jpg`)\n  .add('Inosuke-fight',`${hostname}imgs/Inosuke/fight.png`)\n  .add('Teoni-head-default',`${hostname}imgs/Teoni/head-default.png`)\n  .add('Teoni-talk-default',`${hostname}imgs/Teoni/talk-default.jpg`)\n  .add('Teoni-talk-attack',`${hostname}imgs/Teoni/talk-attack.jpg`)\n  .add('Teoni-talk-def',`${hostname}imgs/Teoni/talk-def.jpg`)\n  .add('Teoni-talk-dodge',`${hostname}imgs/Teoni/talk-dodge.jpg`)\n  .add('Teoni-talk-dead',`${hostname}imgs/Teoni/talk-dead.jpg`)\n  .add('Teoni-fight',`${hostname}imgs/Teoni/fight.png`)\n  .add('Nomanooni-head-default',`${hostname}imgs/Nomanooni/head-default.jpg`)\n  .add('Nomanooni-fight',`${hostname}imgs/Nomanooni/fight.png`)\n  .add('stageOne-BG',`${hostname}imgs/background/stage1-background.png`)\n  .add('stageOne-main-BG',`${hostname}imgs/background/stage1-main-background.jpg`)\n  .add('logo',`${hostname}imgs/common/logo.png`)\n  .add('atkIcon',`${hostname}imgs/common/atk.png`)\n  .add('defIcon',`${hostname}imgs/common/def.png`)\n  .add('otherIcon',`${hostname}imgs/common/other.png`)\n  .add('closeIcon',`${hostname}imgs/common/close.png`)\n  .add('startBtn',`${hostname}imgs/common/startBtn.png`)\n  .add('endBtn',`${hostname}imgs/common/end.png`)\n  .add('fightOff',`${hostname}imgs/common/fightOff.png`)\n  .add('fightDef',`${hostname}imgs/common/fightDef.png`)\n  .load();\n","import React,{ useState, useEffect } from 'react';\nimport * as PIXI from \"pixi.js\";\nimport { audioData, loader } from '../../DataLoader';\nimport { Container, Text, Graphics, Sprite, useTick } from '@inlet/react-pixi/animated';\nexport const GameStart = ({\n  props\n})=>{\n  const { setRoundStart, setCurrentBGM } = props;\n  const [ logoWidth, setLogoWidth ] = useState(200);\n  const [ start, setStart ] = useState(false);\n  const [ startBtn, setStartBtn ] = useState(false);\n  let i = 0;\n  useTick(delta=>{\n    if(!start){ return };\n    const add = i += 0.28 * delta;\n    if(!startBtn){\n      setLogoWidth(prev=>{return prev+=Math.floor(add)});\n    };\n  });\n  useEffect(()=>{\n    (logoWidth>=350)&&setStartBtn(true);\n  },[logoWidth])\n  return <Container sortableChildren={true}>\n    {!start?<>\n      <Graphics\n        interactive={true}\n        buttonMode={true}\n        x={0} y={0}\n        zIndex={1}\n        draw={g=> {\n          g.beginFill(`0x0000`);\n          g.drawRoundedRect(0,0,800,600,0);\n          g.endFill();\n        }}\n        pointertap={()=>{\n          audioData.open.play();\n          setStart(true);\n        }}\n      />\n      <Text\n        text={`任意點擊`}\n        zIndex={2}\n        anchor={0.5}\n        x={400}\n        y={300}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 24,\n          fill:'#ffffff',\n        })}\n      />\n    </>:<>\n      <Sprite\n        anchor={0.5}\n        x={400}\n        y={250}\n        width={logoWidth}\n        height={logoWidth}\n        image={loader.resources[`logo`].data}\n      />\n      {startBtn&&\n        <Sprite\n          interactive={true}\n          buttonMode={true}\n          anchor={0.5}\n          x={400}\n          y={450}\n          width={120}\n          height={56}\n          image={loader.resources[`startBtn`].data}\n          pointertap={()=>{\n            audioData.open.fade(1,0,1000)\n            setRoundStart(true);\n            setCurrentBGM('userRounds');\n          }}\n        />\n      }\n    </>\n  }\n  </Container>\n}","import { createSlice } from '@reduxjs/toolkit';\nconst mapLimit = { x:20, y:15 };\nconst createTraverseLine = (traverse=0,color='')=>{\n  const list = [];\n  for(let i=0;i<mapLimit.x;i++){\n    list.push({\n      x:i,\n      y:traverse,\n      color:color,\n      alpha:0,\n      zIndex:1,\n      isInteractive:false\n    });\n  };\n  return list;\n};\nconst createStraightLine = ( method=()=>{} )=>{\n  const list = [];\n  for(let i=0;i<mapLimit.y;i++){\n    list.push(method(i,'0x383838'));\n  };\n  return list;\n};\nconst createInitialState = createStraightLine(createTraverseLine);\nconst chessMap = createSlice({\n  name:'chessMap',\n  initialState: createInitialState,\n  reducers:{\n    MoveSelect:(state, action)=>{\n      const { position, step, changeColor, alphaVal=1} = action.payload;\n      for(let i=0;i<(step+1);i++){\n        if(position.x+i<=(mapLimit.x-1)){\n          state[position.y][position.x+i].color=changeColor;\n          state[position.y][position.x+i].isInteractive=false;\n          state[position.y][position.x+i].alpha=alphaVal;\n          state[position.y][position.x+i].zIndex=1;\n        };\n        if(position.y+i<=(mapLimit.y-1)){\n          state[position.y+i][position.x].color=changeColor;\n          state[position.y+i][position.x].isInteractive=false;\n          state[position.y+i][position.x].alpha=alphaVal;\n          state[position.y+i][position.x].zIndex=1;\n        };\n        if(position.x-i>=0){\n          state[position.y][position.x-i].color=changeColor;\n          state[position.y][position.x-i].isInteractive=false;\n          state[position.y][position.x-i].alpha=alphaVal;\n          state[position.y][position.x-i].zIndex=1;\n        };\n        if(position.y-i>=0){\n          state[position.y-i][position.x].color=changeColor;\n          state[position.y-i][position.x].isInteractive=false;\n          state[position.y-i][position.x].alpha=alphaVal;\n          state[position.y-i][position.x].zIndex=1;\n        };\n      }\n    },\n    GetMove:(state, action)=>{\n      const { position, step, changeColor, currentChessPositions } = action.payload;\n      for(let i=0;i<(step+1);i++){\n        if(position.x+i<=(mapLimit.x-1)){\n          state[position.y][position.x+i].color=changeColor;\n          state[position.y][position.x+i].isInteractive=true;\n          state[position.y][position.x+i].alpha=0.5;\n          state[position.y][position.x+i].zIndex=1;\n        };\n        if(position.y+i<=(mapLimit.y-1)){\n          state[position.y+i][position.x].color=changeColor;\n          state[position.y+i][position.x].isInteractive=true;\n          state[position.y+i][position.x].alpha=0.5;\n          state[position.y+i][position.x].zIndex=1;\n        };\n        if(position.x-i>=0){\n          state[position.y][position.x-i].color=changeColor;\n          state[position.y][position.x-i].isInteractive=true;\n          state[position.y][position.x-i].alpha=0.5;\n          state[position.y][position.x-i].zIndex=1;\n        };\n        if(position.y-i>=0){\n          state[position.y-i][position.x].color=changeColor;\n          state[position.y-i][position.x].isInteractive=true;\n          state[position.y-i][position.x].alpha=0.5;\n          state[position.y-i][position.x].zIndex=1;\n        };\n      }\n      currentChessPositions.map(v=>{\n        return state[v.y][v.x].isInteractive=false;\n      });\n    },\n    GetAttack:(state, action)=>{\n      const { position, step, changeColor, currentChessPositions } = action.payload;\n      for(let i=0;i<(step+1);i++){\n        if(position.x+i<=(mapLimit.x-1)){\n          state[position.y][position.x+i].color=changeColor;\n          state[position.y][position.x+i].isInteractive=true;\n          state[position.y][position.x+i].alpha=0.5;\n          state[position.y][position.x+i].zIndex=3;\n        };\n        if(position.y+i<=(mapLimit.y-1)){\n          state[position.y+i][position.x].color=changeColor;\n          state[position.y+i][position.x].isInteractive=true;\n          state[position.y+i][position.x].alpha=0.5;\n          state[position.y+i][position.x].zIndex=3;\n        };\n        if(position.x-i>=0){\n          state[position.y][position.x-i].color=changeColor;\n          state[position.y][position.x-i].isInteractive=true;\n          state[position.y][position.x-i].alpha=0.5;\n          state[position.y][position.x-i].zIndex=3;\n        };\n        if(position.y-i>=0){\n          state[position.y-i][position.x].color=changeColor;\n          state[position.y-i][position.x].isInteractive=true;\n          state[position.y-i][position.x].alpha=0.5;\n          state[position.y-i][position.x].zIndex=3;\n        };\n      }\n      currentChessPositions.map(v=>{\n        return (\n          state[v.y][v.x].isInteractive=false,\n          state[v.y][v.x].zIndex=1\n        )\n      });\n    }\n  }\n});\nexport default chessMap.reducer;\nexport const { MoveSelect, GetMove, GetAttack } = chessMap.actions;\n","import React, {} from 'react';\nimport * as PIXI from \"pixi.js\";\nimport { Sprite } from '@inlet/react-pixi/animated';\nimport { MoveSelect } from '../../reducer/map';\nconst texture = PIXI.Texture.WHITE;\nexport const CreateCheckerboard = ({\n  reduxProps\n})=>{\n  const { \n    chess, enemyChess, chessMap, currentChess, dispatch, \n    setTipStatus, setMoveStep, setBattleInfo\n  } = reduxProps;\n  const checkMatchAttackPosition = (x,y)=>{\n    let isMatch = false;\n    enemyChess.map(v=>{\n      const checkMatch = v.debut&&(x===v.x)&&(y===v.y);\n      if(checkMatch){\n        return isMatch=true;\n      }else return null;\n    });\n    return isMatch;\n  };\n  const getCurrentEnemy = (x,y)=>{\n    let item = {};\n    enemyChess.map((v,k)=>{\n      const checkMatch = v.debut&&(x===v.x)&&(y===v.y);\n      if(checkMatch){\n        return item={...v,key:k}\n      }else return null;\n    });\n    return item;\n  };\n  return <React.Fragment>\n    {chessMap.map(value=> {\n      return value.map((v,k)=>{\n        return <Sprite\n          interactive={v.isInteractive}\n          buttonMode={v.isInteractive}\n          zIndex={v.zIndex}\n          key={k}\n          width={40}\n          height={40}\n          x={v.x*40}\n          y={v.y*40}\n          tint={v.color}\n          alpha={v.alpha}\n          texture={texture}\n          pointertap={()=>{\n            switch (currentChess.type) {\n              case \"MOVE\":\n                setTipStatus({\n                  title:'確定移動?',\n                  status:true,\n                  position:{\n                    x:v.x, y:v.y\n                  }\n                });\n                dispatch(MoveSelect({\n                  position:{ \n                    x:chess[currentChess.key].x, \n                    y:chess[currentChess.key].y,\n                  },\n                  step:chess[currentChess.key].step,\n                  changeColor:'0x06d6a0',\n                  alphaVal:0.5\n                }));\n                break;\n              case \"ATTACK\":\n                if(checkMatchAttackPosition(v.x,v.y)){\n                  const targetData = getCurrentEnemy(v.x,v.y);\n                  setBattleInfo({\n                    status:true,\n                    attacker:{ \n                      key: currentChess.key,\n                      ...chess[currentChess.key]\n                    },\n                    target:{\n                      key: targetData.key,\n                      ...targetData\n                    }\n                  });\n                  dispatch(MoveSelect({\n                    position:{ \n                      x:chess[currentChess.key].x, \n                      y:chess[currentChess.key].y,\n                    },\n                    step:chess[currentChess.key].attack,\n                    changeColor:'0x383838',\n                    alphaVal:0\n                  }));\n                }else {\n                  setMoveStep(true);\n                  dispatch(MoveSelect({\n                    position:{ \n                      x:chess[currentChess.key].x, \n                      y:chess[currentChess.key].y,\n                    },\n                    step:chess[currentChess.key].acttack,\n                    changeColor:'0x383838',\n                    alphaVal:0\n                  }));\n                };\n                break;\n              default:\n                return;\n            }; \n          }}\n        />\n      });\n    })}\n  </React.Fragment>\n};","import React from 'react';\n// import { fromJS } from 'immutable';\nimport { Graphics, Text } from '@inlet/react-pixi/animated';\nimport { chessMove, chessMoved } from \"../../reducer/chess\";\nimport { MoveSelect } from '../../reducer/map';\nimport * as PIXI from \"pixi.js\";\n\nexport const ConfirmTip = ({\n  props,\n})=> {\n  const { \n    chess,\n    currentChess,\n    tipStatus,\n    currentBGM,\n    dispatch,\n    setMoveStep, \n    setTipStatus,\n    setOtherTab,\n    setRoundNum,\n    setUsualTip,\n    setFadeBGM\n  } = props;\n  return <Graphics\n    x={400}\n    y={300}\n    draw={g=> {\n      g.lineStyle(1,`0xffffff`,1);\n      g.beginFill(`0x22223b`);\n      g.drawRoundedRect(-90,-50,180,100,8);\n      g.endFill();\n    }}\n  >\n    <Text\n      text={tipStatus.title}\n      anchor={0.5}\n      x={0}\n      y={-20}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 20,\n        fill:['#ffffff', '#ffffff'],\n      })}\n    />\n    <Text\n      interactive={true}\n      buttonMode={true}\n      anchor={0.5}\n      text={'確定'}\n      x={-30}\n      y={20}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 20,\n        fill:['#ffffff', '#ffffff'],\n      })}\n      pointertap={()=>{\n        switch (currentChess.type) {\n          case \"MOVE\":\n            dispatch(chessMove({\n              key: currentChess.key,\n              changeX:tipStatus.position.x,\n              changeY:tipStatus.position.y\n            }));\n            dispatch(chessMoved({\n              key: currentChess.key,\n            }));\n            dispatch(MoveSelect({\n              position:{ \n                x:chess[currentChess.key].x, \n                y:chess[currentChess.key].y,\n              },\n              step:chess[currentChess.key].step,\n              changeColor:'0x383838',\n              alphaVal:0\n            }));\n            setMoveStep(true);\n            setTipStatus(prev=>{\n              return {...prev, status:false }\n            });\n            break;\n          case \"ENDROUND\":\n            setOtherTab(false);\n            setRoundNum(prev=>prev+=1);\n            setTipStatus(prev=>{\n              return {...prev, status:false }\n            });\n            setUsualTip({\n              title:'敵方回合',\n              status:true\n            });\n            setFadeBGM(currentBGM);\n            break;\n          default:\n            return;\n        }\n      }}\n    />\n    <Text\n      interactive={true}\n      buttonMode={true}\n      anchor={0.5}\n      text={'取消'}\n      x={30}\n      y={20}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 20,\n        fill:['#ffffff', '#ffffff'],\n      })}\n      pointertap={()=>{\n        switch (currentChess.type) {\n          case \"MOVE\":\n            dispatch(MoveSelect({\n              position:{ \n                x:chess[currentChess.key].x, \n                y:chess[currentChess.key].y,\n              },\n              step:chess[currentChess.key].step,\n              changeColor:'0x383838',\n              alphaVal:0\n            }));\n            setMoveStep(true);\n            setTipStatus(prev=>{\n              return {...prev, status:false }\n            });\n            break;\n          case \"ENDROUND\":\n            setTipStatus(prev=>{\n              return {...prev, status:false }\n            });\n            break;\n          default:\n            return;\n        }\n      }}\n    />\n  </Graphics>\n};","import { fromJS } from \"immutable\";\n\nexport const stageRule = fromJS({\n  stageOne: {\n    debutChess:[\n      { \n        name:'Tanjirou',\n        x:6,\n        y:7\n      }\n    ],\n    debutEnemyChess:[\n      {\n        name:'Teoni',\n        x:14,\n        y:7\n      }\n    ],\n    ruleText:{\n      win:'擊敗手鬼。',\n      lose:'竃門 碳治郎 戰敗。'\n    },\n    isWin: enemyList => {\n      let totalLife = 0;\n        enemyList.map(v => {\n          if(v.debut){\n            return totalLife += v.hp;\n          }return null;\n        });\n      return totalLife>0 ? false : true ;\n    },\n    isLose: chessList => {\n      let totalLife = 0;\n        chessList.map(v => {\n          if(v.debut){\n            return totalLife += v.hp;\n          }return null;\n        });\n      return totalLife>0 ? false : true ;\n    }\n  },\n  stageTwo: {\n    debutChess:[\n      { \n        name:'Tanjirou',\n        x:3,\n        y:9\n      }, { \n        name:'Nezuko',\n        x:3,\n        y:11\n      }\n    ],\n    debutEnemyChess:[\n      {\n        name:'Nomanooni',\n        x:16,\n        y:7\n      }\n    ]\n  }\n});","import React,{ useState } from 'react';\n// import { fromJS } from 'immutable';\nimport { Graphics, Text } from '@inlet/react-pixi/animated';\nimport * as PIXI from \"pixi.js\";\n// rule\nimport { stageRule } from \"../../constants/stageRule\";\n\nexport const UsualTip = ({\n  props,\n})=> {\n  const {\n    stageStatus, chess, currentChess, enemyChess, currentBGM,\n    usualTip, setMoveStep, setUsualTip, setCurrentChess, setFadeBGM,\n    setEnemyRoundTab } = props;\n    const [ textColor, setTextColor ] = useState(['#ffffff', '#ffffff']);\n  return <Graphics\n    x={400}\n    y={300}\n    draw={g=> {\n      g.lineStyle(1,`0xffffff`,1);\n      g.beginFill(`0x22223b`);\n      g.drawRoundedRect(-90,-50,180,100,8);\n      g.endFill();\n    }}\n  >\n    <Text\n      text={usualTip.title}\n      anchor={0.5}\n      x={0}\n      y={-20}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 20,\n        fill: textColor,\n      })}\n    />\n    <Text\n      interactive={true}\n      buttonMode={true}\n      anchor={0.5}\n      text={'確定'}\n      x={0}\n      y={20}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 20,\n        fill:['#ffffff', '#ffffff'],\n      })}\n      pointertap={()=>{\n        switch (currentChess.type) {\n          case \"ATTACK\":\n            const checkWin = stageRule.getIn([stageStatus,'isWin']);\n            const checkLose = stageRule.getIn([stageStatus,'isLose']);\n            if(checkWin(enemyChess)){\n              setTextColor(['#ffffff', '#06d6a0']);\n              setCurrentChess({\n                key:0,\n                type:\"CHECKWIN\"\n              });\n              setUsualTip({\n                title:`作戰獲勝!`,\n                status:true,\n              });\n            }else if(checkLose(chess)){\n              setTextColor(['#dc2f02', '#d00000']);\n              setCurrentChess({\n                key:0,\n                type:\"CHECKLOSE\"\n              });\n              setUsualTip({\n                title:`作戰失敗!`,\n                status:true,\n              });\n            }else {\n              setMoveStep(true);\n              setUsualTip({\n                title:``,\n                status:false,\n              });\n            }\n            break;\n          case \"CHECKWIN\":\n            setMoveStep(true);\n            setTextColor(['#ffffff', '#ffffff']);\n            setUsualTip({\n              title:``,\n              status:false,\n            });\n            break;\n          case \"CHECKLOSE\":\n            setMoveStep(true);\n            setTextColor(['#ffffff', '#ffffff']);\n            setUsualTip({\n              title:``,\n              status:false,\n            });\n            break;\n          case \"ENDROUND\":\n            setEnemyRoundTab({\n              oder:0,\n              status:true\n            });\n            setUsualTip({\n              title:``,\n              status:false\n            });\n            break;\n          case \"USERROUND\":\n            setFadeBGM(currentBGM);\n            setMoveStep(true);\n            setUsualTip({\n              title:``,\n              status:false\n            });\n            break;\n          default:\n            return;\n        }\n      }}\n    />\n  </Graphics>\n};","export const ProbabilityCount = (\n  attackerHit,\n  targetDodge\n)=>{\n  const basicHit = 100;\n  const hitProbability = basicHit + attackerHit - targetDodge;\n  const checkRamdom = Math.round(Math.random()*100 + 1);\n  if(hitProbability < checkRamdom) {\n    return false\n  }else return true;\n};","import React,{ useState } from 'react';\nimport { Container, Sprite, Graphics, Text } from '@inlet/react-pixi/animated';\nimport { loader } from '../DataLoader';\nimport * as PIXI from \"pixi.js\";\nimport { ProbabilityCount } from \"../Common/ProbabilityCount\";\nimport { chessAttackResult, chessMoved } from \"../../reducer/chess\";\nimport { enemyChessDefense } from \"../../reducer/enemyChess\";\n\nexport const BattleBoard = ({ props })=>{\n  const { \n    battleInfo, setMoveStep, setBattleInfo, setAnimeShow, setCurrentBGM, dispatch\n  } = props;\n  const [ atkSelectd, setAtkSelectd ] = useState({\n    key:0,\n  });\n  const CreateAttackerInfo = ({ pX=0, pY=0, data })=>{\n    return <Container x={pX} y={pY} sortableChildren={true}>\n      <Text\n        text={'攻'}\n        x={220}\n        y={0}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 30,\n          fill:['#ffffff', '#00ff99'],\n        })}\n      />\n      <Text\n        text={data.cn}\n        x={60}\n        y={-3}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 16,\n          fill:'#ffffff',\n        })}\n      />\n      <Text\n        text={`${data.hp} / ${data.fullValue.hp}`}\n        x={60}\n        y={17}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 16,\n          fill:'#ff6b6b',\n        })}\n      />\n      <Text\n        text={`${data.sp} / ${data.fullValue.sp}`}\n        x={60}\n        y={34}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 16,\n          fill:'#0466c8',\n        })}\n      />\n      <Sprite\n        width={50}\n        height={50}\n        x={0}\n        y={0}\n        image={loader.resources[`${data.name}-head-default`].data}\n      />\n      <Text\n        text={`招式選擇：`}\n        x={0}\n        y={80}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 16,\n          fill:'#ffffff',\n        })}\n      />\n      <Graphics\n        x={0}\n        y={115}\n        zIndex={1}\n        draw={g=> {\n          g.lineStyle(1,`0xffffff`,1);\n          g.beginFill(`0x0f0f1b`);\n          g.drawRoundedRect(0,0,240,180,8);\n          g.endFill();\n        }}\n      />\n      {data.skill.map((value,key)=>{\n        const skillCanUse = data.sp - value.sp >= 0;\n        return <React.Fragment key={key}>\n          <Text\n            zIndex={2}\n            interactive={skillCanUse}\n            buttonMode={true}\n            text={value.name}\n            x={20}\n            y={130+(key*24)}\n            style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n              fontSize: 16,\n              fill: ((atkSelectd.key===key)&&skillCanUse) ? ['#ffffff', '#00ff99'] :  \n                skillCanUse ? '#ffffff' : '#8d99ae',\n              fontWeight: (atkSelectd.key===key) ? 600 : 300\n            })}\n            pointertap={()=>setAtkSelectd({\n              key: key\n            })}\n          />\n        </React.Fragment>\n      })}\n    </Container>\n  };\n  const CreateTargetInfo = ({ pX=0, pY=0, data })=>{\n    return <Container x={pX} y={pY} sortableChildren={true}>\n      <Text\n        text={'防'}\n        x={0}\n        y={0}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 30,\n          fill:['#ffffff', '#ee6c4d'],\n        })}\n      />\n      <Text\n        text={data.cn}\n        anchor={{x:1,y:0}}\n        x={190}\n        y={-3}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 16,\n          fill:'#ffffff',\n        })}\n      />\n      <Text\n        text={`${data.hp} / ${data.fullValue.hp}`}\n        anchor={{x:1,y:0}}\n        x={190}\n        y={17}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 16,\n          fill:'#ff6b6b',\n        })}\n      />\n      <Text\n        text={`${data.sp} / ${data.fullValue.sp}`}\n        anchor={{x:1,y:0}}\n        x={190}\n        y={34}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 16,\n          fill:'#0466c8',\n        })}\n      />\n      <Sprite\n        width={50}\n        height={50}\n        x={200}\n        y={0}\n        image={loader.resources[`${data.name}-head-default`].data}\n      />\n    </Container>\n  };\n  const ForecastInfo = ({ pX, pY, data })=>{\n    return <Container x={pX} y={pY} sortableChildren={true}>\n      <Graphics\n        x={0}\n        y={0}\n        zIndex={1}\n        draw={g=> {\n          g.lineStyle(1,`0x00ff99`,1);\n          g.beginFill(`0x0f0f1b`);\n          g.drawRoundedRect(0,0,265,215,8);\n          g.endFill();\n        }}\n      />\n      <Text\n        text={`招式：`}\n        zIndex={2}\n        x={20}\n        y={20}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 20,\n          fill:'#ffffff'\n        })}\n      />\n      <Text\n        text={`${data.attacker.skill[atkSelectd.key].name}`}\n        zIndex={2}\n        x={80}\n        y={22}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 16,\n          fill:'#00ff99'\n        })}\n      />\n      <Text\n        text={`攻擊力：`}\n        zIndex={2}\n        x={20}\n        y={50}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 20,\n          fill:'#ffffff'\n        })}\n      />\n      <Text\n        text={`${data.attacker.skill[atkSelectd.key].atk}`}\n        zIndex={2}\n        x={100}\n        y={52}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 18,\n          fill:'#fdc500'\n        })}\n      />\n      <Text\n        text={`命中率：`}\n        zIndex={2}\n        x={20}\n        y={80}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 20,\n          fill:'#ffffff'\n        })}\n      />\n      <Text\n        text={`${\n          100 +\n          ((data.attacker.skill[atkSelectd.key].hitfix - data.target.dodge)>=0 ? 0 :\n            (data.attacker.skill[atkSelectd.key].hitfix - data.target.dodge))\n        }%`}\n        zIndex={2}\n        x={100}\n        y={82}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 18,\n          fill:'#ffffff'\n        })}\n      />\n      <Text\n        text={`消耗：`}\n        zIndex={2}\n        x={20}\n        y={110}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 20,\n          fill:'#ffffff'\n        })}\n      />\n      <Text\n        text={`${data.attacker.skill[atkSelectd.key].sp}`}\n        zIndex={2}\n        x={80}\n        y={110}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 18,\n          fill:'#0466c8'\n        })}\n      />\n    </Container>\n  };\n  return <Graphics\n    x={400}\n    y={300}\n    zIndex={99}\n    draw={g=> {\n      g.lineStyle(1,`0xffffff`,1);\n      g.beginFill(`0x22223b`);\n      g.drawRoundedRect(-300,-200,600,400,8);\n      g.endFill();\n    }}\n  >\n    <CreateAttackerInfo\n      pX={-270}\n      pY={-180}\n      data={battleInfo.attacker}\n    />\n    <CreateTargetInfo\n      pX={20}\n      pY={-180}\n      data={battleInfo.target}\n    />\n    <ForecastInfo\n      pX={0}\n      pY={-100}\n      data={battleInfo}\n    />\n    <Text\n      interactive={true}\n      buttonMode={true}\n      text={'攻擊'}\n      anchor={0.5}\n      x={180}\n      y={160}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 20,\n        fill:'#ffffff',\n      })}\n      pointertap={()=>{\n        setCurrentBGM(battleInfo.attacker.name);\n        const isHit = ProbabilityCount(\n          battleInfo.attacker.skill[atkSelectd.key].hitfix,\n          battleInfo.target.dodge\n        );\n        dispatch(chessAttackResult({\n          key: battleInfo.attacker.key,\n          lessSp: battleInfo.attacker.skill[atkSelectd.key].sp\n        }));\n        dispatch(chessMoved({\n          key: battleInfo.attacker.key,\n        }));\n        if(isHit){\n          dispatch(enemyChessDefense({\n            key: battleInfo.target.key,\n            damage: battleInfo.attacker.skill[atkSelectd.key].atk\n          }));\n        };\n        setAnimeShow({\n          status:true,\n          type:'USER',\n          isHit: isHit,\n          attacker:{ \n            key:battleInfo.attacker.key,\n            skill:battleInfo.attacker.skill[atkSelectd.key],\n            prevSP:battleInfo.attacker.sp\n          },\n          target:{ \n            key:battleInfo.target.key,\n            isHit:isHit,\n            prevLife:battleInfo.target.hp\n          }\n        });\n        setBattleInfo({\n          status:false,\n          attacker:{ key:'' },\n          target:{ key:'' }\n        });\n      }}\n    />\n    <Text\n      interactive={true}\n      buttonMode={true}\n      text={'取消'}\n      anchor={0.5}\n      x={240}\n      y={160}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 20,\n        fill:'#ffffff',\n      })}\n      pointertap={()=>{\n        setMoveStep(true);\n        setBattleInfo({\n          status:false,\n          attacker:{ key:'' },\n          target:{ key:'' }\n        })\n      }}\n    />\n  </Graphics>\n};","import React from 'react';\nimport { Sprite } from '@inlet/react-pixi/animated';\nimport { Spring } from 'react-spring/renderprops';\nimport { loader } from '../../DataLoader';\n\nexport const AnimeShowBG = ({\n  props,\n})=>{\n  const { stageStatus, BGstatus, BGprop, SkBGprop, \n    setSkBGpops, setBGpops } = props;\n  return <>\n    {BGstatus.type==='STOP'&&<Sprite\n      x={-400}\n      y={-100}\n      zIndex={1}\n      width={1600}\n      height={500}\n      anchor={0.5}\n      image={loader.resources[`${stageStatus}-BG`].data}\n    />}\n    {BGstatus.type==='STANDBY'&&<Spring\n      from={{ x:-400, y:-100 }}\n      to={{ x: BGprop.toX, y:-100 }}\n      config={{ duration: BGprop.duration }}\n      onRest={()=>{\n        if(BGprop.toX===-400){\n          setBGpops({\n            toX:400,\n            duration: 20000\n          });\n        }else {\n          setBGpops({\n            toX:-400,\n            duration:-1000\n          });\n        };\n      }}\n    >\n      {props => \n        <Sprite\n          zIndex={1}\n          width={1600}\n          height={500}\n          anchor={0.5}\n          image={loader.resources[`${stageStatus}-BG`].data}\n          {...props}\n      />}\n    </Spring>}\n    {BGstatus.type==='ENEMYSTANDBY'&&<Spring\n      from={{ x:400, y:-100 }}\n      to={{ x: -BGprop.toX, y:-100 }}\n      config={{ duration: BGprop.duration }}\n      onRest={()=>{\n        if(-BGprop.toX===400){\n          setBGpops({\n            toX:400,\n            duration: 20000\n          });\n        }else {\n          setBGpops({\n            toX:-400,\n            duration:-1000\n          });\n        };\n      }}\n    >\n      {props => \n        <Sprite\n          zIndex={1}\n          width={1600}\n          height={500}\n          anchor={0.5}\n          image={loader.resources[`${stageStatus}-BG`].data}\n          {...props}\n      />}\n    </Spring>}\n    {BGstatus.type==='SKILL'&&<Spring\n      from={{ x:-400, y:-100 }}\n      to={{ x: SkBGprop.toX, y:-100 }}\n      config={{ duration: SkBGprop.duration }}\n      onRest={()=>{\n        if(SkBGprop.toX===-400){\n          setSkBGpops({\n            toX:400,\n            duration: 500\n          });\n        }else {\n          setSkBGpops({\n            toX:-400,\n            duration:-1000\n          });\n        };\n      }}\n    >\n      {props => \n        <Sprite\n          zIndex={1}\n          width={1600}\n          height={500}\n          anchor={0.5}\n          image={loader.resources[`${stageStatus}-BG`].data}\n          {...props}\n      />}\n    </Spring>}\n    {BGstatus.type==='ENEMYSKILL'&&<Spring\n      from={{ x:400, y:-100 }}\n      to={{ x: -SkBGprop.toX, y:-100 }}\n      config={{ duration: SkBGprop.duration }}\n      onRest={()=>{\n        if(-SkBGprop.toX===400){\n          setSkBGpops({\n            toX:400,\n            duration: 500\n          });\n        }else {\n          setSkBGpops({\n            toX:-400,\n            duration:-1000\n          });\n        };\n      }}\n    >\n      {props => \n        <Sprite\n          zIndex={1}\n          width={1600}\n          height={500}\n          anchor={0.5}\n          image={loader.resources[`${stageStatus}-BG`].data}\n          {...props}\n      />}\n    </Spring>}\n  </>\n};","import React from 'react';\nimport { Container, Sprite, Graphics, Text } from '@inlet/react-pixi/animated';\nimport * as PIXI from \"pixi.js\";\nimport { loader } from '../../DataLoader';\nexport const TopBar = ({\n  right={},\n  left={},\n  showType='',\n  targetHp=0,\n  attackerSp=0\n})=> {\n  const hpBarCount = (hp,full)=>{\n    const leftVal =  Number(full) - Number(hp);\n    const percentage = Number(full) / 200;\n    const result = leftVal / percentage;\n    return result;\n  };\n  const spBarCount = (sp,full)=>{\n    const leftVal =  Number(full) - Number(sp);\n    const percentage = Number(full) / 100;\n    const result = leftVal / percentage;\n    return result;\n  };\n  return <Graphics \n    x={-400}\n    y={-300}\n    zIndex={98}\n    draw={g=> {\n      g.beginFill(`0x000f23`);\n      g.drawRoundedRect(0,0,800,80,0);\n      g.endFill();\n    }}\n  >\n    <Container sortableChildren={true}>\n      <Sprite\n        width={42}\n        height={42}\n        x={370}\n        y={40}\n        anchor={0.5} \n        image={loader.resources[`${showType===\"USER\" ? 'defIcon' : 'atkIcon' }`].data}\n      />\n      <Sprite\n        width={42}\n        height={42}\n        x={420}\n        y={40}\n        anchor={0.5} \n        image={loader.resources[`${showType===\"USER\" ? 'atkIcon' : 'defIcon' }`].data}\n      />\n      {/* left */}\n      <Sprite\n        width={50}\n        height={50}\n        x={50}\n        y={15}\n        image={loader.resources[`${left.name}-head-default`].data}\n      />\n      <Text \n        text={`${showType===\"USER\"?targetHp:left.hp} / ${left.fullValue.hp}`}\n        anchor={{x:1,y:0}} \n        x={320} y={10}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 18,\n          fill:'#e71d36',\n        })}/>\n      <Graphics\n        x={320} y={35}\n        zIndex={1}\n        draw={g=> {\n          g.beginFill(`0xe71d36`);\n          g.drawRoundedRect(0,0,-200,10,0);\n          g.endFill();\n        }}\n      />\n      <Graphics\n        x={320} y={35}\n        zIndex={2}\n        draw={g=> {\n          g.beginFill(`0x333533`);\n          g.drawRoundedRect(-200,0,hpBarCount(showType===\"USER\"?targetHp:left.hp,left.fullValue.hp),10,0);\n          g.endFill();\n        }}\n      />\n      <Text \n        text={`${showType===\"USER\"? left.sp : attackerSp} / ${left.fullValue.sp}`}\n        anchor={{x:1,y:0.3}} \n        x={210} y={55}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 18,\n          fill:'#4A86E8',\n        })}/>\n      <Graphics\n        x={320} y={55}\n        zIndex={1}\n        draw={g=> {\n          g.beginFill(`0x4A86E8`);\n          g.drawRoundedRect(0,0,-100,10,0);\n          g.endFill();\n        }}\n      />\n      <Graphics\n        x={220} y={55}\n        zIndex={2}\n        draw={g=> {\n          g.beginFill(`0x333533`);\n          g.drawRoundedRect(0,0,spBarCount(showType===\"USER\"?left.sp:attackerSp,left.fullValue.sp),10,0);\n          g.endFill();\n        }}\n      />\n      {/* right */}\n      <Sprite\n        width={50}\n        height={50}\n        x={690}\n        y={15}\n        image={loader.resources[`${right.name}-head-default`].data}\n      />\n      <Text \n        text={`${showType===\"USER\"?right.hp:targetHp} / ${right.fullValue.hp}`}\n        anchor={{x:1,y:0}} \n        x={670} y={10}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 18,\n          fill:'#e71d36',\n        })}/>\n      <Graphics\n        x={670} y={35}\n        zIndex={1}\n        draw={g=> {\n          g.beginFill(`0xe71d36`);\n          g.drawRoundedRect(0,0,-200,10,0);\n          g.endFill();\n        }}\n      />\n      <Graphics\n        x={670} y={35}\n        zIndex={2}\n        draw={g=> {\n          g.beginFill(`0x333533`);\n          g.drawRoundedRect(-200,0,hpBarCount(showType===\"USER\"?right.hp:targetHp,right.fullValue.hp),10,0);\n          g.endFill();\n        }}\n      />\n      <Text \n        text={`${showType===\"USER\"? attackerSp : right.sp} / ${right.fullValue.sp}`}\n        anchor={{x:1,y:0.3}} \n        x={560} y={55}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 18,\n          fill:'#4A86E8',\n        })}/>\n      <Graphics\n        x={670} y={55}\n        zIndex={1}\n        draw={g=> {\n          g.beginFill(`0x4A86E8`);\n          g.drawRoundedRect(0,0,-100,10,0);\n          g.endFill();\n        }}\n      />\n      <Graphics\n        x={570} y={55}\n        zIndex={2}\n        draw={g=> {\n          g.beginFill(`0x333533`);\n          g.drawRoundedRect(0,0,spBarCount(showType===\"USER\"?attackerSp:right.sp,right.fullValue.sp),10,0);\n          g.endFill();\n        }}\n      />\n    </Container>\n  </Graphics>\n};","import { fromJS } from \"immutable\";\nexport const lines = fromJS({\n  'Tanjirou': {\n    default:[\n      '(備戰中)',\n      '(備戰中)'\n    ],\n    attack:[\n      '我要成為強者，用強者的力量去保護弱者。',\n      '無論鬼奪走多少生命，人類的意志是怎樣都不會被打敗！'\n    ],\n    dodge:[\n      '危險!!',\n      '冷靜下來! 可以戰勝的。'\n    ],\n    def:[\n      '鬼殺隊不會被一點小傷給打倒!',\n      '不好了! 調整呼吸。'\n    ],\n    dead:[\n      '對不起....鱗瀧師傅..',\n      '禰豆子...'\n    ]\n  },\n  'Nezuko': {\n    default:[\n      '(備戰中)',\n      '(備戰中)'\n    ],\n    attack:[\n      '......!!(人類是家人)',\n      '......!!(打倒惡鬼)'\n    ],\n    dodge:[\n      '......!!(危險)',\n      '......!!(沒事的)'\n    ],\n    def:[\n      '......!!(危險)',\n      '......!!(沒事的)'\n    ],\n    dead:[\n      '......!?',\n      '.....(哥哥)'\n    ]\n  },\n  'Teoni': {\n    default:[\n      '(備戰中)',\n      '(備戰中)'\n    ],\n    attack:[\n      '獵鬼人是最上等的食物!!',\n      '看我吃了你!!'\n    ],\n    dodge:[\n      '沒用沒用 哈哈哈哈!',\n      '就這點程度嗎? 可悲的劍士。'\n    ],\n    def:[\n      '不久就輪到你的死期了!',\n      '我會吃了你!!'\n    ],\n    dead:[\n      '甚麼!?.....我竟然會死在獵鬼人手上.....',\n      '甚麼!?.....我竟然會死在獵鬼人手上.....'\n    ]\n  }\n});","import React, { useState } from 'react';\nimport { Container, Graphics, Sprite, Text } from '@inlet/react-pixi/animated';\nimport * as PIXI from \"pixi.js\";\nimport { loader } from '../../DataLoader';\nimport { lines } from \"../../../constants/lines\";\nexport const BottomBar = ({\n  right={},\n  left={},\n  linesStatus={}\n})=> {\n  const showCharacter = linesStatus.character===\"USER\" ? right.name : left.name;\n  const randomSize = lines.getIn([showCharacter,linesStatus.status]).size-1;\n  const [ random ] = useState(Math.round(Math.random()*randomSize));\n  return <Graphics \n    x={-400}\n    y={150}\n    zIndex={98}\n    draw={g=> {\n      g.beginFill(`0x000f23`);\n      g.drawRoundedRect(0,0,800,150,0);\n      g.endFill();\n    }}\n  >\n    <Container sortableChildren={true}>\n      <Sprite\n        width={100}\n        height={100}\n        x={50}\n        y={25}\n        image={loader.resources[`${showCharacter}-talk-${linesStatus.status}`].data}\n      />\n      <Text \n        text={lines.getIn([showCharacter,linesStatus.status,random])}\n        anchor={{x:0,y:0}} \n        x={170} y={60}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 18,\n          fill:'#ffff',\n        })}/>\n    </Container>\n  </Graphics>\n};","import React,{ useState, useEffect } from \"react\";\nexport const SkillShowProtoType = ({\n  skillName,\n  attackerName,\n  isHit,\n  targetLife,\n  attackerSp,\n  resultLife,\n  resultSp,\n  BGstatus,\n  setBGstatus,\n  setAnimeIsDone,\n  setTargetHp,\n  setAttackerSp,\n  setLinesStatus,\n  setShowSkill,\n  defXPostion,\n  steps,\n  ShowType\n})=>{\n  const [ position, setPosition ] = useState({ x:0, y:0, tint:0xffffff, alpha:1, mass:1, friction:20, tension:170 });\n  // def\n  useEffect(()=>{\n    if(BGstatus.defence && skillName==='防禦'){\n      const timeout = steps({\n        skillName:skillName,\n        isHit:isHit,\n        BGstatus:BGstatus,\n        resultLife:resultLife,\n        setAnimeIsDone:setAnimeIsDone,\n        setLinesStatus:setLinesStatus,\n        setPosition:setPosition,\n      });\n      return ()=> clearTimeout(timeout);\n    };\n  },[ BGstatus, skillName, isHit, resultLife, setAnimeIsDone, steps, setLinesStatus ])\n  // atk\n  useEffect(()=>{\n    if(skillName==='防禦'){ \n      setPosition(prev=>{return{ ...prev, x: defXPostion, y:10 }});\n      return;\n    };\n    const timeout = steps({\n      skillName:skillName,\n      isHit:isHit,\n      targetLife:targetLife,\n      attackerSp:attackerSp,\n      resultLife:resultLife,\n      resultSp:resultSp,\n      setBGstatus:setBGstatus,\n      setTargetHp:setTargetHp,\n      setAttackerSp:setAttackerSp,\n      setLinesStatus:setLinesStatus,\n      setShowSkill:setShowSkill,\n      setPosition:setPosition\n    });\n    return ()=> clearTimeout(timeout);\n  },[ skillName, isHit, targetLife, attackerSp, resultLife, resultSp,\n    setBGstatus, setTargetHp, setAttackerSp, defXPostion, steps, setLinesStatus, setShowSkill ]);\n  return <ShowType\n    skillName={skillName}\n    attackerName={attackerName}\n    position={position}\n  />\n};\n","import { TweenMax } from 'gsap';\nimport numeral from \"numeral\";\nimport { videos } from '../../../components/DataLoader';\nexport const steps = ({\n  skillName='',\n  isHit=false,\n  targetLife=0,\n  attackerSp=0,\n  resultLife=0,\n  resultSp=0,\n  BGstatus={},\n  setBGstatus=null,\n  setAnimeIsDone=null,\n  setTargetHp=null,\n  setAttackerSp=null,\n  setLinesStatus=null,\n  setPosition=null,\n  setShowSkill=null\n}) => {\n  // 技能動畫:\n  switch (skillName) {\n    case '防禦':\n      setPosition(prev=>{return{ ...prev, x:200, y:50, tension:100 }});\n      const defStart = ()=>{\n        if(isHit){\n          return isHitStep();\n        }else return isDodge();\n      };\n      const isHitStep = ()=> {\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:250, y:50, mass:2, \n            friction:5, tension:1000, tint:0xd00000}});\n          // callback\n          if(resultLife<=0){\n            return isDead({ type:'dead' });\n          }else return next({ type:'def' });\n        },BGstatus.seconds);\n        return timeout;\n      };\n      const isDodge = ()=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:250, y:0 }});\n          // callback\n          next({ type:'dodge' });\n        },BGstatus.seconds);\n        return timeout;\n      };\n      const isDead = ({ type })=> {\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:200, y:50, \n            friction:2, tint:0x03071e\n          }});\n          setLinesStatus(prev=>{ \n            return { \n              status: type,\n              character: prev.character===\"USER\" ? \"ENEMY\" : \"USER\"\n            };\n          });\n          // callback\n          isDeadStep2();\n        },5000);\n        return timeout;\n      };\n      const isDeadStep2 = ()=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return { ...prev, alpha:0 }});\n          // callback\n          end();\n        },3000);\n        return timeout;\n      };\n      const next = ({ type })=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:200, y:50, mass:1, \n            friction:20, tension:170, tint:0xffffff}});\n          setLinesStatus(prev=>{ \n            return { \n              status: type,\n              character: prev.character===\"USER\" ? \"ENEMY\" : \"USER\"\n            };\n          });\n          // callback\n          end();\n        },5000);\n        return timeout;\n      };\n      const end = ()=> {\n        const timeout = setTimeout(() => {\n          // callback\n          setAnimeIsDone(true);\n        },3000);\n        return timeout;\n      };\n      return defStart();\n    // ATK\n    case '捌之型―滝壺':\n      setBGstatus({ type:'STANDBY', defence:false, seconds:0 });\n      setPosition(prev=>{return{ ...prev, x:550,y:50,tension:100 }});\n      const skill3atkStart = ()=>{\n        setPosition(prev=>{return{ ...prev, x:250, y:50, tension:100 }});\n        // callback\n        return skill3step1();\n      };\n      const skill3step1 = ()=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:0, y:-100, tension:100 }});\n          setBGstatus(prev=>{return{ ...prev, type:'SKILL' }});\n          // callback\n          skill3step2();\n        },3000);\n        return timeout;\n      };\n      const skill3step2 = ()=>{\n        const run =  { number: attackerSp };\n        TweenMax.to(run, 0.8, {\n          number: resultSp,\n          onUpdate: () => {\n            setAttackerSp(numeral(run.number).format(\"0\"))\n          },\n        });\n        setLinesStatus(prev=>{ return { ...prev, status:'attack' }});\n        setShowSkill(prev=>{\n          const video = videos[`${prev.name}`].skill3.baseTexture.resource.source;\n          video.play();\n          return { ...prev, \n            status:true, \n            type:'3',\n            callback:()=>{\n              setBGstatus(prev=>{return{ ...prev, type:'STOP', defence:true }});\n              setPosition(prev=>{return{ ...prev, x:-400, y:50, tension:1000 }});\n              skill3step3();\n            }\n          };\n        });\n      };\n      const skill3step3 = ()=>{\n        const run = { number: targetLife };\n        if(isHit) {\n          TweenMax.to(run, 0.8, {\n            number: resultLife<0 ? 0 : resultLife,\n            onUpdate: () => {\n              setTargetHp(numeral(run.number).format(\"0\"))\n            },\n          });\n        };\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:550, y:50, tension:50 }});\n        },3000);\n        return timeout;\n      };\n      return skill3atkStart();\n    default:\n      setBGstatus({ type:'STANDBY', defence:false, seconds:1200 });\n      setPosition(prev=>{return{ ...prev, x:550,y:50,tension:100 }});\n      const atkStart = ()=>{\n        setPosition(prev=>{return{ ...prev, x:250, y:50, tension:100 }});\n        // callback\n        return step1();\n      };\n      const step1 = ()=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:0, y:50, tension:100 }});\n          setBGstatus(prev=>{return{ ...prev, type:'SKILL' }});\n          // callback\n          step2();\n        },3000);\n        return timeout;\n      };\n      const step2 = ()=>{\n        const run =  { number: attackerSp };\n        TweenMax.to(run, 0.8, {\n          number: resultSp,\n          onUpdate: () => {\n            setAttackerSp(numeral(run.number).format(\"0\"))\n          },\n        });\n        setLinesStatus(prev=>{ return { ...prev, status:'attack' }});\n        const timeout = setTimeout(() => {\n          setBGstatus(prev=>{return{ ...prev, type:'STOP', defence:true }});\n          // callback\n          step3();\n        },3000);\n        return timeout;\n      };\n      const step3 = ()=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:-250, y:50, tension:1000 }});\n          // callback\n          step4();\n        },1000);\n        return timeout;\n      };\n      const step4 = ()=>{\n        const run = { number: targetLife };\n        if(isHit) {\n          TweenMax.to(run, 0.8, {\n            number: resultLife<0 ? 0 : resultLife,\n            onUpdate: () => {\n              setTargetHp(numeral(run.number).format(\"0\"))\n            },\n          });\n        };\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:550, y:50, tension:50 }});\n        },3000);\n        return timeout;\n      };\n      return atkStart();\n  }\n};","import React from \"react\";\nimport { loader } from '../../../components/DataLoader';\nimport { Spring } from 'react-spring/renderprops';\nimport { Sprite } from '@inlet/react-pixi/animated';\n\nexport const ShowType = ({\n  skillName,\n  attackerName,\n  position,\n}) =>{\n  switch (skillName) {\n    case `斬擊`:\n      return <Spring\n        from={{ x:550, y:50 }}\n        to={{ x:position.x, y:position.y }}\n        config={{ \n          mass:1,\n          tension: position.tension,\n          friction:20,\n        }}\n      >\n      {props => \n        <Sprite\n          zIndex={3}\n          width={200}\n          height={200}\n          anchor={0.5}\n          image={loader.resources[`${attackerName}-fight-typeA`].data}\n          {...props}\n        />}\n      </Spring>\n    case `防禦`:\n      return <Spring\n        from={{ x:650, y:50 }}\n        to={{ x:position.x, y:position.y }}\n        config={{ \n          mass:1,\n          tension: position.tension,\n          friction:20,\n        }}\n      >\n      {props => \n        <Sprite\n          zIndex={2}\n          width={200}\n          height={200}\n          anchor={0.5}\n          alpha={position.alpha}\n          tint={position.tint}\n          image={loader.resources[`${attackerName}-fight-typeA`].data}\n          {...props}\n        />}\n      </Spring>\n    default:\n      return <Spring\n        from={{ x:550, y:50 }}\n        to={{ x:position.x, y:position.y }}\n        config={{ \n          mass:1,\n          tension: position.tension,\n          friction:20,\n        }}\n      >\n      {props => \n        <Sprite\n          zIndex={3}\n          width={200}\n          height={200}\n          anchor={0.5}\n          image={loader.resources[`${attackerName}-fight-typeA`].data}\n          {...props}\n        />}\n      </Spring>\n    };\n};","import React from \"react\";\n// part\nimport { SkillShowProtoType } from \"../../SkillShowProtoType\";\nimport { steps } from \"./steps\";\nimport { ShowType } from \"./ShowType\";\n\nexport const TanjirouSkill = ( props )=>{\n  return <SkillShowProtoType \n    {...props}\n    defXPostion={550}\n    steps={steps}\n    ShowType={ShowType}\n  />\n};","import { TweenMax } from 'gsap';\nimport numeral from \"numeral\";\nexport const steps = ({\n  skillName='',\n  isHit=false,\n  targetLife=0,\n  attackerSp=0,\n  resultLife=0,\n  resultSp=0,\n  BGstatus={},\n  setBGstatus=null,\n  setAnimeIsDone=null,\n  setTargetHp=null,\n  setAttackerSp=null,\n  setLinesStatus=null,\n  setPosition=null,\n  setShowSkill=null\n}) => {\n  // 技能動畫:\n  switch (skillName) {\n    case '防禦':\n      setPosition(prev=>{return{ ...prev, x:200, y:50, tension:100 }});\n      const defStart = ()=>{\n        if(isHit){\n          return isHitStep();\n        }else return isDodge();\n      };\n      const isHitStep = ()=> {\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:250, y:50, mass:2, \n            friction:5, tension:1000, tint:0xd00000}});\n          // callback\n          if(resultLife<=0){\n            return isDead({ type:'dead' });\n          }else return next({ type:'def' });\n        },BGstatus.seconds);\n        return timeout;\n      };\n      const isDodge = ()=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:250, y:0 }});\n          // callback\n          next({ type:'dodge' });\n        },BGstatus.seconds);\n        return timeout;\n      };\n      const isDead = ({ type })=> {\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:200, y:50, \n            friction:2, tint:0x03071e\n          }});\n          setLinesStatus(prev=>{ \n            return { \n              status: type,\n              character: prev.character===\"USER\" ? \"ENEMY\" : \"USER\"\n            };\n          });\n          // callback\n          isDeadStep2();\n        },5000);\n        return timeout;\n      };\n      const isDeadStep2 = ()=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return { ...prev, alpha:0 }});\n          // callback\n          end();\n        },3000);\n        return timeout;\n      };\n      const next = ({ type })=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:200, y:50, mass:1, \n            friction:20, tension:170, tint:0xffffff}});\n          setLinesStatus(prev=>{ \n            return { \n              status: type,\n              character: prev.character===\"USER\" ? \"ENEMY\" : \"USER\"\n            };\n          });\n          // callback\n          end();\n        },5000);\n        return timeout;\n      };\n      const end = ()=> {\n        const timeout = setTimeout(() => {\n          // callback\n          setAnimeIsDone(true);\n        },3000);\n        return timeout;\n      };\n      return defStart();\n    // ATK\n    default:\n      setBGstatus({ type:'STANDBY', defence:false, seconds:1200 });\n      setPosition(prev=>{return{ ...prev, x:550,y:50,tension:100 }});\n      const atkStart = ()=>{\n        setPosition(prev=>{return{ ...prev, x:250, y:50, tension:100 }});\n        // callback\n        return step1();\n      };\n      const step1 = ()=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:0, y:50, tension:100 }});\n          setBGstatus(prev=>{return{ ...prev, type:'SKILL' }});\n          // callback\n          step2();\n        },3000);\n        return timeout;\n      };\n      const step2 = ()=>{\n        const run =  { number: attackerSp };\n        TweenMax.to(run, 0.8, {\n          number: resultSp,\n          onUpdate: () => {\n            setAttackerSp(numeral(run.number).format(\"0\"))\n          },\n        });\n        setLinesStatus(prev=>{ return { ...prev, status:'attack' }});\n        const timeout = setTimeout(() => {\n          setBGstatus(prev=>{return{ ...prev, type:'STOP', defence:true }});\n          // callback\n          step3();\n        },3000);\n        return timeout;\n      };\n      const step3 = ()=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:-250, y:50, tension:1000 }});\n          // callback\n          step4();\n        },1000);\n        return timeout;\n      };\n      const step4 = ()=>{\n        const run = { number: targetLife };\n        if(isHit) {\n          TweenMax.to(run, 0.8, {\n            number: resultLife<0 ? 0 : resultLife,\n            onUpdate: () => {\n              setTargetHp(numeral(run.number).format(\"0\"))\n            },\n          });\n        };\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:550, y:50, tension:50 }});\n        },3000);\n        return timeout;\n      };\n      return atkStart();\n  }\n};","import React from \"react\";\nimport { loader } from '../../../components/DataLoader';\nimport { Spring } from 'react-spring/renderprops';\nimport { Sprite } from '@inlet/react-pixi/animated';\n\nexport const ShowType = ({\n  skillName,\n  attackerName,\n  position,\n}) =>{\n  switch (skillName) {\n    case `防禦`:\n      return <Spring\n        from={{ x:650, y:50 }}\n        to={{ x:position.x, y:position.y }}\n        config={{ \n          mass:1,\n          tension: position.tension,\n          friction:20,\n        }}\n      >\n      {props => \n        <Sprite\n          zIndex={2}\n          width={200}\n          height={200}\n          anchor={0.5}\n          alpha={position.alpha}\n          tint={position.tint}\n          image={loader.resources[`${attackerName}-fight`].data}\n          {...props}\n        />}\n      </Spring>\n    default:\n      return <Spring\n        from={{ x:550, y:50 }}\n        to={{ x:position.x, y:position.y }}\n        config={{ \n          mass:1,\n          tension: position.tension,\n          friction:20,\n        }}\n      >\n      {props => \n        <Sprite\n          zIndex={3}\n          width={200}\n          height={200}\n          anchor={0.5}\n          image={loader.resources[`${attackerName}-fight`].data}\n          {...props}\n        />}\n      </Spring>\n    };\n};","import React from \"react\";\n// part\nimport { SkillShowProtoType } from \"../../SkillShowProtoType\";\nimport { steps } from \"./steps\";\nimport { ShowType } from \"./ShowType\";\n\nexport const NezukoSkill = ( props )=>{\n  return <SkillShowProtoType \n    {...props}\n    defXPostion={550}\n    steps={steps}\n    ShowType={ShowType}\n  />\n};","import React from \"react\";\nimport { TanjirouSkill } from \"./TanjirouSkill/Index\";\nimport { NezukoSkill } from \"./Nezuko/Index\";\nexport const ChessSkillShow = ({\n  attacker={},\n  skill={},\n  BGstatus,\n  isHit=false,\n  targetLife=0,\n  attackerSp=0,\n  resultLife=0,\n  resultSp=0,\n  setBGstatus,\n  setAnimeIsDone,\n  setTargetHp,\n  setAttackerSp,\n  setLinesStatus,\n  setShowSkill\n})=>{\n  const defaultprops = {\n    skillName: skill.name,\n    attackerName: attacker.name,\n    isHit: isHit,\n    targetLife: targetLife,\n    attackerSp: attackerSp,\n    resultLife: resultLife,\n    resultSp: resultSp,\n    BGstatus: BGstatus,\n    setBGstatus: setBGstatus,\n    setAnimeIsDone: setAnimeIsDone,\n    setTargetHp: setTargetHp,\n    setAttackerSp: setAttackerSp,\n    setLinesStatus: setLinesStatus,\n    setShowSkill: setShowSkill\n  }\n  switch (attacker.name) {\n    case `Tanjirou`:\n      return <TanjirouSkill {...defaultprops}/>\n    case `Nezuko`:\n      return <NezukoSkill {...defaultprops}/>\n    default:\n      return;\n  };\n};\n\n","import { TweenMax } from 'gsap';\nimport numeral from \"numeral\";\nexport const steps = ({\n  skillName='',\n  isHit=false,\n  targetLife=0,\n  attackerSp=0,\n  resultLife=0,\n  resultSp=0,\n  BGstatus={},\n  setBGstatus=null,\n  setAnimeIsDone=null,\n  setTargetHp=null,\n  setAttackerSp=null,\n  setLinesStatus=null,\n  setPosition=null,\n  setShowSkill=null\n}) => {\n  switch (skillName) {\n    case '防禦':\n      setPosition(prev=>{return{ ...prev, x:-200, tension:150 }});\n      const defStart = ()=>{\n        if(isHit){\n          return isHitStep();\n        }else return isDodge();\n      };\n      const isHitStep = ()=> {\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:-235, y:20, mass:2, \n            friction:5, tension:1000, tint:0xd00000}});\n          // callback\n          if(resultLife<=0){\n            return isDead({ type:'dead' });\n          }else return next({ type:'def' });\n        },BGstatus.seconds);\n        return timeout;\n      }\n      const isDodge = ()=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:-235, y:-10 }});\n          // callback\n          next({ type:'dodge' });\n        },BGstatus.seconds);\n        return timeout;\n      };\n      const isDead = ({ type })=> {\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:-200, y:10, \n            friction:2, tint:0x03071e\n          }});\n          setLinesStatus(prev=>{ \n            return { \n              status: type,\n              character: prev.character===\"USER\" ? \"ENEMY\" : \"USER\"\n            };\n          });\n          // callback\n          isDeadStep2();\n        },5000);\n        return timeout;\n      };\n      const isDeadStep2 = ()=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return { ...prev, alpha:0 }});\n          // callback\n          end();\n        },3000);\n        return timeout;\n      };\n      const next = ({ type })=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:-200, y:10, mass:1, \n            friction:20, tension:170, tint:0xffffff}});\n          setLinesStatus(prev=>{ \n            return { \n              status: type,\n              character: prev.character===\"USER\" ? \"ENEMY\" : \"USER\"\n            };\n          });\n          // callback\n          end();\n        },5000);\n        return timeout;\n      };\n      const end = ()=> {\n        const timeout = setTimeout(() => {\n          // callback\n          setAnimeIsDone(true);\n        },3000);\n        return timeout;\n      };\n      return defStart();\n    // ATK\n    default:\n      setBGstatus({ type:'ENEMYSTANDBY', defence:false, seconds:1200 });\n      setPosition(prev=>{return{ ...prev, x:-600, tension:100 }});\n      const atkStart = ()=>{\n        setPosition(prev=>{\n          return{ ...prev, x:-200, tension:100 }});\n        // callback\n        return step1();\n      };\n      const step1 = ()=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:0, tension:100 }});\n          setBGstatus(prev=>{return{ ...prev, type:'ENEMYSKILL' }});\n          // callback\n          step2();\n        },3000);\n        return timeout;\n      };\n      const step2 = ()=>{\n        const run =  { number: attackerSp };\n        TweenMax.to(run, 0.8, {\n          number: resultSp,\n          onUpdate: () => {\n            setAttackerSp(numeral(run.number).format(\"0\"))\n          },\n        });\n        setLinesStatus(prev=>{ return { ...prev, status:'attack' }});\n        const timeout = setTimeout(() => {\n          setBGstatus(prev=>{return{ ...prev, type:'STOP', defence:true }});\n          // callback\n          step3();\n        },3000);\n        return timeout;\n      };\n      const step3 = ()=>{\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:175, tension:1000 }});\n          // callback\n          step4();\n        },1000);\n        return timeout;\n      };\n      const step4 = ()=>{\n        const run = { number: targetLife };\n        if(isHit) {\n          TweenMax.to(run, 0.8, {\n            number: resultLife<0 ? 0 : resultLife,\n            onUpdate: () => {\n              setTargetHp(numeral(run.number).format(\"0\"))\n            },\n          });\n        };\n        const timeout = setTimeout(() => {\n          setPosition(prev=>{return{ ...prev, x:-600, tension:50 }});\n        },3000);\n        return timeout;\n      };\n      return atkStart();\n  }\n};","import React from \"react\";\nimport { loader } from '../../../components/DataLoader';\nimport { Spring } from 'react-spring/renderprops';\nimport { Sprite } from '@inlet/react-pixi/animated';\n\nexport const ShowType = ({\n  skillName,\n  attackerName,\n  position,\n}) =>{\n  switch (skillName) {\n    case '防禦':\n      return <Spring\n        from={{ x:-600, y:10 }}\n        to={{ x:position.x, y:position.y }}\n        config={{ \n          mass: position.mass,\n          tension: position.tension,\n          friction: position.friction,\n        }}\n      >\n      {props => \n        <Sprite\n          zIndex={2}\n          width={300}\n          height={300}\n          anchor={0.5}\n          alpha={position.alpha}\n          tint={position.tint}\n          image={loader.resources[`${attackerName}-fight`].data}\n          {...props}\n        />}\n      </Spring>\n    default:\n      return <Spring\n        from={{ x:-600, y:50 }}\n        to={{ x:position.x, y:position.y }}\n        config={{ \n          mass:1,\n          tension: position.tension,\n          friction:20,\n        }}\n      >\n      {props => \n        <Sprite\n          zIndex={3}\n          width={300}\n          height={300}\n          anchor={0.5}\n          image={loader.resources[`${attackerName}-fight`].data}\n          {...props}\n        />}\n      </Spring>\n  }\n};","import React from \"react\";\n// part\nimport { SkillShowProtoType } from \"../../SkillShowProtoType\";\nimport { steps } from \"./steps\";\nimport { ShowType } from \"./ShowType\";\n\nexport const TeoniSkill = ( props )=>{\n  return <SkillShowProtoType \n    {...props}\n    defXPostion={-600}\n    steps={steps}\n    ShowType={ShowType}\n  />\n};\n","import React from \"react\";\nimport { TeoniSkill } from \"./TeoniSkill/Index\";\nexport const EnemyChessSkillShow = ({\n  attacker={},\n  skill={},\n  BGstatus,\n  isHit=false,\n  targetLife=0,\n  attackerSp=0,\n  resultLife=0,\n  resultSp=0,\n  setBGstatus,\n  setAnimeIsDone,\n  setTargetHp,\n  setAttackerSp,\n  setLinesStatus,\n  setShowSkill\n})=>{\n  const defaultprops = {\n    skillName: skill.name,\n    attackerName: attacker.name,\n    isHit: isHit,\n    targetLife: targetLife,\n    attackerSp: attackerSp,\n    resultLife: resultLife,\n    resultSp: resultSp,\n    BGstatus: BGstatus,\n    setBGstatus: setBGstatus,\n    setAnimeIsDone: setAnimeIsDone,\n    setTargetHp: setTargetHp,\n    setAttackerSp: setAttackerSp,\n    setLinesStatus: setLinesStatus,\n    setShowSkill: setShowSkill\n  }\n  switch (attacker.name) {\n    case `Teoni`:\n      return <TeoniSkill {...defaultprops}/>\n    default:\n      return;\n  };\n};\n","import React,{ useState, useEffect } from 'react';\nimport { Container, Graphics, Sprite } from '@inlet/react-pixi/animated';\nimport { chessDead, chessRoundRest } from \"../../../reducer/chess\";\nimport { enemyChessDead } from \"../../../reducer/enemyChess\";\nimport { videos, loader } from '../../DataLoader';\n// part\nimport { AnimeShowBG } from \"./AinmeShowBG\";\nimport { TopBar } from \"./TopBar\";\nimport { BottomBar } from \"./BottomBar\";\n// skill\nimport { ChessSkillShow } from \"../../../constants/ChessSkillShow/Index\";\nimport { EnemyChessSkillShow } from \"../../../constants/EnemyChessSkillShow/Index\";\nexport const BattleAnimeShow = ({\n  props\n}) =>{\n  const { stageStatus, animeShow, chess, enemyChess, \n    setMoveStep, setAnimeShow, setUsualTip, setCurrentChess, dispatch } = props;\n  const { target, attacker } = animeShow;\n  // CreateContent\n  const CreateContent = ()=>{\n    const [ BGstatus, setBGstatus ] = useState({ \n      type:'STANDBY',\n      defence: false,\n      seconds: 1200\n    });\n    const [ BGprop, setBGpops ] = useState({ toX:400, duration: 20000 });\n    const [ SkBGprop, setSkBGpops ] = useState({ toX:400, duration: 500 });\n    const [ targetHp, setTargetHp ] = useState(target.prevLife);\n    const [ attackerSp, setAttackerSp ] = useState(attacker.prevSP);\n    const [ animeIsDone, setAnimeIsDone ] = useState(false);\n    const [ linesStatus, setLinesStatus ] = useState({ \n      character: animeShow.type,\n      status:'default'\n    });\n    const [ showSkill, setShowSkill ] = useState({ \n      status:false,\n      type:'0',\n      name: chess[attacker.key].name,\n      callback: null\n    });\n    const fetchChessType = ( type='' )=>{\n      switch (type) {\n        case 'CHESS':\n          if(animeShow.type===\"USER\"){\n            return chess[typeof(animeShow.attacker.key)!=='number'?0:animeShow.attacker.key];\n          }else return chess[typeof(animeShow.target.key)!=='number'?0:animeShow.target.key];\n        case 'ENEMYCHESS':\n          if(animeShow.type===\"USER\"){\n            return enemyChess[typeof(animeShow.target.key)!=='number'?0:animeShow.target.key];\n          }else return enemyChess[typeof(animeShow.attacker.key)!=='number'?0:animeShow.attacker.key];\n        default:\n          break;\n      }; \n    };\n    const CreateSkillSprite = () => {\n      const video = videos[`${chess[attacker.key].name}`][`skill${showSkill.type}`];\n      const videoDom = video.baseTexture.resource.source;\n      videoDom.onended = function() {\n        setShowSkill(prev=>{\n          videoDom.currentTime = 0;\n          return { ...prev, status:false }\n        });\n        showSkill.callback();\n      };\n      return <Sprite\n        zIndex={99}\n        width={600}\n        height={370}\n        anchor={0.5}\n        x={0}\n        y={-35}\n        image={loader.resources[`${chess[attacker.key].name}-talk-attack`].data}\n        texture={video}\n      />\n    }\n    //  關閉動畫判斷\n    useEffect(()=>{\n      if(!animeIsDone){ return };\n      setAnimeShow({\n        status:false,\n        type:'',\n        isHit:false,\n        attacker:{ key:'', skill:{}, prevSP:0 },\n        target:{ key:'', isHit:false, prevLife:0 }\n      });\n      // result check line\n      if(animeShow.type===\"USER\" &&\n        enemyChess[target.key].hp <= 0\n      ){\n        dispatch(enemyChessDead({ key:target.key }));\n        setUsualTip({\n          title:`已擊敗 ${enemyChess[target.key].cn}!`,\n          status:true,\n        });\n      }else if(animeShow.type===\"ENEMY\" &&\n        chess[target.key].hp <= 0\n      ){\n        dispatch(chessDead({ key:target.key }));\n        setUsualTip({\n          title:`${chess[target.key].cn} 戰敗`,\n          status:true,\n        });\n      }else if(animeShow.type===\"ENEMY\") {\n        dispatch(chessRoundRest());\n        setCurrentChess(prev=>{\n          return { ...prev, type:\"USERROUND\"\n        }});\n        setUsualTip({\n          title:`我方回合`,\n          status:true,\n        });\n      }else {\n        setMoveStep(true);\n      };\n    },[ animeIsDone ]);\n    return <Container sortableChildren={true}>\n      <AnimeShowBG\n        props={{stageStatus, BGstatus, BGprop, SkBGprop, setBGpops, setSkBGpops}}\n      />\n      <TopBar\n        right={fetchChessType('CHESS')}\n        left={fetchChessType('ENEMYCHESS')}\n        showType={animeShow.type}\n        targetHp={targetHp}\n        attackerSp={attackerSp}\n      />\n      <ChessSkillShow\n        attacker={fetchChessType('CHESS')}\n        skill={\n          animeShow.type===\"USER\"?\n          animeShow.attacker.skill:\n          { name:'防禦' }\n        }\n        BGstatus={BGstatus}\n        isHit={animeShow.isHit}\n        targetLife={target.prevLife}\n        attackerSp={attacker.prevSP}\n        resultLife={\n          target.prevLife -\n          animeShow.attacker.skill.atk \n        }\n        resultSp={\n          attacker.prevSP -\n          animeShow.attacker.skill.sp\n        }\n        setBGstatus={setBGstatus}\n        setAnimeIsDone={setAnimeIsDone}\n        setTargetHp={setTargetHp}\n        setAttackerSp={setAttackerSp}\n        setLinesStatus={setLinesStatus}\n        setShowSkill={setShowSkill}\n      />\n      <EnemyChessSkillShow\n        attacker={fetchChessType('ENEMYCHESS')}\n        skill={\n          animeShow.type===\"USER\"?\n          { name:'防禦' }:\n          animeShow.attacker.skill\n        }\n        BGstatus={BGstatus}\n        isHit={animeShow.isHit}\n        targetLife={target.prevLife}\n        attackerSp={attacker.prevSP}\n        resultLife={\n          target.prevLife -\n          animeShow.attacker.skill.atk \n        }\n        resultSp={\n          attacker.prevSP -\n          animeShow.attacker.skill.sp\n        }\n        setBGstatus={setBGstatus}\n        setAnimeIsDone={setAnimeIsDone}\n        setTargetHp={setTargetHp}\n        setAttackerSp={setAttackerSp}\n        setLinesStatus={setLinesStatus}\n        setShowSkill={setShowSkill}\n      />\n      {showSkill.status && <CreateSkillSprite/>}\n      <BottomBar\n        right={fetchChessType('CHESS')}\n        left={fetchChessType('ENEMYCHESS')}\n        linesStatus={linesStatus}\n      />\n      <Sprite\n        zIndex={99}\n        interactive={true}\n        buttonMode={true}\n        width={75}\n        height={35}\n        x={310}\n        y={240}\n        image={loader.resources[`fightOff`].data}\n        pointertap={()=>{\n          setAnimeShow({\n            status:false,\n            type:'',\n            isHit:false,\n            attacker:{ key:'', skill:{}, prevSP:0 },\n            target:{ key:'', isHit:false, prevLife:0 }\n          });\n          // result check line\n          if(animeShow.type===\"USER\" &&\n            enemyChess[target.key].hp <= 0\n          ){\n            dispatch(enemyChessDead({ key:target.key }));\n            setUsualTip({\n              title:`已擊敗 ${enemyChess[target.key].cn}!`,\n              status:true,\n            });\n          }else if(animeShow.type===\"ENEMY\" &&\n            chess[target.key].hp <= 0\n          ){\n            dispatch(chessDead({ key:target.key }));\n            setUsualTip({\n              title:`${chess[target.key].cn} 戰敗`,\n              status:true,\n            });\n          }else if(animeShow.type===\"ENEMY\") {\n            dispatch(chessRoundRest());\n            setCurrentChess(prev=>{\n              return { ...prev, type:\"USERROUND\"\n            }});\n            setUsualTip({\n              title:`我方回合`,\n              status:true,\n            });\n          }else {\n            setMoveStep(true);\n          };\n          const clearAllTimeouts = ()=>{\n            let id = window.setTimeout(null,0);\n            while (id--) { window.clearTimeout(id); };\n          };\n          clearAllTimeouts();\n        }}\n      />\n    </Container>\n  };\n  return <Graphics\n    x={400}\n    y={300}\n    zIndex={99}\n    draw={g=> {\n      g.beginFill(`0x011627`);\n      g.drawRoundedRect(-400,-300,800,600,0);\n      g.endFill();\n    }}\n  >\n    <CreateContent/>\n  </Graphics>\n};","import React from 'react';\nimport { Sprite, Graphics, Text } from '@inlet/react-pixi/animated';\nimport { loader } from '../DataLoader';\nimport * as PIXI from \"pixi.js\";\nimport { stageRule } from \"../../constants/stageRule\";\nexport const OtherTab = ({ props })=> {\n  const {\n    stageStatus='',\n    roundNum=Number,\n    setMoveStep,\n    setOtherTab,\n    setTipStatus,\n    setCurrentChess\n  } = props;\n  return <Graphics\n    x={400}\n    y={300}\n    draw={g=> {\n      g.lineStyle(1,`0xffffff`,1);\n      g.beginFill(`0x22223b`);\n      g.drawRoundedRect(-200,-150,400,300,8);\n      g.endFill();\n    }}\n  >\n    <Sprite\n      interactive={true}\n      buttonMode={true}\n      width={25}\n      height={25}\n      anchor={0.5}\n      x={175}\n      y={-125}\n      image={loader.resources[`closeIcon`].data}\n      pointertap={()=>{\n        setMoveStep(true);\n        setOtherTab(false);\n        setTipStatus(prev=>{\n          return {...prev, status:false }\n        });\n      }}\n    />\n    <Sprite\n      interactive={true}\n      buttonMode={true}\n      width={75}\n      height={35}\n      x={105}\n      y={90}\n      image={loader.resources[`endBtn`].data}\n      pointertap={()=>{\n        setCurrentChess({\n          key:0,\n          type:\"ENDROUND\"\n        });\n        setTipStatus(prev=>{\n          return {...prev,\n            title:`結束回合?`, \n            status:true\n          }\n        });\n      }}\n    />\n    <Text\n      text={'作戰目的'}\n      x={-170}\n      y={-125}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 18,\n        fill:['#ffffff', '#00ff99'],\n      })}\n    />\n    <Text\n      text={stageRule.getIn([stageStatus,'ruleText','win'])}\n      x={-150}\n      y={-90}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 16,\n        fill:['#ffffff', '#ffffff'],\n      })}\n    />\n    <Text\n      text={'戰敗條件'}\n      x={-170}\n      y={-40}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 18,\n        fill:['#ffffff', '#ee6c4d'],\n      })}\n    />\n    <Text\n      text={stageRule.getIn([stageStatus,'ruleText','lose'])}\n      x={-150}\n      y={-5}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 16,\n        fill:['#ffffff', '#ffffff'],\n      })}\n    />\n    <Text\n      text={'回合數'}\n      x={-170}\n      y={45}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 18,\n        fill:['#ffffff', '#8d99ae'],\n      })}\n    />\n    <Text\n      text={`第 ${roundNum} 回`}\n      x={-150}\n      y={80}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 16,\n        fill:['#ffffff', '#ffffff'],\n      })}\n    />\n  </Graphics>\n};\n\n","import React from 'react';\nimport { Container, Sprite, Text } from '@inlet/react-pixi/animated';\nimport { loader } from '../../DataLoader';\nimport * as PIXI from \"pixi.js\";\nexport const EnemyList = ({ \n  oder=0,\n  enemyRandomSkill=0,\n  enemyList=[]\n})=>{\n  const skill = enemyList[oder].skill;\n  return <Container sortableChildren={true}>\n    <Sprite\n      width={65}\n      height={65}\n      anchor={0.5}\n      x={175}\n      y={-75}\n      image={loader.resources[`${enemyList[oder].name}-head-default`].data}\n    />\n    <Text \n      text={`${enemyList[oder].cn} / 技能`}\n      anchor={{x:0.5}}\n      x={175} y={-30}\n      style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 18,\n        fill:'#ffffff',\n      })}/>\n    <Text \n      text={`${skill[enemyRandomSkill].name}`}\n      anchor={{x:0.5}}\n      x={175} y={10}\n      style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 20,\n        fill:['#f15bb5','#e0aaff'],\n      })}/>\n    <Text \n      text={`ATK / ${skill[enemyRandomSkill].atk}`}\n      anchor={{x:0.5}}\n      x={175} y={40}\n      style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 18,\n        fill:['#f15bb5','#e0aaff'],\n      })}/>\n  </Container>\n};","import React from 'react';\nimport { Container, Graphics, Sprite } from '@inlet/react-pixi/animated';\nimport { loader } from '../../DataLoader';\nexport const ChessList = ({\n  chessList,\n  defChess,\n  setDefChess\n})=>{\n  return <Container sortableChildren={true}>\n    <Graphics\n      x={-250}\n      y={-180}\n      zIndex={1}\n      draw={g=> {\n        g.lineStyle(1,`0xffffff`,1);\n        g.beginFill(`0x0f0f1b`);\n        g.drawRoundedRect(0,0,100,360,8);\n        g.endFill();\n      }}\n    />\n    {chessList.map((v,k)=>{\n      const distance = k * 85;\n      return <React.Fragment key={k}>\n        <Sprite\n          interactive={true}\n          buttonMode={true}\n          width={65}\n          height={65}\n          anchor={0.5}\n          zIndex={2}\n          x={-200}\n          y={-125 + distance}\n          image={loader.resources[`${v.name}-head-default`].data}\n          pointertap={()=>setDefChess(k)}\n        />\n        {k===defChess&&<Graphics\n          anchor={0.5}\n          x={-200}\n          y={-125 + distance}\n          zIndex={1}\n          draw={g=> {\n            g.beginFill(`0x7b2cbf`);\n            g.drawRoundedRect(-38,-38,76,76,5);\n            g.endFill();\n          }}\n        />}\n      </React.Fragment>\n    })}\n  </Container>\n};","import React from 'react';\nimport { Container, Graphics, Text } from '@inlet/react-pixi/animated';\nimport * as PIXI from \"pixi.js\";\n\nexport const Information = ({\n  defChess, chessList, atkEnemy\n})=>{\n  const dodge = chessList[defChess].dodge - atkEnemy.hitfix>=0 ? chessList[defChess].dodge - atkEnemy.hitfix : 0;\n  return <Container sortableChildren={true}>\n    <Graphics\n      x={-125} y={-150}\n    >\n      <Text \n        text={`選擇防禦：${chessList[defChess].cn}`}\n        anchor={{x:0}}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 18,\n          fill:'#ffffff',\n        })}/>\n      <Text \n        text={`HP：${chessList[defChess].hp}`}\n        anchor={{x:0}}\n        y={30}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 18,\n          fill:'#ff6b6b',\n        })}/>\n      <Text \n        text={`迴避率：${dodge}%`}\n        anchor={{x:0}}\n        y={60}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 18,\n          fill:['#ffffff', '#4cc9f0'],\n        })}/>\n    </Graphics>\n  </Container>\n}","import React,{ useState } from 'react';\nimport { Graphics, Sprite } from '@inlet/react-pixi/animated';\nimport { loader } from '../../DataLoader';\nimport { ProbabilityCount } from \"../../Common/ProbabilityCount\";\nimport { chessDefense } from \"../../../reducer/chess\";\nimport { enemyChessAttackResult } from \"../../../reducer/enemyChess\";\n// common part\nimport { EnemyList } from \"./EnemyList\";\nimport { ChessList } from \"./ChessList\";\nimport { Information } from \"./Information\";\nexport const EnemyRoundTab = ({ props })=> {\n  const [ defChess, setDefChess ] = useState(0);\n  const { enemyRoundTab, chess, enemyChess,\n    setEnemyRoundTab, setAnimeShow, setCurrentChess, setCurrentBGM, dispatch } = props;\n  const chessList = chess.filter(v=>v.debut);\n  const enemyList = enemyChess.filter(v=>v.debut);\n  const enemySkill = enemyList[enemyRoundTab.oder].skill;\n  const enemySp = enemyList[enemyRoundTab.oder].sp;\n  const getAtkSkill = ()=>{\n    const totalSize = enemySkill.length-1;\n    const random = Math.round(Math.random()*totalSize);\n    const checkSp = (enemySp===0)||(enemySkill[random].sp>enemySp);\n    return checkSp ? 0 : random;\n  };\n  const enemyRandomSkill = getAtkSkill();\n  const getCurrentChessKey = ({ chess, debut, key })=>{\n    let getKey;\n    chess.find((v,k)=>{\n      if(v.id===debut[key].id){\n        return getKey = k;\n      }else return null;\n    });\n    return getKey;\n  };\n  return <Graphics\n    x={400}\n    y={300}\n    zIndex={99}\n    draw={g=> {\n      g.lineStyle(1,`0xffffff`,1);\n      g.beginFill(`0x22223b`);\n      g.drawRoundedRect(-300,-200,600,400,8);\n      g.endFill();\n    }}\n  >\n    <ChessList\n      chessList={chessList}\n      defChess={defChess}\n      setDefChess={setDefChess}\n    />\n    <Information\n      defChess={defChess}\n      chessList={chessList}\n      atkEnemy={enemyList[enemyRoundTab.oder].skill[enemyRandomSkill]}\n    />\n    <EnemyList\n      oder={enemyRoundTab.oder}\n      enemyRandomSkill={enemyRandomSkill}\n      enemyList={enemyList}\n    />\n    <Sprite\n      interactive={true}\n      buttonMode={true}\n      width={90}\n      height={42}\n      anchor={0.5}\n      zIndex={2}\n      x={230}\n      y={155}\n      image={loader.resources[`fightDef`].data}\n      pointertap={()=>{\n        setCurrentBGM(enemyList[enemyRoundTab.oder].name);\n        const isHit = ProbabilityCount(\n          enemyList[enemyRoundTab.oder].skill[enemyRandomSkill].hitfix,\n          chessList[defChess].dodge\n        );\n        setCurrentChess(prev=>{return{...prev,type:\"ATTACK\"}});\n        dispatch(enemyChessAttackResult({\n          key: getCurrentChessKey({\n            chess: enemyChess,\n            debut: enemyList,\n            key: enemyRoundTab.oder\n          }),\n          lessSp:enemyList[enemyRoundTab.oder].skill[enemyRandomSkill].sp\n        }));\n        if(isHit){\n          dispatch(chessDefense({\n            key: getCurrentChessKey({\n              chess: chess,\n              debut: chessList,\n              key: defChess\n            }),\n            damage: enemyList[enemyRoundTab.oder].skill[enemyRandomSkill].atk\n          }));\n        };\n        setEnemyRoundTab(prev=>{return{...prev, status:false}});\n        setAnimeShow({\n          status:true,\n          type:'ENEMY',\n          isHit: isHit,\n          attacker:{ \n            key: getCurrentChessKey({\n              chess: enemyChess,\n              debut: enemyList,\n              key: enemyRoundTab.oder\n            }),\n            skill:enemyList[enemyRoundTab.oder].skill[enemyRandomSkill],\n            prevSP:enemyList[enemyRoundTab.oder].sp\n          },\n          target:{ \n            key: getCurrentChessKey({\n              chess: chess,\n              debut: chessList,\n              key: defChess\n            }),\n            isHit:isHit,\n            prevLife:chessList[defChess].hp\n          }\n        });\n      }}\n    />\n  </Graphics>\n};","import React,{ useState } from 'react';\nimport { fromJS } from 'immutable';\nimport { Graphics, Text } from '@inlet/react-pixi/animated';\nimport { GetMove, GetAttack } from '../../reducer/map';\nimport { chessSelected, chessCheckStatus } from \"../../reducer/chess\";\nimport * as PIXI from \"pixi.js\";\n\nexport const ChessUIBoard = ({\n  ChessData,\n  ChessVal,\n  ChessKey,\n  EnemyChessData,\n  positionX,\n  positionY,\n  setCurrentChess,\n  setMoveStep,\n  dispatch\n})=> {\n  const specialPosition = {\n    x: 720,\n    y: 490\n  };\n  const forMoveArray = [];\n  const forAttackArray = [];\n  const [textInforArray, setTextInforArray] = useState(fromJS([{\n      id:1, \n      title:\"移動\",\n      textColor:['#ffffff', '#ffffff']\n    },{ \n      id:2,\n      title:\"攻擊\",\n      textColor:['#ffffff', '#ffffff']\n    },{ \n      id:3,\n      title:\"狀態\",\n      textColor:['#ffffff', '#ffffff']\n    },{ \n      id:4,\n      title:\"返回\",\n      textColor:['#ffffff', '#ffffff']\n  }]));\n  ChessData.map((v)=>{\n    return (\n      forMoveArray.push({ x:v.x, y:v.y }),\n      forAttackArray.push({ x:v.x, y:v.y })\n    );\n  });\n  EnemyChessData.map((v)=>{\n    return forMoveArray.push({ x:v.x, y:v.y });\n  });\n  const compareAttack = (\n    chessX,\n    chessY,\n    chessAtk\n  )=>{\n    let isAttack = false;\n    const isDebutEnemy = EnemyChessData.filter(v=>v.debut);\n    const limitPosition = { x:19, y:14 };\n    const positionRange = [];\n    for(let i=0; i < chessAtk; i++){\n      const getaddX = (chessX+(i+1)>=limitPosition.x) ? limitPosition.x : chessX+(i+1);\n      const getaddY = (chessY+(i+1)>=limitPosition.y) ? limitPosition.y : chessY+(i+1);\n      const getlessX = (chessX-(i+1)<=0) ? 0 : chessX-(i+1);\n      const getlessY = (chessY-(i+1)<=0) ? 0 : chessY-(i+1);\n      positionRange.push(\n        { x:getaddX, y:chessY },\n        { x:getlessX, y:chessY },\n        { x:chessX, y:getaddY },\n        { x:chessX, y:getlessY }\n      );\n    };\n    isDebutEnemy.map(val=>{\n      return positionRange.map(v=>{\n        if(val.x===v.x&&val.y===v.y){\n          return isAttack = true;\n        }else return null\n      })\n    });\n    return isAttack;\n  };\n  const compareUsed = (\n    chessX,\n    chessY,\n    checkType\n  )=>{\n    let isUnused = false;\n    const isDebutChess = ChessData.filter(v=>v.debut);\n    isDebutChess.map(val=>{\n      if(val.x===chessX&&val.y===chessY){\n        switch (checkType) {\n          case 'MOVE':\n          case 'ATTACK':\n            const moved = val.roundMove>0;\n            return isUnused = moved;\n          default:\n            return true;\n        };\n      }else return null;\n    });\n    return isUnused;\n  };\n  const CreateText = ({ noop })=>{\n    const isAttack = compareAttack(ChessVal.x,ChessVal.y,ChessVal.attack);\n    return textInforArray.map((val,key)=>{\n      const fetchInteractive = ()=>{\n        switch (val.get('id')) {\n          case 1:\n            return compareUsed(ChessVal.x,ChessVal.y,'MOVE');\n          case 2:\n            const result = isAttack && compareUsed(ChessVal.x,ChessVal.y,'ATTACK');\n            return result;\n          default:\n            return true;\n        };\n      }\n      return <Text\n        key={key}\n        interactive={fetchInteractive()}\n        buttonMode={true}\n        text={val.get('title')}\n        x={10}\n        y={5+(25*key)}\n        style={new PIXI.TextStyle({\n          fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 20,\n          fill:fetchInteractive()?val.get('textColor').toJS():'#8d99ae',\n        })}\n        pointerover={()=>{\n          setTextInforArray(prev=>\n            prev.setIn([key,'textColor',1],'#00ff99')\n          );\n        }}\n        pointerout={()=>{\n          setTextInforArray(prev=>\n            prev.setIn([key,'textColor',1],'#ffffff')\n          );\n        }}\n        pointertap={(e)=>{\n          switch (val.get('id')) {\n            case 1:\n              setCurrentChess({ \n                key:ChessKey,\n                type:\"MOVE\"\n              });\n              dispatch(GetMove({\n                position:{ \n                  x:ChessVal.x, \n                  y:ChessVal.y,\n                },\n                step:ChessVal.step,\n                changeColor:'0x06d6a0',\n                currentChessPositions: forMoveArray\n              }));\n              dispatch(chessSelected({\n                key:ChessKey\n              }));\n              break;\n            case 2:\n              setCurrentChess({ \n                key:ChessKey,\n                type:\"ATTACK\"\n              });\n              dispatch(chessSelected({\n                key:ChessKey\n              }));\n              dispatch(GetAttack({\n                position:{ \n                  x:ChessVal.x, \n                  y:ChessVal.y,\n                },\n                step:ChessVal.attack,\n                changeColor:'0x00bbf9',\n                currentChessPositions: forAttackArray\n              }));\n              break;\n            case 3:\n              setCurrentChess({ \n                key:ChessKey,\n                type:\"STATUS\"\n              });\n              dispatch(chessCheckStatus({\n                key:ChessKey\n              }));\n              dispatch(chessSelected({\n                key:ChessKey\n              }));\n              break;\n            case 4 :\n              setMoveStep(true);\n              dispatch(chessSelected({\n                key:ChessKey\n              }));\n              break;\n            default:\n              return console.log(e.target)\n          };\n        }}\n      />\n    }\n  )};\n  return <Graphics\n    x={positionX!==800?positionX:specialPosition.x}\n    y={(positionY!==560&&positionY!==520)?positionY:specialPosition.y}\n    zIndex={3}\n    draw={g=> {\n      g.lineStyle(1,`0xffffff`,1);\n      g.beginFill(`0x22223b`);\n      g.drawRoundedRect(0,0,60,110,8);\n      g.endFill();\n    }}\n  ><CreateText/></Graphics>\n};","import React from 'react';\nimport { Sprite, Graphics, Text } from '@inlet/react-pixi/animated';\nimport { loader } from '../DataLoader';\nimport * as PIXI from \"pixi.js\";\n\nexport const ChessStatus = ({\n  ChessData,\n  ChessKey,\n  CheckStatus,\n  setMoveStep,\n  dispatch\n})=> {\n  const CreateSkillList = ()=>{\n    return ChessData.skill.map((value,key)=>{\n        return <React.Fragment key={key}>\n        <Text\n          x={-40}\n          y={-70+(key*22)}\n          text={`${value.name}`}\n          style={new PIXI.TextStyle({\n            fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n            fontSize: 16,\n            fill:'#ffb700',\n          })}\n        />\n        <Text\n          x={-35+(value.name.length * 16)}\n          y={-70+(key*22)}\n          text={`ATK:${value.atk}(${value.sp}SP)`}\n          style={new PIXI.TextStyle({\n            fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n            fontSize: 14,\n            fill:'#ffffff',\n          })}\n        />\n      </React.Fragment>\n    });  \n  };\n  return <Graphics\n    x={400}\n    y={300}\n    zIndex={99}\n    draw={g=> {\n      g.lineStyle(1,`0xffffff`,1);\n      g.beginFill(`0x22223b`);\n      g.drawRoundedRect(-250,-150,500,300,8);\n      g.endFill();\n    }}\n  >\n    <Sprite\n      interactive={true}\n      buttonMode={true}\n      width={25}\n      height={25}\n      anchor={0.5}\n      x={220}\n      y={-120}\n      image={loader.resources[`closeIcon`].data}\n      pointertap={()=>{\n        setMoveStep(true);\n        dispatch(CheckStatus({\n          key:ChessKey\n        }));\n      }}\n    />\n    <Sprite\n      width={80}\n      height={80}\n      x={-200}\n      y={-90}\n      image={loader.resources[`${ChessData.name}-head-default`].data}\n    />\n    <Text\n      x={-200}\n      y={10}\n      text={ChessData.cn}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 16,\n        fill:'#ffffff',\n      })}\n    />\n    <Text\n      x={-200}\n      y={35}\n      text={`HP:`}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 16,\n        fill:'#ffffff',\n      })}\n    />\n    <Text\n      x={-170}\n      y={35}\n      text={`${ChessData.hp} / ${ChessData.fullValue.hp}`}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 16,\n        fill:'#ff6b6b',\n      })}\n    />\n    <Text\n      x={-200}\n      y={60}\n      text={`SP:`}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 16,\n        fill:'#ffffff',\n      })}\n    />\n    <Text\n      x={-170}\n      y={60}\n      text={`${ChessData.sp} / ${ChessData.fullValue.sp}`}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 16,\n        fill:'#0466c8',\n      })}\n    />\n    <Text\n      x={-50}\n      y={-95}\n      text={'招式'}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 16,\n        fill:'#ffffff',\n      })}\n    />\n    <CreateSkillList/>\n  </Graphics>\n};","import React from 'react';\nimport { Sprite } from '@inlet/react-pixi/animated';\nimport { loader } from '../DataLoader';\n// reducers\nimport { MoveSelect } from '../../reducer/map';\nimport { chessSelected, chessCheckStatus } from \"../../reducer/chess\";\n// other part\nimport { ChessUIBoard } from \"./ChessUIBoard\";\nimport { ChessStatus } from \"../Common/ChessStatus\";\n\nexport const Chess = ({\n  chessProps\n})=>{\n  const { \n    chess,\n    enemyChess,\n    moveStep=Boolean,\n    setMoveStep,\n    setCurrentChess,\n    dispatch\n  } = chessProps;\n  return chess.map((value,key)=>{\n    const roundMoveDone = value.roundMove===0;\n    return <React.Fragment key={key}>\n      {value.debut&&<Sprite\n        interactive={moveStep}\n        buttonMode={true}\n        width={40}\n        height={40}\n        x={value.x*40}\n        y={value.y*40}\n        zIndex={2}\n        tint={roundMoveDone?0x495057:0xffffff}\n        pointerover={()=>{\n          dispatch(MoveSelect({\n            position:{ \n              x:value.x, \n              y:value.y,\n            },\n            step:value.step,\n            changeColor:'0x06d6a0',\n            alphaVal:0.5\n          }));\n        }}\n        pointerout={()=>{\n          dispatch(MoveSelect({\n            position:{ \n              x:value.x, \n              y:value.y,\n            },\n            step:value.step,\n            changeColor:'0x383838',\n            alphaVal:0\n          }));\n        }}\n        pointertap={()=>{\n          setMoveStep(false);\n          dispatch(chessSelected({\n            key:key\n          }));\n          dispatch(MoveSelect({\n            position:{ \n              x:value.x, \n              y:value.y,\n            },\n            step:value.step,\n            changeColor:'0x383838',\n            alphaVal:0\n          }));\n        }}\n        image={loader.resources[`${value.name}-head-default`].data}\n      />}\n      {value.boardStatus&&<ChessUIBoard\n        ChessData={chess}\n        ChessVal={value}\n        ChessKey={key}\n        EnemyChessData={enemyChess}\n        positionX={(value.x*40)+40}\n        positionY={(value.y*40)}\n        setCurrentChess={setCurrentChess}\n        setMoveStep={setMoveStep}\n        dispatch={dispatch}\n      />}\n      {value.checkStatus&&<ChessStatus\n        ChessData={value}\n        ChessKey={key}\n        CheckStatus={chessCheckStatus}\n        setMoveStep={setMoveStep}\n        dispatch={dispatch}\n      />}\n    </React.Fragment>\n  })\n};","import React,{ useState } from 'react';\nimport { fromJS } from 'immutable';\nimport { Graphics, Text } from '@inlet/react-pixi/animated';\nimport { enemyChessSelected, enemyChessCheckStatus } from \"../../reducer/enemyChess\";\nimport * as PIXI from \"pixi.js\";\n\nexport const EnemyChessUIBoard = ({\n  ChessKey,\n  positionX,\n  positionY,\n  setMoveStep,\n  dispatch\n})=> {\n  const specialPosition = {\n    x: 720,\n    y: 535\n  };\n  const [textInforArray, setTextInforArray] = useState(fromJS([{\n      id:1,\n      title:\"狀態\",\n      textColor:['#ffffff', '#ffffff']\n    },{ \n      id:2,\n      title:\"返回\",\n      textColor:['#ffffff', '#ffffff']\n  }]));\n  const CreateText = ({ noop })=>{\n    return textInforArray.map((val,key)=>{\n      return <Text\n        key={key}\n        interactive={true}\n        buttonMode={true}\n        text={val.get('title')}\n        x={10}\n        y={5+(25*key)}\n        style={new PIXI.TextStyle({\n          fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 20,\n          fill:val.get('textColor').toJS(),\n        })}\n        pointerover={()=>{\n          setTextInforArray(prev=>\n            prev.setIn([key,'textColor',1],'#9d4edd')\n          );\n        }}\n        pointerout={()=>{\n          setTextInforArray(prev=>\n            prev.setIn([key,'textColor',1],'#ffffff')\n          );\n        }}\n        pointertap={(e)=>{\n          switch (val.get('id')) {\n            case 1:\n              dispatch(enemyChessCheckStatus({\n                key:ChessKey\n              }));\n              dispatch(enemyChessSelected({\n                key:ChessKey\n              }));\n              break;\n            case 2 :\n              setMoveStep(true);\n              dispatch(enemyChessSelected({\n                key:ChessKey\n              }));\n              break;\n            default:\n              return console.log(e.target)\n          };\n        }}\n      />\n    }\n  )};\n  return <Graphics\n    x={positionX!==800?positionX:specialPosition.x}\n    y={(positionY!==560&&positionY!==520)?positionY:specialPosition.y}\n    zIndex={3}\n    draw={g=> {\n      g.lineStyle(1,`0xffffff`,1);\n      g.beginFill(`0x22223b`);\n      g.drawRoundedRect(0,0,60,62,8);\n      g.endFill();\n    }}\n  ><CreateText/></Graphics>\n}","import React from 'react';\nimport { Sprite } from '@inlet/react-pixi/animated';\nimport { loader } from '../DataLoader';\n// reducers\nimport { enemyChessSelected, enemyChessCheckStatus } from \"../../reducer/enemyChess\";\n// other part\nimport { EnemyChessUIBoard } from \"./EnemyChessUIBoard\";\nimport { ChessStatus } from \"../Common/ChessStatus\";\n\nexport const EnemyChess = ({\n  enemyChessProps\n})=>{\n  const { \n    enemyChess,\n    moveStep=Boolean,\n    setMoveStep,\n    dispatch\n  } = enemyChessProps;\n  return enemyChess.map((value,key)=>{\n    return <React.Fragment key={key}>\n      {value.debut&&<Sprite\n        interactive={moveStep}\n        buttonMode={true}\n        width={40}\n        height={40}\n        x={value.x*40}\n        y={value.y*40}\n        zIndex={2}\n        pointertap={()=>{\n          setMoveStep(false);\n          dispatch(enemyChessSelected({\n            key:key\n          }));\n        }}\n        image={loader.resources[`${value.name}-head-default`].data}\n      />}\n      {value.boardStatus&&<EnemyChessUIBoard\n        ChessKey={key}\n        positionX={(value.x*40)+40}\n        positionY={(value.y*40)}\n        setMoveStep={setMoveStep}\n        dispatch={dispatch}\n      />}\n      {value.checkStatus&&<ChessStatus\n        ChessData={value}\n        ChessKey={key}\n        CheckStatus={enemyChessCheckStatus}\n        setMoveStep={setMoveStep}\n        dispatch={dispatch}\n      />}\n    </React.Fragment>\n  })\n};\n","import React,{ useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Stage, Container, Sprite } from '@inlet/react-pixi/animated';\nimport { Howler } from 'howler';\n// reducers\nimport { stageDebut } from \"../reducer/chess\";\nimport { enemyStageDebut } from \"../reducer/enemyChess\";\n// other part\nimport { GameStart } from './Common/GameStart/Index';\nimport { CreateCheckerboard } from './Common/Checkerboard';\nimport { ConfirmTip } from \"./Common/ConfirmTips\";\nimport { UsualTip } from \"./Common/UsualTip\";\nimport { BattleBoard } from \"./Common/BattleBoard\";\nimport { BattleAnimeShow } from \"./Common/BattleAnimeShow/Index\";\nimport { OtherTab } from \"./Common/OtherTab\";\nimport { EnemyRoundTab } from \"./Common/EnemyRoundTab/Index\";\nimport { Chess } from \"../components/Chess/Chess\";\nimport { EnemyChess } from \"../components/EnemyChess/EnemyChess\";\n// rule\nimport { stageRule } from \"../constants/stageRule\";\nimport { audioData, loader } from './DataLoader';\nexport const Canvas = ()=> {\n  const [ roundStart, setRoundStart ] = useState(false);\n  const [ stageStatus, setStageStatus ] = useState('stageOne');\n  const [ roundNum, setRoundNum ] = useState(1);\n  const [ otherTab, setOtherTab ] = useState(false);\n  const [ enemyRoundTab, setEnemyRoundTab ] = useState({\n    oder:0,\n    status:false\n  });\n  const [ currentChess, setCurrentChess ] = useState({\n    key:0,\n    type:\"MOVE\"\n  });\n  const [ usualTip, setUsualTip ] = useState({\n    title:``,\n    status:false,\n  });\n  const [ tipStatus, setTipStatus ] = useState({\n    title:``,\n    status:false,\n    position:{\n      x:0,y:0\n    },\n  });\n  const [ battleInfo, setBattleInfo ] = useState({\n    status:false,\n    attacker:{ key:'' },\n    target:{ key:'' }\n  });\n  const [ animeShow, setAnimeShow ] = useState({\n    status:false,\n    type:'',\n    attacker:{ key:'', skill:{}, prevSP:0 },\n    target:{ key:'', isHit:false, prevLife:0 }\n  });\n  const [ moveStep, setMoveStep ] = useState(true);\n  const [ currentBGM, setCurrentBGM ] = useState('');\n  const [ fadeBGM, setFadeBGM ] = useState('');\n  const chessMap = useSelector(state=>state.chessMap);\n  const chess = useSelector(state=>state.chess);\n  const enemyChess = useSelector(state=>state.enemyChess);\n  const dispatch = useDispatch();\n  // bgm\n  useEffect(()=>{\n    switch (currentBGM) {\n      case 'Tanjirou':\n        audioData.round.fade(0.6,0,1000);\n        audioData.KimetsuNoYaiba.stop();\n        audioData.KimetsuNoYaiba.volume(1);\n        audioData.KimetsuNoYaiba.play();\n        break;\n      case 'Teoni':\n        audioData.round.fade(0.6,0,1000);\n        audioData.KimetsuNoYaibaEnemy.stop();\n        audioData.KimetsuNoYaibaEnemy.volume(1);\n        audioData.KimetsuNoYaibaEnemy.play();\n        break;\n      case 'userRounds':\n      case 'enemyRounds':\n        audioData.round.stop();\n        audioData.round.volume(0.6);\n        audioData.round.play();\n        break;\n      default:\n        Howler.stop();\n        break;\n    };\n  },[ currentBGM ]);\n  useEffect(()=>{\n    switch (fadeBGM){\n      case 'Tanjirou':\n        audioData.KimetsuNoYaiba.fade(1,0,1000);\n        setCurrentBGM('enemyRounds');\n        break;\n      case 'Teoni':\n        audioData.KimetsuNoYaibaEnemy.fade(1,0,1000);\n        setCurrentBGM('userRounds');\n        break;\n      default:\n        break;\n    };\n  },[ fadeBGM, stageStatus ]);\n  // debut\n  useEffect(()=>{\n    if(roundStart){\n      dispatch(stageDebut({ \n        isDebutChess:stageRule.getIn([stageStatus,'debutChess'])\n      }));\n      dispatch(enemyStageDebut({ \n        isDebutChess:stageRule.getIn([stageStatus,'debutEnemyChess'])\n      }));\n    };\n  },[ dispatch, roundStart, stageStatus ]);\n  return <Stage\n    width={800}\n    height={600}\n    options={{\n      autoDensity: true, \n      antialias: true,\n      backgroundColor:0x01262a\n    }}>\n    <Container sortableChildren={true}>\n      {roundStart&&<Sprite\n        width={30}\n        height={30}\n        anchor={0.5} \n        x={760}\n        y={40}\n        zIndex={99}\n        interactive={moveStep}\n        buttonMode={true}\n        image={loader.resources[`otherIcon`].data}\n        pointertap={()=>{\n          setOtherTab(true);\n          setMoveStep(false);\n        }}\n      />}\n      <Sprite\n        width={800}\n        height={600}\n        zIndex={1}\n        image={loader.resources[`${stageStatus}-main-BG`].data}\n      />\n      <CreateCheckerboard reduxProps={{ \n        chess,\n        enemyChess,\n        chessMap,\n        currentChess,\n        dispatch,\n        setTipStatus,\n        setMoveStep,\n        setBattleInfo\n      }}/>\n      <Chess chessProps={{\n        chess,\n        enemyChess,\n        moveStep,\n        setMoveStep,\n        setCurrentChess,\n        dispatch\n      }}/>\n      <EnemyChess enemyChessProps={{\n        enemyChess,\n        moveStep,\n        setMoveStep,\n        dispatch\n      }}/>\n    </Container>\n    {otherTab&&\n      <OtherTab\n        props={{\n          stageStatus,\n          roundNum,\n          setMoveStep,\n          setOtherTab,\n          setTipStatus,\n          setCurrentChess\n        }}\n      />}\n    {tipStatus.status&&\n      <ConfirmTip \n        props={{\n          chess,\n          currentChess,\n          tipStatus,\n          currentBGM,\n          dispatch,\n          setMoveStep,\n          setTipStatus,\n          setOtherTab,\n          setRoundNum,\n          setUsualTip,\n          setFadeBGM\n        }}\n      />}\n    {usualTip.status&&\n      <UsualTip\n        props={{\n          stageStatus,\n          chess,\n          currentChess,\n          enemyChess,\n          usualTip,\n          currentBGM,\n          setMoveStep,\n          setUsualTip,\n          setCurrentChess,\n          setFadeBGM,\n          setEnemyRoundTab\n        }}\n      />}\n    {battleInfo.status&&\n      <BattleBoard\n        props={{\n          battleInfo,\n          setMoveStep,\n          setBattleInfo,\n          setAnimeShow,\n          setCurrentBGM,\n          dispatch\n        }}\n      />}\n    {animeShow.status&&\n      <BattleAnimeShow \n        props={{\n          stageStatus,\n          animeShow,\n          chess,\n          enemyChess,\n          setMoveStep,\n          setAnimeShow,\n          setUsualTip,\n          setCurrentChess,\n          dispatch\n        }}\n      />}\n    {enemyRoundTab.status&&\n      <EnemyRoundTab\n        props={{\n          enemyRoundTab,\n          chess,\n          enemyChess,\n          setEnemyRoundTab,\n          setAnimeShow,\n          setCurrentChess,\n          setCurrentBGM,\n          dispatch\n        }}\n      />}\n    {!roundStart&&\n    <GameStart \n      props={{\n        setRoundStart,\n        setCurrentBGM\n      }}\n    />}\n  </Stage>\n};","import React, { useState, useEffect } from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport device from \"current-device\";\nimport { Canvas } from './Canvas';\nimport { audioData, loader } from './DataLoader';\nconst isDesktop = device.desktop();\nconst GlobalStyle = createGlobalStyle`\n  body { background:#1d2430; }\n`;\nconst StyledApp = styled.div`\n  position: relative;\n  display:flex;\n  align-items:center;\n  justify-content:center;\n  width:100%;\n  height:100vh;\n  .loading {\n    color: #fff;\n    font-size:24px;\n  }\n  canvas {\n    width:${({ isDesktop })=>!isDesktop&&`\n      75% !important\n    `};\n    height:${({ isDesktop })=>!isDesktop&&`\n      100% !important\n    `};\n  }\n`;\nexport const App = ()=> {\n  const [ dataIsDone, setDataIsDone ] = useState(false);\n  const [ gameStart, setGameStart ] = useState(false);\n  const [ progress, setProgress ] = useState(0);\n  const [ mp3load, setMp3load ] = useState({\n    open:false,\n    KimetsuNoYaiba:false,\n  });\n  // mp3 load\n  audioData.KimetsuNoYaiba.on('load', function(){\n    setMp3load(prev=>{return{...prev,KimetsuNoYaiba:true}});\n  });\n  audioData.open.on('load', function(){\n    setMp3load(prev=>{return{...prev,open:true}});\n  });\n  useEffect(()=>{\n    loader.onProgress.add((loader)=>{\n      setProgress(Math.floor(loader.progress));\n    });\n    loader.onComplete.add((loader,resources)=>{\n      setProgress(100);\n      setDataIsDone(true);\n    });\n  });\n  useEffect(()=>{\n    const state = \n      mp3load.KimetsuNoYaiba&&\n      mp3load.open&&\n      dataIsDone;\n    if(state){\n      setGameStart(true);\n    }; \n  },[dataIsDone, mp3load]);\n  return <StyledApp isDesktop={isDesktop}>\n    <GlobalStyle/>\n    {gameStart?<Canvas/>:\n      <span className=\"loading\">\n        {dataIsDone ? `讀取音訊中...` :\n        `Loading ${progress}%..`}\n      </span>}\n  </StyledApp>\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, combineReducers } from 'redux';\nimport chess from './chess';\nimport chessMap from './map';\nimport enemyChess from './enemyChess';\nconst rootReducer = combineReducers({\n  chess,\n  chessMap,\n  enemyChess\n});\nexport const store = createStore(rootReducer);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './reducer/index';\n\nReactDOM.render(<Provider store={store}><App /></Provider>,document.getElementById('root'));\nreportWebVitals();\n"],"sourceRoot":""}