{"version":3,"sources":["components/DataLoader.js","components/reducer/map.js","components/reducer/chess.js","components/reducer/enemyChess.js","components/Checkerboard.js","components/ChessUIBoard.js","components/EnemyChessUIBoard.js","components/ConfirmTips.js","components/ChessStatus.js","components/constants/stageRule.js","components/Canvas.js","components/App.js","reportWebVitals.js","components/reducer/index.js","index.js"],"names":["loader","PIXI","hostname","window","location","add","load","mapLimit","createInitialState","method","list","i","push","createStraightLine","traverse","color","x","y","isInteractive","chessMap","createSlice","name","initialState","reducers","MoveSelect","state","action","payload","position","step","changeColor","GetMove","currentChessPositions","map","v","actions","basicCommon","checkStatus","boardStatus","debut","roundAttack","chess","cn","hp","sp","fullValue","skill","atk","stageDebut","isDebutChess","value","key","get","chessMove","changeX","changeY","chessSelected","chessCheckStatus","enemyChess","enemyStageDebut","enemyChessSelected","texture","WHITE","CreateCheckerboard","reduxProps","currentChess","dispatch","setTipStatus","k","interactive","buttonMode","width","height","tint","pointertap","type","title","status","ChessUIBoard","ChessData","ChessVal","ChessKey","EnemyChessData","positionX","positionY","setCurrentChess","setMoveStep","specialPosition","useState","fromJS","id","textColor","textInforArray","setTextInforArray","CreateText","noop","val","text","style","fontFamily","fontSize","fill","toJS","pointerover","prev","setIn","pointerout","e","console","log","target","zIndex","draw","g","lineStyle","beginFill","drawRoundedRect","endFill","EnemyChessUIBoard","ConfirmTip","props","tipStatus","anchor","ChessStatus","CreateSkillList","Fragment","length","image","resources","data","stageRule","stageOne","debutChess","debutEnemyChess","stageTwo","Canvas","stageStatus","moveStep","useSelector","useDispatch","useEffect","getIn","options","autoDensity","antialias","backgroundColor","sortableChildren","GlobalStyle","createGlobalStyle","StyledApp","styled","div","App","dataIsDone","setDataIsDone","onComplete","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a809d354.chunk.js","sourcesContent":["import * as PIXI from \"pixi.js\";\nexport const loader = new PIXI.Loader();\nconst hostname = window.location.hostname==='localhost'?'./Demon-Slayer/':'./';\n\nloader\n  .add('Tanjirou-head-default',`${hostname}imgs/Tanjirou/head-default.jpg`)\n  .add('Tanjirou-fight',`${hostname}imgs/Tanjirou/fight.png`)\n  .add('Nezuko-head-default',`${hostname}imgs/Nezuko/head-default.jpg`)\n  .add('Nezuko-fight',`${hostname}imgs/Nezuko/fight.png`)\n  .add('Inosuke-head-default',`${hostname}imgs/Inosuke/head-default.jpg`)\n  .add('Inosuke-fight',`${hostname}imgs/Inosuke/fight.png`)\n  .add('Teoni-head-default',`${hostname}imgs/Teoni/head-default.jpg`)\n  .add('Teoni-fight',`${hostname}imgs/Teoni/fight.png`)\n  .add('Nomanooni-head-default',`${hostname}imgs/Nomanooni/head-default.jpg`)\n  .add('Nomanooni-fight',`${hostname}imgs/Nomanooni/fight.png`)\n  .load();\n","import { createSlice } from '@reduxjs/toolkit';\nconst mapLimit = { x:20, y:15 };\nconst createTraverseLine = (traverse=0,color='')=>{\n  const list = [];\n  for(let i=0;i<mapLimit.x;i++){\n    list.push({\n      x:i,\n      y:traverse,\n      color:color,\n      isInteractive:false\n    });\n  };\n  return list;\n};\nconst createStraightLine = ( method=()=>{} )=>{\n  const list = [];\n  for(let i=0;i<mapLimit.y;i++){\n    list.push(method(i,'0x383838'));\n  };\n  return list;\n};\nconst createInitialState = createStraightLine(createTraverseLine);\nconst chessMap = createSlice({\n  name:'chessMap',\n  initialState: createInitialState,\n  reducers:{\n    MoveSelect:(state, action)=>{\n      const { position, step, changeColor } = action.payload;\n      for(let i=0;i<(step+1);i++){\n        if(position.x+i<=(mapLimit.x-1)){\n          state[position.y][position.x+i].color=changeColor;\n          state[position.y][position.x+i].isInteractive=false;\n        };\n        if(position.y+i<=(mapLimit.y-1)){\n          state[position.y+i][position.x].color=changeColor;\n          state[position.y+i][position.x].isInteractive=false;\n        };\n        if(position.x-i>=0){\n          state[position.y][position.x-i].color=changeColor;\n          state[position.y][position.x-i].isInteractive=false;\n        };\n        if(position.y-i>=0){\n          state[position.y-i][position.x].color=changeColor;\n          state[position.y-i][position.x].isInteractive=false;\n        };\n      }\n    },\n    GetMove:(state, action)=>{\n      const { position, step, changeColor, currentChessPositions } = action.payload;\n      for(let i=0;i<(step+1);i++){\n        if(position.x+i<=(mapLimit.x-1)){\n          state[position.y][position.x+i].color=changeColor;\n          state[position.y][position.x+i].isInteractive=true;\n        };\n        if(position.y+i<=(mapLimit.y-1)){\n          state[position.y+i][position.x].color=changeColor;\n          state[position.y+i][position.x].isInteractive=true;\n        };\n        if(position.x-i>=0){\n          state[position.y][position.x-i].color=changeColor;\n          state[position.y][position.x-i].isInteractive=true;\n        };\n        if(position.y-i>=0){\n          state[position.y-i][position.x].color=changeColor;\n          state[position.y-i][position.x].isInteractive=true;\n        };\n      }\n      currentChessPositions.map(v=>{\n        return state[v.y][v.x].isInteractive=false;\n      });\n    }\n  }\n});\nexport default chessMap.reducer;\nexport const { MoveSelect, GetMove } = chessMap.actions;\n","import { createSlice } from '@reduxjs/toolkit';\nconst basicCommon = {\n  x:0,\n  y:0,\n  checkStatus:false,\n  boardStatus:false,\n  debut:false,\n  roundAttack:false,\n};\nconst chess = createSlice({\n  name:'chess',\n  initialState:[\n    {\n      name:'Tanjirou',\n      cn:'竃門 碳治郎',\n      step:3,\n      hp:1000,\n      sp:100,\n      fullValue:{\n        hp:1000,\n        sp:100\n      },\n      skill:[{ \n        name:'斬擊',\n        atk:20,\n        sp:0\n      },{ \n        name:'叄之型―流流舞',\n        atk:120,\n        sp:5\n      },{ \n        name:'捌之型―滝壺',\n        atk:120,\n        sp:5\n      },{\n        name:'拾之型―生生流轉',\n        atk:250,\n        sp:10\n      }],\n      ...basicCommon\n    },{\n      name:'Nezuko',\n      step:2,\n      ...basicCommon\n    },{\n      name:'Inosuke',\n      step:4,\n      ...basicCommon\n    }\n  ],\n  reducers:{\n    stageDebut:(state, actions)=> {\n      const { isDebutChess } = actions.payload;\n      state.map((value,key)=>{\n        return isDebutChess.map(v=>{\n          if(value.name===v.get('name')){\n            return (\n              state[key].debut = true,\n              state[key].x = v.get('x'),\n              state[key].y = v.get('y')\n            );\n          }else return null;\n        })\n      })\n    },\n    chessMove: (state, actions)=>{\n      const { key, changeX, changeY } = actions.payload;\n      state[key].x = changeX;\n      state[key].y = changeY;\n    },\n    chessSelected: (state, actions)=>{\n      const { key } = actions.payload;\n      state[key].boardStatus = !state[key].boardStatus;\n    },\n    chessCheckStatus: (state, actions)=> {\n      const { key } = actions.payload;\n      state[key].checkStatus = !state[key].checkStatus;\n    }\n  }\n});\nexport default chess.reducer;\nexport const { \n  stageDebut, chessMove, chessSelected, chessCheckStatus \n} = chess.actions;","import { createSlice } from '@reduxjs/toolkit';\nconst basicCommon = {\n  x:0,\n  y:0,\n  boardStatus:false,\n  debut:false,\n};\nconst enemyChess = createSlice({\n  name:'enemyChess',\n  initialState:[\n    {\n      name:'Teoni',\n      ...basicCommon\n    },{\n      name:'Nomanooni',\n      ...basicCommon\n    }\n  ],\n  reducers:{\n    enemyStageDebut:(state, actions)=> {\n      const { isDebutChess } = actions.payload;\n      state.map((value,key)=>{\n        return isDebutChess.map(v=>{\n          if(value.name===v.get('name')){\n            return (\n              state[key].debut = true,\n              state[key].x = v.get('x'),\n              state[key].y = v.get('y')\n            );\n          }else return null;\n        })\n      })\n    },\n    enemyChessSelected: (state, actions)=>{\n      const { key } = actions.payload;\n      state[key].boardStatus = !state[key].boardStatus;\n    }\n  }\n});\nexport default enemyChess.reducer;\nexport const { enemyStageDebut, enemyChessSelected } = enemyChess.actions;","import React, {} from 'react';\nimport * as PIXI from \"pixi.js\";\nimport { Sprite, Container } from '@inlet/react-pixi';\nimport { MoveSelect } from '../components/reducer/map';\nconst texture = PIXI.Texture.WHITE;\nexport const CreateCheckerboard = ({\n  reduxProps\n})=>{\n  const { \n    chess, chessMap, currentChess, dispatch, setTipStatus\n  } = reduxProps;\n  return <Container>\n    {chessMap.map((value,key)=> {\n      return value.map((v,k)=>{\n        return <Sprite\n          interactive={v.isInteractive}\n          buttonMode={v.isInteractive}\n          key={k}\n          width={40}\n          height={40}\n          x={v.x*40}\n          y={v.y*40}\n          tint={v.color}\n          texture={texture}\n          pointertap={()=>{\n            switch (currentChess.type) {\n              case \"MOVE\":\n                setTipStatus({\n                  title:'確定移動?',\n                  status:true,\n                  position:{\n                    x:v.x, y:v.y\n                  }\n                });\n                dispatch(MoveSelect({\n                  position:{ \n                    x:chess[currentChess.key].x, \n                    y:chess[currentChess.key].y,\n                  },\n                  step:chess[currentChess.key].step,\n                  changeColor:'0x4361ee'\n                }));\n                break;\n              default:\n                return;\n            }; \n          }}\n        />\n      });\n    })}\n  </Container>\n};","import React,{ useState } from 'react';\nimport { fromJS } from 'immutable';\nimport { Graphics, Text } from '@inlet/react-pixi/animated';\nimport { GetMove } from '../components/reducer/map';\nimport { chessSelected, chessCheckStatus } from \"../components/reducer/chess\";\nimport * as PIXI from \"pixi.js\";\n\nexport const ChessUIBoard = ({\n  ChessData,\n  ChessVal,\n  ChessKey,\n  EnemyChessData,\n  positionX,\n  positionY,\n  setCurrentChess,\n  setMoveStep,\n  dispatch\n})=> {\n  const specialPosition = {\n    x: 720,\n    y: 490\n  };\n  const currentChessPositions = [];\n  const [textInforArray, setTextInforArray] = useState(fromJS([{\n      id:1, \n      title:\"移動\",\n      textColor:['#ffffff', '#ffffff']\n    },{ \n      id:2,\n      title:\"攻擊\",\n      textColor:['#ffffff', '#ffffff']\n    },{ \n      id:3,\n      title:\"狀態\",\n      textColor:['#ffffff', '#ffffff']\n    },{ \n      id:4,\n      title:\"返回\",\n      textColor:['#ffffff', '#ffffff']\n  }]));\n  ChessData.map((v)=>{\n    return currentChessPositions.push({ x:v.x, y:v.y });\n  });\n  EnemyChessData.map((v)=>{\n    return currentChessPositions.push({ x:v.x, y:v.y });\n  });\n  const CreateText = ({ noop })=>{\n    return textInforArray.map((val,key)=>{\n      return <Text\n        key={key}\n        interactive={true}\n        buttonMode={true}\n        text={val.get('title')}\n        x={10}\n        y={5+(25*key)}\n        style={new PIXI.TextStyle({\n          fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 20,\n          fill:val.get('textColor').toJS(),\n        })}\n        pointerover={()=>{\n          setTextInforArray(prev=>\n            prev.setIn([key,'textColor',1],'#00ff99')\n          );\n        }}\n        pointerout={()=>{\n          setTextInforArray(prev=>\n            prev.setIn([key,'textColor',1],'#ffffff')\n          );\n        }}\n        pointertap={(e)=>{\n          switch (val.get('id')) {\n            case 1:\n              setCurrentChess({ \n                key:ChessKey,\n                type:\"MOVE\"\n              });\n              dispatch(GetMove({\n                position:{ \n                  x:ChessVal.x, \n                  y:ChessVal.y,\n                },\n                step:ChessVal.step,\n                changeColor:'0x4361ee',\n                currentChessPositions: currentChessPositions\n              }));\n              dispatch(chessSelected({\n                key:ChessKey\n              }));\n              break;\n            case 3:\n              setCurrentChess({ \n                key:ChessKey,\n                type:\"STATUS\"\n              });\n              dispatch(chessCheckStatus({\n                key:ChessKey\n              }));\n              dispatch(chessSelected({\n                key:ChessKey\n              }));\n              break;\n            case 4 :\n              setMoveStep(true);\n              dispatch(chessSelected({\n                key:ChessKey\n              }));\n              break;\n            default:\n              return console.log(e.target)\n          };\n        }}\n      />\n    }\n  )};\n  return <Graphics\n    x={positionX!==800?positionX:specialPosition.x}\n    y={positionY!==560?positionY:specialPosition.y}\n    zIndex={2}\n    draw={g=> {\n      g.lineStyle(1,`0xffffff`,1);\n      g.beginFill(`0x22223b`);\n      g.drawRoundedRect(0,0,60,110,8);\n      g.endFill();\n    }}\n  ><CreateText/></Graphics>\n};","import React,{ useState } from 'react';\nimport { fromJS } from 'immutable';\nimport { Graphics, Text } from '@inlet/react-pixi/animated';\nimport { enemyChessSelected } from \"../components/reducer/enemyChess\";\nimport * as PIXI from \"pixi.js\";\n\nexport const EnemyChessUIBoard = ({\n  ChessKey,\n  positionX,\n  positionY,\n  setMoveStep,\n  dispatch\n})=> {\n  const specialPosition = {\n    x: 720,\n    y: 535\n  };\n  const [textInforArray, setTextInforArray] = useState(fromJS([{\n      id:1,\n      title:\"狀態\",\n      textColor:['#ffffff', '#ffffff']\n    },{ \n      id:2,\n      title:\"返回\",\n      textColor:['#ffffff', '#ffffff']\n  }]));\n  const CreateText = ({ noop })=>{\n    return textInforArray.map((val,key)=>{\n      return <Text\n        key={key}\n        interactive={true}\n        buttonMode={true}\n        text={val.get('title')}\n        x={10}\n        y={5+(25*key)}\n        style={new PIXI.TextStyle({\n          fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 20,\n          fill:val.get('textColor').toJS(),\n        })}\n        pointerover={()=>{\n          setTextInforArray(prev=>\n            prev.setIn([key,'textColor',1],'#9d4edd')\n          );\n        }}\n        pointerout={()=>{\n          setTextInforArray(prev=>\n            prev.setIn([key,'textColor',1],'#ffffff')\n          );\n        }}\n        pointertap={(e)=>{\n          switch (val.get('id')) {\n            case 2 :\n              setMoveStep(true);\n              dispatch(enemyChessSelected({\n                key:ChessKey\n              }));\n              break;\n            default:\n              return console.log(e.target)\n          };\n        }}\n      />\n    }\n  )};\n  return <Graphics\n    x={positionX!==800?positionX:specialPosition.x}\n    y={positionY!==560?positionY:specialPosition.y}\n    zIndex={2}\n    draw={g=> {\n      g.lineStyle(1,`0xffffff`,1);\n      g.beginFill(`0x22223b`);\n      g.drawRoundedRect(0,0,60,62,8);\n      g.endFill();\n    }}\n  ><CreateText/></Graphics>\n}","import React from 'react';\n// import { fromJS } from 'immutable';\nimport { Graphics, Text } from '@inlet/react-pixi/animated';\nimport { chessMove } from \"../components/reducer/chess\";\nimport { MoveSelect } from '../components/reducer/map';\nimport * as PIXI from \"pixi.js\";\n\nexport const ConfirmTip = ({\n  props,\n})=> {\n  const { \n    chess,\n    currentChess,\n    tipStatus,\n    dispatch,\n    setMoveStep, \n    setTipStatus\n  } = props;\n  return <Graphics\n    x={400}\n    y={300}\n    zIndex={99}\n    draw={g=> {\n      g.lineStyle(1,`0xffffff`,1);\n      g.beginFill(`0x22223b`);\n      g.drawRoundedRect(-90,-50,180,100,8);\n      g.endFill();\n    }}\n  >\n    <Text\n      text={tipStatus.title}\n      anchor={0.5}\n      x={0}\n      y={-20}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 20,\n        fill:['#ffffff', '#ffffff'],\n      })}\n    />\n    <Text\n      interactive={true}\n      buttonMode={true}\n      anchor={0.5}\n      text={'確定'}\n      x={-30}\n      y={20}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 20,\n        fill:['#ffffff', '#ffffff'],\n      })}\n      pointertap={()=>{\n        switch (currentChess.type) {\n          case \"MOVE\":\n            dispatch(chessMove({\n              key: currentChess.key,\n              changeX:tipStatus.position.x,\n              changeY:tipStatus.position.y\n            }));\n            dispatch(MoveSelect({\n              position:{ \n                x:chess[currentChess.key].x, \n                y:chess[currentChess.key].y,\n              },\n              step:chess[currentChess.key].step,\n              changeColor:'0x383838'\n            }));\n            setMoveStep(true);\n            setTipStatus(prev=>{\n              return {...prev, status:false }\n            });\n            break;\n          default:\n            return;\n        }\n      }}\n    />\n    <Text\n      interactive={true}\n      buttonMode={true}\n      anchor={0.5}\n      text={'取消'}\n      x={30}\n      y={20}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 20,\n        fill:['#ffffff', '#ffffff'],\n      })}\n      pointertap={()=>{\n        switch (currentChess.type) {\n          case \"MOVE\":\n            dispatch(MoveSelect({\n              position:{ \n                x:chess[currentChess.key].x, \n                y:chess[currentChess.key].y,\n              },\n              step:chess[currentChess.key].step,\n              changeColor:'0x383838'\n            }));\n            setMoveStep(true);\n            setTipStatus(prev=>{\n              return {...prev, status:false }\n            })\n            break;\n          default:\n            return;\n        }\n      }}\n    />\n  </Graphics>\n};","import React from 'react';\nimport { Sprite, Graphics, Text } from '@inlet/react-pixi/animated';\nimport { loader } from './DataLoader';\nimport { chessCheckStatus } from \"../components/reducer/chess\";\nimport * as PIXI from \"pixi.js\";\n\nexport const ChessStatus = ({\n  ChessData,\n  ChessKey,\n  setMoveStep,\n  dispatch\n})=> {\n  const CreateSkillList = ()=>{\n    return ChessData.skill.map((value,key)=>{\n        return <React.Fragment key={key}>\n        <Text\n          x={-40}\n          y={-70+(key*22)}\n          text={`${value.name}`}\n          style={new PIXI.TextStyle({\n            fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n            fontSize: 16,\n            fill:'#ffb700',\n          })}\n        />\n        <Text\n          x={-35+(value.name.length * 16)}\n          y={-70+(key*22)}\n          text={`ATK:${value.atk}(${value.sp}SP)`}\n          style={new PIXI.TextStyle({\n            fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n            fontSize: 14,\n            fill:'#ffffff',\n          })}\n        />\n      </React.Fragment>\n    });  \n  };\n  return <Graphics\n    x={400}\n    y={300}\n    zIndex={99}\n    draw={g=> {\n      g.lineStyle(1,`0xffffff`,1);\n      g.beginFill(`0x22223b`);\n      g.drawRoundedRect(-250,-150,500,300,8);\n      g.endFill();\n    }}\n  >\n    <Graphics\n      x={220}\n      y={-120}\n      interactive={true}\n      buttonMode={true}\n      pointertap={(e)=>{\n        setMoveStep(true);\n        dispatch(chessCheckStatus({\n          key:ChessKey\n        }));\n      }}\n      draw={g=> {\n        g.beginFill(`0x02040f`);\n        g.drawRoundedRect(-15,-15,30,30,50);\n        g.endFill();\n      }}\n    >\n      <Text\n        anchor={0.5}\n        text={`X`}\n        style={new PIXI.TextStyle({\n          fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 16,\n          fill:'#ffffff',\n        })}\n      />\n    </Graphics>\n    <Sprite\n      width={80}\n      height={80}\n      x={-200}\n      y={-90}\n      image={loader.resources[`${ChessData.name}-head-default`].data}\n    />\n    <Text\n      x={-200}\n      y={10}\n      text={ChessData.cn}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 16,\n        fill:'#ffffff',\n      })}\n    />\n    <Text\n      x={-200}\n      y={35}\n      text={`HP:`}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 16,\n        fill:'#ffffff',\n      })}\n    />\n    <Text\n      x={-170}\n      y={35}\n      text={`${ChessData.hp} / ${ChessData.fullValue.hp}`}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 16,\n        fill:'#ff6b6b',\n      })}\n    />\n    <Text\n      x={-200}\n      y={60}\n      text={`SP:`}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 16,\n        fill:'#ffffff',\n      })}\n    />\n    <Text\n      x={-170}\n      y={60}\n      text={`${ChessData.sp} / ${ChessData.fullValue.sp}`}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 16,\n        fill:'#0466c8',\n      })}\n    />\n    <Text\n      x={-50}\n      y={-95}\n      text={'招式'}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 16,\n        fill:'#ffffff',\n      })}\n    />\n    <CreateSkillList/>\n  </Graphics>\n};","import { fromJS } from \"immutable\";\n\nexport const stageRule = fromJS({\n  stageOne: {\n    debutChess:[\n      { \n        name:'Tanjirou',\n        x:3,\n        y:7\n      }\n    ],\n    debutEnemyChess:[\n      {\n        name:'Teoni',\n        x:16,\n        y:7\n      }\n    ]\n  },\n  stageTwo: {\n    debutChess:[\n      { \n        name:'Tanjirou',\n        x:3,\n        y:9\n      }, { \n        name:'Nezuko',\n        x:3,\n        y:11\n      }\n    ],\n    debutEnemyChess:[\n      {\n        name:'Nomanooni',\n        x:16,\n        y:7\n      }\n    ]\n  }\n});","import React,{ useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Stage, Sprite, Container } from '@inlet/react-pixi/animated';\nimport { loader } from './DataLoader';\n// reducers\nimport { MoveSelect } from '../components/reducer/map';\nimport { stageDebut, chessSelected } from \"../components/reducer/chess\";\nimport { enemyStageDebut, enemyChessSelected } from \"../components/reducer/enemyChess\";\n// other part\nimport { CreateCheckerboard } from '../components/Checkerboard';\nimport { ChessUIBoard } from \"../components/ChessUIBoard\";\nimport { EnemyChessUIBoard } from \"../components/EnemyChessUIBoard\";\nimport { ConfirmTip } from \"../components/ConfirmTips\";\nimport { ChessStatus } from \"../components/ChessStatus\";\n// rule\nimport { stageRule } from \"../components/constants/stageRule\";\nexport const Canvas = ()=> {\n  const [ stageStatus, setStageStatus ] = useState('stageOne');\n  const [ currentChess, setCurrentChess ] = useState({\n    key:0,\n    type:\"MOVE\"\n  });\n  const [ tipStatus, setTipStatus ] = useState({\n    title:``,\n    status:false,\n    position:{\n      x:0,y:0\n    },\n  });\n  const [ moveStep, setMoveStep ] = useState(true);\n  const chessMap = useSelector(state=>state.chessMap);\n  const chess = useSelector(state=>state.chess);\n  const enemyChess = useSelector(state=>state.enemyChess);\n  const dispatch = useDispatch();\n  // debut\n  useEffect(()=>{\n    dispatch(stageDebut({ \n      isDebutChess:stageRule.getIn([stageStatus,'debutChess'])\n    }));\n    dispatch(enemyStageDebut({ \n      isDebutChess:stageRule.getIn([stageStatus,'debutEnemyChess'])\n    }));\n  },[ dispatch, stageStatus ])\n  return <Stage\n    width={800}\n    height={600}\n    options={{\n      autoDensity: true, \n      antialias: true,\n      backgroundColor:0x01262a\n    }}>\n    <CreateCheckerboard reduxProps={{ \n      chess,\n      chessMap,\n      currentChess,\n      dispatch,\n      setTipStatus\n    }}/>\n    <Container sortableChildren={true}>\n      {chess.map((value,key)=>{\n        return <React.Fragment key={key}>\n          {value.debut&&<Sprite\n            interactive={moveStep}\n            buttonMode={true}\n            width={40}\n            height={40}\n            x={value.x*40}\n            y={value.y*40}\n            zIndex={1}\n            pointerover={()=>{\n              dispatch(MoveSelect({\n                position:{ \n                  x:value.x, \n                  y:value.y,\n                },\n                step:value.step,\n                changeColor:'0x09bc8a'\n              }));\n            }}\n            pointerout={()=>{\n              dispatch(MoveSelect({\n                position:{ \n                  x:value.x, \n                  y:value.y,\n                },\n                step:value.step,\n                changeColor:'0x383838'\n              }));\n            }}\n            pointertap={()=>{\n              setMoveStep(false);\n              dispatch(chessSelected({\n                key:key\n              }));\n              dispatch(MoveSelect({\n                position:{ \n                  x:value.x, \n                  y:value.y,\n                },\n                step:value.step,\n                changeColor:'0x383838'\n              }));\n            }}\n            image={loader.resources[`${value.name}-head-default`].data}\n          />}\n          {value.boardStatus&&<ChessUIBoard\n            ChessData={chess}\n            ChessVal={value}\n            ChessKey={key}\n            EnemyChessData={enemyChess}\n            positionX={(value.x*40)+40}\n            positionY={(value.y*40)}\n            setCurrentChess={setCurrentChess}\n            setMoveStep={setMoveStep}\n            dispatch={dispatch}\n          />}\n          {value.checkStatus&&<ChessStatus\n            ChessData={value}\n            ChessKey={key}\n            setMoveStep={setMoveStep}\n            dispatch={dispatch}\n          />}\n        </React.Fragment>\n      })}\n      {enemyChess.map((value,key)=>{\n        return <React.Fragment key={key}>\n          {value.debut&&<Sprite\n            interactive={moveStep}\n            buttonMode={true}\n            width={40}\n            height={40}\n            x={value.x*40}\n            y={value.y*40}\n            zIndex={1}\n            pointertap={()=>{\n              setMoveStep(false);\n              dispatch(enemyChessSelected({\n                key:key\n              }));\n            }}\n            image={loader.resources[`${value.name}-head-default`].data}\n          />}\n          {value.boardStatus&&<EnemyChessUIBoard\n            ChessKey={key}\n            positionX={(value.x*40)+40}\n            positionY={(value.y*40)}\n            setMoveStep={setMoveStep}\n            dispatch={dispatch}\n          />}\n        </React.Fragment>\n      })}\n    </Container>\n    {tipStatus.status&&<ConfirmTip \n      props={{\n        chess,\n        currentChess,\n        tipStatus,\n        dispatch,\n        setMoveStep,\n        setTipStatus\n      }}\n    />}\n  </Stage>\n};","import React, { useState, useEffect } from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport { Canvas } from './Canvas';\nimport { loader } from './DataLoader';\nconst GlobalStyle = createGlobalStyle`\n  body { background:#1d2430; }\n`;\nconst StyledApp = styled.div`\n  position: relative;\n  display:flex;\n  align-items:center;\n  justify-content:center;\n  width:100%;\n  height:100vh;\n  .loading {\n    color: #fff;\n    font-size:24px;\n  }\n`;\nexport const App = ()=> {\n  const [ dataIsDone, setDataIsDone ] = useState(false);\n  useEffect(()=>{\n    loader.onComplete.add(()=>{\n      setDataIsDone(true);\n    });\n  });\n  return <StyledApp>\n    <GlobalStyle/>\n    {dataIsDone?<Canvas />:\n      <span className=\"loading\">Loading..</span>}\n  </StyledApp>\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, combineReducers } from 'redux';\nimport chess from './chess';\nimport chessMap from './map';\nimport enemyChess from './enemyChess';\nconst rootReducer = combineReducers({\n  chess,\n  chessMap,\n  enemyChess\n});\nexport const store = createStore(rootReducer);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './components/reducer/index';\n\nReactDOM.render(<Provider store={store}><App /></Provider>,document.getElementById('root'));\nreportWebVitals();\n"],"sourceRoot":""}