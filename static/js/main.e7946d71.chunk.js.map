{"version":3,"sources":["components/reducer/map.js","components/Checkerboard.js","components/reducer/chess.js","components/DataLoader.js","components/ChessUIBoard.js","components/ConfirmTips.js","components/Canvas.js","components/App.js","reportWebVitals.js","components/reducer/index.js","index.js"],"names":["mapLimit","createInitialState","method","list","i","push","createStraightLine","traverse","color","x","y","isInteractive","chessMap","createSlice","name","initialState","reducers","MoveSelect","state","action","payload","position","step","changeColor","GetMove","currentChessPositions","map","v","actions","texture","PIXI","WHITE","CreateCheckerboard","reduxProps","chess","currentChess","dispatch","setTipStatus","value","key","k","interactive","buttonMode","width","height","tint","pointertap","type","title","status","boardStatus","chessMove","changeX","changeY","chessSelected","loader","hostname","window","location","add","load","ChessUIBoard","ChessData","ChessVal","ChessKey","positionX","positionY","setCurrentChess","setMoveStep","useState","fromJS","id","textColor","textInforArray","setTextInforArray","CreateText","noop","val","text","get","style","fontFamily","fontSize","fill","toJS","pointerover","prev","setIn","pointerout","e","console","log","target","zIndex","draw","g","lineStyle","beginFill","drawRoundedRect","endFill","ConfirmTip","props","tipStatus","anchor","Canvas","moveStep","useSelector","useDispatch","options","autoDensity","antialias","backgroundColor","sortableChildren","Fragment","image","resources","data","GlobalStyle","createGlobalStyle","StyledApp","styled","div","App","dataIsDone","setDataIsDone","useEffect","onComplete","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e7946d71.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nconst mapLimit = { x:20, y:15 };\nconst createTraverseLine = (traverse=0,color='')=>{\n  const list = [];\n  for(let i=0;i<mapLimit.x;i++){\n    list.push({\n      x:i,\n      y:traverse,\n      color:color,\n      isInteractive:false\n    });\n  };\n  return list;\n};\nconst createStraightLine = ( method=()=>{} )=>{\n  const list = [];\n  for(let i=0;i<mapLimit.y;i++){\n    list.push(method(i,'0x383838'));\n  };\n  return list;\n};\nconst createInitialState = createStraightLine(createTraverseLine);\nconst chessMap = createSlice({\n  name:'chessMap',\n  initialState: createInitialState,\n  reducers:{\n    MoveSelect:(state, action)=>{\n      const { position, step, changeColor } = action.payload;\n      for(let i=0;i<(step+1);i++){\n        if(position.x+i<=(mapLimit.x-1)){\n          state[position.y][position.x+i].color=changeColor;\n          state[position.y][position.x+i].isInteractive=false;\n        };\n        if(position.y+i<=(mapLimit.y-1)){\n          state[position.y+i][position.x].color=changeColor;\n          state[position.y+i][position.x].isInteractive=false;\n        };\n        if(position.x-i>=0){\n          state[position.y][position.x-i].color=changeColor;\n          state[position.y][position.x-i].isInteractive=false;\n        };\n        if(position.y-i>=0){\n          state[position.y-i][position.x].color=changeColor;\n          state[position.y-i][position.x].isInteractive=false;\n        };\n      }\n    },\n    GetMove:(state, action)=>{\n      const { position, step, changeColor, currentChessPositions } = action.payload;\n      for(let i=0;i<(step+1);i++){\n        if(position.x+i<=(mapLimit.x-1)){\n          state[position.y][position.x+i].color=changeColor;\n          state[position.y][position.x+i].isInteractive=true;\n        };\n        if(position.y+i<=(mapLimit.y-1)){\n          state[position.y+i][position.x].color=changeColor;\n          state[position.y+i][position.x].isInteractive=true;\n        };\n        if(position.x-i>=0){\n          state[position.y][position.x-i].color=changeColor;\n          state[position.y][position.x-i].isInteractive=true;\n        };\n        if(position.y-i>=0){\n          state[position.y-i][position.x].color=changeColor;\n          state[position.y-i][position.x].isInteractive=true;\n        };\n      }\n      currentChessPositions.map(v=>{\n        return state[v.y][v.x].isInteractive=false;\n      });\n    }\n  }\n});\nexport default chessMap.reducer;\nexport const { MoveSelect, GetMove } = chessMap.actions;\n","import React, {} from 'react';\nimport * as PIXI from \"pixi.js\";\nimport { Sprite, Container } from '@inlet/react-pixi';\nimport { MoveSelect } from '../components/reducer/map';\nconst texture = PIXI.Texture.WHITE;\nexport const CreateCheckerboard = ({\n  reduxProps\n})=>{\n  const { \n    chess, chessMap, currentChess, dispatch, setTipStatus\n  } = reduxProps;\n  return <Container>\n    {chessMap.map((value,key)=> {\n      return value.map((v,k)=>{\n        return <Sprite\n          interactive={v.isInteractive}\n          buttonMode={v.isInteractive}\n          key={k}\n          width={40}\n          height={40}\n          x={v.x*40}\n          y={v.y*40}\n          tint={v.color}\n          texture={texture}\n          pointertap={()=>{\n            switch (currentChess.type) {\n              case \"MOVE\":\n                setTipStatus({\n                  title:'確定移動?',\n                  status:true,\n                  position:{\n                    x:v.x, y:v.y\n                  }\n                });\n                dispatch(MoveSelect({\n                  position:{ \n                    x:chess[currentChess.key].x, \n                    y:chess[currentChess.key].y,\n                  },\n                  step:chess[currentChess.key].step,\n                  changeColor:'0x4361ee'\n                }));\n                break;\n              default:\n                return;\n            }; \n          }}\n        />\n      });\n    })}\n  </Container>\n};","import { createSlice } from '@reduxjs/toolkit';\nconst chess = createSlice({\n  name:'chess',\n  initialState:[\n    {\n      name:'Tanjirou',\n      x:3,\n      y:10,\n      step:3,\n      boardStatus:false\n    },{\n      name:'Nezuko',\n      x:3,\n      y:12,\n      step:2,\n      boardStatus:false\n    },{\n      name:'Inosuke',\n      x:4,\n      y:11,\n      step:4,\n      boardStatus:false\n    }\n  ],\n  reducers:{\n    chessMove: (state, actions)=>{\n      const { key, changeX, changeY } = actions.payload;\n      state[key].x = changeX;\n      state[key].y = changeY;\n    },\n    chessSelected: (state, actions)=>{\n      const { key } = actions.payload;\n      state[key].boardStatus = !state[key].boardStatus;\n    }\n  }\n});\nexport default chess.reducer;\nexport const { chessMove, chessSelected } = chess.actions;","import * as PIXI from \"pixi.js\";\nexport const loader = new PIXI.Loader();\nconst hostname = window.location.hostname==='localhost'?'./Demon-Slayer/':'./';\n\nloader\n  .add('Tanjirou-head-default',`${hostname}imgs/Tanjirou/head-default.jpg`)\n  .add('Tanjirou-fight',`${hostname}imgs/Tanjirou/fight.png`)\n  .add('Nezuko-head-default',`${hostname}imgs/Nezuko/head-default.jpg`)\n  .add('Nezuko-fight',`${hostname}imgs/Nezuko/fight.png`)\n  .add('Inosuke-head-default',`${hostname}imgs/Inosuke/head-default.jpg`)\n  .add('Inosuke-fight',`${hostname}imgs/Inosuke/fight.png`)\n  .load();\n","import React,{ useState } from 'react';\nimport { fromJS } from 'immutable';\nimport { Graphics, Text } from '@inlet/react-pixi/animated';\nimport { GetMove } from '../components/reducer/map';\nimport { chessSelected } from \"../components/reducer/chess\";\nimport * as PIXI from \"pixi.js\";\n\nexport const ChessUIBoard = ({\n  ChessData,\n  ChessVal,\n  ChessKey,\n  positionX,\n  positionY,\n  setCurrentChess,\n  setMoveStep,\n  dispatch\n})=> {\n  const currentChessPositions = [];\n  const [textInforArray, setTextInforArray] = useState(fromJS([{\n      id:1, \n      title:\"移動\",\n      textColor:['#ffffff', '#ffffff']\n    },{ \n      id:2,\n      title:\"攻擊\",\n      textColor:['#ffffff', '#ffffff']\n    },{ \n      id:3,\n      title:\"戰技\",\n      textColor:['#ffffff', '#ffffff']\n    },{ \n      id:4,\n      title:\"返回\",\n      textColor:['#ffffff', '#ffffff']\n  }]));\n  ChessData.map((v)=>{\n    return currentChessPositions.push({\n      x:v.x,\n      y:v.y\n    });\n  });\n  const CreateText = ({ noop })=>{\n    return textInforArray.map((val,key)=>{\n      return <Text\n        key={key}\n        interactive={true}\n        buttonMode={true}\n        text={val.get('title')}\n        x={10}\n        y={5+(25*key)}\n        style={new PIXI.TextStyle({\n          fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 20,\n          fill:val.get('textColor').toJS(),\n        })}\n        pointerover={()=>{\n          setTextInforArray(prev=>\n            prev.setIn([key,'textColor',1],'#00ff99')\n          );\n        }}\n        pointerout={()=>{\n          setTextInforArray(prev=>\n            prev.setIn([key,'textColor',1],'#ffffff')\n          );\n        }}\n        pointertap={(e)=>{\n          switch (val.get('id')) {\n            case 1:\n              setCurrentChess({ \n                key:ChessKey,\n                type:\"MOVE\"\n              });\n              dispatch(GetMove({\n                position:{ \n                  x:ChessVal.x, \n                  y:ChessVal.y,\n                },\n                step:ChessVal.step,\n                changeColor:'0x4361ee',\n                currentChessPositions: currentChessPositions\n              }));\n              dispatch(chessSelected({\n                key:ChessKey\n              }));\n              break;\n            case 4 :\n              setMoveStep(true);\n              dispatch(chessSelected({\n                key:ChessKey\n              }));\n              break;\n            default:\n              return console.log(e.target)\n          };\n        }}\n      />\n    }\n  )};\n  return <Graphics\n    x={positionX}\n    y={positionY}\n    zIndex={2}\n    draw={g=> {\n      g.lineStyle(1,`0xffffff`,1);\n      g.beginFill(`0x22223b`);\n      g.drawRoundedRect(0,0,60,110,8);\n      g.endFill();\n    }}\n  ><CreateText/></Graphics>\n};","import React from 'react';\n// import { fromJS } from 'immutable';\nimport { Graphics, Text } from '@inlet/react-pixi/animated';\nimport { chessMove } from \"../components/reducer/chess\";\nimport { MoveSelect } from '../components/reducer/map';\nimport * as PIXI from \"pixi.js\";\n\nexport const ConfirmTip = ({\n  props,\n})=> {\n  const { \n    chess,\n    currentChess,\n    tipStatus,\n    dispatch,\n    setMoveStep, \n    setTipStatus\n  } = props;\n  return <Graphics\n    x={400}\n    y={300}\n    zIndex={99}\n    draw={g=> {\n      g.lineStyle(1,`0xffffff`,1);\n      g.beginFill(`0x22223b`);\n      g.drawRoundedRect(-90,-50,180,100,8);\n      g.endFill();\n    }}\n  >\n    <Text\n      text={tipStatus.title}\n      anchor={0.5}\n      x={0}\n      y={-20}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 20,\n        fill:['#ffffff', '#ffffff'],\n      })}\n    />\n    <Text\n      interactive={true}\n      buttonMode={true}\n      anchor={0.5}\n      text={'確定'}\n      x={-30}\n      y={20}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 20,\n        fill:['#ffffff', '#ffffff'],\n      })}\n      pointertap={()=>{\n        switch (currentChess.type) {\n          case \"MOVE\":\n            dispatch(chessMove({\n              key: currentChess.key,\n              changeX:tipStatus.position.x,\n              changeY:tipStatus.position.y\n            }));\n            dispatch(MoveSelect({\n              position:{ \n                x:chess[currentChess.key].x, \n                y:chess[currentChess.key].y,\n              },\n              step:chess[currentChess.key].step,\n              changeColor:'0x383838'\n            }));\n            setMoveStep(true);\n            setTipStatus(prev=>{\n              return {...prev, status:false }\n            });\n            break;\n          default:\n            return;\n        }\n      }}\n    />\n    <Text\n      interactive={true}\n      buttonMode={true}\n      anchor={0.5}\n      text={'取消'}\n      x={30}\n      y={20}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 20,\n        fill:['#ffffff', '#ffffff'],\n      })}\n      pointertap={()=>{\n        switch (currentChess.type) {\n          case \"MOVE\":\n            dispatch(MoveSelect({\n              position:{ \n                x:chess[currentChess.key].x, \n                y:chess[currentChess.key].y,\n              },\n              step:chess[currentChess.key].step,\n              changeColor:'0x383838'\n            }));\n            setMoveStep(true);\n            setTipStatus(prev=>{\n              return {...prev, status:false }\n            })\n            break;\n          default:\n            return;\n        }\n      }}\n    />\n  </Graphics>\n};","import React,{ useState } from 'react';\nimport { Stage, Sprite, Container } from '@inlet/react-pixi/animated';\nimport { CreateCheckerboard } from '../components/Checkerboard';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { MoveSelect } from '../components/reducer/map';\nimport { chessSelected } from \"../components/reducer/chess\";\nimport { loader } from './DataLoader';\n// other part\nimport { ChessUIBoard } from \"../components/ChessUIBoard\";\nimport { ConfirmTip } from \"../components/ConfirmTips\";\nexport const Canvas = ()=> {\n  const [ currentChess, setCurrentChess ] = useState({\n    key:0,\n    type:\"MOVE\"\n  });\n  const [ tipStatus, setTipStatus ] = useState({\n    title:``,\n    status:false,\n    position:{\n      x:0,y:0\n    },\n  });\n  const [ moveStep, setMoveStep ] = useState(true);\n  const chessMap = useSelector(state=>state.chessMap);\n  const chess = useSelector(state=>state.chess);\n  const dispatch = useDispatch();\n  return <Stage\n    width={800}\n    height={600}\n    options={{\n      autoDensity: true, \n      antialias: true,\n      backgroundColor:0x01262a\n    }}>\n    <CreateCheckerboard reduxProps={{ \n      chess,\n      chessMap,\n      currentChess,\n      dispatch,\n      setTipStatus\n    }}/>\n    <Container sortableChildren={true}>\n      {chess.map((value,key)=>{\n        return <React.Fragment key={key}>\n          <Sprite\n            interactive={moveStep}\n            buttonMode={true}\n            width={40}\n            height={40}\n            x={value.x*40}\n            y={value.y*40}\n            zIndex={1}\n            pointerover={()=>{\n              dispatch(MoveSelect({\n                position:{ \n                  x:value.x, \n                  y:value.y,\n                },\n                step:value.step,\n                changeColor:'0x09bc8a'\n              }));\n            }}\n            pointerout={()=>{\n              dispatch(MoveSelect({\n                position:{ \n                  x:value.x, \n                  y:value.y,\n                },\n                step:value.step,\n                changeColor:'0x383838'\n              }));\n            }}\n            pointertap={()=>{\n              setMoveStep(false);\n              dispatch(chessSelected({\n                key:key\n              }));\n              dispatch(MoveSelect({\n                position:{ \n                  x:value.x, \n                  y:value.y,\n                },\n                step:value.step,\n                changeColor:'0x383838'\n              }));\n            }}\n            image={loader.resources[`${value.name}-head-default`].data}\n          />\n          {value.boardStatus&&<ChessUIBoard\n            ChessData={chess}\n            ChessVal={value}\n            ChessKey={key}\n            positionX={(value.x*40)+40}\n            positionY={(value.y*40)}\n            setCurrentChess={setCurrentChess}\n            setMoveStep={setMoveStep}\n            dispatch={dispatch}\n          />}\n        </React.Fragment>\n      })}\n    </Container>\n    {tipStatus.status&&<ConfirmTip \n      props={{\n        chess,\n        currentChess,\n        tipStatus,\n        dispatch,\n        setMoveStep,\n        setTipStatus\n      }}\n    />}\n  </Stage>\n};","import React, { useState, useEffect } from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport { Canvas } from './Canvas';\nimport { loader } from './DataLoader';\nconst GlobalStyle = createGlobalStyle`\n  body { background:#1d2430; }\n`;\nconst StyledApp = styled.div`\n  position: relative;\n  display:flex;\n  align-items:center;\n  justify-content:center;\n  width:100%;\n  height:100vh;\n  .loading {\n    color: #fff;\n    font-size:24px;\n  }\n`;\nexport const App = ()=> {\n  const [ dataIsDone, setDataIsDone ] = useState(false);\n  useEffect(()=>{\n    loader.onComplete.add(()=>{\n      setDataIsDone(true);\n    });\n  });\n  return <StyledApp>\n    <GlobalStyle/>\n    {dataIsDone?<Canvas />:\n      <span className=\"loading\">Loading..</span>}\n  </StyledApp>\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, combineReducers } from 'redux';\nimport chess from './chess';\nimport chessMap from './map';\nconst rootReducer = combineReducers({\n  chess,\n  chessMap\n});\nexport const store = createStore(rootReducer);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './components/reducer/index';\n\nReactDOM.render(<Provider store={store}><App /></Provider>,document.getElementById('root'));\nreportWebVitals();\n"],"sourceRoot":""}