{"version":3,"sources":["reducer/chess.js","reducer/enemyChess.js","components/DataLoader.js","components/Common/GameStart/Index.js","reducer/map.js","components/Common/Checkerboard.js","components/Common/ConfirmTips.js","constants/stageRule.js","components/Common/UsualTip.js","components/Common/ProbabilityCount.js","components/Common/BattleBoard.js","components/Common/BattleAnimeShow/AinmeShowBG.js","components/Common/BattleAnimeShow/TopBar.js","constants/lines.js","components/Common/BattleAnimeShow/BottomBar.js","constants/SkillShowProtoType.js","constants/ChessSkillShow/TanjirouSkill/steps.js","constants/ChessSkillShow/TanjirouSkill/ShowType.js","constants/ChessSkillShow/TanjirouSkill/Index.js","constants/ChessSkillShow/Nezuko/steps.js","constants/ChessSkillShow/Nezuko/ShowType.js","constants/ChessSkillShow/Nezuko/Index.js","constants/ChessSkillShow/Index.js","constants/EnemyChessSkillShow/TeoniSkill/steps.js","constants/EnemyChessSkillShow/TeoniSkill/ShowType.js","constants/EnemyChessSkillShow/TeoniSkill/Index.js","constants/EnemyChessSkillShow/Index.js","components/Common/BattleAnimeShow/Index.js","components/Common/OtherTab.js","components/Common/EnemyRoundTab/EnemyList.js","components/Common/EnemyRoundTab/ChessList.js","components/Common/EnemyRoundTab/Information.js","components/Common/EnemyRoundTab/Index.js","components/Chess/ChessUIBoard.js","components/Common/ChessStatus.js","components/Chess/Chess.js","components/EnemyChess/EnemyChessUIBoard.js","components/EnemyChess/EnemyChess.js","components/Canvas.js","components/App.js","reportWebVitals.js","reducer/index.js","index.js"],"names":["basicCommon","x","y","checkStatus","boardStatus","debut","roundMove","chess","createSlice","name","initialState","cn","id","step","attack","hp","sp","dodge","fullValue","skill","atk","hitfix","reducers","stageDebut","state","actions","isDebutChess","payload","map","value","key","v","get","chessMove","changeX","changeY","chessSelected","chessCheckStatus","chessDefense","damage","chessAttackResult","lessSp","chessDead","chessMoved","chessRoundRest","i","length","roundAttack","enemyChess","enemyStageDebut","enemyChessSelected","enemyChessCheckStatus","enemyChessDefense","enemyChessAttackResult","enemyChessDead","hostname","window","location","loader","PIXI","audioData","open","Howl","src","preload","loop","round","enemyRound","KimetsuNoYaiba","KimetsuNoYaibaEnemy","add","load","GameStart","props","setRoundStart","setCurrentBGM","useState","logoWidth","setLogoWidth","start","setStart","startBtn","setStartBtn","useTick","delta","prev","Math","floor","useEffect","sortableChildren","anchor","width","height","image","resources","data","interactive","buttonMode","pointertap","fade","zIndex","draw","g","beginFill","drawRoundedRect","endFill","play","text","style","fontFamily","fontSize","fill","mapLimit","createInitialState","method","list","push","createStraightLine","traverse","color","alpha","isInteractive","chessMap","MoveSelect","action","position","changeColor","alphaVal","GetMove","currentChessPositions","GetAttack","texture","WHITE","CreateCheckerboard","reduxProps","currentChess","dispatch","setTipStatus","setMoveStep","setBattleInfo","Fragment","k","tint","type","title","status","isMatch","checkMatchAttackPosition","targetData","item","getCurrentEnemy","attacker","target","acttack","ConfirmTip","tipStatus","currentBGM","setOtherTab","setRoundNum","setUsualTip","setFadeBGM","lineStyle","stageRule","fromJS","stageOne","debutChess","debutEnemyChess","ruleText","win","lose","isWin","enemyList","totalLife","isLose","chessList","stageTwo","UsualTip","stageStatus","usualTip","setCurrentChess","setEnemyRoundTab","textColor","setTextColor","checkWin","getIn","checkLose","oder","ProbabilityCount","attackerHit","targetDodge","random","BattleBoard","battleInfo","setAnimeShow","atkSelectd","setAtkSelectd","CreateAttackerInfo","pX","pY","skillCanUse","fontWeight","CreateTargetInfo","ForecastInfo","isHit","prevSP","prevLife","AnimeShowBG","BGstatus","BGprop","SkBGprop","setSkBGpops","setBGpops","from","to","toX","config","duration","onRest","TopBar","right","left","showType","targetHp","attackerSp","hpBarCount","full","Number","spBarCount","lines","default","def","dead","BottomBar","linesStatus","showCharacter","character","randomSize","size","SkillShowProtoType","skillName","attackerName","targetLife","resultLife","resultSp","setBGstatus","setAnimeIsDone","setTargetHp","setAttackerSp","setLinesStatus","setShowSkill","defXPostion","steps","ShowType","mass","friction","tension","setPosition","defence","timeout","clearTimeout","isHitStep","setTimeout","isDead","next","seconds","isDodge","isDeadStep2","end","skill3step1","skill3step2","run","number","TweenMax","onUpdate","numeral","format","callback","skill3step3","step1","step2","step3","step4","TanjirouSkill","NezukoSkill","ChessSkillShow","defaultprops","TeoniSkill","EnemyChessSkillShow","BattleAnimeShow","animeShow","CreateContent","animeIsDone","showSkill","fetchChessType","CreateSkillSprite","video","videoDom","baseTexture","resource","source","onended","currentTime","clearAllTimeouts","OtherTab","roundNum","EnemyList","enemyRandomSkill","ChessList","defChess","setDefChess","distance","Information","atkEnemy","EnemyRoundTab","enemyRoundTab","filter","enemySkill","enemySp","totalSize","getAtkSkill","getCurrentChessKey","getKey","find","ChessUIBoard","ChessData","ChessVal","ChessKey","EnemyChessData","positionX","positionY","specialPosition","forMoveArray","forAttackArray","textInforArray","setTextInforArray","compareUsed","chessX","chessY","checkType","isUnused","val","moved","CreateText","noop","isAttack","chessAtk","isDebutEnemy","limitPosition","positionRange","getaddX","getaddY","getlessX","getlessY","compareAttack","fetchInteractive","toJS","pointerover","setIn","pointerout","e","console","log","ChessStatus","CheckStatus","CreateSkillList","Chess","chessProps","moveStep","Boolean","roundMoveDone","EnemyChessUIBoard","EnemyChess","enemyChessProps","Canvas","roundStart","otherTab","fadeBGM","useSelector","useDispatch","stop","volume","Howler","options","autoDensity","antialias","backgroundColor","isDesktop","device","desktop","GlobalStyle","createGlobalStyle","StyledApp","styled","div","App","dataIsDone","setDataIsDone","gameStart","setGameStart","progress","setProgress","mp3load","setMp3load","on","onProgress","onComplete","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9b5e68e5.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nconst basicCommon = {\r\n  x:0,\r\n  y:0,\r\n  checkStatus:false,\r\n  boardStatus:false,\r\n  debut:false,\r\n  roundMove:1\r\n};\r\nconst chess = createSlice({\r\n  name:'chess',\r\n  initialState:[\r\n    {\r\n      name:'Tanjirou',\r\n      cn:'竈門 炭治郎',\r\n      id:1,\r\n      step:3,\r\n      attack:2,\r\n      hp:1500,\r\n      sp:125,\r\n      dodge:80,\r\n      fullValue:{\r\n        hp:1500,\r\n        sp:125\r\n      },\r\n      skill:[{ \r\n        name:'斬擊',\r\n        atk:200,\r\n        sp:0,\r\n        hitfix:0\r\n      },{ \r\n        name:'叄之型―流流舞',\r\n        atk:350,\r\n        sp:15,\r\n        hitfix:10\r\n      },{ \r\n        name:'捌之型―滝壺',\r\n        atk:500,\r\n        sp:25,\r\n        hitfix:5\r\n      },{\r\n        name:'拾之型―生生流轉',\r\n        atk:850,\r\n        sp:50,\r\n        hitfix:20\r\n      }],\r\n      ...basicCommon\r\n    },{\r\n      name:'Nezuko',\r\n      cn:'竈門 禰豆子',\r\n      id:2,\r\n      step:2,\r\n      attack:1,\r\n      hp:2200,\r\n      sp:200,\r\n      dodge:80,\r\n      fullValue:{\r\n        hp:2200,\r\n        sp:200\r\n      },\r\n      skill:[{ \r\n        name:'爪擊',\r\n        atk:150,\r\n        sp:0,\r\n        hitfix:0\r\n      },{ \r\n        name:'踢擊',\r\n        atk:250,\r\n        sp:10,\r\n        hitfix:15\r\n      },{ \r\n        name:'血鬼術',\r\n        atk:1000,\r\n        sp:80,\r\n        hitfix:35\r\n      }],\r\n      ...basicCommon\r\n    },{\r\n      name:'Inosuke',\r\n      cn:'嘴平 伊之助',\r\n      id:3,\r\n      step:4,\r\n      attack:3,\r\n      hp:1800,\r\n      sp:80,\r\n      dodge:40,\r\n      fullValue:{\r\n        hp:1800,\r\n        sp:80\r\n      },\r\n      skill:[{ \r\n        name:'斬擊',\r\n        atk:50,\r\n        sp:0,\r\n        hitfix:0\r\n      },{ \r\n        name:'壹之牙―穿透刺射',\r\n        atk:120,\r\n        sp:2,\r\n        hitfix:0\r\n      },{ \r\n        name:'貳之牙―利刃對劈',\r\n        atk:200,\r\n        sp:5,\r\n        hitfix:0\r\n      },{\r\n        name:'叄之牙―獠牙撕扯',\r\n        atk:400,\r\n        sp:8,\r\n        hitfix:0\r\n      }],\r\n      ...basicCommon\r\n    }\r\n  ],\r\n  reducers:{\r\n    stageDebut:(state, actions)=> {\r\n      const { isDebutChess } = actions.payload;\r\n      state.map((value,key)=>{\r\n        return isDebutChess.map(v=>{\r\n          if(value.name===v.get('name')){\r\n            return (\r\n              state[key].debut = true,\r\n              state[key].x = v.get('x'),\r\n              state[key].y = v.get('y')\r\n            );\r\n          }else return null;\r\n        })\r\n      })\r\n    },\r\n    chessMove: (state, actions)=>{\r\n      const { key, changeX, changeY } = actions.payload;\r\n      state[key].x = changeX;\r\n      state[key].y = changeY;\r\n    },\r\n    chessSelected: (state, actions)=>{\r\n      const { key } = actions.payload;\r\n      state[key].boardStatus = !state[key].boardStatus;\r\n    },\r\n    chessCheckStatus: (state, actions)=> {\r\n      const { key } = actions.payload;\r\n      state[key].checkStatus = !state[key].checkStatus;\r\n    },\r\n    chessDefense: (state, actions)=>{\r\n      const { key, damage } = actions.payload;\r\n      state[key].hp -= damage;\r\n    },\r\n    chessAttackResult: (state, actions)=> {\r\n      const { key, lessSp } = actions.payload;\r\n      state[key].sp -= lessSp;\r\n    },\r\n    chessDead: (state, actions)=> {\r\n      const { key } = actions.payload;\r\n      state[key].debut = false;\r\n      state[key].hp = state[key].fullValue.hp;\r\n      state[key].sp = state[key].fullValue.sp;\r\n    },\r\n    chessMoved: (state, actions)=>{\r\n      const { key } = actions.payload;\r\n      state[key].roundMove -= 0;\r\n    },\r\n    chessRoundRest:(state)=>{\r\n      for(let i=0;i<state.length;i++){\r\n        state[i].roundMove = 1;\r\n      };\r\n    },\r\n  }\r\n});\r\nexport default chess.reducer;\r\nexport const { \r\n  stageDebut, chessMove, chessSelected, chessCheckStatus, chessAttackResult, \r\n  chessDead, chessMoved, chessDefense, chessRoundRest\r\n} = chess.actions;","import { createSlice } from '@reduxjs/toolkit';\r\nconst basicCommon = {\r\n  x:0,\r\n  y:0,\r\n  checkStatus:false,\r\n  boardStatus:false,\r\n  debut:false,\r\n  roundAttack:false,\r\n};\r\nconst enemyChess = createSlice({\r\n  name:'enemyChess',\r\n  initialState:[\r\n    {\r\n      name:'Teoni',\r\n      cn:'手鬼',\r\n      id:1,\r\n      hp:2000,\r\n      sp:100,\r\n      dodge:25,\r\n      fullValue:{\r\n        hp:2000,\r\n        sp:100\r\n      },\r\n      skill:[{ \r\n        name:'胡亂毆打',\r\n        atk:150,\r\n        sp:0,\r\n        hitfix:10\r\n      },{ \r\n        name:'你是第十四個',\r\n        atk:500,\r\n        sp:25,\r\n        hitfix:20\r\n      }],\r\n      ...basicCommon\r\n    },{\r\n      name:'Nomanooni',\r\n      cn:'沼鬼',\r\n      id:2,\r\n      hp:1500,\r\n      sp:200,\r\n      dodge:30,\r\n      fullValue:{\r\n        hp:1500,\r\n        sp:200\r\n      },\r\n      skill:[{ \r\n        name:'爪擊',\r\n        atk:70,\r\n        sp:0,\r\n        hitfix:15\r\n      },{ \r\n        name:'分身攻擊',\r\n        atk:600,\r\n        sp:15,\r\n        hitfix:30\r\n      }],\r\n      ...basicCommon\r\n    }\r\n  ],\r\n  reducers:{\r\n    enemyStageDebut:(state, actions)=> {\r\n      const { isDebutChess } = actions.payload;\r\n      state.map((value,key)=>{\r\n        return isDebutChess.map(v=>{\r\n          if(value.name===v.get('name')){\r\n            return (\r\n              state[key].debut = true,\r\n              state[key].x = v.get('x'),\r\n              state[key].y = v.get('y')\r\n            );\r\n          }else return null;\r\n        })\r\n      })\r\n    },\r\n    enemyChessSelected: (state, actions)=>{\r\n      const { key } = actions.payload;\r\n      state[key].boardStatus = !state[key].boardStatus;\r\n    },\r\n    enemyChessCheckStatus: (state, actions)=> {\r\n      const { key } = actions.payload;\r\n      state[key].checkStatus = !state[key].checkStatus;\r\n    },\r\n    enemyChessDefense: (state, actions)=> {\r\n      const { key, damage } = actions.payload;\r\n      state[key].hp -= damage;\r\n    },\r\n    enemyChessAttackResult: (state, actions)=> {\r\n      const { key, lessSp } = actions.payload;\r\n      state[key].sp -= lessSp;\r\n    },\r\n    enemyChessDead: (state, actions)=> {\r\n      const { key } = actions.payload;\r\n      state[key].debut = false;\r\n      state[key].hp = state[key].fullValue.hp;\r\n      state[key].sp = state[key].fullValue.sp;\r\n    },\r\n  }\r\n});\r\nexport default enemyChess.reducer;\r\nexport const { \r\n  enemyStageDebut, enemyChessSelected, enemyChessCheckStatus, enemyChessDefense, \r\n  enemyChessAttackResult, enemyChessDead \r\n} = enemyChess.actions;","import * as PIXI from \"pixi.js\";\r\nimport { Howl } from 'howler';\r\nconst hostname = window.location.hostname==='localhost'?'./Demon-Slayer/':'./';\r\nexport const loader = new PIXI.Loader();\r\nexport const audioData = {\r\n  open: new Howl({\r\n    src: [`${hostname}audio/bgm-open.mp3`],\r\n    preload: 'metadata',\r\n    loop: true\r\n  }),\r\n  round: new Howl({\r\n    src: [`${hostname}audio/bgm-round.mp3`],\r\n    preload: 'metadata',\r\n    loop: true\r\n  }),\r\n  enemyRound: new Howl({\r\n    src: [`${hostname}audio/bgm-round.mp3`],\r\n    preload: 'metadata',\r\n    loop: true\r\n  }),\r\n  KimetsuNoYaiba: new Howl({\r\n    src: [`${hostname}audio/bgm-KimetsuNoYaiba.mp3`],\r\n    preload: 'metadata',\r\n    loop: true\r\n  }),\r\n  KimetsuNoYaibaEnemy: new Howl({\r\n    src: [`${hostname}audio/bgm-KimetsuNoYaibaEnemy.mp3`],\r\n    preload: 'metadata',\r\n    loop: true\r\n  }),\r\n};\r\nloader\r\n  .add('Tanjirou-head-default',`${hostname}imgs/Tanjirou/head-default.png`)\r\n  .add('Tanjirou-talk-default',`${hostname}imgs/Tanjirou/talk-default.jpg`)\r\n  .add('Tanjirou-talk-attack',`${hostname}imgs/Tanjirou/talk-attack.jpg`)\r\n  .add('Tanjirou-talk-def',`${hostname}imgs/Tanjirou/talk-def.jpg`)\r\n  .add('Tanjirou-talk-dodge',`${hostname}imgs/Tanjirou/talk-dodge.jpg`)\r\n  .add('Tanjirou-talk-dead',`${hostname}imgs/Tanjirou/talk-dead.jpg`)\r\n  .add('Tanjirou-fight-typeA',`${hostname}imgs/Tanjirou/fight-typeA.png`)\r\n  .add('Tanjirou-fight-typeB',`${hostname}imgs/Tanjirou/fight-typeB.png`)\r\n  .add('Tanjirou-skill3-show',`${hostname}imgs/Tanjirou/skill/skill3.mp4`)\r\n  .add('Nezuko-head-default',`${hostname}imgs/Nezuko/head-default.jpg`)\r\n  .add('Nezuko-talk-default',`${hostname}imgs/Nezuko/talk-default.jpg`)\r\n  .add('Nezuko-talk-attack',`${hostname}imgs/Nezuko/talk-attack.jpg`)\r\n  .add('Nezuko-talk-def',`${hostname}imgs/Nezuko/talk-def.jpg`)\r\n  .add('Nezuko-talk-dodge',`${hostname}imgs/Nezuko/talk-dodge.jpg`)\r\n  .add('Nezuko-talk-dead',`${hostname}imgs/Nezuko/talk-dead.jpg`)\r\n  .add('Nezuko-fight',`${hostname}imgs/Nezuko/fight.png`)\r\n  .add('Inosuke-head-default',`${hostname}imgs/Inosuke/head-default.jpg`)\r\n  .add('Inosuke-fight',`${hostname}imgs/Inosuke/fight.png`)\r\n  .add('Teoni-head-default',`${hostname}imgs/Teoni/head-default.png`)\r\n  .add('Teoni-talk-default',`${hostname}imgs/Teoni/talk-default.jpg`)\r\n  .add('Teoni-talk-attack',`${hostname}imgs/Teoni/talk-attack.jpg`)\r\n  .add('Teoni-talk-def',`${hostname}imgs/Teoni/talk-def.jpg`)\r\n  .add('Teoni-talk-dodge',`${hostname}imgs/Teoni/talk-dodge.jpg`)\r\n  .add('Teoni-talk-dead',`${hostname}imgs/Teoni/talk-dead.jpg`)\r\n  .add('Teoni-fight',`${hostname}imgs/Teoni/fight.png`)\r\n  .add('Nomanooni-head-default',`${hostname}imgs/Nomanooni/head-default.jpg`)\r\n  .add('Nomanooni-fight',`${hostname}imgs/Nomanooni/fight.png`)\r\n  .add('stageOne-BG',`${hostname}imgs/background/stage1-background.png`)\r\n  .add('stageOne-main-BG',`${hostname}imgs/background/stage1-main-background.jpg`)\r\n  .add('logo',`${hostname}imgs/common/logo.png`)\r\n  .add('atkIcon',`${hostname}imgs/common/atk.png`)\r\n  .add('defIcon',`${hostname}imgs/common/def.png`)\r\n  .add('otherIcon',`${hostname}imgs/common/other.png`)\r\n  .add('closeIcon',`${hostname}imgs/common/close.png`)\r\n  .add('startBtn',`${hostname}imgs/common/startBtn.png`)\r\n  .add('endBtn',`${hostname}imgs/common/end.png`)\r\n  .add('fightOff',`${hostname}imgs/common/fightOff.png`)\r\n  .add('fightDef',`${hostname}imgs/common/fightDef.png`)\r\n  .load();\r\n","import React,{ useState, useEffect } from 'react';\r\nimport * as PIXI from \"pixi.js\";\r\nimport { audioData, loader } from '../../DataLoader';\r\nimport { Container, Text, Graphics, Sprite, useTick } from '@inlet/react-pixi/animated';\r\nexport const GameStart = ({\r\n  props\r\n})=>{\r\n  const { setRoundStart, setCurrentBGM } = props;\r\n  const [ logoWidth, setLogoWidth ] = useState(200);\r\n  const [ start, setStart ] = useState(false);\r\n  const [ startBtn, setStartBtn ] = useState(false);\r\n  let i = 0;\r\n  useTick(delta=>{\r\n    const add = i += 0.25 * delta;\r\n    if(logoWidth<350){\r\n      setLogoWidth(prev=>{return prev+=Math.floor(add)});\r\n    };\r\n  });\r\n  useEffect(()=>{\r\n    (logoWidth>=350)&&setStartBtn(true);\r\n  },[logoWidth])\r\n  return <Container sortableChildren={true}>\r\n    {!start?<>\r\n      <Graphics\r\n        interactive={true}\r\n        buttonMode={true}\r\n        x={0} y={0}\r\n        zIndex={1}\r\n        draw={g=> {\r\n          g.beginFill(`0x0000`);\r\n          g.drawRoundedRect(0,0,800,600,0);\r\n          g.endFill();\r\n        }}\r\n        pointertap={()=>{\r\n          audioData.open.play();\r\n          setStart(true);\r\n        }}\r\n      />\r\n      <Text\r\n        text={`任意點擊`}\r\n        zIndex={2}\r\n        anchor={0.5}\r\n        x={400}\r\n        y={300}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 24,\r\n          fill:'#ffffff',\r\n        })}\r\n      />\r\n    </>:<>\r\n      <Sprite\r\n        anchor={0.5}\r\n        x={400}\r\n        y={250}\r\n        width={logoWidth}\r\n        height={logoWidth}\r\n        image={loader.resources[`logo`].data}\r\n      />\r\n      {startBtn&&\r\n        <Sprite\r\n          interactive={true}\r\n          buttonMode={true}\r\n          anchor={0.5}\r\n          x={400}\r\n          y={450}\r\n          width={120}\r\n          height={56}\r\n          image={loader.resources[`startBtn`].data}\r\n          pointertap={()=>{\r\n            audioData.open.fade(1,0,1000)\r\n            setRoundStart(true);\r\n            setCurrentBGM('userRounds');\r\n          }}\r\n        />\r\n      }\r\n    </>\r\n  }\r\n  </Container>\r\n}","import { createSlice } from '@reduxjs/toolkit';\r\nconst mapLimit = { x:20, y:15 };\r\nconst createTraverseLine = (traverse=0,color='')=>{\r\n  const list = [];\r\n  for(let i=0;i<mapLimit.x;i++){\r\n    list.push({\r\n      x:i,\r\n      y:traverse,\r\n      color:color,\r\n      alpha:0,\r\n      zIndex:1,\r\n      isInteractive:false\r\n    });\r\n  };\r\n  return list;\r\n};\r\nconst createStraightLine = ( method=()=>{} )=>{\r\n  const list = [];\r\n  for(let i=0;i<mapLimit.y;i++){\r\n    list.push(method(i,'0x383838'));\r\n  };\r\n  return list;\r\n};\r\nconst createInitialState = createStraightLine(createTraverseLine);\r\nconst chessMap = createSlice({\r\n  name:'chessMap',\r\n  initialState: createInitialState,\r\n  reducers:{\r\n    MoveSelect:(state, action)=>{\r\n      const { position, step, changeColor, alphaVal=1} = action.payload;\r\n      for(let i=0;i<(step+1);i++){\r\n        if(position.x+i<=(mapLimit.x-1)){\r\n          state[position.y][position.x+i].color=changeColor;\r\n          state[position.y][position.x+i].isInteractive=false;\r\n          state[position.y][position.x+i].alpha=alphaVal;\r\n          state[position.y][position.x+i].zIndex=1;\r\n        };\r\n        if(position.y+i<=(mapLimit.y-1)){\r\n          state[position.y+i][position.x].color=changeColor;\r\n          state[position.y+i][position.x].isInteractive=false;\r\n          state[position.y+i][position.x].alpha=alphaVal;\r\n          state[position.y+i][position.x].zIndex=1;\r\n        };\r\n        if(position.x-i>=0){\r\n          state[position.y][position.x-i].color=changeColor;\r\n          state[position.y][position.x-i].isInteractive=false;\r\n          state[position.y][position.x-i].alpha=alphaVal;\r\n          state[position.y][position.x-i].zIndex=1;\r\n        };\r\n        if(position.y-i>=0){\r\n          state[position.y-i][position.x].color=changeColor;\r\n          state[position.y-i][position.x].isInteractive=false;\r\n          state[position.y-i][position.x].alpha=alphaVal;\r\n          state[position.y-i][position.x].zIndex=1;\r\n        };\r\n      }\r\n    },\r\n    GetMove:(state, action)=>{\r\n      const { position, step, changeColor, currentChessPositions } = action.payload;\r\n      for(let i=0;i<(step+1);i++){\r\n        if(position.x+i<=(mapLimit.x-1)){\r\n          state[position.y][position.x+i].color=changeColor;\r\n          state[position.y][position.x+i].isInteractive=true;\r\n          state[position.y][position.x+i].alpha=0.5;\r\n          state[position.y][position.x+i].zIndex=1;\r\n        };\r\n        if(position.y+i<=(mapLimit.y-1)){\r\n          state[position.y+i][position.x].color=changeColor;\r\n          state[position.y+i][position.x].isInteractive=true;\r\n          state[position.y+i][position.x].alpha=0.5;\r\n          state[position.y+i][position.x].zIndex=1;\r\n        };\r\n        if(position.x-i>=0){\r\n          state[position.y][position.x-i].color=changeColor;\r\n          state[position.y][position.x-i].isInteractive=true;\r\n          state[position.y][position.x-i].alpha=0.5;\r\n          state[position.y][position.x-i].zIndex=1;\r\n        };\r\n        if(position.y-i>=0){\r\n          state[position.y-i][position.x].color=changeColor;\r\n          state[position.y-i][position.x].isInteractive=true;\r\n          state[position.y-i][position.x].alpha=0.5;\r\n          state[position.y-i][position.x].zIndex=1;\r\n        };\r\n      }\r\n      currentChessPositions.map(v=>{\r\n        return state[v.y][v.x].isInteractive=false;\r\n      });\r\n    },\r\n    GetAttack:(state, action)=>{\r\n      const { position, step, changeColor, currentChessPositions } = action.payload;\r\n      for(let i=0;i<(step+1);i++){\r\n        if(position.x+i<=(mapLimit.x-1)){\r\n          state[position.y][position.x+i].color=changeColor;\r\n          state[position.y][position.x+i].isInteractive=true;\r\n          state[position.y][position.x+i].alpha=0.5;\r\n          state[position.y][position.x+i].zIndex=3;\r\n        };\r\n        if(position.y+i<=(mapLimit.y-1)){\r\n          state[position.y+i][position.x].color=changeColor;\r\n          state[position.y+i][position.x].isInteractive=true;\r\n          state[position.y+i][position.x].alpha=0.5;\r\n          state[position.y+i][position.x].zIndex=3;\r\n        };\r\n        if(position.x-i>=0){\r\n          state[position.y][position.x-i].color=changeColor;\r\n          state[position.y][position.x-i].isInteractive=true;\r\n          state[position.y][position.x-i].alpha=0.5;\r\n          state[position.y][position.x-i].zIndex=3;\r\n        };\r\n        if(position.y-i>=0){\r\n          state[position.y-i][position.x].color=changeColor;\r\n          state[position.y-i][position.x].isInteractive=true;\r\n          state[position.y-i][position.x].alpha=0.5;\r\n          state[position.y-i][position.x].zIndex=3;\r\n        };\r\n      }\r\n      currentChessPositions.map(v=>{\r\n        return (\r\n          state[v.y][v.x].isInteractive=false,\r\n          state[v.y][v.x].zIndex=1\r\n        )\r\n      });\r\n    }\r\n  }\r\n});\r\nexport default chessMap.reducer;\r\nexport const { MoveSelect, GetMove, GetAttack } = chessMap.actions;\r\n","import React, {} from 'react';\r\nimport * as PIXI from \"pixi.js\";\r\nimport { Sprite } from '@inlet/react-pixi/animated';\r\nimport { MoveSelect } from '../../reducer/map';\r\nconst texture = PIXI.Texture.WHITE;\r\nexport const CreateCheckerboard = ({\r\n  reduxProps\r\n})=>{\r\n  const { \r\n    chess, enemyChess, chessMap, currentChess, dispatch, \r\n    setTipStatus, setMoveStep, setBattleInfo\r\n  } = reduxProps;\r\n  const checkMatchAttackPosition = (x,y)=>{\r\n    let isMatch = false;\r\n    enemyChess.map(v=>{\r\n      const checkMatch = v.debut&&(x===v.x)&&(y===v.y);\r\n      if(checkMatch){\r\n        return isMatch=true;\r\n      }else return null;\r\n    });\r\n    return isMatch;\r\n  };\r\n  const getCurrentEnemy = (x,y)=>{\r\n    let item = {};\r\n    enemyChess.map((v,k)=>{\r\n      const checkMatch = v.debut&&(x===v.x)&&(y===v.y);\r\n      if(checkMatch){\r\n        return item={...v,key:k}\r\n      }else return null;\r\n    });\r\n    return item;\r\n  };\r\n  return <React.Fragment>\r\n    {chessMap.map(value=> {\r\n      return value.map((v,k)=>{\r\n        return <Sprite\r\n          interactive={v.isInteractive}\r\n          buttonMode={v.isInteractive}\r\n          zIndex={v.zIndex}\r\n          key={k}\r\n          width={40}\r\n          height={40}\r\n          x={v.x*40}\r\n          y={v.y*40}\r\n          tint={v.color}\r\n          alpha={v.alpha}\r\n          texture={texture}\r\n          pointertap={()=>{\r\n            switch (currentChess.type) {\r\n              case \"MOVE\":\r\n                setTipStatus({\r\n                  title:'確定移動?',\r\n                  status:true,\r\n                  position:{\r\n                    x:v.x, y:v.y\r\n                  }\r\n                });\r\n                dispatch(MoveSelect({\r\n                  position:{ \r\n                    x:chess[currentChess.key].x, \r\n                    y:chess[currentChess.key].y,\r\n                  },\r\n                  step:chess[currentChess.key].step,\r\n                  changeColor:'0x06d6a0',\r\n                  alphaVal:0.5\r\n                }));\r\n                break;\r\n              case \"ATTACK\":\r\n                if(checkMatchAttackPosition(v.x,v.y)){\r\n                  const targetData = getCurrentEnemy(v.x,v.y);\r\n                  setBattleInfo({\r\n                    status:true,\r\n                    attacker:{ \r\n                      key: currentChess.key,\r\n                      ...chess[currentChess.key]\r\n                    },\r\n                    target:{\r\n                      key: targetData.key,\r\n                      ...targetData\r\n                    }\r\n                  });\r\n                  dispatch(MoveSelect({\r\n                    position:{ \r\n                      x:chess[currentChess.key].x, \r\n                      y:chess[currentChess.key].y,\r\n                    },\r\n                    step:chess[currentChess.key].attack,\r\n                    changeColor:'0x383838',\r\n                    alphaVal:0\r\n                  }));\r\n                }else {\r\n                  setMoveStep(true);\r\n                  dispatch(MoveSelect({\r\n                    position:{ \r\n                      x:chess[currentChess.key].x, \r\n                      y:chess[currentChess.key].y,\r\n                    },\r\n                    step:chess[currentChess.key].acttack,\r\n                    changeColor:'0x383838',\r\n                    alphaVal:0\r\n                  }));\r\n                };\r\n                break;\r\n              default:\r\n                return;\r\n            }; \r\n          }}\r\n        />\r\n      });\r\n    })}\r\n  </React.Fragment>\r\n};","import React from 'react';\r\n// import { fromJS } from 'immutable';\r\nimport { Graphics, Text } from '@inlet/react-pixi/animated';\r\nimport { chessMove, chessMoved } from \"../../reducer/chess\";\r\nimport { MoveSelect } from '../../reducer/map';\r\nimport * as PIXI from \"pixi.js\";\r\n\r\nexport const ConfirmTip = ({\r\n  props,\r\n})=> {\r\n  const { \r\n    chess,\r\n    currentChess,\r\n    tipStatus,\r\n    currentBGM,\r\n    dispatch,\r\n    setMoveStep, \r\n    setTipStatus,\r\n    setOtherTab,\r\n    setRoundNum,\r\n    setUsualTip,\r\n    setFadeBGM\r\n  } = props;\r\n  return <Graphics\r\n    x={400}\r\n    y={300}\r\n    draw={g=> {\r\n      g.lineStyle(1,`0xffffff`,1);\r\n      g.beginFill(`0x22223b`);\r\n      g.drawRoundedRect(-90,-50,180,100,8);\r\n      g.endFill();\r\n    }}\r\n  >\r\n    <Text\r\n      text={tipStatus.title}\r\n      anchor={0.5}\r\n      x={0}\r\n      y={-20}\r\n      style={new PIXI.TextStyle({\r\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 20,\r\n        fill:['#ffffff', '#ffffff'],\r\n      })}\r\n    />\r\n    <Text\r\n      interactive={true}\r\n      buttonMode={true}\r\n      anchor={0.5}\r\n      text={'確定'}\r\n      x={-30}\r\n      y={20}\r\n      style={new PIXI.TextStyle({\r\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 20,\r\n        fill:['#ffffff', '#ffffff'],\r\n      })}\r\n      pointertap={()=>{\r\n        switch (currentChess.type) {\r\n          case \"MOVE\":\r\n            dispatch(chessMove({\r\n              key: currentChess.key,\r\n              changeX:tipStatus.position.x,\r\n              changeY:tipStatus.position.y\r\n            }));\r\n            dispatch(chessMoved({\r\n              key: currentChess.key,\r\n            }));\r\n            dispatch(MoveSelect({\r\n              position:{ \r\n                x:chess[currentChess.key].x, \r\n                y:chess[currentChess.key].y,\r\n              },\r\n              step:chess[currentChess.key].step,\r\n              changeColor:'0x383838',\r\n              alphaVal:0\r\n            }));\r\n            setMoveStep(true);\r\n            setTipStatus(prev=>{\r\n              return {...prev, status:false }\r\n            });\r\n            break;\r\n          case \"ENDROUND\":\r\n            setOtherTab(false);\r\n            setRoundNum(prev=>prev+=1);\r\n            setTipStatus(prev=>{\r\n              return {...prev, status:false }\r\n            });\r\n            setUsualTip({\r\n              title:'敵方回合',\r\n              status:true\r\n            });\r\n            setFadeBGM(currentBGM);\r\n            break;\r\n          default:\r\n            return;\r\n        }\r\n      }}\r\n    />\r\n    <Text\r\n      interactive={true}\r\n      buttonMode={true}\r\n      anchor={0.5}\r\n      text={'取消'}\r\n      x={30}\r\n      y={20}\r\n      style={new PIXI.TextStyle({\r\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 20,\r\n        fill:['#ffffff', '#ffffff'],\r\n      })}\r\n      pointertap={()=>{\r\n        switch (currentChess.type) {\r\n          case \"MOVE\":\r\n            dispatch(MoveSelect({\r\n              position:{ \r\n                x:chess[currentChess.key].x, \r\n                y:chess[currentChess.key].y,\r\n              },\r\n              step:chess[currentChess.key].step,\r\n              changeColor:'0x383838',\r\n              alphaVal:0\r\n            }));\r\n            setMoveStep(true);\r\n            setTipStatus(prev=>{\r\n              return {...prev, status:false }\r\n            });\r\n            break;\r\n          case \"ENDROUND\":\r\n            setTipStatus(prev=>{\r\n              return {...prev, status:false }\r\n            });\r\n            break;\r\n          default:\r\n            return;\r\n        }\r\n      }}\r\n    />\r\n  </Graphics>\r\n};","import { fromJS } from \"immutable\";\r\n\r\nexport const stageRule = fromJS({\r\n  stageOne: {\r\n    debutChess:[\r\n      { \r\n        name:'Tanjirou',\r\n        x:6,\r\n        y:7\r\n      }\r\n    ],\r\n    debutEnemyChess:[\r\n      {\r\n        name:'Teoni',\r\n        x:14,\r\n        y:7\r\n      }\r\n    ],\r\n    ruleText:{\r\n      win:'擊敗手鬼。',\r\n      lose:'竃門 碳治郎 戰敗。'\r\n    },\r\n    isWin: enemyList => {\r\n      let totalLife = 0;\r\n        enemyList.map(v => {\r\n          if(v.debut){\r\n            return totalLife += v.hp;\r\n          }return null;\r\n        });\r\n      return totalLife>0 ? false : true ;\r\n    },\r\n    isLose: chessList => {\r\n      let totalLife = 0;\r\n        chessList.map(v => {\r\n          if(v.debut){\r\n            return totalLife += v.hp;\r\n          }return null;\r\n        });\r\n      return totalLife>0 ? false : true ;\r\n    }\r\n  },\r\n  stageTwo: {\r\n    debutChess:[\r\n      { \r\n        name:'Tanjirou',\r\n        x:3,\r\n        y:9\r\n      }, { \r\n        name:'Nezuko',\r\n        x:3,\r\n        y:11\r\n      }\r\n    ],\r\n    debutEnemyChess:[\r\n      {\r\n        name:'Nomanooni',\r\n        x:16,\r\n        y:7\r\n      }\r\n    ]\r\n  }\r\n});","import React,{ useState } from 'react';\r\n// import { fromJS } from 'immutable';\r\nimport { Graphics, Text } from '@inlet/react-pixi/animated';\r\nimport * as PIXI from \"pixi.js\";\r\n// rule\r\nimport { stageRule } from \"../../constants/stageRule\";\r\n\r\nexport const UsualTip = ({\r\n  props,\r\n})=> {\r\n  const {\r\n    stageStatus, chess, currentChess, enemyChess, currentBGM,\r\n    usualTip, setMoveStep, setUsualTip, setCurrentChess, setFadeBGM,\r\n    setEnemyRoundTab } = props;\r\n    const [ textColor, setTextColor ] = useState(['#ffffff', '#ffffff']);\r\n  return <Graphics\r\n    x={400}\r\n    y={300}\r\n    draw={g=> {\r\n      g.lineStyle(1,`0xffffff`,1);\r\n      g.beginFill(`0x22223b`);\r\n      g.drawRoundedRect(-90,-50,180,100,8);\r\n      g.endFill();\r\n    }}\r\n  >\r\n    <Text\r\n      text={usualTip.title}\r\n      anchor={0.5}\r\n      x={0}\r\n      y={-20}\r\n      style={new PIXI.TextStyle({\r\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 20,\r\n        fill: textColor,\r\n      })}\r\n    />\r\n    <Text\r\n      interactive={true}\r\n      buttonMode={true}\r\n      anchor={0.5}\r\n      text={'確定'}\r\n      x={0}\r\n      y={20}\r\n      style={new PIXI.TextStyle({\r\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 20,\r\n        fill:['#ffffff', '#ffffff'],\r\n      })}\r\n      pointertap={()=>{\r\n        switch (currentChess.type) {\r\n          case \"ATTACK\":\r\n            const checkWin = stageRule.getIn([stageStatus,'isWin']);\r\n            const checkLose = stageRule.getIn([stageStatus,'isLose']);\r\n            if(checkWin(enemyChess)){\r\n              setTextColor(['#ffffff', '#06d6a0']);\r\n              setCurrentChess({\r\n                key:0,\r\n                type:\"CHECKWIN\"\r\n              });\r\n              setUsualTip({\r\n                title:`作戰獲勝!`,\r\n                status:true,\r\n              });\r\n            }else if(checkLose(chess)){\r\n              setTextColor(['#dc2f02', '#d00000']);\r\n              setCurrentChess({\r\n                key:0,\r\n                type:\"CHECKLOSE\"\r\n              });\r\n              setUsualTip({\r\n                title:`作戰失敗!`,\r\n                status:true,\r\n              });\r\n            }else {\r\n              setMoveStep(true);\r\n              setUsualTip({\r\n                title:``,\r\n                status:false,\r\n              });\r\n            }\r\n            break;\r\n          case \"CHECKWIN\":\r\n            setMoveStep(true);\r\n            setTextColor(['#ffffff', '#ffffff']);\r\n            setUsualTip({\r\n              title:``,\r\n              status:false,\r\n            });\r\n            break;\r\n          case \"CHECKLOSE\":\r\n            setMoveStep(true);\r\n            setTextColor(['#ffffff', '#ffffff']);\r\n            setUsualTip({\r\n              title:``,\r\n              status:false,\r\n            });\r\n            break;\r\n          case \"ENDROUND\":\r\n            setEnemyRoundTab({\r\n              oder:0,\r\n              status:true\r\n            });\r\n            setUsualTip({\r\n              title:``,\r\n              status:false\r\n            });\r\n            break;\r\n          case \"USERROUND\":\r\n            setFadeBGM(currentBGM);\r\n            setMoveStep(true);\r\n            setUsualTip({\r\n              title:``,\r\n              status:false\r\n            });\r\n            break;\r\n          default:\r\n            return;\r\n        }\r\n      }}\r\n    />\r\n  </Graphics>\r\n};","export const ProbabilityCount = (\r\n  attackerHit,\r\n  targetDodge\r\n)=>{\r\n  const basicHit = 100;\r\n  const hitProbability = basicHit + attackerHit - targetDodge;\r\n  const checkRamdom = Math.round(Math.random()*100 + 1);\r\n  if(hitProbability < checkRamdom) {\r\n    return false\r\n  }else return true;\r\n};","import React,{ useState } from 'react';\r\nimport { Container, Sprite, Graphics, Text } from '@inlet/react-pixi/animated';\r\nimport { loader } from '../DataLoader';\r\nimport * as PIXI from \"pixi.js\";\r\nimport { ProbabilityCount } from \"../Common/ProbabilityCount\";\r\nimport { chessAttackResult, chessMoved } from \"../../reducer/chess\";\r\nimport { enemyChessDefense } from \"../../reducer/enemyChess\";\r\n\r\nexport const BattleBoard = ({ props })=>{\r\n  const { \r\n    battleInfo, setMoveStep, setBattleInfo, setAnimeShow, setCurrentBGM, dispatch\r\n  } = props;\r\n  const [ atkSelectd, setAtkSelectd ] = useState({\r\n    key:0,\r\n  });\r\n  const CreateAttackerInfo = ({ pX=0, pY=0, data })=>{\r\n    return <Container x={pX} y={pY} sortableChildren={true}>\r\n      <Text\r\n        text={'攻'}\r\n        x={220}\r\n        y={0}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 30,\r\n          fill:['#ffffff', '#00ff99'],\r\n        })}\r\n      />\r\n      <Text\r\n        text={data.cn}\r\n        x={60}\r\n        y={-3}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 16,\r\n          fill:'#ffffff',\r\n        })}\r\n      />\r\n      <Text\r\n        text={`${data.hp} / ${data.fullValue.hp}`}\r\n        x={60}\r\n        y={17}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 16,\r\n          fill:'#ff6b6b',\r\n        })}\r\n      />\r\n      <Text\r\n        text={`${data.sp} / ${data.fullValue.sp}`}\r\n        x={60}\r\n        y={34}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 16,\r\n          fill:'#0466c8',\r\n        })}\r\n      />\r\n      <Sprite\r\n        width={50}\r\n        height={50}\r\n        x={0}\r\n        y={0}\r\n        image={loader.resources[`${data.name}-head-default`].data}\r\n      />\r\n      <Text\r\n        text={`招式選擇：`}\r\n        x={0}\r\n        y={80}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 16,\r\n          fill:'#ffffff',\r\n        })}\r\n      />\r\n      <Graphics\r\n        x={0}\r\n        y={115}\r\n        zIndex={1}\r\n        draw={g=> {\r\n          g.lineStyle(1,`0xffffff`,1);\r\n          g.beginFill(`0x0f0f1b`);\r\n          g.drawRoundedRect(0,0,240,180,8);\r\n          g.endFill();\r\n        }}\r\n      />\r\n      {data.skill.map((value,key)=>{\r\n        const skillCanUse = data.sp - value.sp >= 0;\r\n        return <React.Fragment key={key}>\r\n          <Text\r\n            zIndex={2}\r\n            interactive={skillCanUse}\r\n            buttonMode={true}\r\n            text={value.name}\r\n            x={20}\r\n            y={130+(key*24)}\r\n            style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n              fontSize: 16,\r\n              fill: ((atkSelectd.key===key)&&skillCanUse) ? ['#ffffff', '#00ff99'] :  \r\n                skillCanUse ? '#ffffff' : '#8d99ae',\r\n              fontWeight: (atkSelectd.key===key) ? 600 : 300\r\n            })}\r\n            pointertap={()=>setAtkSelectd({\r\n              key: key\r\n            })}\r\n          />\r\n        </React.Fragment>\r\n      })}\r\n    </Container>\r\n  };\r\n  const CreateTargetInfo = ({ pX=0, pY=0, data })=>{\r\n    return <Container x={pX} y={pY} sortableChildren={true}>\r\n      <Text\r\n        text={'防'}\r\n        x={0}\r\n        y={0}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 30,\r\n          fill:['#ffffff', '#ee6c4d'],\r\n        })}\r\n      />\r\n      <Text\r\n        text={data.cn}\r\n        anchor={{x:1,y:0}}\r\n        x={190}\r\n        y={-3}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 16,\r\n          fill:'#ffffff',\r\n        })}\r\n      />\r\n      <Text\r\n        text={`${data.hp} / ${data.fullValue.hp}`}\r\n        anchor={{x:1,y:0}}\r\n        x={190}\r\n        y={17}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 16,\r\n          fill:'#ff6b6b',\r\n        })}\r\n      />\r\n      <Text\r\n        text={`${data.sp} / ${data.fullValue.sp}`}\r\n        anchor={{x:1,y:0}}\r\n        x={190}\r\n        y={34}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 16,\r\n          fill:'#0466c8',\r\n        })}\r\n      />\r\n      <Sprite\r\n        width={50}\r\n        height={50}\r\n        x={200}\r\n        y={0}\r\n        image={loader.resources[`${data.name}-head-default`].data}\r\n      />\r\n    </Container>\r\n  };\r\n  const ForecastInfo = ({ pX, pY, data })=>{\r\n    return <Container x={pX} y={pY} sortableChildren={true}>\r\n      <Graphics\r\n        x={0}\r\n        y={0}\r\n        zIndex={1}\r\n        draw={g=> {\r\n          g.lineStyle(1,`0x00ff99`,1);\r\n          g.beginFill(`0x0f0f1b`);\r\n          g.drawRoundedRect(0,0,265,215,8);\r\n          g.endFill();\r\n        }}\r\n      />\r\n      <Text\r\n        text={`招式：`}\r\n        zIndex={2}\r\n        x={20}\r\n        y={20}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 20,\r\n          fill:'#ffffff'\r\n        })}\r\n      />\r\n      <Text\r\n        text={`${data.attacker.skill[atkSelectd.key].name}`}\r\n        zIndex={2}\r\n        x={80}\r\n        y={22}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 16,\r\n          fill:'#00ff99'\r\n        })}\r\n      />\r\n      <Text\r\n        text={`攻擊力：`}\r\n        zIndex={2}\r\n        x={20}\r\n        y={50}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 20,\r\n          fill:'#ffffff'\r\n        })}\r\n      />\r\n      <Text\r\n        text={`${data.attacker.skill[atkSelectd.key].atk}`}\r\n        zIndex={2}\r\n        x={100}\r\n        y={52}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 18,\r\n          fill:'#fdc500'\r\n        })}\r\n      />\r\n      <Text\r\n        text={`命中率：`}\r\n        zIndex={2}\r\n        x={20}\r\n        y={80}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 20,\r\n          fill:'#ffffff'\r\n        })}\r\n      />\r\n      <Text\r\n        text={`${\r\n          100 +\r\n          ((data.attacker.skill[atkSelectd.key].hitfix - data.target.dodge)>=0 ? 0 :\r\n            (data.attacker.skill[atkSelectd.key].hitfix - data.target.dodge))\r\n        }%`}\r\n        zIndex={2}\r\n        x={100}\r\n        y={82}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 18,\r\n          fill:'#ffffff'\r\n        })}\r\n      />\r\n      <Text\r\n        text={`消耗：`}\r\n        zIndex={2}\r\n        x={20}\r\n        y={110}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 20,\r\n          fill:'#ffffff'\r\n        })}\r\n      />\r\n      <Text\r\n        text={`${data.attacker.skill[atkSelectd.key].sp}`}\r\n        zIndex={2}\r\n        x={80}\r\n        y={110}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 18,\r\n          fill:'#0466c8'\r\n        })}\r\n      />\r\n    </Container>\r\n  };\r\n  return <Graphics\r\n    x={400}\r\n    y={300}\r\n    zIndex={99}\r\n    draw={g=> {\r\n      g.lineStyle(1,`0xffffff`,1);\r\n      g.beginFill(`0x22223b`);\r\n      g.drawRoundedRect(-300,-200,600,400,8);\r\n      g.endFill();\r\n    }}\r\n  >\r\n    <CreateAttackerInfo\r\n      pX={-270}\r\n      pY={-180}\r\n      data={battleInfo.attacker}\r\n    />\r\n    <CreateTargetInfo\r\n      pX={20}\r\n      pY={-180}\r\n      data={battleInfo.target}\r\n    />\r\n    <ForecastInfo\r\n      pX={0}\r\n      pY={-100}\r\n      data={battleInfo}\r\n    />\r\n    <Text\r\n      interactive={true}\r\n      buttonMode={true}\r\n      text={'攻擊'}\r\n      anchor={0.5}\r\n      x={180}\r\n      y={160}\r\n      style={new PIXI.TextStyle({\r\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 20,\r\n        fill:'#ffffff',\r\n      })}\r\n      pointertap={()=>{\r\n        setCurrentBGM(battleInfo.attacker.name);\r\n        const isHit = ProbabilityCount(\r\n          battleInfo.attacker.skill[atkSelectd.key].hitfix,\r\n          battleInfo.target.dodge\r\n        );\r\n        dispatch(chessAttackResult({\r\n          key: battleInfo.attacker.key,\r\n          lessSp: battleInfo.attacker.skill[atkSelectd.key].sp\r\n        }));\r\n        dispatch(chessMoved({\r\n          key: battleInfo.attacker.key,\r\n        }));\r\n        if(isHit){\r\n          dispatch(enemyChessDefense({\r\n            key: battleInfo.target.key,\r\n            damage: battleInfo.attacker.skill[atkSelectd.key].atk\r\n          }));\r\n        };\r\n        setAnimeShow({\r\n          status:true,\r\n          type:'USER',\r\n          isHit: isHit,\r\n          attacker:{ \r\n            key:battleInfo.attacker.key,\r\n            skill:battleInfo.attacker.skill[atkSelectd.key],\r\n            prevSP:battleInfo.attacker.sp\r\n          },\r\n          target:{ \r\n            key:battleInfo.target.key,\r\n            isHit:isHit,\r\n            prevLife:battleInfo.target.hp\r\n          }\r\n        });\r\n        setBattleInfo({\r\n          status:false,\r\n          attacker:{ key:'' },\r\n          target:{ key:'' }\r\n        });\r\n      }}\r\n    />\r\n    <Text\r\n      interactive={true}\r\n      buttonMode={true}\r\n      text={'取消'}\r\n      anchor={0.5}\r\n      x={240}\r\n      y={160}\r\n      style={new PIXI.TextStyle({\r\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 20,\r\n        fill:'#ffffff',\r\n      })}\r\n      pointertap={()=>{\r\n        setMoveStep(true);\r\n        setBattleInfo({\r\n          status:false,\r\n          attacker:{ key:'' },\r\n          target:{ key:'' }\r\n        })\r\n      }}\r\n    />\r\n  </Graphics>\r\n};","import React from 'react';\r\nimport { Sprite } from '@inlet/react-pixi/animated';\r\nimport { Spring } from 'react-spring/renderprops';\r\nimport { loader } from '../../DataLoader';\r\n\r\nexport const AnimeShowBG = ({\r\n  props,\r\n})=>{\r\n  const { stageStatus, BGstatus, BGprop, SkBGprop, \r\n    setSkBGpops, setBGpops } = props;\r\n  return <>\r\n    {BGstatus.type==='STOP'&&<Sprite\r\n      x={-400}\r\n      y={-100}\r\n      zIndex={1}\r\n      width={1600}\r\n      height={500}\r\n      anchor={0.5}\r\n      image={loader.resources[`${stageStatus}-BG`].data}\r\n    />}\r\n    {BGstatus.type==='STANDBY'&&<Spring\r\n      from={{ x:-400, y:-100 }}\r\n      to={{ x: BGprop.toX, y:-100 }}\r\n      config={{ duration: BGprop.duration }}\r\n      onRest={()=>{\r\n        if(BGprop.toX===-400){\r\n          setBGpops({\r\n            toX:400,\r\n            duration: 20000\r\n          });\r\n        }else {\r\n          setBGpops({\r\n            toX:-400,\r\n            duration:-1000\r\n          });\r\n        };\r\n      }}\r\n    >\r\n      {props => \r\n        <Sprite\r\n          zIndex={1}\r\n          width={1600}\r\n          height={500}\r\n          anchor={0.5}\r\n          image={loader.resources[`${stageStatus}-BG`].data}\r\n          {...props}\r\n      />}\r\n    </Spring>}\r\n    {BGstatus.type==='ENEMYSTANDBY'&&<Spring\r\n      from={{ x:400, y:-100 }}\r\n      to={{ x: -BGprop.toX, y:-100 }}\r\n      config={{ duration: BGprop.duration }}\r\n      onRest={()=>{\r\n        if(-BGprop.toX===400){\r\n          setBGpops({\r\n            toX:400,\r\n            duration: 20000\r\n          });\r\n        }else {\r\n          setBGpops({\r\n            toX:-400,\r\n            duration:-1000\r\n          });\r\n        };\r\n      }}\r\n    >\r\n      {props => \r\n        <Sprite\r\n          zIndex={1}\r\n          width={1600}\r\n          height={500}\r\n          anchor={0.5}\r\n          image={loader.resources[`${stageStatus}-BG`].data}\r\n          {...props}\r\n      />}\r\n    </Spring>}\r\n    {BGstatus.type==='SKILL'&&<Spring\r\n      from={{ x:-400, y:-100 }}\r\n      to={{ x: SkBGprop.toX, y:-100 }}\r\n      config={{ duration: SkBGprop.duration }}\r\n      onRest={()=>{\r\n        if(SkBGprop.toX===-400){\r\n          setSkBGpops({\r\n            toX:400,\r\n            duration: 500\r\n          });\r\n        }else {\r\n          setSkBGpops({\r\n            toX:-400,\r\n            duration:-1000\r\n          });\r\n        };\r\n      }}\r\n    >\r\n      {props => \r\n        <Sprite\r\n          zIndex={1}\r\n          width={1600}\r\n          height={500}\r\n          anchor={0.5}\r\n          image={loader.resources[`${stageStatus}-BG`].data}\r\n          {...props}\r\n      />}\r\n    </Spring>}\r\n    {BGstatus.type==='ENEMYSKILL'&&<Spring\r\n      from={{ x:400, y:-100 }}\r\n      to={{ x: -SkBGprop.toX, y:-100 }}\r\n      config={{ duration: SkBGprop.duration }}\r\n      onRest={()=>{\r\n        if(-SkBGprop.toX===400){\r\n          setSkBGpops({\r\n            toX:400,\r\n            duration: 500\r\n          });\r\n        }else {\r\n          setSkBGpops({\r\n            toX:-400,\r\n            duration:-1000\r\n          });\r\n        };\r\n      }}\r\n    >\r\n      {props => \r\n        <Sprite\r\n          zIndex={1}\r\n          width={1600}\r\n          height={500}\r\n          anchor={0.5}\r\n          image={loader.resources[`${stageStatus}-BG`].data}\r\n          {...props}\r\n      />}\r\n    </Spring>}\r\n  </>\r\n};","import React from 'react';\r\nimport { Container, Sprite, Graphics, Text } from '@inlet/react-pixi/animated';\r\nimport * as PIXI from \"pixi.js\";\r\nimport { loader } from '../../DataLoader';\r\nexport const TopBar = ({\r\n  right={},\r\n  left={},\r\n  showType='',\r\n  targetHp=0,\r\n  attackerSp=0\r\n})=> {\r\n  const hpBarCount = (hp,full)=>{\r\n    const leftVal =  Number(full) - Number(hp);\r\n    const percentage = Number(full) / 200;\r\n    const result = leftVal / percentage;\r\n    return result;\r\n  };\r\n  const spBarCount = (sp,full)=>{\r\n    const leftVal =  Number(full) - Number(sp);\r\n    const percentage = Number(full) / 100;\r\n    const result = leftVal / percentage;\r\n    return result;\r\n  };\r\n  return <Graphics \r\n    x={-400}\r\n    y={-300}\r\n    zIndex={98}\r\n    draw={g=> {\r\n      g.beginFill(`0x000f23`);\r\n      g.drawRoundedRect(0,0,800,80,0);\r\n      g.endFill();\r\n    }}\r\n  >\r\n    <Container sortableChildren={true}>\r\n      <Sprite\r\n        width={42}\r\n        height={42}\r\n        x={370}\r\n        y={40}\r\n        anchor={0.5} \r\n        image={loader.resources[`${showType===\"USER\" ? 'defIcon' : 'atkIcon' }`].data}\r\n      />\r\n      <Sprite\r\n        width={42}\r\n        height={42}\r\n        x={420}\r\n        y={40}\r\n        anchor={0.5} \r\n        image={loader.resources[`${showType===\"USER\" ? 'atkIcon' : 'defIcon' }`].data}\r\n      />\r\n      {/* left */}\r\n      <Sprite\r\n        width={50}\r\n        height={50}\r\n        x={50}\r\n        y={15}\r\n        image={loader.resources[`${left.name}-head-default`].data}\r\n      />\r\n      <Text \r\n        text={`${showType===\"USER\"?targetHp:left.hp} / ${left.fullValue.hp}`}\r\n        anchor={{x:1,y:0}} \r\n        x={320} y={10}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 18,\r\n          fill:'#e71d36',\r\n        })}/>\r\n      <Graphics\r\n        x={320} y={35}\r\n        zIndex={1}\r\n        draw={g=> {\r\n          g.beginFill(`0xe71d36`);\r\n          g.drawRoundedRect(0,0,-200,10,0);\r\n          g.endFill();\r\n        }}\r\n      />\r\n      <Graphics\r\n        x={320} y={35}\r\n        zIndex={2}\r\n        draw={g=> {\r\n          g.beginFill(`0x333533`);\r\n          g.drawRoundedRect(-200,0,hpBarCount(showType===\"USER\"?targetHp:left.hp,left.fullValue.hp),10,0);\r\n          g.endFill();\r\n        }}\r\n      />\r\n      <Text \r\n        text={`${showType===\"USER\"? left.sp : attackerSp} / ${left.fullValue.sp}`}\r\n        anchor={{x:1,y:0.3}} \r\n        x={210} y={55}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 18,\r\n          fill:'#4A86E8',\r\n        })}/>\r\n      <Graphics\r\n        x={320} y={55}\r\n        zIndex={1}\r\n        draw={g=> {\r\n          g.beginFill(`0x4A86E8`);\r\n          g.drawRoundedRect(0,0,-100,10,0);\r\n          g.endFill();\r\n        }}\r\n      />\r\n      <Graphics\r\n        x={220} y={55}\r\n        zIndex={2}\r\n        draw={g=> {\r\n          g.beginFill(`0x333533`);\r\n          g.drawRoundedRect(0,0,spBarCount(showType===\"USER\"?left.sp:attackerSp,left.fullValue.sp),10,0);\r\n          g.endFill();\r\n        }}\r\n      />\r\n      {/* right */}\r\n      <Sprite\r\n        width={50}\r\n        height={50}\r\n        x={690}\r\n        y={15}\r\n        image={loader.resources[`${right.name}-head-default`].data}\r\n      />\r\n      <Text \r\n        text={`${showType===\"USER\"?right.hp:targetHp} / ${right.fullValue.hp}`}\r\n        anchor={{x:1,y:0}} \r\n        x={670} y={10}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 18,\r\n          fill:'#e71d36',\r\n        })}/>\r\n      <Graphics\r\n        x={670} y={35}\r\n        zIndex={1}\r\n        draw={g=> {\r\n          g.beginFill(`0xe71d36`);\r\n          g.drawRoundedRect(0,0,-200,10,0);\r\n          g.endFill();\r\n        }}\r\n      />\r\n      <Graphics\r\n        x={670} y={35}\r\n        zIndex={2}\r\n        draw={g=> {\r\n          g.beginFill(`0x333533`);\r\n          g.drawRoundedRect(-200,0,hpBarCount(showType===\"USER\"?right.hp:targetHp,right.fullValue.hp),10,0);\r\n          g.endFill();\r\n        }}\r\n      />\r\n      <Text \r\n        text={`${showType===\"USER\"? attackerSp : right.sp} / ${right.fullValue.sp}`}\r\n        anchor={{x:1,y:0.3}} \r\n        x={560} y={55}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 18,\r\n          fill:'#4A86E8',\r\n        })}/>\r\n      <Graphics\r\n        x={670} y={55}\r\n        zIndex={1}\r\n        draw={g=> {\r\n          g.beginFill(`0x4A86E8`);\r\n          g.drawRoundedRect(0,0,-100,10,0);\r\n          g.endFill();\r\n        }}\r\n      />\r\n      <Graphics\r\n        x={570} y={55}\r\n        zIndex={2}\r\n        draw={g=> {\r\n          g.beginFill(`0x333533`);\r\n          g.drawRoundedRect(0,0,spBarCount(showType===\"USER\"?attackerSp:right.sp,right.fullValue.sp),10,0);\r\n          g.endFill();\r\n        }}\r\n      />\r\n    </Container>\r\n  </Graphics>\r\n};","import { fromJS } from \"immutable\";\r\nexport const lines = fromJS({\r\n  'Tanjirou': {\r\n    default:[\r\n      '(備戰中)',\r\n      '(備戰中)'\r\n    ],\r\n    attack:[\r\n      '我要成為強者，用強者的力量去保護弱者。',\r\n      '無論鬼奪走多少生命，人類的意志是怎樣都不會被打敗！'\r\n    ],\r\n    dodge:[\r\n      '危險!!',\r\n      '冷靜下來! 可以戰勝的。'\r\n    ],\r\n    def:[\r\n      '鬼殺隊不會被一點小傷給打倒!',\r\n      '不好了! 調整呼吸。'\r\n    ],\r\n    dead:[\r\n      '對不起....鱗瀧師傅..',\r\n      '禰豆子...'\r\n    ]\r\n  },\r\n  'Nezuko': {\r\n    default:[\r\n      '(備戰中)',\r\n      '(備戰中)'\r\n    ],\r\n    attack:[\r\n      '......!!(人類是家人)',\r\n      '......!!(打倒惡鬼)'\r\n    ],\r\n    dodge:[\r\n      '......!!(危險)',\r\n      '......!!(沒事的)'\r\n    ],\r\n    def:[\r\n      '......!!(危險)',\r\n      '......!!(沒事的)'\r\n    ],\r\n    dead:[\r\n      '......!?',\r\n      '.....(哥哥)'\r\n    ]\r\n  },\r\n  'Teoni': {\r\n    default:[\r\n      '(備戰中)',\r\n      '(備戰中)'\r\n    ],\r\n    attack:[\r\n      '獵鬼人是最上等的食物!!',\r\n      '看我吃了你!!'\r\n    ],\r\n    dodge:[\r\n      '沒用沒用 哈哈哈哈!',\r\n      '就這點程度嗎? 可悲的劍士。'\r\n    ],\r\n    def:[\r\n      '不久就輪到你的死期了!',\r\n      '我會吃了你!!'\r\n    ],\r\n    dead:[\r\n      '甚麼!?.....我竟然會死在獵鬼人手上.....',\r\n      '甚麼!?.....我竟然會死在獵鬼人手上.....'\r\n    ]\r\n  }\r\n});","import React, { useState } from 'react';\r\nimport { Container, Graphics, Sprite, Text } from '@inlet/react-pixi/animated';\r\nimport * as PIXI from \"pixi.js\";\r\nimport { loader } from '../../DataLoader';\r\nimport { lines } from \"../../../constants/lines\";\r\nexport const BottomBar = ({\r\n  right={},\r\n  left={},\r\n  linesStatus={}\r\n})=> {\r\n  const showCharacter = linesStatus.character===\"USER\" ? right.name : left.name;\r\n  const randomSize = lines.getIn([showCharacter,linesStatus.status]).size-1;\r\n  const [ random ] = useState(Math.round(Math.random()*randomSize));\r\n  return <Graphics \r\n    x={-400}\r\n    y={150}\r\n    zIndex={98}\r\n    draw={g=> {\r\n      g.beginFill(`0x000f23`);\r\n      g.drawRoundedRect(0,0,800,150,0);\r\n      g.endFill();\r\n    }}\r\n  >\r\n    <Container sortableChildren={true}>\r\n      <Sprite\r\n        width={100}\r\n        height={100}\r\n        x={50}\r\n        y={25}\r\n        image={loader.resources[`${showCharacter}-talk-${linesStatus.status}`].data}\r\n      />\r\n      <Text \r\n        text={lines.getIn([showCharacter,linesStatus.status,random])}\r\n        anchor={{x:0,y:0}} \r\n        x={170} y={60}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 18,\r\n          fill:'#ffff',\r\n        })}/>\r\n    </Container>\r\n  </Graphics>\r\n};","import React,{ useState, useEffect } from \"react\";\r\nexport const SkillShowProtoType = ({\r\n  skillName,\r\n  attackerName,\r\n  isHit,\r\n  targetLife,\r\n  attackerSp,\r\n  resultLife,\r\n  resultSp,\r\n  BGstatus,\r\n  setBGstatus,\r\n  setAnimeIsDone,\r\n  setTargetHp,\r\n  setAttackerSp,\r\n  setLinesStatus,\r\n  setShowSkill,\r\n  defXPostion,\r\n  steps,\r\n  ShowType\r\n})=>{\r\n  const [ position, setPosition ] = useState({ x:0, y:0, tint:0xffffff, alpha:1, mass:1, friction:20, tension:170 });\r\n  // def\r\n  useEffect(()=>{\r\n    if(BGstatus.defence && skillName==='防禦'){\r\n      const timeout = steps({\r\n        skillName:skillName,\r\n        isHit:isHit,\r\n        BGstatus:BGstatus,\r\n        resultLife:resultLife,\r\n        setAnimeIsDone:setAnimeIsDone,\r\n        setLinesStatus:setLinesStatus,\r\n        setPosition:setPosition,\r\n      });\r\n      return ()=> clearTimeout(timeout);\r\n    };\r\n  },[ BGstatus, skillName, isHit, resultLife, setAnimeIsDone, steps, setLinesStatus ])\r\n  // atk\r\n  useEffect(()=>{\r\n    if(skillName==='防禦'){ \r\n      setPosition(prev=>{return{ ...prev, x: defXPostion, y:10 }});\r\n      return;\r\n    };\r\n    const timeout = steps({\r\n      skillName:skillName,\r\n      isHit:isHit,\r\n      targetLife:targetLife,\r\n      attackerSp:attackerSp,\r\n      resultLife:resultLife,\r\n      resultSp:resultSp,\r\n      setBGstatus:setBGstatus,\r\n      setTargetHp:setTargetHp,\r\n      setAttackerSp:setAttackerSp,\r\n      setLinesStatus:setLinesStatus,\r\n      setShowSkill:setShowSkill,\r\n      setPosition:setPosition\r\n    });\r\n    return ()=> clearTimeout(timeout);\r\n  },[ skillName, isHit, targetLife, attackerSp, resultLife, resultSp,\r\n    setBGstatus, setTargetHp, setAttackerSp, defXPostion, steps, setLinesStatus, setShowSkill ]);\r\n  return <ShowType\r\n    skillName={skillName}\r\n    attackerName={attackerName}\r\n    position={position}\r\n  />\r\n};\r\n","import { TweenMax } from 'gsap';\r\nimport numeral from \"numeral\";\r\nimport { loader } from '../../../components/DataLoader';\r\nexport const steps = ({\r\n  skillName='',\r\n  isHit=false,\r\n  targetLife=0,\r\n  attackerSp=0,\r\n  resultLife=0,\r\n  resultSp=0,\r\n  BGstatus={},\r\n  setBGstatus=null,\r\n  setAnimeIsDone=null,\r\n  setTargetHp=null,\r\n  setAttackerSp=null,\r\n  setLinesStatus=null,\r\n  setPosition=null,\r\n  setShowSkill=null\r\n}) => {\r\n  // 技能動畫:\r\n  switch (skillName) {\r\n    case '防禦':\r\n      setPosition(prev=>{return{ ...prev, x:200, y:50, tension:100 }});\r\n      const defStart = ()=>{\r\n        if(isHit){\r\n          return isHitStep();\r\n        }else return isDodge();\r\n      };\r\n      const isHitStep = ()=> {\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:250, y:50, mass:2, \r\n            friction:5, tension:1000, tint:0xd00000}});\r\n          // callback\r\n          if(resultLife<=0){\r\n            return isDead({ type:'dead' });\r\n          }else return next({ type:'def' });\r\n        },BGstatus.seconds);\r\n        return timeout;\r\n      };\r\n      const isDodge = ()=>{\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:250, y:0 }});\r\n          // callback\r\n          next({ type:'dodge' });\r\n        },BGstatus.seconds);\r\n        return timeout;\r\n      };\r\n      const isDead = ({ type })=> {\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:200, y:50, \r\n            friction:2, tint:0x03071e\r\n          }});\r\n          setLinesStatus(prev=>{ \r\n            return { \r\n              status: type,\r\n              character: prev.character===\"USER\" ? \"ENEMY\" : \"USER\"\r\n            };\r\n          });\r\n          // callback\r\n          isDeadStep2();\r\n        },5000);\r\n        return timeout;\r\n      };\r\n      const isDeadStep2 = ()=>{\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return { ...prev, alpha:0 }});\r\n          // callback\r\n          end();\r\n        },3000);\r\n        return timeout;\r\n      };\r\n      const next = ({ type })=>{\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:200, y:50, mass:1, \r\n            friction:20, tension:170, tint:0xffffff}});\r\n          setLinesStatus(prev=>{ \r\n            return { \r\n              status: type,\r\n              character: prev.character===\"USER\" ? \"ENEMY\" : \"USER\"\r\n            };\r\n          });\r\n          // callback\r\n          end();\r\n        },5000);\r\n        return timeout;\r\n      };\r\n      const end = ()=> {\r\n        const timeout = setTimeout(() => {\r\n          // callback\r\n          setAnimeIsDone(true);\r\n        },3000);\r\n        return timeout;\r\n      };\r\n      return defStart();\r\n    // ATK\r\n    case '捌之型―滝壺':\r\n      setBGstatus({ type:'STANDBY', defence:false, seconds:0 });\r\n      setPosition(prev=>{return{ ...prev, x:550,y:50,tension:100 }});\r\n      const skill3atkStart = ()=>{\r\n        setPosition(prev=>{return{ ...prev, x:250, y:50, tension:100 }});\r\n        // callback\r\n        return skill3step1();\r\n      };\r\n      const skill3step1 = ()=>{\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:0, y:-100, tension:100 }});\r\n          setBGstatus(prev=>{return{ ...prev, type:'SKILL' }});\r\n          // callback\r\n          skill3step2();\r\n        },3000);\r\n        return timeout;\r\n      };\r\n      const skill3step2 = ()=>{\r\n        const run =  { number: attackerSp };\r\n        TweenMax.to(run, 0.8, {\r\n          number: resultSp,\r\n          onUpdate: () => {\r\n            setAttackerSp(numeral(run.number).format(\"0\"))\r\n          },\r\n        });\r\n        setLinesStatus(prev=>{ return { ...prev, status:'attack' }});\r\n        setShowSkill(prev=>{\r\n          const video = loader.resources[`${prev.name}-skill${`3`}-show`].data;\r\n          video.play();\r\n          return { ...prev, \r\n            status:true, \r\n            type:'3',\r\n            callback:()=>{\r\n              setBGstatus(prev=>{return{ ...prev, type:'STOP', defence:true }});\r\n              setPosition(prev=>{return{ ...prev, x:-400, y:50, tension:1000 }});\r\n              skill3step3();\r\n            }\r\n          };\r\n        });\r\n      };\r\n      const skill3step3 = ()=>{\r\n        const run = { number: targetLife };\r\n        if(isHit) {\r\n          TweenMax.to(run, 0.8, {\r\n            number: resultLife<0 ? 0 : resultLife,\r\n            onUpdate: () => {\r\n              setTargetHp(numeral(run.number).format(\"0\"))\r\n            },\r\n          });\r\n        };\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:550, y:50, tension:50 }});\r\n        },3000);\r\n        return timeout;\r\n      };\r\n      return skill3atkStart();\r\n    default:\r\n      setBGstatus({ type:'STANDBY', defence:false, seconds:1200 });\r\n      setPosition(prev=>{return{ ...prev, x:550,y:50,tension:100 }});\r\n      const atkStart = ()=>{\r\n        setPosition(prev=>{return{ ...prev, x:250, y:50, tension:100 }});\r\n        // callback\r\n        return step1();\r\n      };\r\n      const step1 = ()=>{\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:0, y:50, tension:100 }});\r\n          setBGstatus(prev=>{return{ ...prev, type:'SKILL' }});\r\n          // callback\r\n          step2();\r\n        },3000);\r\n        return timeout;\r\n      };\r\n      const step2 = ()=>{\r\n        const run =  { number: attackerSp };\r\n        TweenMax.to(run, 0.8, {\r\n          number: resultSp,\r\n          onUpdate: () => {\r\n            setAttackerSp(numeral(run.number).format(\"0\"))\r\n          },\r\n        });\r\n        setLinesStatus(prev=>{ return { ...prev, status:'attack' }});\r\n        const timeout = setTimeout(() => {\r\n          setBGstatus(prev=>{return{ ...prev, type:'STOP', defence:true }});\r\n          // callback\r\n          step3();\r\n        },3000);\r\n        return timeout;\r\n      };\r\n      const step3 = ()=>{\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:-250, y:50, tension:1000 }});\r\n          // callback\r\n          step4();\r\n        },1000);\r\n        return timeout;\r\n      };\r\n      const step4 = ()=>{\r\n        const run = { number: targetLife };\r\n        if(isHit) {\r\n          TweenMax.to(run, 0.8, {\r\n            number: resultLife<0 ? 0 : resultLife,\r\n            onUpdate: () => {\r\n              setTargetHp(numeral(run.number).format(\"0\"))\r\n            },\r\n          });\r\n        };\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:550, y:50, tension:50 }});\r\n        },3000);\r\n        return timeout;\r\n      };\r\n      return atkStart();\r\n  }\r\n};","import React from \"react\";\r\nimport { loader } from '../../../components/DataLoader';\r\nimport { Spring } from 'react-spring/renderprops';\r\nimport { Sprite } from '@inlet/react-pixi/animated';\r\n\r\nexport const ShowType = ({\r\n  skillName,\r\n  attackerName,\r\n  position,\r\n}) =>{\r\n  switch (skillName) {\r\n    case `斬擊`:\r\n      return <Spring\r\n        from={{ x:550, y:50 }}\r\n        to={{ x:position.x, y:position.y }}\r\n        config={{ \r\n          mass:1,\r\n          tension: position.tension,\r\n          friction:20,\r\n        }}\r\n      >\r\n      {props => \r\n        <Sprite\r\n          zIndex={3}\r\n          width={200}\r\n          height={200}\r\n          anchor={0.5}\r\n          image={loader.resources[`${attackerName}-fight-typeA`].data}\r\n          {...props}\r\n        />}\r\n      </Spring>\r\n    case `防禦`:\r\n      return <Spring\r\n        from={{ x:650, y:50 }}\r\n        to={{ x:position.x, y:position.y }}\r\n        config={{ \r\n          mass:1,\r\n          tension: position.tension,\r\n          friction:20,\r\n        }}\r\n      >\r\n      {props => \r\n        <Sprite\r\n          zIndex={2}\r\n          width={200}\r\n          height={200}\r\n          anchor={0.5}\r\n          alpha={position.alpha}\r\n          tint={position.tint}\r\n          image={loader.resources[`${attackerName}-fight-typeA`].data}\r\n          {...props}\r\n        />}\r\n      </Spring>\r\n    default:\r\n      return <Spring\r\n        from={{ x:550, y:50 }}\r\n        to={{ x:position.x, y:position.y }}\r\n        config={{ \r\n          mass:1,\r\n          tension: position.tension,\r\n          friction:20,\r\n        }}\r\n      >\r\n      {props => \r\n        <Sprite\r\n          zIndex={3}\r\n          width={200}\r\n          height={200}\r\n          anchor={0.5}\r\n          image={loader.resources[`${attackerName}-fight-typeA`].data}\r\n          {...props}\r\n        />}\r\n      </Spring>\r\n    };\r\n};","import React from \"react\";\r\n// part\r\nimport { SkillShowProtoType } from \"../../SkillShowProtoType\";\r\nimport { steps } from \"./steps\";\r\nimport { ShowType } from \"./ShowType\";\r\n\r\nexport const TanjirouSkill = ( props )=>{\r\n  return <SkillShowProtoType \r\n    {...props}\r\n    defXPostion={550}\r\n    steps={steps}\r\n    ShowType={ShowType}\r\n  />\r\n};","import { TweenMax } from 'gsap';\r\nimport numeral from \"numeral\";\r\nexport const steps = ({\r\n  skillName='',\r\n  isHit=false,\r\n  targetLife=0,\r\n  attackerSp=0,\r\n  resultLife=0,\r\n  resultSp=0,\r\n  BGstatus={},\r\n  setBGstatus=null,\r\n  setAnimeIsDone=null,\r\n  setTargetHp=null,\r\n  setAttackerSp=null,\r\n  setLinesStatus=null,\r\n  setPosition=null,\r\n  setShowSkill=null\r\n}) => {\r\n  // 技能動畫:\r\n  switch (skillName) {\r\n    case '防禦':\r\n      setPosition(prev=>{return{ ...prev, x:200, y:50, tension:100 }});\r\n      const defStart = ()=>{\r\n        if(isHit){\r\n          return isHitStep();\r\n        }else return isDodge();\r\n      };\r\n      const isHitStep = ()=> {\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:250, y:50, mass:2, \r\n            friction:5, tension:1000, tint:0xd00000}});\r\n          // callback\r\n          if(resultLife<=0){\r\n            return isDead({ type:'dead' });\r\n          }else return next({ type:'def' });\r\n        },BGstatus.seconds);\r\n        return timeout;\r\n      };\r\n      const isDodge = ()=>{\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:250, y:0 }});\r\n          // callback\r\n          next({ type:'dodge' });\r\n        },BGstatus.seconds);\r\n        return timeout;\r\n      };\r\n      const isDead = ({ type })=> {\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:200, y:50, \r\n            friction:2, tint:0x03071e\r\n          }});\r\n          setLinesStatus(prev=>{ \r\n            return { \r\n              status: type,\r\n              character: prev.character===\"USER\" ? \"ENEMY\" : \"USER\"\r\n            };\r\n          });\r\n          // callback\r\n          isDeadStep2();\r\n        },5000);\r\n        return timeout;\r\n      };\r\n      const isDeadStep2 = ()=>{\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return { ...prev, alpha:0 }});\r\n          // callback\r\n          end();\r\n        },3000);\r\n        return timeout;\r\n      };\r\n      const next = ({ type })=>{\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:200, y:50, mass:1, \r\n            friction:20, tension:170, tint:0xffffff}});\r\n          setLinesStatus(prev=>{ \r\n            return { \r\n              status: type,\r\n              character: prev.character===\"USER\" ? \"ENEMY\" : \"USER\"\r\n            };\r\n          });\r\n          // callback\r\n          end();\r\n        },5000);\r\n        return timeout;\r\n      };\r\n      const end = ()=> {\r\n        const timeout = setTimeout(() => {\r\n          // callback\r\n          setAnimeIsDone(true);\r\n        },3000);\r\n        return timeout;\r\n      };\r\n      return defStart();\r\n    // ATK\r\n    default:\r\n      setBGstatus({ type:'STANDBY', defence:false, seconds:1200 });\r\n      setPosition(prev=>{return{ ...prev, x:550,y:50,tension:100 }});\r\n      const atkStart = ()=>{\r\n        setPosition(prev=>{return{ ...prev, x:250, y:50, tension:100 }});\r\n        // callback\r\n        return step1();\r\n      };\r\n      const step1 = ()=>{\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:0, y:50, tension:100 }});\r\n          setBGstatus(prev=>{return{ ...prev, type:'SKILL' }});\r\n          // callback\r\n          step2();\r\n        },3000);\r\n        return timeout;\r\n      };\r\n      const step2 = ()=>{\r\n        const run =  { number: attackerSp };\r\n        TweenMax.to(run, 0.8, {\r\n          number: resultSp,\r\n          onUpdate: () => {\r\n            setAttackerSp(numeral(run.number).format(\"0\"))\r\n          },\r\n        });\r\n        setLinesStatus(prev=>{ return { ...prev, status:'attack' }});\r\n        const timeout = setTimeout(() => {\r\n          setBGstatus(prev=>{return{ ...prev, type:'STOP', defence:true }});\r\n          // callback\r\n          step3();\r\n        },3000);\r\n        return timeout;\r\n      };\r\n      const step3 = ()=>{\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:-250, y:50, tension:1000 }});\r\n          // callback\r\n          step4();\r\n        },1000);\r\n        return timeout;\r\n      };\r\n      const step4 = ()=>{\r\n        const run = { number: targetLife };\r\n        if(isHit) {\r\n          TweenMax.to(run, 0.8, {\r\n            number: resultLife<0 ? 0 : resultLife,\r\n            onUpdate: () => {\r\n              setTargetHp(numeral(run.number).format(\"0\"))\r\n            },\r\n          });\r\n        };\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:550, y:50, tension:50 }});\r\n        },3000);\r\n        return timeout;\r\n      };\r\n      return atkStart();\r\n  }\r\n};","import React from \"react\";\r\nimport { loader } from '../../../components/DataLoader';\r\nimport { Spring } from 'react-spring/renderprops';\r\nimport { Sprite } from '@inlet/react-pixi/animated';\r\n\r\nexport const ShowType = ({\r\n  skillName,\r\n  attackerName,\r\n  position,\r\n}) =>{\r\n  switch (skillName) {\r\n    case `防禦`:\r\n      return <Spring\r\n        from={{ x:650, y:50 }}\r\n        to={{ x:position.x, y:position.y }}\r\n        config={{ \r\n          mass:1,\r\n          tension: position.tension,\r\n          friction:20,\r\n        }}\r\n      >\r\n      {props => \r\n        <Sprite\r\n          zIndex={2}\r\n          width={200}\r\n          height={200}\r\n          anchor={0.5}\r\n          alpha={position.alpha}\r\n          tint={position.tint}\r\n          image={loader.resources[`${attackerName}-fight`].data}\r\n          {...props}\r\n        />}\r\n      </Spring>\r\n    default:\r\n      return <Spring\r\n        from={{ x:550, y:50 }}\r\n        to={{ x:position.x, y:position.y }}\r\n        config={{ \r\n          mass:1,\r\n          tension: position.tension,\r\n          friction:20,\r\n        }}\r\n      >\r\n      {props => \r\n        <Sprite\r\n          zIndex={3}\r\n          width={200}\r\n          height={200}\r\n          anchor={0.5}\r\n          image={loader.resources[`${attackerName}-fight`].data}\r\n          {...props}\r\n        />}\r\n      </Spring>\r\n    };\r\n};","import React from \"react\";\r\n// part\r\nimport { SkillShowProtoType } from \"../../SkillShowProtoType\";\r\nimport { steps } from \"./steps\";\r\nimport { ShowType } from \"./ShowType\";\r\n\r\nexport const NezukoSkill = ( props )=>{\r\n  return <SkillShowProtoType \r\n    {...props}\r\n    defXPostion={550}\r\n    steps={steps}\r\n    ShowType={ShowType}\r\n  />\r\n};","import React from \"react\";\r\nimport { TanjirouSkill } from \"./TanjirouSkill/Index\";\r\nimport { NezukoSkill } from \"./Nezuko/Index\";\r\nexport const ChessSkillShow = ({\r\n  attacker={},\r\n  skill={},\r\n  BGstatus,\r\n  isHit=false,\r\n  targetLife=0,\r\n  attackerSp=0,\r\n  resultLife=0,\r\n  resultSp=0,\r\n  setBGstatus,\r\n  setAnimeIsDone,\r\n  setTargetHp,\r\n  setAttackerSp,\r\n  setLinesStatus,\r\n  setShowSkill\r\n})=>{\r\n  const defaultprops = {\r\n    skillName: skill.name,\r\n    attackerName: attacker.name,\r\n    isHit: isHit,\r\n    targetLife: targetLife,\r\n    attackerSp: attackerSp,\r\n    resultLife: resultLife,\r\n    resultSp: resultSp,\r\n    BGstatus: BGstatus,\r\n    setBGstatus: setBGstatus,\r\n    setAnimeIsDone: setAnimeIsDone,\r\n    setTargetHp: setTargetHp,\r\n    setAttackerSp: setAttackerSp,\r\n    setLinesStatus: setLinesStatus,\r\n    setShowSkill: setShowSkill\r\n  }\r\n  switch (attacker.name) {\r\n    case `Tanjirou`:\r\n      return <TanjirouSkill {...defaultprops}/>\r\n    case `Nezuko`:\r\n      return <NezukoSkill {...defaultprops}/>\r\n    default:\r\n      return;\r\n  };\r\n};\r\n\r\n","import { TweenMax } from 'gsap';\r\nimport numeral from \"numeral\";\r\nexport const steps = ({\r\n  skillName='',\r\n  isHit=false,\r\n  targetLife=0,\r\n  attackerSp=0,\r\n  resultLife=0,\r\n  resultSp=0,\r\n  BGstatus={},\r\n  setBGstatus=null,\r\n  setAnimeIsDone=null,\r\n  setTargetHp=null,\r\n  setAttackerSp=null,\r\n  setLinesStatus=null,\r\n  setPosition=null,\r\n  setShowSkill=null\r\n}) => {\r\n  switch (skillName) {\r\n    case '防禦':\r\n      setPosition(prev=>{return{ ...prev, x:-200, tension:150 }});\r\n      const defStart = ()=>{\r\n        if(isHit){\r\n          return isHitStep();\r\n        }else return isDodge();\r\n      };\r\n      const isHitStep = ()=> {\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:-235, y:20, mass:2, \r\n            friction:5, tension:1000, tint:0xd00000}});\r\n          // callback\r\n          if(resultLife<=0){\r\n            return isDead({ type:'dead' });\r\n          }else return next({ type:'def' });\r\n        },BGstatus.seconds);\r\n        return timeout;\r\n      }\r\n      const isDodge = ()=>{\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:-235, y:-10 }});\r\n          // callback\r\n          next({ type:'dodge' });\r\n        },BGstatus.seconds);\r\n        return timeout;\r\n      };\r\n      const isDead = ({ type })=> {\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:-200, y:10, \r\n            friction:2, tint:0x03071e\r\n          }});\r\n          setLinesStatus(prev=>{ \r\n            return { \r\n              status: type,\r\n              character: prev.character===\"USER\" ? \"ENEMY\" : \"USER\"\r\n            };\r\n          });\r\n          // callback\r\n          isDeadStep2();\r\n        },5000);\r\n        return timeout;\r\n      };\r\n      const isDeadStep2 = ()=>{\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return { ...prev, alpha:0 }});\r\n          // callback\r\n          end();\r\n        },3000);\r\n        return timeout;\r\n      };\r\n      const next = ({ type })=>{\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:-200, y:10, mass:1, \r\n            friction:20, tension:170, tint:0xffffff}});\r\n          setLinesStatus(prev=>{ \r\n            return { \r\n              status: type,\r\n              character: prev.character===\"USER\" ? \"ENEMY\" : \"USER\"\r\n            };\r\n          });\r\n          // callback\r\n          end();\r\n        },5000);\r\n        return timeout;\r\n      };\r\n      const end = ()=> {\r\n        const timeout = setTimeout(() => {\r\n          // callback\r\n          setAnimeIsDone(true);\r\n        },3000);\r\n        return timeout;\r\n      };\r\n      return defStart();\r\n    // ATK\r\n    default:\r\n      setBGstatus({ type:'ENEMYSTANDBY', defence:false, seconds:1200 });\r\n      setPosition(prev=>{return{ ...prev, x:-600, tension:100 }});\r\n      const atkStart = ()=>{\r\n        setPosition(prev=>{\r\n          return{ ...prev, x:-200, tension:100 }});\r\n        // callback\r\n        return step1();\r\n      };\r\n      const step1 = ()=>{\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:0, tension:100 }});\r\n          setBGstatus(prev=>{return{ ...prev, type:'ENEMYSKILL' }});\r\n          // callback\r\n          step2();\r\n        },3000);\r\n        return timeout;\r\n      };\r\n      const step2 = ()=>{\r\n        const run =  { number: attackerSp };\r\n        TweenMax.to(run, 0.8, {\r\n          number: resultSp,\r\n          onUpdate: () => {\r\n            setAttackerSp(numeral(run.number).format(\"0\"))\r\n          },\r\n        });\r\n        setLinesStatus(prev=>{ return { ...prev, status:'attack' }});\r\n        const timeout = setTimeout(() => {\r\n          setBGstatus(prev=>{return{ ...prev, type:'STOP', defence:true }});\r\n          // callback\r\n          step3();\r\n        },3000);\r\n        return timeout;\r\n      };\r\n      const step3 = ()=>{\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:175, tension:1000 }});\r\n          // callback\r\n          step4();\r\n        },1000);\r\n        return timeout;\r\n      };\r\n      const step4 = ()=>{\r\n        const run = { number: targetLife };\r\n        if(isHit) {\r\n          TweenMax.to(run, 0.8, {\r\n            number: resultLife<0 ? 0 : resultLife,\r\n            onUpdate: () => {\r\n              setTargetHp(numeral(run.number).format(\"0\"))\r\n            },\r\n          });\r\n        };\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:-600, tension:50 }});\r\n        },3000);\r\n        return timeout;\r\n      };\r\n      return atkStart();\r\n  }\r\n};","import React from \"react\";\r\nimport { loader } from '../../../components/DataLoader';\r\nimport { Spring } from 'react-spring/renderprops';\r\nimport { Sprite } from '@inlet/react-pixi/animated';\r\n\r\nexport const ShowType = ({\r\n  skillName,\r\n  attackerName,\r\n  position,\r\n}) =>{\r\n  switch (skillName) {\r\n    case '防禦':\r\n      return <Spring\r\n        from={{ x:-600, y:10 }}\r\n        to={{ x:position.x, y:position.y }}\r\n        config={{ \r\n          mass: position.mass,\r\n          tension: position.tension,\r\n          friction: position.friction,\r\n        }}\r\n      >\r\n      {props => \r\n        <Sprite\r\n          zIndex={2}\r\n          width={300}\r\n          height={300}\r\n          anchor={0.5}\r\n          alpha={position.alpha}\r\n          tint={position.tint}\r\n          image={loader.resources[`${attackerName}-fight`].data}\r\n          {...props}\r\n        />}\r\n      </Spring>\r\n    default:\r\n      return <Spring\r\n        from={{ x:-600, y:50 }}\r\n        to={{ x:position.x, y:position.y }}\r\n        config={{ \r\n          mass:1,\r\n          tension: position.tension,\r\n          friction:20,\r\n        }}\r\n      >\r\n      {props => \r\n        <Sprite\r\n          zIndex={3}\r\n          width={300}\r\n          height={300}\r\n          anchor={0.5}\r\n          image={loader.resources[`${attackerName}-fight`].data}\r\n          {...props}\r\n        />}\r\n      </Spring>\r\n  }\r\n};","import React from \"react\";\r\n// part\r\nimport { SkillShowProtoType } from \"../../SkillShowProtoType\";\r\nimport { steps } from \"./steps\";\r\nimport { ShowType } from \"./ShowType\";\r\n\r\nexport const TeoniSkill = ( props )=>{\r\n  return <SkillShowProtoType \r\n    {...props}\r\n    defXPostion={-600}\r\n    steps={steps}\r\n    ShowType={ShowType}\r\n  />\r\n};\r\n","import React from \"react\";\r\nimport { TeoniSkill } from \"./TeoniSkill/Index\";\r\nexport const EnemyChessSkillShow = ({\r\n  attacker={},\r\n  skill={},\r\n  BGstatus,\r\n  isHit=false,\r\n  targetLife=0,\r\n  attackerSp=0,\r\n  resultLife=0,\r\n  resultSp=0,\r\n  setBGstatus,\r\n  setAnimeIsDone,\r\n  setTargetHp,\r\n  setAttackerSp,\r\n  setLinesStatus,\r\n  setShowSkill\r\n})=>{\r\n  const defaultprops = {\r\n    skillName: skill.name,\r\n    attackerName: attacker.name,\r\n    isHit: isHit,\r\n    targetLife: targetLife,\r\n    attackerSp: attackerSp,\r\n    resultLife: resultLife,\r\n    resultSp: resultSp,\r\n    BGstatus: BGstatus,\r\n    setBGstatus: setBGstatus,\r\n    setAnimeIsDone: setAnimeIsDone,\r\n    setTargetHp: setTargetHp,\r\n    setAttackerSp: setAttackerSp,\r\n    setLinesStatus: setLinesStatus,\r\n    setShowSkill: setShowSkill\r\n  }\r\n  switch (attacker.name) {\r\n    case `Teoni`:\r\n      return <TeoniSkill {...defaultprops}/>\r\n    default:\r\n      return;\r\n  };\r\n};\r\n","import React,{ useState, useEffect } from 'react';\r\nimport * as PIXI from \"pixi.js\";\r\nimport { Container, Graphics, Sprite } from '@inlet/react-pixi/animated';\r\nimport { chessDead, chessRoundRest } from \"../../../reducer/chess\";\r\nimport { enemyChessDead } from \"../../../reducer/enemyChess\";\r\nimport { loader } from '../../DataLoader';\r\n// part\r\nimport { AnimeShowBG } from \"./AinmeShowBG\";\r\nimport { TopBar } from \"./TopBar\";\r\nimport { BottomBar } from \"./BottomBar\";\r\n// skill\r\nimport { ChessSkillShow } from \"../../../constants/ChessSkillShow/Index\";\r\nimport { EnemyChessSkillShow } from \"../../../constants/EnemyChessSkillShow/Index\";\r\nexport const BattleAnimeShow = ({\r\n  props\r\n}) =>{\r\n  const { stageStatus, animeShow, chess, enemyChess, \r\n    setMoveStep, setAnimeShow, setUsualTip, setCurrentChess, dispatch } = props;\r\n  const { target, attacker } = animeShow;\r\n  // CreateContent\r\n  const CreateContent = ()=>{\r\n    const [ BGstatus, setBGstatus ] = useState({ \r\n      type:'STANDBY',\r\n      defence: false,\r\n      seconds: 1200\r\n    });\r\n    const [ BGprop, setBGpops ] = useState({ toX:400, duration: 20000 });\r\n    const [ SkBGprop, setSkBGpops ] = useState({ toX:400, duration: 500 });\r\n    const [ targetHp, setTargetHp ] = useState(target.prevLife);\r\n    const [ attackerSp, setAttackerSp ] = useState(attacker.prevSP);\r\n    const [ animeIsDone, setAnimeIsDone ] = useState(false);\r\n    const [ linesStatus, setLinesStatus ] = useState({ \r\n      character: animeShow.type,\r\n      status:'default'\r\n    });\r\n    const [ showSkill, setShowSkill ] = useState({ \r\n      status:false,\r\n      type:'0',\r\n      name: chess[attacker.key].name,\r\n      callback: null\r\n    });\r\n    const fetchChessType = ( type='' )=>{\r\n      switch (type) {\r\n        case 'CHESS':\r\n          if(animeShow.type===\"USER\"){\r\n            return chess[typeof(animeShow.attacker.key)!=='number'?0:animeShow.attacker.key];\r\n          }else return chess[typeof(animeShow.target.key)!=='number'?0:animeShow.target.key];\r\n        case 'ENEMYCHESS':\r\n          if(animeShow.type===\"USER\"){\r\n            return enemyChess[typeof(animeShow.target.key)!=='number'?0:animeShow.target.key];\r\n          }else return enemyChess[typeof(animeShow.attacker.key)!=='number'?0:animeShow.attacker.key];\r\n        default:\r\n          break;\r\n      }; \r\n    };\r\n    const CreateSkillSprite = () => {\r\n      const video = PIXI.Texture.from(loader.resources[`${chess[attacker.key].name}-skill${showSkill.type}-show`].data);\r\n      const videoDom = video.baseTexture.resource.source;\r\n      videoDom.onended = function() {\r\n        setShowSkill(prev=>{\r\n          videoDom.currentTime = 0;\r\n          return { ...prev, status:false }\r\n        });\r\n        showSkill.callback();\r\n      };\r\n      return <Sprite\r\n        zIndex={99}\r\n        width={600}\r\n        height={370}\r\n        anchor={0.5}\r\n        x={0}\r\n        y={-35}\r\n        image={loader.resources[`${chess[attacker.key].name}-talk-attack`].data}\r\n        texture={video}\r\n      />\r\n    }\r\n    //  關閉動畫判斷\r\n    useEffect(()=>{\r\n      if(!animeIsDone){ return };\r\n      setAnimeShow({\r\n        status:false,\r\n        type:'',\r\n        isHit:false,\r\n        attacker:{ key:'', skill:{}, prevSP:0 },\r\n        target:{ key:'', isHit:false, prevLife:0 }\r\n      });\r\n      // result check line\r\n      if(animeShow.type===\"USER\" &&\r\n        enemyChess[target.key].hp <= 0\r\n      ){\r\n        dispatch(enemyChessDead({ key:target.key }));\r\n        setUsualTip({\r\n          title:`已擊敗 ${enemyChess[target.key].cn}!`,\r\n          status:true,\r\n        });\r\n      }else if(animeShow.type===\"ENEMY\" &&\r\n        chess[target.key].hp <= 0\r\n      ){\r\n        dispatch(chessDead({ key:target.key }));\r\n        setUsualTip({\r\n          title:`${chess[target.key].cn} 戰敗`,\r\n          status:true,\r\n        });\r\n      }else if(animeShow.type===\"ENEMY\") {\r\n        dispatch(chessRoundRest());\r\n        setCurrentChess(prev=>{\r\n          return { ...prev, type:\"USERROUND\"\r\n        }});\r\n        setUsualTip({\r\n          title:`我方回合`,\r\n          status:true,\r\n        });\r\n      }else {\r\n        setMoveStep(true);\r\n      };\r\n    },[ animeIsDone ]);\r\n    return <Container sortableChildren={true}>\r\n      <AnimeShowBG\r\n        props={{stageStatus, BGstatus, BGprop, SkBGprop, setBGpops, setSkBGpops}}\r\n      />\r\n      <TopBar\r\n        right={fetchChessType('CHESS')}\r\n        left={fetchChessType('ENEMYCHESS')}\r\n        showType={animeShow.type}\r\n        targetHp={targetHp}\r\n        attackerSp={attackerSp}\r\n      />\r\n      <ChessSkillShow\r\n        attacker={fetchChessType('CHESS')}\r\n        skill={\r\n          animeShow.type===\"USER\"?\r\n          animeShow.attacker.skill:\r\n          { name:'防禦' }\r\n        }\r\n        BGstatus={BGstatus}\r\n        isHit={animeShow.isHit}\r\n        targetLife={target.prevLife}\r\n        attackerSp={attacker.prevSP}\r\n        resultLife={\r\n          target.prevLife -\r\n          animeShow.attacker.skill.atk \r\n        }\r\n        resultSp={\r\n          attacker.prevSP -\r\n          animeShow.attacker.skill.sp\r\n        }\r\n        setBGstatus={setBGstatus}\r\n        setAnimeIsDone={setAnimeIsDone}\r\n        setTargetHp={setTargetHp}\r\n        setAttackerSp={setAttackerSp}\r\n        setLinesStatus={setLinesStatus}\r\n        setShowSkill={setShowSkill}\r\n      />\r\n      <EnemyChessSkillShow\r\n        attacker={fetchChessType('ENEMYCHESS')}\r\n        skill={\r\n          animeShow.type===\"USER\"?\r\n          { name:'防禦' }:\r\n          animeShow.attacker.skill\r\n        }\r\n        BGstatus={BGstatus}\r\n        isHit={animeShow.isHit}\r\n        targetLife={target.prevLife}\r\n        attackerSp={attacker.prevSP}\r\n        resultLife={\r\n          target.prevLife -\r\n          animeShow.attacker.skill.atk \r\n        }\r\n        resultSp={\r\n          attacker.prevSP -\r\n          animeShow.attacker.skill.sp\r\n        }\r\n        setBGstatus={setBGstatus}\r\n        setAnimeIsDone={setAnimeIsDone}\r\n        setTargetHp={setTargetHp}\r\n        setAttackerSp={setAttackerSp}\r\n        setLinesStatus={setLinesStatus}\r\n        setShowSkill={setShowSkill}\r\n      />\r\n      {showSkill.status && <CreateSkillSprite/>}\r\n      <BottomBar\r\n        right={fetchChessType('CHESS')}\r\n        left={fetchChessType('ENEMYCHESS')}\r\n        linesStatus={linesStatus}\r\n      />\r\n      <Sprite\r\n        zIndex={99}\r\n        interactive={true}\r\n        buttonMode={true}\r\n        width={75}\r\n        height={35}\r\n        x={310}\r\n        y={240}\r\n        image={loader.resources[`fightOff`].data}\r\n        pointertap={()=>{\r\n          setAnimeShow({\r\n            status:false,\r\n            type:'',\r\n            isHit:false,\r\n            attacker:{ key:'', skill:{}, prevSP:0 },\r\n            target:{ key:'', isHit:false, prevLife:0 }\r\n          });\r\n          // result check line\r\n          if(animeShow.type===\"USER\" &&\r\n            enemyChess[target.key].hp <= 0\r\n          ){\r\n            dispatch(enemyChessDead({ key:target.key }));\r\n            setUsualTip({\r\n              title:`已擊敗 ${enemyChess[target.key].cn}!`,\r\n              status:true,\r\n            });\r\n          }else if(animeShow.type===\"ENEMY\" &&\r\n            chess[target.key].hp <= 0\r\n          ){\r\n            dispatch(chessDead({ key:target.key }));\r\n            setUsualTip({\r\n              title:`${chess[target.key].cn} 戰敗`,\r\n              status:true,\r\n            });\r\n          }else if(animeShow.type===\"ENEMY\") {\r\n            dispatch(chessRoundRest());\r\n            setCurrentChess(prev=>{\r\n              return { ...prev, type:\"USERROUND\"\r\n            }});\r\n            setUsualTip({\r\n              title:`我方回合`,\r\n              status:true,\r\n            });\r\n          }else {\r\n            setMoveStep(true);\r\n          };\r\n          const clearAllTimeouts = ()=>{\r\n            let id = window.setTimeout(null,0);\r\n            while (id--) { window.clearTimeout(id); };\r\n          };\r\n          clearAllTimeouts();\r\n        }}\r\n      />\r\n    </Container>\r\n  };\r\n  return <Graphics\r\n    x={400}\r\n    y={300}\r\n    zIndex={99}\r\n    draw={g=> {\r\n      g.beginFill(`0x011627`);\r\n      g.drawRoundedRect(-400,-300,800,600,0);\r\n      g.endFill();\r\n    }}\r\n  >\r\n    <CreateContent/>\r\n  </Graphics>\r\n};","import React from 'react';\r\nimport { Sprite, Graphics, Text } from '@inlet/react-pixi/animated';\r\nimport { loader } from '../DataLoader';\r\nimport * as PIXI from \"pixi.js\";\r\nimport { stageRule } from \"../../constants/stageRule\";\r\nexport const OtherTab = ({ props })=> {\r\n  const {\r\n    stageStatus='',\r\n    roundNum=Number,\r\n    setMoveStep,\r\n    setOtherTab,\r\n    setTipStatus,\r\n    setCurrentChess\r\n  } = props;\r\n  return <Graphics\r\n    x={400}\r\n    y={300}\r\n    draw={g=> {\r\n      g.lineStyle(1,`0xffffff`,1);\r\n      g.beginFill(`0x22223b`);\r\n      g.drawRoundedRect(-200,-150,400,300,8);\r\n      g.endFill();\r\n    }}\r\n  >\r\n    <Sprite\r\n      interactive={true}\r\n      buttonMode={true}\r\n      width={25}\r\n      height={25}\r\n      anchor={0.5}\r\n      x={175}\r\n      y={-125}\r\n      image={loader.resources[`closeIcon`].data}\r\n      pointertap={()=>{\r\n        setMoveStep(true);\r\n        setOtherTab(false);\r\n        setTipStatus(prev=>{\r\n          return {...prev, status:false }\r\n        });\r\n      }}\r\n    />\r\n    <Sprite\r\n      interactive={true}\r\n      buttonMode={true}\r\n      width={75}\r\n      height={35}\r\n      x={105}\r\n      y={90}\r\n      image={loader.resources[`endBtn`].data}\r\n      pointertap={()=>{\r\n        setCurrentChess({\r\n          key:0,\r\n          type:\"ENDROUND\"\r\n        });\r\n        setTipStatus(prev=>{\r\n          return {...prev,\r\n            title:`結束回合?`, \r\n            status:true\r\n          }\r\n        });\r\n      }}\r\n    />\r\n    <Text\r\n      text={'作戰目的'}\r\n      x={-170}\r\n      y={-125}\r\n      style={new PIXI.TextStyle({\r\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 18,\r\n        fill:['#ffffff', '#00ff99'],\r\n      })}\r\n    />\r\n    <Text\r\n      text={stageRule.getIn([stageStatus,'ruleText','win'])}\r\n      x={-150}\r\n      y={-90}\r\n      style={new PIXI.TextStyle({\r\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 16,\r\n        fill:['#ffffff', '#ffffff'],\r\n      })}\r\n    />\r\n    <Text\r\n      text={'戰敗條件'}\r\n      x={-170}\r\n      y={-40}\r\n      style={new PIXI.TextStyle({\r\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 18,\r\n        fill:['#ffffff', '#ee6c4d'],\r\n      })}\r\n    />\r\n    <Text\r\n      text={stageRule.getIn([stageStatus,'ruleText','lose'])}\r\n      x={-150}\r\n      y={-5}\r\n      style={new PIXI.TextStyle({\r\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 16,\r\n        fill:['#ffffff', '#ffffff'],\r\n      })}\r\n    />\r\n    <Text\r\n      text={'回合數'}\r\n      x={-170}\r\n      y={45}\r\n      style={new PIXI.TextStyle({\r\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 18,\r\n        fill:['#ffffff', '#8d99ae'],\r\n      })}\r\n    />\r\n    <Text\r\n      text={`第 ${roundNum} 回`}\r\n      x={-150}\r\n      y={80}\r\n      style={new PIXI.TextStyle({\r\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 16,\r\n        fill:['#ffffff', '#ffffff'],\r\n      })}\r\n    />\r\n  </Graphics>\r\n};\r\n\r\n","import React from 'react';\r\nimport { Container, Sprite, Text } from '@inlet/react-pixi/animated';\r\nimport { loader } from '../../DataLoader';\r\nimport * as PIXI from \"pixi.js\";\r\nexport const EnemyList = ({ \r\n  oder=0,\r\n  enemyRandomSkill=0,\r\n  enemyList=[]\r\n})=>{\r\n  const skill = enemyList[oder].skill;\r\n  return <Container sortableChildren={true}>\r\n    <Sprite\r\n      width={65}\r\n      height={65}\r\n      anchor={0.5}\r\n      x={175}\r\n      y={-75}\r\n      image={loader.resources[`${enemyList[oder].name}-head-default`].data}\r\n    />\r\n    <Text \r\n      text={`${enemyList[oder].cn} / 技能`}\r\n      anchor={{x:0.5}}\r\n      x={175} y={-30}\r\n      style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 18,\r\n        fill:'#ffffff',\r\n      })}/>\r\n    <Text \r\n      text={`${skill[enemyRandomSkill].name}`}\r\n      anchor={{x:0.5}}\r\n      x={175} y={10}\r\n      style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 20,\r\n        fill:['#f15bb5','#e0aaff'],\r\n      })}/>\r\n    <Text \r\n      text={`ATK / ${skill[enemyRandomSkill].atk}`}\r\n      anchor={{x:0.5}}\r\n      x={175} y={40}\r\n      style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 18,\r\n        fill:['#f15bb5','#e0aaff'],\r\n      })}/>\r\n  </Container>\r\n};","import React from 'react';\r\nimport { Container, Graphics, Sprite } from '@inlet/react-pixi/animated';\r\nimport { loader } from '../../DataLoader';\r\nexport const ChessList = ({\r\n  chessList,\r\n  defChess,\r\n  setDefChess\r\n})=>{\r\n  return <Container sortableChildren={true}>\r\n    <Graphics\r\n      x={-250}\r\n      y={-180}\r\n      zIndex={1}\r\n      draw={g=> {\r\n        g.lineStyle(1,`0xffffff`,1);\r\n        g.beginFill(`0x0f0f1b`);\r\n        g.drawRoundedRect(0,0,100,360,8);\r\n        g.endFill();\r\n      }}\r\n    />\r\n    {chessList.map((v,k)=>{\r\n      const distance = k * 85;\r\n      return <React.Fragment key={k}>\r\n        <Sprite\r\n          interactive={true}\r\n          buttonMode={true}\r\n          width={65}\r\n          height={65}\r\n          anchor={0.5}\r\n          zIndex={2}\r\n          x={-200}\r\n          y={-125 + distance}\r\n          image={loader.resources[`${v.name}-head-default`].data}\r\n          pointertap={()=>setDefChess(k)}\r\n        />\r\n        {k===defChess&&<Graphics\r\n          anchor={0.5}\r\n          x={-200}\r\n          y={-125 + distance}\r\n          zIndex={1}\r\n          draw={g=> {\r\n            g.beginFill(`0x7b2cbf`);\r\n            g.drawRoundedRect(-38,-38,76,76,5);\r\n            g.endFill();\r\n          }}\r\n        />}\r\n      </React.Fragment>\r\n    })}\r\n  </Container>\r\n};","import React from 'react';\r\nimport { Container, Graphics, Text } from '@inlet/react-pixi/animated';\r\nimport * as PIXI from \"pixi.js\";\r\n\r\nexport const Information = ({\r\n  defChess, chessList, atkEnemy\r\n})=>{\r\n  const dodge = chessList[defChess].dodge - atkEnemy.hitfix>=0 ? chessList[defChess].dodge - atkEnemy.hitfix : 0;\r\n  return <Container sortableChildren={true}>\r\n    <Graphics\r\n      x={-125} y={-150}\r\n    >\r\n      <Text \r\n        text={`選擇防禦：${chessList[defChess].cn}`}\r\n        anchor={{x:0}}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 18,\r\n          fill:'#ffffff',\r\n        })}/>\r\n      <Text \r\n        text={`HP：${chessList[defChess].hp}`}\r\n        anchor={{x:0}}\r\n        y={30}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 18,\r\n          fill:'#ff6b6b',\r\n        })}/>\r\n      <Text \r\n        text={`迴避率：${dodge}%`}\r\n        anchor={{x:0}}\r\n        y={60}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 18,\r\n          fill:['#ffffff', '#4cc9f0'],\r\n        })}/>\r\n    </Graphics>\r\n  </Container>\r\n}","import React,{ useState } from 'react';\r\nimport { Graphics, Sprite } from '@inlet/react-pixi/animated';\r\nimport { loader } from '../../DataLoader';\r\nimport { ProbabilityCount } from \"../../Common/ProbabilityCount\";\r\nimport { chessDefense } from \"../../../reducer/chess\";\r\nimport { enemyChessAttackResult } from \"../../../reducer/enemyChess\";\r\n// common part\r\nimport { EnemyList } from \"./EnemyList\";\r\nimport { ChessList } from \"./ChessList\";\r\nimport { Information } from \"./Information\";\r\nexport const EnemyRoundTab = ({ props })=> {\r\n  const [ defChess, setDefChess ] = useState(0);\r\n  const { enemyRoundTab, chess, enemyChess,\r\n    setEnemyRoundTab, setAnimeShow, setCurrentChess, setCurrentBGM, dispatch } = props;\r\n  const chessList = chess.filter(v=>v.debut);\r\n  const enemyList = enemyChess.filter(v=>v.debut);\r\n  const enemySkill = enemyList[enemyRoundTab.oder].skill;\r\n  const enemySp = enemyList[enemyRoundTab.oder].sp;\r\n  const getAtkSkill = ()=>{\r\n    const totalSize = enemySkill.length-1;\r\n    const random = Math.round(Math.random()*totalSize);\r\n    const checkSp = (enemySp===0)||(enemySkill[random].sp>enemySp);\r\n    return checkSp ? 0 : random;\r\n  };\r\n  const enemyRandomSkill = getAtkSkill();\r\n  const getCurrentChessKey = ({ chess, debut, key })=>{\r\n    let getKey;\r\n    chess.find((v,k)=>{\r\n      if(v.id===debut[key].id){\r\n        return getKey = k;\r\n      }else return null;\r\n    });\r\n    return getKey;\r\n  };\r\n  return <Graphics\r\n    x={400}\r\n    y={300}\r\n    zIndex={99}\r\n    draw={g=> {\r\n      g.lineStyle(1,`0xffffff`,1);\r\n      g.beginFill(`0x22223b`);\r\n      g.drawRoundedRect(-300,-200,600,400,8);\r\n      g.endFill();\r\n    }}\r\n  >\r\n    <ChessList\r\n      chessList={chessList}\r\n      defChess={defChess}\r\n      setDefChess={setDefChess}\r\n    />\r\n    <Information\r\n      defChess={defChess}\r\n      chessList={chessList}\r\n      atkEnemy={enemyList[enemyRoundTab.oder].skill[enemyRandomSkill]}\r\n    />\r\n    <EnemyList\r\n      oder={enemyRoundTab.oder}\r\n      enemyRandomSkill={enemyRandomSkill}\r\n      enemyList={enemyList}\r\n    />\r\n    <Sprite\r\n      interactive={true}\r\n      buttonMode={true}\r\n      width={90}\r\n      height={42}\r\n      anchor={0.5}\r\n      zIndex={2}\r\n      x={230}\r\n      y={155}\r\n      image={loader.resources[`fightDef`].data}\r\n      pointertap={()=>{\r\n        setCurrentBGM(enemyList[enemyRoundTab.oder].name);\r\n        const isHit = ProbabilityCount(\r\n          enemyList[enemyRoundTab.oder].skill[enemyRandomSkill].hitfix,\r\n          chessList[defChess].dodge\r\n        );\r\n        setCurrentChess(prev=>{return{...prev,type:\"ATTACK\"}});\r\n        dispatch(enemyChessAttackResult({\r\n          key: getCurrentChessKey({\r\n            chess: enemyChess,\r\n            debut: enemyList,\r\n            key: enemyRoundTab.oder\r\n          }),\r\n          lessSp:enemyList[enemyRoundTab.oder].skill[enemyRandomSkill].sp\r\n        }));\r\n        if(isHit){\r\n          dispatch(chessDefense({\r\n            key: getCurrentChessKey({\r\n              chess: chess,\r\n              debut: chessList,\r\n              key: defChess\r\n            }),\r\n            damage: enemyList[enemyRoundTab.oder].skill[enemyRandomSkill].atk\r\n          }));\r\n        };\r\n        setEnemyRoundTab(prev=>{return{...prev, status:false}});\r\n        setAnimeShow({\r\n          status:true,\r\n          type:'ENEMY',\r\n          isHit: isHit,\r\n          attacker:{ \r\n            key: getCurrentChessKey({\r\n              chess: enemyChess,\r\n              debut: enemyList,\r\n              key: enemyRoundTab.oder\r\n            }),\r\n            skill:enemyList[enemyRoundTab.oder].skill[enemyRandomSkill],\r\n            prevSP:enemyList[enemyRoundTab.oder].sp\r\n          },\r\n          target:{ \r\n            key: getCurrentChessKey({\r\n              chess: chess,\r\n              debut: chessList,\r\n              key: defChess\r\n            }),\r\n            isHit:isHit,\r\n            prevLife:chessList[defChess].hp\r\n          }\r\n        });\r\n      }}\r\n    />\r\n  </Graphics>\r\n};","import React,{ useState } from 'react';\r\nimport { fromJS } from 'immutable';\r\nimport { Graphics, Text } from '@inlet/react-pixi/animated';\r\nimport { GetMove, GetAttack } from '../../reducer/map';\r\nimport { chessSelected, chessCheckStatus } from \"../../reducer/chess\";\r\nimport * as PIXI from \"pixi.js\";\r\n\r\nexport const ChessUIBoard = ({\r\n  ChessData,\r\n  ChessVal,\r\n  ChessKey,\r\n  EnemyChessData,\r\n  positionX,\r\n  positionY,\r\n  setCurrentChess,\r\n  setMoveStep,\r\n  dispatch\r\n})=> {\r\n  const specialPosition = {\r\n    x: 720,\r\n    y: 490\r\n  };\r\n  const forMoveArray = [];\r\n  const forAttackArray = [];\r\n  const [textInforArray, setTextInforArray] = useState(fromJS([{\r\n      id:1, \r\n      title:\"移動\",\r\n      textColor:['#ffffff', '#ffffff']\r\n    },{ \r\n      id:2,\r\n      title:\"攻擊\",\r\n      textColor:['#ffffff', '#ffffff']\r\n    },{ \r\n      id:3,\r\n      title:\"狀態\",\r\n      textColor:['#ffffff', '#ffffff']\r\n    },{ \r\n      id:4,\r\n      title:\"返回\",\r\n      textColor:['#ffffff', '#ffffff']\r\n  }]));\r\n  ChessData.map((v)=>{\r\n    return (\r\n      forMoveArray.push({ x:v.x, y:v.y }),\r\n      forAttackArray.push({ x:v.x, y:v.y })\r\n    );\r\n  });\r\n  EnemyChessData.map((v)=>{\r\n    return forMoveArray.push({ x:v.x, y:v.y });\r\n  });\r\n  const compareAttack = (\r\n    chessX,\r\n    chessY,\r\n    chessAtk\r\n  )=>{\r\n    let isAttack = false;\r\n    const isDebutEnemy = EnemyChessData.filter(v=>v.debut);\r\n    const limitPosition = { x:19, y:14 };\r\n    const positionRange = [];\r\n    for(let i=0; i < chessAtk; i++){\r\n      const getaddX = (chessX+(i+1)>=limitPosition.x) ? limitPosition.x : chessX+(i+1);\r\n      const getaddY = (chessY+(i+1)>=limitPosition.y) ? limitPosition.y : chessY+(i+1);\r\n      const getlessX = (chessX-(i+1)<=0) ? 0 : chessX-(i+1);\r\n      const getlessY = (chessY-(i+1)<=0) ? 0 : chessY-(i+1);\r\n      positionRange.push(\r\n        { x:getaddX, y:chessY },\r\n        { x:getlessX, y:chessY },\r\n        { x:chessX, y:getaddY },\r\n        { x:chessX, y:getlessY }\r\n      );\r\n    };\r\n    isDebutEnemy.map(val=>{\r\n      return positionRange.map(v=>{\r\n        if(val.x===v.x&&val.y===v.y){\r\n          return isAttack = true;\r\n        }else return null\r\n      })\r\n    });\r\n    return isAttack;\r\n  };\r\n  const compareUsed = (\r\n    chessX,\r\n    chessY,\r\n    checkType\r\n  )=>{\r\n    let isUnused = false;\r\n    const isDebutChess = ChessData.filter(v=>v.debut);\r\n    isDebutChess.map(val=>{\r\n      if(val.x===chessX&&val.y===chessY){\r\n        switch (checkType) {\r\n          case 'MOVE':\r\n          case 'ATTACK':\r\n            const moved = val.roundMove>0;\r\n            return isUnused = moved;\r\n          default:\r\n            return true;\r\n        };\r\n      }else return null;\r\n    });\r\n    return isUnused;\r\n  };\r\n  const CreateText = ({ noop })=>{\r\n    const isAttack = compareAttack(ChessVal.x,ChessVal.y,ChessVal.attack);\r\n    return textInforArray.map((val,key)=>{\r\n      const fetchInteractive = ()=>{\r\n        switch (val.get('id')) {\r\n          case 1:\r\n            return compareUsed(ChessVal.x,ChessVal.y,'MOVE');\r\n          case 2:\r\n            const result = isAttack && compareUsed(ChessVal.x,ChessVal.y,'ATTACK');\r\n            return result;\r\n          default:\r\n            return true;\r\n        };\r\n      }\r\n      return <Text\r\n        key={key}\r\n        interactive={fetchInteractive()}\r\n        buttonMode={true}\r\n        text={val.get('title')}\r\n        x={10}\r\n        y={5+(25*key)}\r\n        style={new PIXI.TextStyle({\r\n          fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 20,\r\n          fill:fetchInteractive()?val.get('textColor').toJS():'#8d99ae',\r\n        })}\r\n        pointerover={()=>{\r\n          setTextInforArray(prev=>\r\n            prev.setIn([key,'textColor',1],'#00ff99')\r\n          );\r\n        }}\r\n        pointerout={()=>{\r\n          setTextInforArray(prev=>\r\n            prev.setIn([key,'textColor',1],'#ffffff')\r\n          );\r\n        }}\r\n        pointertap={(e)=>{\r\n          switch (val.get('id')) {\r\n            case 1:\r\n              setCurrentChess({ \r\n                key:ChessKey,\r\n                type:\"MOVE\"\r\n              });\r\n              dispatch(GetMove({\r\n                position:{ \r\n                  x:ChessVal.x, \r\n                  y:ChessVal.y,\r\n                },\r\n                step:ChessVal.step,\r\n                changeColor:'0x06d6a0',\r\n                currentChessPositions: forMoveArray\r\n              }));\r\n              dispatch(chessSelected({\r\n                key:ChessKey\r\n              }));\r\n              break;\r\n            case 2:\r\n              setCurrentChess({ \r\n                key:ChessKey,\r\n                type:\"ATTACK\"\r\n              });\r\n              dispatch(chessSelected({\r\n                key:ChessKey\r\n              }));\r\n              dispatch(GetAttack({\r\n                position:{ \r\n                  x:ChessVal.x, \r\n                  y:ChessVal.y,\r\n                },\r\n                step:ChessVal.attack,\r\n                changeColor:'0x00bbf9',\r\n                currentChessPositions: forAttackArray\r\n              }));\r\n              break;\r\n            case 3:\r\n              setCurrentChess({ \r\n                key:ChessKey,\r\n                type:\"STATUS\"\r\n              });\r\n              dispatch(chessCheckStatus({\r\n                key:ChessKey\r\n              }));\r\n              dispatch(chessSelected({\r\n                key:ChessKey\r\n              }));\r\n              break;\r\n            case 4 :\r\n              setMoveStep(true);\r\n              dispatch(chessSelected({\r\n                key:ChessKey\r\n              }));\r\n              break;\r\n            default:\r\n              return console.log(e.target)\r\n          };\r\n        }}\r\n      />\r\n    }\r\n  )};\r\n  return <Graphics\r\n    x={positionX!==800?positionX:specialPosition.x}\r\n    y={(positionY!==560&&positionY!==520)?positionY:specialPosition.y}\r\n    zIndex={3}\r\n    draw={g=> {\r\n      g.lineStyle(1,`0xffffff`,1);\r\n      g.beginFill(`0x22223b`);\r\n      g.drawRoundedRect(0,0,60,110,8);\r\n      g.endFill();\r\n    }}\r\n  ><CreateText/></Graphics>\r\n};","import React from 'react';\r\nimport { Sprite, Graphics, Text } from '@inlet/react-pixi/animated';\r\nimport { loader } from '../DataLoader';\r\nimport * as PIXI from \"pixi.js\";\r\n\r\nexport const ChessStatus = ({\r\n  ChessData,\r\n  ChessKey,\r\n  CheckStatus,\r\n  setMoveStep,\r\n  dispatch\r\n})=> {\r\n  const CreateSkillList = ()=>{\r\n    return ChessData.skill.map((value,key)=>{\r\n        return <React.Fragment key={key}>\r\n        <Text\r\n          x={-40}\r\n          y={-70+(key*22)}\r\n          text={`${value.name}`}\r\n          style={new PIXI.TextStyle({\r\n            fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n            fontSize: 16,\r\n            fill:'#ffb700',\r\n          })}\r\n        />\r\n        <Text\r\n          x={-35+(value.name.length * 16)}\r\n          y={-70+(key*22)}\r\n          text={`ATK:${value.atk}(${value.sp}SP)`}\r\n          style={new PIXI.TextStyle({\r\n            fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n            fontSize: 14,\r\n            fill:'#ffffff',\r\n          })}\r\n        />\r\n      </React.Fragment>\r\n    });  \r\n  };\r\n  return <Graphics\r\n    x={400}\r\n    y={300}\r\n    zIndex={99}\r\n    draw={g=> {\r\n      g.lineStyle(1,`0xffffff`,1);\r\n      g.beginFill(`0x22223b`);\r\n      g.drawRoundedRect(-250,-150,500,300,8);\r\n      g.endFill();\r\n    }}\r\n  >\r\n    <Sprite\r\n      interactive={true}\r\n      buttonMode={true}\r\n      width={25}\r\n      height={25}\r\n      anchor={0.5}\r\n      x={220}\r\n      y={-120}\r\n      image={loader.resources[`closeIcon`].data}\r\n      pointertap={()=>{\r\n        setMoveStep(true);\r\n        dispatch(CheckStatus({\r\n          key:ChessKey\r\n        }));\r\n      }}\r\n    />\r\n    <Sprite\r\n      width={80}\r\n      height={80}\r\n      x={-200}\r\n      y={-90}\r\n      image={loader.resources[`${ChessData.name}-head-default`].data}\r\n    />\r\n    <Text\r\n      x={-200}\r\n      y={10}\r\n      text={ChessData.cn}\r\n      style={new PIXI.TextStyle({\r\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 16,\r\n        fill:'#ffffff',\r\n      })}\r\n    />\r\n    <Text\r\n      x={-200}\r\n      y={35}\r\n      text={`HP:`}\r\n      style={new PIXI.TextStyle({\r\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 16,\r\n        fill:'#ffffff',\r\n      })}\r\n    />\r\n    <Text\r\n      x={-170}\r\n      y={35}\r\n      text={`${ChessData.hp} / ${ChessData.fullValue.hp}`}\r\n      style={new PIXI.TextStyle({\r\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 16,\r\n        fill:'#ff6b6b',\r\n      })}\r\n    />\r\n    <Text\r\n      x={-200}\r\n      y={60}\r\n      text={`SP:`}\r\n      style={new PIXI.TextStyle({\r\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 16,\r\n        fill:'#ffffff',\r\n      })}\r\n    />\r\n    <Text\r\n      x={-170}\r\n      y={60}\r\n      text={`${ChessData.sp} / ${ChessData.fullValue.sp}`}\r\n      style={new PIXI.TextStyle({\r\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 16,\r\n        fill:'#0466c8',\r\n      })}\r\n    />\r\n    <Text\r\n      x={-50}\r\n      y={-95}\r\n      text={'招式'}\r\n      style={new PIXI.TextStyle({\r\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 16,\r\n        fill:'#ffffff',\r\n      })}\r\n    />\r\n    <CreateSkillList/>\r\n  </Graphics>\r\n};","import React from 'react';\r\nimport { Sprite } from '@inlet/react-pixi/animated';\r\nimport { loader } from '../DataLoader';\r\n// reducers\r\nimport { MoveSelect } from '../../reducer/map';\r\nimport { chessSelected, chessCheckStatus } from \"../../reducer/chess\";\r\n// other part\r\nimport { ChessUIBoard } from \"./ChessUIBoard\";\r\nimport { ChessStatus } from \"../Common/ChessStatus\";\r\n\r\nexport const Chess = ({\r\n  chessProps\r\n})=>{\r\n  const { \r\n    chess,\r\n    enemyChess,\r\n    moveStep=Boolean,\r\n    setMoveStep,\r\n    setCurrentChess,\r\n    dispatch\r\n  } = chessProps;\r\n  return chess.map((value,key)=>{\r\n    const roundMoveDone = value.roundMove===0;\r\n    return <React.Fragment key={key}>\r\n      {value.debut&&<Sprite\r\n        interactive={moveStep}\r\n        buttonMode={true}\r\n        width={40}\r\n        height={40}\r\n        x={value.x*40}\r\n        y={value.y*40}\r\n        zIndex={2}\r\n        tint={roundMoveDone?0x495057:0xffffff}\r\n        pointerover={()=>{\r\n          dispatch(MoveSelect({\r\n            position:{ \r\n              x:value.x, \r\n              y:value.y,\r\n            },\r\n            step:value.step,\r\n            changeColor:'0x06d6a0',\r\n            alphaVal:0.5\r\n          }));\r\n        }}\r\n        pointerout={()=>{\r\n          dispatch(MoveSelect({\r\n            position:{ \r\n              x:value.x, \r\n              y:value.y,\r\n            },\r\n            step:value.step,\r\n            changeColor:'0x383838',\r\n            alphaVal:0\r\n          }));\r\n        }}\r\n        pointertap={()=>{\r\n          setMoveStep(false);\r\n          dispatch(chessSelected({\r\n            key:key\r\n          }));\r\n          dispatch(MoveSelect({\r\n            position:{ \r\n              x:value.x, \r\n              y:value.y,\r\n            },\r\n            step:value.step,\r\n            changeColor:'0x383838',\r\n            alphaVal:0\r\n          }));\r\n        }}\r\n        image={loader.resources[`${value.name}-head-default`].data}\r\n      />}\r\n      {value.boardStatus&&<ChessUIBoard\r\n        ChessData={chess}\r\n        ChessVal={value}\r\n        ChessKey={key}\r\n        EnemyChessData={enemyChess}\r\n        positionX={(value.x*40)+40}\r\n        positionY={(value.y*40)}\r\n        setCurrentChess={setCurrentChess}\r\n        setMoveStep={setMoveStep}\r\n        dispatch={dispatch}\r\n      />}\r\n      {value.checkStatus&&<ChessStatus\r\n        ChessData={value}\r\n        ChessKey={key}\r\n        CheckStatus={chessCheckStatus}\r\n        setMoveStep={setMoveStep}\r\n        dispatch={dispatch}\r\n      />}\r\n    </React.Fragment>\r\n  })\r\n};","import React,{ useState } from 'react';\r\nimport { fromJS } from 'immutable';\r\nimport { Graphics, Text } from '@inlet/react-pixi/animated';\r\nimport { enemyChessSelected, enemyChessCheckStatus } from \"../../reducer/enemyChess\";\r\nimport * as PIXI from \"pixi.js\";\r\n\r\nexport const EnemyChessUIBoard = ({\r\n  ChessKey,\r\n  positionX,\r\n  positionY,\r\n  setMoveStep,\r\n  dispatch\r\n})=> {\r\n  const specialPosition = {\r\n    x: 720,\r\n    y: 535\r\n  };\r\n  const [textInforArray, setTextInforArray] = useState(fromJS([{\r\n      id:1,\r\n      title:\"狀態\",\r\n      textColor:['#ffffff', '#ffffff']\r\n    },{ \r\n      id:2,\r\n      title:\"返回\",\r\n      textColor:['#ffffff', '#ffffff']\r\n  }]));\r\n  const CreateText = ({ noop })=>{\r\n    return textInforArray.map((val,key)=>{\r\n      return <Text\r\n        key={key}\r\n        interactive={true}\r\n        buttonMode={true}\r\n        text={val.get('title')}\r\n        x={10}\r\n        y={5+(25*key)}\r\n        style={new PIXI.TextStyle({\r\n          fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 20,\r\n          fill:val.get('textColor').toJS(),\r\n        })}\r\n        pointerover={()=>{\r\n          setTextInforArray(prev=>\r\n            prev.setIn([key,'textColor',1],'#9d4edd')\r\n          );\r\n        }}\r\n        pointerout={()=>{\r\n          setTextInforArray(prev=>\r\n            prev.setIn([key,'textColor',1],'#ffffff')\r\n          );\r\n        }}\r\n        pointertap={(e)=>{\r\n          switch (val.get('id')) {\r\n            case 1:\r\n              dispatch(enemyChessCheckStatus({\r\n                key:ChessKey\r\n              }));\r\n              dispatch(enemyChessSelected({\r\n                key:ChessKey\r\n              }));\r\n              break;\r\n            case 2 :\r\n              setMoveStep(true);\r\n              dispatch(enemyChessSelected({\r\n                key:ChessKey\r\n              }));\r\n              break;\r\n            default:\r\n              return console.log(e.target)\r\n          };\r\n        }}\r\n      />\r\n    }\r\n  )};\r\n  return <Graphics\r\n    x={positionX!==800?positionX:specialPosition.x}\r\n    y={(positionY!==560&&positionY!==520)?positionY:specialPosition.y}\r\n    zIndex={3}\r\n    draw={g=> {\r\n      g.lineStyle(1,`0xffffff`,1);\r\n      g.beginFill(`0x22223b`);\r\n      g.drawRoundedRect(0,0,60,62,8);\r\n      g.endFill();\r\n    }}\r\n  ><CreateText/></Graphics>\r\n}","import React from 'react';\r\nimport { Sprite } from '@inlet/react-pixi/animated';\r\nimport { loader } from '../DataLoader';\r\n// reducers\r\nimport { enemyChessSelected, enemyChessCheckStatus } from \"../../reducer/enemyChess\";\r\n// other part\r\nimport { EnemyChessUIBoard } from \"./EnemyChessUIBoard\";\r\nimport { ChessStatus } from \"../Common/ChessStatus\";\r\n\r\nexport const EnemyChess = ({\r\n  enemyChessProps\r\n})=>{\r\n  const { \r\n    enemyChess,\r\n    moveStep=Boolean,\r\n    setMoveStep,\r\n    dispatch\r\n  } = enemyChessProps;\r\n  return enemyChess.map((value,key)=>{\r\n    return <React.Fragment key={key}>\r\n      {value.debut&&<Sprite\r\n        interactive={moveStep}\r\n        buttonMode={true}\r\n        width={40}\r\n        height={40}\r\n        x={value.x*40}\r\n        y={value.y*40}\r\n        zIndex={2}\r\n        pointertap={()=>{\r\n          setMoveStep(false);\r\n          dispatch(enemyChessSelected({\r\n            key:key\r\n          }));\r\n        }}\r\n        image={loader.resources[`${value.name}-head-default`].data}\r\n      />}\r\n      {value.boardStatus&&<EnemyChessUIBoard\r\n        ChessKey={key}\r\n        positionX={(value.x*40)+40}\r\n        positionY={(value.y*40)}\r\n        setMoveStep={setMoveStep}\r\n        dispatch={dispatch}\r\n      />}\r\n      {value.checkStatus&&<ChessStatus\r\n        ChessData={value}\r\n        ChessKey={key}\r\n        CheckStatus={enemyChessCheckStatus}\r\n        setMoveStep={setMoveStep}\r\n        dispatch={dispatch}\r\n      />}\r\n    </React.Fragment>\r\n  })\r\n};\r\n","import React,{ useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Stage, Container, Sprite } from '@inlet/react-pixi/animated';\r\nimport { Howler } from 'howler';\r\n// reducers\r\nimport { stageDebut } from \"../reducer/chess\";\r\nimport { enemyStageDebut } from \"../reducer/enemyChess\";\r\n// other part\r\nimport { GameStart } from './Common/GameStart/Index';\r\nimport { CreateCheckerboard } from './Common/Checkerboard';\r\nimport { ConfirmTip } from \"./Common/ConfirmTips\";\r\nimport { UsualTip } from \"./Common/UsualTip\";\r\nimport { BattleBoard } from \"./Common/BattleBoard\";\r\nimport { BattleAnimeShow } from \"./Common/BattleAnimeShow/Index\";\r\nimport { OtherTab } from \"./Common/OtherTab\";\r\nimport { EnemyRoundTab } from \"./Common/EnemyRoundTab/Index\";\r\nimport { Chess } from \"../components/Chess/Chess\";\r\nimport { EnemyChess } from \"../components/EnemyChess/EnemyChess\";\r\n// rule\r\nimport { stageRule } from \"../constants/stageRule\";\r\nimport { audioData, loader } from './DataLoader';\r\nexport const Canvas = ()=> {\r\n  const [ roundStart, setRoundStart ] = useState(false);\r\n  const [ stageStatus, setStageStatus ] = useState('stageOne');\r\n  const [ roundNum, setRoundNum ] = useState(1);\r\n  const [ otherTab, setOtherTab ] = useState(false);\r\n  const [ enemyRoundTab, setEnemyRoundTab ] = useState({\r\n    oder:0,\r\n    status:false\r\n  });\r\n  const [ currentChess, setCurrentChess ] = useState({\r\n    key:0,\r\n    type:\"MOVE\"\r\n  });\r\n  const [ usualTip, setUsualTip ] = useState({\r\n    title:``,\r\n    status:false,\r\n  });\r\n  const [ tipStatus, setTipStatus ] = useState({\r\n    title:``,\r\n    status:false,\r\n    position:{\r\n      x:0,y:0\r\n    },\r\n  });\r\n  const [ battleInfo, setBattleInfo ] = useState({\r\n    status:false,\r\n    attacker:{ key:'' },\r\n    target:{ key:'' }\r\n  });\r\n  const [ animeShow, setAnimeShow ] = useState({\r\n    status:false,\r\n    type:'',\r\n    attacker:{ key:'', skill:{}, prevSP:0 },\r\n    target:{ key:'', isHit:false, prevLife:0 }\r\n  });\r\n  const [ moveStep, setMoveStep ] = useState(true);\r\n  const [ currentBGM, setCurrentBGM ] = useState('');\r\n  const [ fadeBGM, setFadeBGM ] = useState('');\r\n  const chessMap = useSelector(state=>state.chessMap);\r\n  const chess = useSelector(state=>state.chess);\r\n  const enemyChess = useSelector(state=>state.enemyChess);\r\n  const dispatch = useDispatch();\r\n  // bgm\r\n  useEffect(()=>{\r\n    switch (currentBGM) {\r\n      case 'Tanjirou':\r\n        audioData.round.fade(0.6,0,1000);\r\n        audioData.KimetsuNoYaiba.stop();\r\n        audioData.KimetsuNoYaiba.volume(1);\r\n        audioData.KimetsuNoYaiba.play();\r\n        break;\r\n      case 'Teoni':\r\n        audioData.round.fade(0.6,0,1000);\r\n        audioData.KimetsuNoYaibaEnemy.stop();\r\n        audioData.KimetsuNoYaibaEnemy.volume(1);\r\n        audioData.KimetsuNoYaibaEnemy.play();\r\n        break;\r\n      case 'userRounds':\r\n      case 'enemyRounds':\r\n        audioData.round.stop();\r\n        audioData.round.volume(0.6);\r\n        audioData.round.play();\r\n        break;\r\n      default:\r\n        Howler.stop();\r\n        break;\r\n    };\r\n  },[ currentBGM ]);\r\n  useEffect(()=>{\r\n    switch (fadeBGM){\r\n      case 'Tanjirou':\r\n        audioData.KimetsuNoYaiba.fade(1,0,1000);\r\n        setCurrentBGM('enemyRounds');\r\n        break;\r\n      case 'Teoni':\r\n        audioData.KimetsuNoYaibaEnemy.fade(1,0,1000);\r\n        setCurrentBGM('userRounds');\r\n        break;\r\n      default:\r\n        break;\r\n    };\r\n  },[ fadeBGM, stageStatus ]);\r\n  // debut\r\n  useEffect(()=>{\r\n    if(roundStart){\r\n      dispatch(stageDebut({ \r\n        isDebutChess:stageRule.getIn([stageStatus,'debutChess'])\r\n      }));\r\n      dispatch(enemyStageDebut({ \r\n        isDebutChess:stageRule.getIn([stageStatus,'debutEnemyChess'])\r\n      }));\r\n    };\r\n  },[ dispatch, roundStart, stageStatus ]);\r\n  return <Stage\r\n    width={800}\r\n    height={600}\r\n    options={{\r\n      autoDensity: true, \r\n      antialias: true,\r\n      backgroundColor:0x01262a\r\n    }}>\r\n    <Container sortableChildren={true}>\r\n      {roundStart&&<Sprite\r\n        width={30}\r\n        height={30}\r\n        anchor={0.5} \r\n        x={760}\r\n        y={40}\r\n        zIndex={99}\r\n        interactive={moveStep}\r\n        buttonMode={true}\r\n        image={loader.resources[`otherIcon`].data}\r\n        pointertap={()=>{\r\n          setOtherTab(true);\r\n          setMoveStep(false);\r\n        }}\r\n      />}\r\n      <Sprite\r\n        width={800}\r\n        height={600}\r\n        zIndex={1}\r\n        image={loader.resources[`${stageStatus}-main-BG`].data}\r\n      />\r\n      <CreateCheckerboard reduxProps={{ \r\n        chess,\r\n        enemyChess,\r\n        chessMap,\r\n        currentChess,\r\n        dispatch,\r\n        setTipStatus,\r\n        setMoveStep,\r\n        setBattleInfo\r\n      }}/>\r\n      <Chess chessProps={{\r\n        chess,\r\n        enemyChess,\r\n        moveStep,\r\n        setMoveStep,\r\n        setCurrentChess,\r\n        dispatch\r\n      }}/>\r\n      <EnemyChess enemyChessProps={{\r\n        enemyChess,\r\n        moveStep,\r\n        setMoveStep,\r\n        dispatch\r\n      }}/>\r\n    </Container>\r\n    {otherTab&&\r\n      <OtherTab\r\n        props={{\r\n          stageStatus,\r\n          roundNum,\r\n          setMoveStep,\r\n          setOtherTab,\r\n          setTipStatus,\r\n          setCurrentChess\r\n        }}\r\n      />}\r\n    {tipStatus.status&&\r\n      <ConfirmTip \r\n        props={{\r\n          chess,\r\n          currentChess,\r\n          tipStatus,\r\n          currentBGM,\r\n          dispatch,\r\n          setMoveStep,\r\n          setTipStatus,\r\n          setOtherTab,\r\n          setRoundNum,\r\n          setUsualTip,\r\n          setFadeBGM\r\n        }}\r\n      />}\r\n    {usualTip.status&&\r\n      <UsualTip\r\n        props={{\r\n          stageStatus,\r\n          chess,\r\n          currentChess,\r\n          enemyChess,\r\n          usualTip,\r\n          currentBGM,\r\n          setMoveStep,\r\n          setUsualTip,\r\n          setCurrentChess,\r\n          setFadeBGM,\r\n          setEnemyRoundTab\r\n        }}\r\n      />}\r\n    {battleInfo.status&&\r\n      <BattleBoard\r\n        props={{\r\n          battleInfo,\r\n          setMoveStep,\r\n          setBattleInfo,\r\n          setAnimeShow,\r\n          setCurrentBGM,\r\n          dispatch\r\n        }}\r\n      />}\r\n    {animeShow.status&&\r\n      <BattleAnimeShow \r\n        props={{\r\n          stageStatus,\r\n          animeShow,\r\n          chess,\r\n          enemyChess,\r\n          setMoveStep,\r\n          setAnimeShow,\r\n          setUsualTip,\r\n          setCurrentChess,\r\n          dispatch\r\n        }}\r\n      />}\r\n    {enemyRoundTab.status&&\r\n      <EnemyRoundTab\r\n        props={{\r\n          enemyRoundTab,\r\n          chess,\r\n          enemyChess,\r\n          setEnemyRoundTab,\r\n          setAnimeShow,\r\n          setCurrentChess,\r\n          setCurrentBGM,\r\n          dispatch\r\n        }}\r\n      />}\r\n    {!roundStart&&\r\n    <GameStart \r\n      props={{\r\n        setRoundStart,\r\n        setCurrentBGM\r\n      }}\r\n    />}\r\n  </Stage>\r\n};","import React, { useState, useEffect } from 'react';\r\nimport styled, { createGlobalStyle } from 'styled-components';\r\nimport device from \"current-device\";\r\nimport { Canvas } from './Canvas';\r\nimport { audioData, loader } from './DataLoader';\r\nconst isDesktop = device.desktop();\r\nconst GlobalStyle = createGlobalStyle`\r\n  body { background:#1d2430; }\r\n`;\r\nconst StyledApp = styled.div`\r\n  position: relative;\r\n  display:flex;\r\n  align-items:center;\r\n  justify-content:center;\r\n  width:100%;\r\n  height:100vh;\r\n  .loading {\r\n    color: #fff;\r\n    font-size:24px;\r\n  }\r\n  canvas {\r\n    width:${({ isDesktop })=>!isDesktop&&`\r\n      100% !important\r\n    `};\r\n    height:${({ isDesktop })=>!isDesktop&&`\r\n      100% !important\r\n    `};\r\n  }\r\n`;\r\nexport const App = ()=> {\r\n  const [ dataIsDone, setDataIsDone ] = useState(false);\r\n  const [ gameStart, setGameStart ] = useState(false);\r\n  const [ progress, setProgress ] = useState(0);\r\n  const [ mp3load, setMp3load ] = useState({\r\n    open:false,\r\n    KimetsuNoYaiba:false,\r\n  });\r\n  // mp3 load\r\n  audioData.KimetsuNoYaiba.on('load', function(){\r\n    setMp3load(prev=>{return{...prev,KimetsuNoYaiba:true}});\r\n  });\r\n  audioData.open.on('load', function(){\r\n    setMp3load(prev=>{return{...prev,open:true}});\r\n  });\r\n  useEffect(()=>{\r\n    loader.onProgress.add((loader)=>{\r\n      setProgress(Math.floor(loader.progress));\r\n    });\r\n    loader.onComplete.add((loader,resources)=>{\r\n      setProgress(100);\r\n      setDataIsDone(true);\r\n    });\r\n  });\r\n  useEffect(()=>{\r\n    const state = \r\n      mp3load.KimetsuNoYaiba&&\r\n      mp3load.open&&\r\n      dataIsDone;\r\n    if(state){\r\n      setGameStart(true);\r\n    }; \r\n  },[dataIsDone,mp3load])\r\n  return <StyledApp isDesktop={isDesktop}>\r\n    <GlobalStyle/>\r\n    {gameStart?<Canvas/>:\r\n      <span className=\"loading\">\r\n        {dataIsDone ? `讀取音訊中...` :\r\n        `Loading ${progress}%..`}\r\n      </span>}\r\n  </StyledApp>\r\n};\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { createStore, combineReducers } from 'redux';\r\nimport chess from './chess';\r\nimport chessMap from './map';\r\nimport enemyChess from './enemyChess';\r\nconst rootReducer = combineReducers({\r\n  chess,\r\n  chessMap,\r\n  enemyChess\r\n});\r\nexport const store = createStore(rootReducer);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { App } from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './reducer/index';\r\n\r\nReactDOM.render(<Provider store={store}><App /></Provider>,document.getElementById('root'));\r\nreportWebVitals();\r\n"],"sourceRoot":""}