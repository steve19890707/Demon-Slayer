{"version":3,"sources":["reducer/chess.js","reducer/enemyChess.js","reducer/map.js","components/Common/Checkerboard.js","components/Common/ConfirmTips.js","constants/stageRule.js","components/Common/UsualTip.js","components/DataLoader.js","components/Common/ProbabilityCount.js","components/Common/BattleBoard.js","components/Common/AinmeShowBG.js","constants/ChessSkillShow/TanjirouSkill.js","constants/ChessSkillShow/Index.js","constants/EnemyChessSkillShow/TeoniSkill.js","constants/EnemyChessSkillShow/Index.js","components/Common/BattleAnimeShow.js","components/Chess/ChessUIBoard.js","components/Common/ChessStatus.js","components/Chess/Chess.js","components/EnemyChess/EnemyChessUIBoard.js","components/EnemyChess/EnemyChess.js","components/Canvas.js","components/App.js","reportWebVitals.js","reducer/index.js","index.js"],"names":["basicCommon","x","y","checkStatus","boardStatus","debut","roundMove","chess","createSlice","name","initialState","cn","step","attack","hp","sp","dodge","fullValue","skill","atk","hitfix","reducers","stageDebut","state","actions","isDebutChess","payload","map","value","key","v","get","chessMove","changeX","changeY","chessSelected","chessCheckStatus","chessAttackResult","lessSp","chessMoved","roundAttack","enemyChess","enemyStageDebut","enemyChessSelected","enemyChessCheckStatus","enemyChessDefense","damage","enemyChessDead","mapLimit","createInitialState","method","list","i","push","createStraightLine","traverse","color","alpha","zIndex","isInteractive","chessMap","MoveSelect","action","position","changeColor","alphaVal","GetMove","currentChessPositions","GetAttack","texture","PIXI","WHITE","CreateCheckerboard","reduxProps","currentChess","dispatch","setTipStatus","setMoveStep","setBattleInfo","Fragment","k","interactive","buttonMode","width","height","tint","pointertap","type","title","status","isMatch","checkMatchAttackPosition","targetData","item","getCurrentEnemy","attacker","target","acttack","ConfirmTip","props","tipStatus","draw","g","lineStyle","beginFill","drawRoundedRect","endFill","text","anchor","style","fontFamily","fontSize","fill","prev","stageRule","fromJS","stageOne","debutChess","debutEnemyChess","isWin","enemyList","totalLife","isLose","chessList","stageTwo","UsualTip","stageStatus","usualTip","setUsualTip","setCurrentChess","useState","textColor","setTextColor","checkWin","getIn","checkLose","loader","hostname","window","location","add","load","BattleBoard","battleInfo","setAnimeShow","atkSelectd","setAtkSelectd","CreateAttackerInfo","pX","pY","data","sortableChildren","image","resources","skillCanUse","fontWeight","CreateTargetInfo","ForecastInfo","attackerHit","targetDodge","isHit","Math","round","random","prevSP","prevLife","AnimeShowBG","BGstatus","BGprop","SkBGprop","setSkBGpops","setBGpops","from","to","toX","config","duration","onRest","TanjirouSkill","skillName","attackerName","resultLife","setBGstatus","setAnimeIsDone","mass","friction","tension","setPosition","steps","step1","setTimeout","defence","step2","step3","step4","useEffect","timeout","clearTimeout","ChessSkillShow","defualtprops","TeoniSkill","isHitStep","isDead","next","isDodge","isDeadStep2","end","EnemyChessSkillShow","BattleAnimeShow","animeShow","targetHp","TopBar","Bottombar","CreateContent","animeIsDone","ChessUIBoard","ChessData","ChessVal","ChessKey","EnemyChessData","positionX","positionY","specialPosition","forMoveArray","forAttackArray","id","textInforArray","setTextInforArray","compareUsed","chessX","chessY","checkType","isUnused","filter","val","moved","CreateText","noop","isAttack","chessAtk","isDebutEnemy","limitPosition","positionRange","getaddX","getaddY","getlessX","getlessY","compareAttack","fetchInteractive","toJS","pointerover","setIn","pointerout","e","console","log","ChessStatus","CheckStatus","CreateSkillList","length","Chess","chessProps","moveStep","Boolean","roundMoveDone","EnemyChessUIBoard","EnemyChess","enemyChessProps","Canvas","useSelector","useDispatch","options","autoDensity","antialias","backgroundColor","GlobalStyle","createGlobalStyle","StyledApp","styled","div","App","dataIsDone","setDataIsDone","onComplete","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5a247680.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nconst basicCommon = {\n  x:0,\n  y:0,\n  checkStatus:false,\n  boardStatus:false,\n  debut:false,\n  roundMove:1\n};\nconst chess = createSlice({\n  name:'chess',\n  initialState:[\n    {\n      name:'Tanjirou',\n      cn:'竃門 碳治郎',\n      step:3,\n      attack:2,\n      hp:1500,\n      sp:100,\n      dodge:65,\n      fullValue:{\n        hp:1500,\n        sp:100\n      },\n      skill:[{ \n        name:'斬擊',\n        atk:50,\n        sp:0,\n        hitfix:0\n      },{ \n        name:'叄之型―流流舞',\n        atk:200,\n        sp:5,\n        hitfix:10\n      },{ \n        name:'捌之型―滝壺',\n        atk:200,\n        sp:5,\n        hitfix:5\n      },{\n        name:'拾之型―生生流轉',\n        atk:500,\n        sp:10,\n        hitfix:20\n      }],\n      ...basicCommon\n    },{\n      name:'Nezuko',\n      step:2,\n      attack:1,\n      hp:2200,\n      sp:200,\n      dodge:50,\n      fullValue:{\n        hp:2200,\n        sp:200\n      },\n      skill:[{ \n        name:'爪擊',\n        atk:50,\n        sp:0,\n        hitfix:0\n      },{ \n        name:'踢擊',\n        atk:120,\n        sp:5,\n        hitfix:0\n      },{ \n        name:'血鬼術',\n        atk:1000,\n        sp:100,\n        hitfix:0\n      }],\n      ...basicCommon\n    },{\n      name:'Inosuke',\n      cn:'嘴平 伊之助',\n      step:4,\n      attack:3,\n      hp:1800,\n      sp:80,\n      dodge:40,\n      fullValue:{\n        hp:1800,\n        sp:80\n      },\n      skill:[{ \n        name:'斬擊',\n        atk:50,\n        sp:0,\n        hitfix:0\n      },{ \n        name:'壹之牙―穿透刺射',\n        atk:120,\n        sp:2,\n        hitfix:0\n      },{ \n        name:'貳之牙―利刃對劈',\n        atk:200,\n        sp:5,\n        hitfix:0\n      },{\n        name:'叄之牙―獠牙撕扯',\n        atk:400,\n        sp:8,\n        hitfix:0\n      }],\n      ...basicCommon\n    }\n  ],\n  reducers:{\n    stageDebut:(state, actions)=> {\n      const { isDebutChess } = actions.payload;\n      state.map((value,key)=>{\n        return isDebutChess.map(v=>{\n          if(value.name===v.get('name')){\n            return (\n              state[key].debut = true,\n              state[key].x = v.get('x'),\n              state[key].y = v.get('y')\n            );\n          }else return null;\n        })\n      })\n    },\n    chessMove: (state, actions)=>{\n      const { key, changeX, changeY } = actions.payload;\n      state[key].x = changeX;\n      state[key].y = changeY;\n    },\n    chessSelected: (state, actions)=>{\n      const { key } = actions.payload;\n      state[key].boardStatus = !state[key].boardStatus;\n    },\n    chessCheckStatus: (state, actions)=> {\n      const { key } = actions.payload;\n      state[key].checkStatus = !state[key].checkStatus;\n    },\n    chessAttackResult: (state, actions)=> {\n      const { key, lessSp } = actions.payload;\n      state[key].sp -= lessSp;\n    },\n    chessMoved: (state, actions)=>{\n      const { key } = actions.payload;\n      state[key].roundMove -= 1;\n    },\n  }\n});\nexport default chess.reducer;\nexport const { \n  stageDebut, chessMove, chessSelected, chessCheckStatus, chessAttackResult, chessMoved\n} = chess.actions;","import { createSlice } from '@reduxjs/toolkit';\nconst basicCommon = {\n  x:0,\n  y:0,\n  checkStatus:false,\n  boardStatus:false,\n  debut:false,\n  roundAttack:false,\n};\nconst enemyChess = createSlice({\n  name:'enemyChess',\n  initialState:[\n    {\n      name:'Teoni',\n      cn:'手鬼',\n      hp:2000,\n      sp:100,\n      dodge:20,\n      fullValue:{\n        hp:2000,\n        sp:100\n      },\n      skill:[{ \n        name:'胡亂毆打',\n        atk:50,\n        sp:0,\n        hitfix:10\n      },{ \n        name:'你是第十四個',\n        atk:300,\n        sp:10,\n        hitfix:20\n      }],\n      ...basicCommon\n    },{\n      name:'Nomanooni',\n      cn:'沼鬼',\n      hp:1500,\n      sp:200,\n      dodge:30,\n      fullValue:{\n        hp:1500,\n        sp:200\n      },\n      skill:[{ \n        name:'爪擊',\n        atk:70,\n        sp:0,\n        hitfix:15\n      },{ \n        name:'分身攻擊',\n        atk:600,\n        sp:15,\n        hitfix:30\n      }],\n      ...basicCommon\n    }\n  ],\n  reducers:{\n    enemyStageDebut:(state, actions)=> {\n      const { isDebutChess } = actions.payload;\n      state.map((value,key)=>{\n        return isDebutChess.map(v=>{\n          if(value.name===v.get('name')){\n            return (\n              state[key].debut = true,\n              state[key].x = v.get('x'),\n              state[key].y = v.get('y')\n            );\n          }else return null;\n        })\n      })\n    },\n    enemyChessSelected: (state, actions)=>{\n      const { key } = actions.payload;\n      state[key].boardStatus = !state[key].boardStatus;\n    },\n    enemyChessCheckStatus: (state, actions)=> {\n      const { key } = actions.payload;\n      state[key].checkStatus = !state[key].checkStatus;\n    },\n    enemyChessDefense: (state, actions)=> {\n      const { key, damage } = actions.payload;\n      state[key].hp -= damage;\n    },\n    enemyChessDead: (state, actions)=> {\n      const { key } = actions.payload;\n      state[key].debut = false;\n      state[key].hp = state[key].fullValue.hp;\n      state[key].sp = state[key].fullValue.sp;\n    }\n  }\n});\nexport default enemyChess.reducer;\nexport const { enemyStageDebut, enemyChessSelected, enemyChessCheckStatus, enemyChessDefense, enemyChessDead } = enemyChess.actions;","import { createSlice } from '@reduxjs/toolkit';\nconst mapLimit = { x:20, y:15 };\nconst createTraverseLine = (traverse=0,color='')=>{\n  const list = [];\n  for(let i=0;i<mapLimit.x;i++){\n    list.push({\n      x:i,\n      y:traverse,\n      color:color,\n      alpha:0,\n      zIndex:1,\n      isInteractive:false\n    });\n  };\n  return list;\n};\nconst createStraightLine = ( method=()=>{} )=>{\n  const list = [];\n  for(let i=0;i<mapLimit.y;i++){\n    list.push(method(i,'0x383838'));\n  };\n  return list;\n};\nconst createInitialState = createStraightLine(createTraverseLine);\nconst chessMap = createSlice({\n  name:'chessMap',\n  initialState: createInitialState,\n  reducers:{\n    MoveSelect:(state, action)=>{\n      const { position, step, changeColor, alphaVal=1} = action.payload;\n      for(let i=0;i<(step+1);i++){\n        if(position.x+i<=(mapLimit.x-1)){\n          state[position.y][position.x+i].color=changeColor;\n          state[position.y][position.x+i].isInteractive=false;\n          state[position.y][position.x+i].alpha=alphaVal;\n          state[position.y][position.x+i].zIndex=1;\n        };\n        if(position.y+i<=(mapLimit.y-1)){\n          state[position.y+i][position.x].color=changeColor;\n          state[position.y+i][position.x].isInteractive=false;\n          state[position.y+i][position.x].alpha=alphaVal;\n          state[position.y+i][position.x].zIndex=1;\n        };\n        if(position.x-i>=0){\n          state[position.y][position.x-i].color=changeColor;\n          state[position.y][position.x-i].isInteractive=false;\n          state[position.y][position.x-i].alpha=alphaVal;\n          state[position.y][position.x-i].zIndex=1;\n        };\n        if(position.y-i>=0){\n          state[position.y-i][position.x].color=changeColor;\n          state[position.y-i][position.x].isInteractive=false;\n          state[position.y-i][position.x].alpha=alphaVal;\n          state[position.y-i][position.x].zIndex=1;\n        };\n      }\n    },\n    GetMove:(state, action)=>{\n      const { position, step, changeColor, currentChessPositions } = action.payload;\n      for(let i=0;i<(step+1);i++){\n        if(position.x+i<=(mapLimit.x-1)){\n          state[position.y][position.x+i].color=changeColor;\n          state[position.y][position.x+i].isInteractive=true;\n          state[position.y][position.x+i].alpha=0.5;\n          state[position.y][position.x+i].zIndex=1;\n        };\n        if(position.y+i<=(mapLimit.y-1)){\n          state[position.y+i][position.x].color=changeColor;\n          state[position.y+i][position.x].isInteractive=true;\n          state[position.y+i][position.x].alpha=0.5;\n          state[position.y+i][position.x].zIndex=1;\n          state[position.y][position.x-i].alpha=0.5;\n          state[position.y][position.x-i].zIndex=1;\n        };\n        if(position.x-i>=0){\n          state[position.y][position.x-i].color=changeColor;\n          state[position.y][position.x-i].isInteractive=true;\n        };\n        if(position.y-i>=0){\n          state[position.y-i][position.x].color=changeColor;\n          state[position.y-i][position.x].isInteractive=true;\n          state[position.y-i][position.x].alpha=0.5;\n          state[position.y-i][position.x].zIndex=1;\n        };\n      }\n      currentChessPositions.map(v=>{\n        return state[v.y][v.x].isInteractive=false;\n      });\n    },\n    GetAttack:(state, action)=>{\n      const { position, step, changeColor, currentChessPositions } = action.payload;\n      for(let i=0;i<(step+1);i++){\n        if(position.x+i<=(mapLimit.x-1)){\n          state[position.y][position.x+i].color=changeColor;\n          state[position.y][position.x+i].isInteractive=true;\n          state[position.y][position.x+i].alpha=0.5;\n          state[position.y][position.x+i].zIndex=3;\n        };\n        if(position.y+i<=(mapLimit.y-1)){\n          state[position.y+i][position.x].color=changeColor;\n          state[position.y+i][position.x].isInteractive=true;\n          state[position.y+i][position.x].alpha=0.5;\n          state[position.y+i][position.x].zIndex=3;\n        };\n        if(position.x-i>=0){\n          state[position.y][position.x-i].color=changeColor;\n          state[position.y][position.x-i].isInteractive=true;\n          state[position.y][position.x-i].alpha=0.5;\n          state[position.y][position.x-i].zIndex=3;\n        };\n        if(position.y-i>=0){\n          state[position.y-i][position.x].color=changeColor;\n          state[position.y-i][position.x].isInteractive=true;\n          state[position.y-i][position.x].alpha=0.5;\n          state[position.y-i][position.x].zIndex=3;\n        };\n      }\n      currentChessPositions.map(v=>{\n        return (\n          state[v.y][v.x].isInteractive=false,\n          state[v.y][v.x].zIndex=1\n        )\n      });\n    }\n  }\n});\nexport default chessMap.reducer;\nexport const { MoveSelect, GetMove, GetAttack } = chessMap.actions;\n","import React, {} from 'react';\nimport * as PIXI from \"pixi.js\";\nimport { Sprite } from '@inlet/react-pixi/animated';\nimport { MoveSelect } from '../../reducer/map';\nconst texture = PIXI.Texture.WHITE;\nexport const CreateCheckerboard = ({\n  reduxProps\n})=>{\n  const { \n    chess, enemyChess, chessMap, currentChess, dispatch, \n    setTipStatus, setMoveStep, setBattleInfo\n  } = reduxProps;\n  const checkMatchAttackPosition = (x,y)=>{\n    let isMatch = false;\n    enemyChess.map(v=>{\n      const checkMatch = v.debut&&(x===v.x)&&(y===v.y);\n      if(checkMatch){\n        return isMatch=true;\n      }else return null;\n    });\n    return isMatch;\n  };\n  const getCurrentEnemy = (x,y)=>{\n    let item = {};\n    enemyChess.map((v,k)=>{\n      const checkMatch = v.debut&&(x===v.x)&&(y===v.y);\n      if(checkMatch){\n        return item={...v,key:k}\n      }else return null;\n    });\n    return item;\n  };\n  return <React.Fragment>\n    {chessMap.map(value=> {\n      return value.map((v,k)=>{\n        return <Sprite\n          interactive={v.isInteractive}\n          buttonMode={v.isInteractive}\n          zIndex={v.zIndex}\n          key={k}\n          width={40}\n          height={40}\n          x={v.x*40}\n          y={v.y*40}\n          tint={v.color}\n          alpha={v.alpha}\n          texture={texture}\n          pointertap={()=>{\n            switch (currentChess.type) {\n              case \"MOVE\":\n                setTipStatus({\n                  title:'確定移動?',\n                  status:true,\n                  position:{\n                    x:v.x, y:v.y\n                  }\n                });\n                dispatch(MoveSelect({\n                  position:{ \n                    x:chess[currentChess.key].x, \n                    y:chess[currentChess.key].y,\n                  },\n                  step:chess[currentChess.key].step,\n                  changeColor:'0x06d6a0',\n                  alphaVal:0.5\n                }));\n                break;\n              case \"ATTACK\":\n                if(checkMatchAttackPosition(v.x,v.y)){\n                  const targetData = getCurrentEnemy(v.x,v.y);\n                  setBattleInfo({\n                    status:true,\n                    attacker:{ \n                      key: currentChess.key,\n                      ...chess[currentChess.key]\n                    },\n                    target:{\n                      key: targetData.key,\n                      ...targetData\n                    }\n                  });\n                  dispatch(MoveSelect({\n                    position:{ \n                      x:chess[currentChess.key].x, \n                      y:chess[currentChess.key].y,\n                    },\n                    step:chess[currentChess.key].attack,\n                    changeColor:'0x383838',\n                    alphaVal:0\n                  }));\n                }else {\n                  setMoveStep(true);\n                  dispatch(MoveSelect({\n                    position:{ \n                      x:chess[currentChess.key].x, \n                      y:chess[currentChess.key].y,\n                    },\n                    step:chess[currentChess.key].acttack,\n                    changeColor:'0x383838',\n                    alphaVal:0\n                  }));\n                };\n                break;\n              default:\n                return;\n            }; \n          }}\n        />\n      });\n    })}\n  </React.Fragment>\n};","import React from 'react';\n// import { fromJS } from 'immutable';\nimport { Graphics, Text } from '@inlet/react-pixi/animated';\nimport { chessMove, chessMoved } from \"../../reducer/chess\";\nimport { MoveSelect } from '../../reducer/map';\nimport * as PIXI from \"pixi.js\";\n\nexport const ConfirmTip = ({\n  props,\n})=> {\n  const { \n    chess,\n    currentChess,\n    tipStatus,\n    dispatch,\n    setMoveStep, \n    setTipStatus\n  } = props;\n  return <Graphics\n    x={400}\n    y={300}\n    draw={g=> {\n      g.lineStyle(1,`0xffffff`,1);\n      g.beginFill(`0x22223b`);\n      g.drawRoundedRect(-90,-50,180,100,8);\n      g.endFill();\n    }}\n  >\n    <Text\n      text={tipStatus.title}\n      anchor={0.5}\n      x={0}\n      y={-20}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 20,\n        fill:['#ffffff', '#ffffff'],\n      })}\n    />\n    <Text\n      interactive={true}\n      buttonMode={true}\n      anchor={0.5}\n      text={'確定'}\n      x={-30}\n      y={20}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 20,\n        fill:['#ffffff', '#ffffff'],\n      })}\n      pointertap={()=>{\n        switch (currentChess.type) {\n          case \"MOVE\":\n            dispatch(chessMove({\n              key: currentChess.key,\n              changeX:tipStatus.position.x,\n              changeY:tipStatus.position.y\n            }));\n            dispatch(chessMoved({\n              key: currentChess.key,\n            }));\n            dispatch(MoveSelect({\n              position:{ \n                x:chess[currentChess.key].x, \n                y:chess[currentChess.key].y,\n              },\n              step:chess[currentChess.key].step,\n              changeColor:'0x383838',\n              alphaVal:0\n            }));\n            setMoveStep(true);\n            setTipStatus(prev=>{\n              return {...prev, status:false }\n            });\n            break;\n          default:\n            return;\n        }\n      }}\n    />\n    <Text\n      interactive={true}\n      buttonMode={true}\n      anchor={0.5}\n      text={'取消'}\n      x={30}\n      y={20}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 20,\n        fill:['#ffffff', '#ffffff'],\n      })}\n      pointertap={()=>{\n        switch (currentChess.type) {\n          case \"MOVE\":\n            dispatch(MoveSelect({\n              position:{ \n                x:chess[currentChess.key].x, \n                y:chess[currentChess.key].y,\n              },\n              step:chess[currentChess.key].step,\n              changeColor:'0x383838',\n              alphaVal:0\n            }));\n            setMoveStep(true);\n            setTipStatus(prev=>{\n              return {...prev, status:false }\n            })\n            break;\n          default:\n            return;\n        }\n      }}\n    />\n  </Graphics>\n};","import { fromJS } from \"immutable\";\n\nexport const stageRule = fromJS({\n  stageOne: {\n    debutChess:[\n      { \n        name:'Tanjirou',\n        x:3,\n        y:7\n      },\n    ],\n    debutEnemyChess:[\n      {\n        name:'Teoni',\n        x:16,\n        y:7\n      },\n    ],\n    isWin: enemyList => {\n      let totalLife = 0;\n        enemyList.map(v => {\n          if(v.debut){\n            return totalLife += v.hp;\n          }return null;\n        });\n      return totalLife>0 ? false : true ;\n    },\n    isLose: chessList => {\n      let totalLife = 0;\n        chessList.map(v => {\n          if(v.debut){\n            return totalLife += v.hp;\n          }return null;\n        });\n      return totalLife>0 ? false : true ;\n    }\n  },\n  stageTwo: {\n    debutChess:[\n      { \n        name:'Tanjirou',\n        x:3,\n        y:9\n      }, { \n        name:'Nezuko',\n        x:3,\n        y:11\n      }\n    ],\n    debutEnemyChess:[\n      {\n        name:'Nomanooni',\n        x:16,\n        y:7\n      }\n    ]\n  }\n});","import React,{ useState } from 'react';\n// import { fromJS } from 'immutable';\nimport { Graphics, Text } from '@inlet/react-pixi/animated';\nimport * as PIXI from \"pixi.js\";\n// rule\nimport { stageRule } from \"../../constants/stageRule\";\n\nexport const UsualTip = ({\n  props,\n})=> {\n  const {\n    stageStatus, chess, currentChess, enemyChess,\n    usualTip, setMoveStep, setUsualTip, setCurrentChess } = props;\n    const [ textColor, setTextColor ] = useState(['#ffffff', '#ffffff']);\n  return <Graphics\n    x={400}\n    y={300}\n    draw={g=> {\n      g.lineStyle(1,`0xffffff`,1);\n      g.beginFill(`0x22223b`);\n      g.drawRoundedRect(-90,-50,180,100,8);\n      g.endFill();\n    }}\n  >\n    <Text\n      text={usualTip.title}\n      anchor={0.5}\n      x={0}\n      y={-20}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 20,\n        fill: textColor,\n      })}\n    />\n    <Text\n      interactive={true}\n      buttonMode={true}\n      anchor={0.5}\n      text={'確定'}\n      x={0}\n      y={20}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 20,\n        fill:['#ffffff', '#ffffff'],\n      })}\n      pointertap={()=>{\n        switch (currentChess.type) {\n          case \"ATTACK\":\n            const checkWin = stageRule.getIn([stageStatus,'isWin']);\n            const checkLose = stageRule.getIn([stageStatus,'isLose']);\n            if(checkWin(enemyChess)){\n              setTextColor(['#ffffff', '#06d6a0']);\n              setCurrentChess({\n                key:0,\n                type:\"CHECKWIN\"\n              });\n              setUsualTip({\n                title:`作戰獲勝!`,\n                status:true,\n              });\n            }else if(checkLose(chess)){\n              setTextColor(['#dc2f02', '#d00000']);\n              setCurrentChess({\n                key:0,\n                type:\"CHECKLOSE\"\n              });\n              setUsualTip({\n                title:`作戰失敗!`,\n                status:true,\n              });\n            }else {\n              setMoveStep(true);\n              setUsualTip({\n                title:``,\n                status:false,\n              });\n            }\n            break;\n          case \"CHECKWIN\":\n            setMoveStep(true);\n            setTextColor(['#ffffff', '#ffffff']);\n            setUsualTip({\n              title:``,\n              status:false,\n            });\n            break;\n          case \"CHECKLOSE\":\n            setMoveStep(true);\n            setTextColor(['#ffffff', '#ffffff']);\n            setUsualTip({\n              title:``,\n              status:false,\n            });\n            break;\n          default:\n            return;\n        }\n      }}\n    />\n  </Graphics>\n};","import * as PIXI from \"pixi.js\";\nexport const loader = new PIXI.Loader();\nconst hostname = window.location.hostname==='localhost'?'./Demon-Slayer/':'./';\n\nloader\n  .add('Tanjirou-head-default',`${hostname}imgs/Tanjirou/head-default.png`)\n  .add('Tanjirou-fight-typeA',`${hostname}imgs/Tanjirou/fight-typeA.png`)\n  .add('Tanjirou-fight-typeB',`${hostname}imgs/Tanjirou/fight-typeB.png`)\n  .add('Nezuko-head-default',`${hostname}imgs/Nezuko/head-default.jpg`)\n  .add('Nezuko-fight',`${hostname}imgs/Nezuko/fight.png`)\n  .add('Inosuke-head-default',`${hostname}imgs/Inosuke/head-default.jpg`)\n  .add('Inosuke-fight',`${hostname}imgs/Inosuke/fight.png`)\n  .add('Teoni-head-default',`${hostname}imgs/Teoni/head-default.png`)\n  .add('Teoni-fight',`${hostname}imgs/Teoni/fight.png`)\n  .add('Nomanooni-head-default',`${hostname}imgs/Nomanooni/head-default.jpg`)\n  .add('Nomanooni-fight',`${hostname}imgs/Nomanooni/fight.png`)\n  .add('stageOne-BG',`${hostname}imgs/background/stage1-background.png`)\n  .add('stageOne-main-BG',`${hostname}imgs/background/stage1-main-background.jpg`)\n  .load();\n","export const ProbabilityCount = (\n  attackerHit,\n  targetDodge\n)=>{\n  const basicHit = 100;\n  const hitProbability = basicHit + attackerHit - targetDodge;\n  const checkRamdom = Math.round(Math.random()*100 + 1);\n  if(hitProbability < checkRamdom) {\n    return false\n  }else return true;\n};","import React,{ useState } from 'react';\nimport { Container, Sprite, Graphics, Text } from '@inlet/react-pixi/animated';\nimport { loader } from '../DataLoader';\nimport * as PIXI from \"pixi.js\";\nimport { ProbabilityCount } from \"../Common/ProbabilityCount\";\nimport { chessAttackResult, chessMoved } from \"../../reducer/chess\";\nimport { enemyChessDefense } from \"../../reducer/enemyChess\";\n\nexport const BattleBoard = ({ props })=>{\n  const { \n    battleInfo, setMoveStep, setBattleInfo, setAnimeShow, dispatch\n  } = props;\n  const [ atkSelectd, setAtkSelectd ] = useState({\n    key:0,\n  });\n  const CreateAttackerInfo = ({ pX=0, pY=0, data })=>{\n    return <Container x={pX} y={pY} sortableChildren={true}>\n      <Text\n        text={'攻'}\n        x={220}\n        y={0}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 30,\n          fill:['#ffffff', '#00ff99'],\n        })}\n      />\n      <Text\n        text={data.cn}\n        x={60}\n        y={-3}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 16,\n          fill:'#ffffff',\n        })}\n      />\n      <Text\n        text={`${data.hp} / ${data.fullValue.hp}`}\n        x={60}\n        y={17}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 16,\n          fill:'#ff6b6b',\n        })}\n      />\n      <Text\n        text={`${data.sp} / ${data.fullValue.sp}`}\n        x={60}\n        y={34}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 16,\n          fill:'#0466c8',\n        })}\n      />\n      <Sprite\n        width={50}\n        height={50}\n        x={0}\n        y={0}\n        image={loader.resources[`${data.name}-head-default`].data}\n      />\n      <Text\n        text={`招式選擇：`}\n        x={0}\n        y={80}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 16,\n          fill:'#ffffff',\n        })}\n      />\n      <Graphics\n        x={0}\n        y={115}\n        zIndex={1}\n        draw={g=> {\n          g.lineStyle(1,`0xffffff`,1);\n          g.beginFill(`0x0f0f1b`);\n          g.drawRoundedRect(0,0,240,180,8);\n          g.endFill();\n        }}\n      />\n      {data.skill.map((value,key)=>{\n        const skillCanUse = data.sp - value.sp >= 0;\n        return <React.Fragment key={key}>\n          <Text\n            zIndex={2}\n            interactive={skillCanUse}\n            buttonMode={true}\n            text={value.name}\n            x={20}\n            y={130+(key*24)}\n            style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n              fontSize: 16,\n              fill: ((atkSelectd.key===key)&&skillCanUse) ? ['#ffffff', '#00ff99'] :  \n                skillCanUse ? '#ffffff' : '#8d99ae',\n              fontWeight: (atkSelectd.key===key) ? 600 : 300\n            })}\n            pointertap={()=>setAtkSelectd({\n              key: key\n            })}\n          />\n        </React.Fragment>\n      })}\n    </Container>\n  };\n  const CreateTargetInfo = ({ pX=0, pY=0, data })=>{\n    return <Container x={pX} y={pY} sortableChildren={true}>\n      <Text\n        text={'防'}\n        x={0}\n        y={0}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 30,\n          fill:['#ffffff', '#ee6c4d'],\n        })}\n      />\n      <Text\n        text={data.cn}\n        anchor={{x:1,y:0}}\n        x={190}\n        y={-3}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 16,\n          fill:'#ffffff',\n        })}\n      />\n      <Text\n        text={`${data.hp} / ${data.fullValue.hp}`}\n        anchor={{x:1,y:0}}\n        x={190}\n        y={17}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 16,\n          fill:'#ff6b6b',\n        })}\n      />\n      <Text\n        text={`${data.sp} / ${data.fullValue.sp}`}\n        anchor={{x:1,y:0}}\n        x={190}\n        y={34}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 16,\n          fill:'#0466c8',\n        })}\n      />\n      <Sprite\n        width={50}\n        height={50}\n        x={200}\n        y={0}\n        image={loader.resources[`${data.name}-head-default`].data}\n      />\n    </Container>\n  };\n  const ForecastInfo = ({ pX, pY, data })=>{\n    return <Container x={pX} y={pY} sortableChildren={true}>\n      <Graphics\n        x={0}\n        y={0}\n        zIndex={1}\n        draw={g=> {\n          g.lineStyle(1,`0x00ff99`,1);\n          g.beginFill(`0x0f0f1b`);\n          g.drawRoundedRect(0,0,265,215,8);\n          g.endFill();\n        }}\n      />\n      <Text\n        text={`招式：`}\n        zIndex={2}\n        x={20}\n        y={20}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 20,\n          fill:'#ffffff'\n        })}\n      />\n      <Text\n        text={`${data.attacker.skill[atkSelectd.key].name}`}\n        zIndex={2}\n        x={80}\n        y={22}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 16,\n          fill:'#00ff99'\n        })}\n      />\n      <Text\n        text={`攻擊力：`}\n        zIndex={2}\n        x={20}\n        y={50}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 20,\n          fill:'#ffffff'\n        })}\n      />\n      <Text\n        text={`${data.attacker.skill[atkSelectd.key].atk}`}\n        zIndex={2}\n        x={100}\n        y={52}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 18,\n          fill:'#fdc500'\n        })}\n      />\n      <Text\n        text={`命中率：`}\n        zIndex={2}\n        x={20}\n        y={80}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 20,\n          fill:'#ffffff'\n        })}\n      />\n      <Text\n        text={`${\n          100 +\n          data.attacker.skill[atkSelectd.key].hitfix -\n          data.target.dodge\n        }%`}\n        zIndex={2}\n        x={100}\n        y={82}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 18,\n          fill:'#ffffff'\n        })}\n      />\n      <Text\n        text={`消耗：`}\n        zIndex={2}\n        x={20}\n        y={110}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 20,\n          fill:'#ffffff'\n        })}\n      />\n      <Text\n        text={`${data.attacker.skill[atkSelectd.key].sp}`}\n        zIndex={2}\n        x={80}\n        y={110}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 18,\n          fill:'#0466c8'\n        })}\n      />\n    </Container>\n  };\n  return <Graphics\n    x={400}\n    y={300}\n    zIndex={99}\n    draw={g=> {\n      g.lineStyle(1,`0xffffff`,1);\n      g.beginFill(`0x22223b`);\n      g.drawRoundedRect(-300,-200,600,400,8);\n      g.endFill();\n    }}\n  >\n    <CreateAttackerInfo\n      pX={-270}\n      pY={-180}\n      data={battleInfo.attacker}\n    />\n    <CreateTargetInfo\n      pX={20}\n      pY={-180}\n      data={battleInfo.target}\n    />\n    <ForecastInfo\n      pX={0}\n      pY={-100}\n      data={battleInfo}\n    />\n    <Text\n      interactive={true}\n      buttonMode={true}\n      text={'攻擊'}\n      anchor={0.5}\n      x={180}\n      y={160}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 20,\n        fill:'#ffffff',\n      })}\n      pointertap={()=>{\n        const isHit = ProbabilityCount(\n          battleInfo.attacker.skill[atkSelectd.key].hitfix,\n          battleInfo.target.dodge\n        );\n        dispatch(chessAttackResult({\n          key: battleInfo.attacker.key,\n          lessSp: battleInfo.attacker.skill[atkSelectd.key].sp\n        }));\n        dispatch(chessMoved({\n          key: battleInfo.attacker.key,\n        }));\n        if(isHit){\n          dispatch(enemyChessDefense({\n            key: battleInfo.target.key,\n            damage: battleInfo.attacker.skill[atkSelectd.key].atk\n          }));\n        };\n        setAnimeShow({\n          status:true,\n          type:'USER',\n          isHit: isHit,\n          attacker:{ \n            key:battleInfo.attacker.key,\n            skill:battleInfo.attacker.skill[atkSelectd.key],\n            prevSP:battleInfo.attacker.sp\n          },\n          target:{ \n            key:battleInfo.target.key,\n            isHit:isHit,\n            prevLife:battleInfo.target.hp\n          }\n        });\n        setBattleInfo({\n          status:false,\n          attacker:{ key:'' },\n          target:{ key:'' }\n        });\n      }}\n    />\n    <Text\n      interactive={true}\n      buttonMode={true}\n      text={'取消'}\n      anchor={0.5}\n      x={240}\n      y={160}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 20,\n        fill:'#ffffff',\n      })}\n      pointertap={()=>{\n        setMoveStep(true);\n        setBattleInfo({\n          status:false,\n          attacker:{ key:'' },\n          target:{ key:'' }\n        })\n      }}\n    />\n  </Graphics>\n};","import React from 'react';\nimport { Sprite } from '@inlet/react-pixi/animated';\nimport { Spring } from 'react-spring/renderprops';\nimport { loader } from '../DataLoader';\n\nexport const AnimeShowBG = ({\n  props,\n})=>{\n  const { stageStatus, BGstatus, BGprop, SkBGprop, \n    setSkBGpops, setBGpops } = props;\n  return <>\n    {BGstatus.type==='STOP'&&<Sprite\n      x={-400}\n      y={-100}\n      zIndex={1}\n      width={1600}\n      height={500}\n      anchor={0.5}\n      image={loader.resources[`${stageStatus}-BG`].data}\n    />}\n    {BGstatus.type==='STANDBY'&&<Spring\n      from={{ x:-400, y:-100 }}\n      to={{ x: BGprop.toX, y:-100 }}\n      config={{ duration: BGprop.duration }}\n      onRest={()=>{\n        if(BGprop.toX===-400){\n          setBGpops({\n            toX:400,\n            duration: 20000\n          });\n        }else {\n          setBGpops({\n            toX:-400,\n            duration:-1000\n          });\n        };\n      }}\n    >\n      {props => \n        <Sprite\n          zIndex={1}\n          width={1600}\n          height={500}\n          anchor={0.5}\n          image={loader.resources[`${stageStatus}-BG`].data}\n          {...props}\n      />}\n    </Spring>}\n    {BGstatus.type==='SKILL'&&<Spring\n      from={{ x:-400, y:-100 }}\n      to={{ x: SkBGprop.toX, y:-100 }}\n      config={{ duration: SkBGprop.duration }}\n      onRest={()=>{\n        if(SkBGprop.toX===-400){\n          setSkBGpops({\n            toX:400,\n            duration: 500\n          });\n        }else {\n          setSkBGpops({\n            toX:-400,\n            duration:-1000\n          });\n        };\n      }}\n    >\n      {props => \n        <Sprite\n          zIndex={1}\n          width={1600}\n          height={500}\n          anchor={0.5}\n          image={loader.resources[`${stageStatus}-BG`].data}\n          {...props}\n      />}\n    </Spring>}\n  </>\n};","import React,{ useState, useEffect } from \"react\";\nimport { loader } from '../../components/DataLoader';\nimport { Spring } from 'react-spring/renderprops';\nimport { Sprite } from '@inlet/react-pixi/animated';\n\nexport const TanjirouSkill = ({\n  skillName,\n  attackerName,\n  isHit,\n  resultLife,\n  BGstatus,\n  setBGstatus,\n  setAnimeIsDone\n})=>{\n  const [ position, setPosition ] = useState({ \n    x:0, y:0, tint:0xffffff, alpha:1, mass:1, friction:20, tension:170 });\n  const steps = ({\n    skillName='',\n    isHit=false,\n    resultLife=0,\n    BGstatus={},\n    setPosition=null,\n    setBGstatus=null,\n    setAnimeIsDone=null\n  }) => {\n    // 技能動畫:\n    switch (skillName) {\n      default:\n        setPosition(prev=>{return{ ...prev, x:550,y:50,tension:100 }});\n        const start = ()=>{\n          setPosition(prev=>{return{ ...prev, x:250, y:50, tension:100 }});\n          // callback\n          return step1();\n        };\n        const step1 = ()=>{\n          const timeout = setTimeout(() => {\n            setPosition(prev=>{return{ ...prev, x:0, y:50, tension:100 }});\n            setBGstatus({ type:'SKILL', defence:false });\n            // callback\n            step2();\n          },3000);\n          return timeout;\n        };\n        const step2 = ()=>{\n          const timeout = setTimeout(() => {\n            setBGstatus({ type:'STOP', defence:true });\n            // callback\n            step3();\n          },3000);\n          return timeout;\n        };\n        const step3 = ()=>{\n          const timeout = setTimeout(() => {\n            setPosition(prev=>{return{ ...prev, x:-250, y:50, tension:1000 }});\n            // callback\n            step4();\n          },1000);\n          return timeout;\n        };\n        const step4 = ()=>{\n          const timeout = setTimeout(() => {\n            setPosition(prev=>{return{ ...prev, x:550, y:50, tension:50 }});\n          },3000);\n          return timeout;\n        };\n        return start();\n    }\n  };\n  // def\n  useEffect(()=>{\n    if(BGstatus.defence && skillName==='防禦'){\n      const timeout = steps({\n        skillName:skillName,\n        isHit:isHit,\n        resultLife:resultLife,\n        setAnimeIsDone:setAnimeIsDone,\n        setPosition:setPosition,\n      });\n      return ()=> clearTimeout(timeout);\n    };\n  },[ BGstatus.defence, skillName, isHit, resultLife, setAnimeIsDone ])\n  // atk\n  useEffect(()=>{\n    if(skillName==='防禦'){ \n      setPosition(prev=>{return{ ...prev, x:-600, y:10 }});\n      return;\n    };\n    const timeout = steps({\n      skillName:skillName,\n      setBGstatus:setBGstatus,\n      setPosition:setPosition,\n    });\n    return ()=> clearTimeout(timeout);\n  },[ skillName, setBGstatus ]);\n\n  // 展示用人物造型:\n  switch (skillName) {\n    case `斬擊`:\n      return <Spring\n          from={{ x:550, y:50 }}\n          to={{ x:position.x, y:position.y }}\n          config={{ \n            mass:1,\n            tension: position.tension,\n            friction:20,\n          }}\n        >\n        {props => \n          <Sprite\n            zIndex={2}\n            width={200}\n            height={200}\n            anchor={0.5}\n            image={loader.resources[`${attackerName}-fight-typeA`].data}\n            {...props}\n          />}\n        </Spring>\n    default:\n      return <Spring\n        from={{ x:550, y:50 }}\n        to={{ x:position.x, y:position.y }}\n        config={{ \n          mass:1,\n          tension: position.tension,\n          friction:20,\n        }}\n      >\n      {props => \n        <Sprite\n          zIndex={2}\n          width={200}\n          height={200}\n          anchor={0.5}\n          image={loader.resources[`${attackerName}-fight-typeB`].data}\n          {...props}\n        />}\n      </Spring>\n  };\n};","import React from \"react\";\nimport { TanjirouSkill } from \"./TanjirouSkill\";\n\nexport const ChessSkillShow = ({\n  attacker={},\n  skill={},\n  BGstatus,\n  isHit=false,\n  resultLife=0,\n  setBGstatus,\n  setAnimeIsDone\n})=>{\n  const defualtprops = {\n    skillName: skill.name,\n    attackerName: attacker.name,\n    isHit: isHit,\n    resultLife: resultLife,\n    BGstatus: BGstatus,\n    setBGstatus: setBGstatus,\n    setAnimeIsDone: setAnimeIsDone\n  }\n  switch (attacker.name) {\n    case `Tanjirou`:\n      return <TanjirouSkill {...defualtprops}/>\n    default:\n      return;\n  };\n};\n\n","import React,{ useState, useEffect } from \"react\";\nimport { loader } from '../../components/DataLoader';\nimport { Spring } from 'react-spring/renderprops';\nimport { Sprite } from '@inlet/react-pixi/animated';\n\nexport const TeoniSkill = ({\n  skillName,\n  attackerName,\n  isHit,\n  resultLife,\n  BGstatus,\n  setBGstatus,\n  setAnimeIsDone\n})=>{\n  const [ position, setPosition ] = useState({ \n    x:0, y:0, tint:0xffffff, alpha:1, mass:1, friction:20, tension:170 });\n  const steps = ({\n    skillName='',\n    isHit=false,\n    resultLife=0,\n    BGstatus={},\n    setPosition=null,\n    setBGstatus=null,\n    setAnimeIsDone=null\n  }) => {\n    switch (skillName) {\n      case '防禦':\n        setPosition(prev=>{return{ ...prev, x:-200, tension:150 }});\n        const start = ()=>{\n          if(isHit){\n            return isHitStep();\n          }else return isDodge();\n        };\n        const isHitStep = ()=> {\n          const timeout = setTimeout(() => {\n            setPosition(prev=>{return{ ...prev, x:-235, y:20, mass:2, \n              friction:5, tension:1000, tint:0xd00000}});\n            // callback\n            if(resultLife<=0){\n              return isDead();\n            }else return next();\n          },1200);\n          return timeout;\n        }\n        const isDodge = ()=>{\n          const timeout = setTimeout(() => {\n            setPosition(prev=>{return{ ...prev, x:-235, y:-10 }});\n            // callback\n            next();\n          },1200);\n          return timeout;\n        };\n        const isDead = ()=> {\n          const timeout = setTimeout(() => {\n            setPosition(prev=>{return{ ...prev, x:-200, y:10, \n              friction:2, tint:0x03071e\n            }});\n            // callback\n            isDeadStep2();\n          },5000);\n          return timeout;\n        };\n        const isDeadStep2 = ()=>{\n          const timeout = setTimeout(() => {\n            setPosition(prev=>{return { ...prev, alpha:0 }});\n            // callback\n            end();\n          },3000);\n          return timeout;\n        }\n        const next = ()=>{\n          const timeout = setTimeout(() => {\n            setPosition(prev=>{return{ ...prev, x:-200, y:10, mass:1, \n              friction:20, tension:170, tint:0xffffff}});\n            // callback\n            end();\n          },5000);\n          return timeout;\n        }\n        const end = ()=> {\n          const timeout = setTimeout(() => {\n            // callback\n            setAnimeIsDone(true);\n          },3000);\n          return timeout;\n        };\n        return start();\n      default:\n        break;\n    }\n  };\n  // def\n  useEffect(()=>{\n    if(BGstatus.defence && skillName==='防禦'){\n      const timeout = steps({\n        skillName:skillName,\n        isHit:isHit,\n        resultLife:resultLife,\n        setAnimeIsDone:setAnimeIsDone,\n        setPosition:setPosition,\n      });\n      return ()=> clearTimeout(timeout);\n    };\n  },[ BGstatus.defence, skillName, isHit, resultLife, setAnimeIsDone ])\n  // atk\n  useEffect(()=>{\n    if(skillName==='防禦'){ \n      setPosition(prev=>{return{ ...prev, x:-600, y:10 }});\n      return;\n    };\n    const timeout = steps({\n      skillName:skillName,\n      setBGstatus:setBGstatus,\n      setPosition:setPosition,\n    });\n    return ()=> clearTimeout(timeout);\n  },[ skillName, setBGstatus ]);\n  switch (skillName) {\n    case '防禦':\n      return <Spring\n        from={{ x:-600, y:10 }}\n        to={{ x:position.x, y:position.y }}\n        config={{ \n          mass: position.mass,\n          tension: position.tension,\n          friction: position.friction,\n        }}\n      >\n      {props => \n        <Sprite\n          zIndex={2}\n          width={300}\n          height={300}\n          anchor={0.5}\n          alpha={position.alpha}\n          tint={position.tint}\n          image={loader.resources[`${attackerName}-fight`].data}\n          {...props}\n        />}\n      </Spring>\n    default:\n      return <Spring\n        from={{ x:0, y:50 }}\n        to={{ x:position.x, y:position.y }}\n        config={{ \n          mass:1,\n          tension: position.tension,\n          friction:20,\n        }}\n      >\n      {props => \n        <Sprite\n          zIndex={2}\n          width={300}\n          height={300}\n          anchor={0.5}\n          image={loader.resources[`${attackerName}-fight`].data}\n          {...props}\n        />}\n      </Spring>\n    \n  }\n};","import React from \"react\";\nimport { TeoniSkill } from \"./TeoniSkill\";\nexport const EnemyChessSkillShow = ({\n  attacker={},\n  skill={},\n  BGstatus,\n  isHit=false,\n  resultLife=0,\n  setBGstatus,\n  setAnimeIsDone\n})=>{\n  const defualtprops = {\n    skillName: skill.name,\n    attackerName: attacker.name,\n    isHit: isHit,\n    resultLife: resultLife,\n    BGstatus: BGstatus,\n    setBGstatus: setBGstatus,\n    setAnimeIsDone: setAnimeIsDone\n  }\n  switch (attacker.name) {\n    case `Teoni`:\n      return <TeoniSkill {...defualtprops}/>\n    default:\n      return;\n  };\n};\n","import React,{ useState, useEffect } from 'react';\nimport { Container, Sprite, Graphics, Text } from '@inlet/react-pixi/animated';\nimport { loader } from '../DataLoader';\nimport * as PIXI from \"pixi.js\";\nimport { enemyChessDead } from \"../../reducer/enemyChess\";\n// bg\nimport { AnimeShowBG } from \"./AinmeShowBG\";\n// skill\nimport { ChessSkillShow } from \"../../constants/ChessSkillShow/Index\";\nimport { EnemyChessSkillShow } from \"../../constants/EnemyChessSkillShow/Index\";\n\nexport const BattleAnimeShow = ({\n  props\n}) =>{\n  const { stageStatus, animeShow, chess, enemyChess, \n    setMoveStep, setAnimeShow, setUsualTip, dispatch } = props;\n  const { target } = animeShow;\n  const [ targetHp, setTargetHp ] = useState(target.prevLife);\n  // TopBar\n  const TopBar = ({\n    attacker={},\n    target={},\n  })=> {\n    return <Graphics \n      x={-400}\n      y={-300}\n      zIndex={98}\n      draw={g=> {\n        g.beginFill(`0x000f23`);\n        g.drawRoundedRect(0,0,800,80,0);\n        g.endFill();\n      }}\n    >\n      <Container sortableChildren={true}>\n        <Graphics\n          x={370}\n          y={40}\n          draw={g=> {\n            g.beginFill(`0x364958`);\n            g.drawRoundedRect(-21,-21,42,42,50);\n            g.endFill();\n          }}\n        >\n          <Text \n            text={`守`} \n            x={0} y={0}\n            anchor={0.5}\n            style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n              fontSize: 24,\n              fill:'#ffffff',\n            })}/>\n        </Graphics>\n        <Graphics\n          x={420}\n          y={40}\n          draw={g=> {\n            g.beginFill(`0xfe7f2d`);\n            g.drawRoundedRect(-21,-21,42,42,50);\n            g.endFill();\n          }}\n        >\n          <Text \n            text={`攻`} \n            x={0} y={0}\n            anchor={0.5}\n            style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n              fontSize: 24,\n              fill:'#ffffff',\n            })}/>\n        </Graphics>\n        {/* target */}\n        <Sprite\n          width={50}\n          height={50}\n          x={50}\n          y={15}\n          image={loader.resources[`${target.name}-head-default`].data}\n        />\n        <Text \n          text={`${targetHp} / ${target.fullValue.hp}`}\n          anchor={{x:1,y:0}} \n          x={320} y={10}\n          style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n            fontSize: 18,\n            fill:'#e71d36',\n          })}/>\n        <Graphics\n          x={320} y={35}\n          zIndex={1}\n          draw={g=> {\n            g.beginFill(`0x333533`);\n            g.drawRoundedRect(0,0,-200,10,0);\n            g.endFill();\n          }}\n        />\n        <Graphics\n          x={320} y={35}\n          zIndex={2}\n          draw={g=> {\n            g.beginFill(`0xe71d36`);\n            g.drawRoundedRect(0,0,-200,10,0);\n            g.endFill();\n          }}\n        />\n        {/* attacker */}\n        <Sprite\n          width={50}\n          height={50}\n          x={690}\n          y={15}\n          image={loader.resources[`${attacker.name}-head-default`].data}\n        />\n        <Text \n          text={`${attacker.hp} / ${attacker.fullValue.hp}`}\n          anchor={{x:1,y:0}} \n          x={670} y={10}\n          style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n            fontSize: 18,\n            fill:'#e71d36',\n          })}/>\n        <Graphics\n          x={670} y={35}\n          zIndex={1}\n          draw={g=> {\n            g.beginFill(`0x333533`);\n            g.drawRoundedRect(0,0,-200,10,0);\n            g.endFill();\n          }}\n        />\n        <Graphics\n          x={670} y={35}\n          zIndex={2}\n          draw={g=> {\n            g.beginFill(`0xe71d36`);\n            g.drawRoundedRect(0,0,-200,10,0);\n            g.endFill();\n          }}\n        />\n      </Container>\n    </Graphics>\n  };\n  // Bottombar\n  const Bottombar = ()=> {\n    return <Graphics \n      x={-400}\n      y={150}\n      zIndex={98}\n      draw={g=> {\n        g.beginFill(`0x000f23`);\n        g.drawRoundedRect(0,0,800,150,0);\n        g.endFill();\n      }}\n    ></Graphics>\n  };\n  // CreateContent\n  const CreateContent = ()=>{\n    const [ BGstatus, setBGstatus ] = useState({ \n      type:'STANDBY',\n      defence: false\n    });\n    const [ BGprop, setBGpops ] = useState({ toX:400, duration: 20000 });\n    const [ SkBGprop, setSkBGpops ] = useState({ toX:400, duration: 500 });\n    const [ animeIsDone, setAnimeIsDone ] = useState(false);\n    //  關閉動畫判斷\n    useEffect(()=>{\n      if(!animeIsDone){ return };\n      setAnimeShow({\n        status:false,\n        type:'',\n        isHit:false,\n        attacker:{ key:'', skill:{}, prevSP:0 },\n        target:{ key:'', isHit:false, prevLife:0 }\n      });\n      // result check line\n      if(animeShow.type===\"USER\" &&\n        enemyChess[target.key].hp <= 0\n      ){\n        dispatch(enemyChessDead({ key:target.key }));\n        setUsualTip({\n          title:`已擊敗 ${enemyChess[target.key].cn}!`,\n          status:true,\n        });\n      }else {\n        setMoveStep(true);\n      };\n    },[ animeIsDone ])\n    return <Container sortableChildren={true}>\n      <AnimeShowBG\n        props={{stageStatus, BGstatus, BGprop, SkBGprop, \n          setBGpops, setSkBGpops}}\n      />\n      {animeShow.type===\"USER\"?\n        <TopBar\n          attacker={chess[typeof(animeShow.attacker.key)!=='number'?0:animeShow.attacker.key]}\n          target={enemyChess[typeof(animeShow.target.key)!=='number'?0:animeShow.target.key]}\n        />:\n        <TopBar\n          attacker={enemyChess[typeof(animeShow.target.key)!=='number'?0:animeShow.target.key]}\n          target={chess[typeof(animeShow.attacker.key)!=='number'?0:animeShow.attacker.key]}\n        />\n      }\n      {animeShow.type===\"USER\"?\n        <>\n          <EnemyChessSkillShow\n            attacker={enemyChess[typeof(animeShow.target.key)!=='number'?0:animeShow.target.key]}\n            skill={{ name:'防禦' }}\n            BGstatus={BGstatus}\n            isHit={animeShow.isHit}\n            resultLife={\n              target.prevLife -\n              animeShow.attacker.skill.atk \n            }\n            setBGstatus={setBGstatus}\n            setAnimeIsDone={setAnimeIsDone}\n          />\n          <ChessSkillShow\n            attacker={chess[typeof(animeShow.attacker.key)!=='number'?0:animeShow.attacker.key]}\n            skill={animeShow.attacker.skill}\n            BGstatus={BGstatus}\n            setBGstatus={setBGstatus}\n            setAnimeIsDone={setAnimeIsDone}\n          />\n        </>:\n        <>\n         <ChessSkillShow\n            attacker={chess[typeof(animeShow.target.key)!=='number'?0:animeShow.target.key]}\n            skill={{ name:'防禦' }}\n            BGstatus={BGstatus}\n            isHit={animeShow.isHit}\n            resultLife={\n              target.prevLife -\n              animeShow.attacker.skill.atk \n            }\n            setBGstatus={setBGstatus}\n            setAnimeIsDone={setAnimeIsDone}\n         />\n         <EnemyChessSkillShow\n          attacker={enemyChess[typeof(animeShow.attacker.key)!=='number'?0:animeShow.attacker.key]}\n          skill={animeShow.attacker.skill}\n          BGstatus={BGstatus}\n          setBGstatus={setBGstatus}\n          setAnimeIsDone={setAnimeIsDone}\n         />\n       </>}\n      <Bottombar/>\n      <Graphics\n        zIndex={99}\n        interactive={true}\n        buttonMode={true}\n        x={315}\n        y={255}\n        draw={g=> {\n          g.beginFill(`0x586f7c`);\n          g.drawRoundedRect(-6,-3,75,30,6);\n          g.endFill();\n        }}\n        pointertap={()=>{\n          setAnimeShow({\n            status:false,\n            type:'',\n            isHit:false,\n            attacker:{ key:'', skill:{}, prevSP:0 },\n            target:{ key:'', isHit:false, prevLife:0 }\n          });\n          // result check line\n          if(animeShow.type===\"USER\" &&\n            enemyChess[target.key].hp <= 0\n          ){\n            dispatch(enemyChessDead({ key:target.key }));\n            setUsualTip({\n              title:`已擊敗 ${enemyChess[target.key].cn}!`,\n              status:true,\n            });\n          }else {\n            setMoveStep(true);\n          };\n        }}\n      >\n        <Text text={`戰鬥 off`} x={0} y={0}\n          style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n            fontSize: 18,\n            fill:'#c0fdff',\n          })}\n        />\n      </Graphics>\n    </Container>\n  };\n  return <Graphics\n    x={400}\n    y={300}\n    zIndex={99}\n    draw={g=> {\n      g.beginFill(`0x011627`);\n      g.drawRoundedRect(-400,-300,800,600,0);\n      g.endFill();\n    }}\n  >\n    <CreateContent/>\n  </Graphics>\n};","import React,{ useState } from 'react';\nimport { fromJS } from 'immutable';\nimport { Graphics, Text } from '@inlet/react-pixi/animated';\nimport { GetMove, GetAttack } from '../../reducer/map';\nimport { chessSelected, chessCheckStatus } from \"../../reducer/chess\";\nimport * as PIXI from \"pixi.js\";\n\nexport const ChessUIBoard = ({\n  ChessData,\n  ChessVal,\n  ChessKey,\n  EnemyChessData,\n  positionX,\n  positionY,\n  setCurrentChess,\n  setMoveStep,\n  dispatch\n})=> {\n  const specialPosition = {\n    x: 720,\n    y: 490\n  };\n  const forMoveArray = [];\n  const forAttackArray = [];\n  const [textInforArray, setTextInforArray] = useState(fromJS([{\n      id:1, \n      title:\"移動\",\n      textColor:['#ffffff', '#ffffff']\n    },{ \n      id:2,\n      title:\"攻擊\",\n      textColor:['#ffffff', '#ffffff']\n    },{ \n      id:3,\n      title:\"狀態\",\n      textColor:['#ffffff', '#ffffff']\n    },{ \n      id:4,\n      title:\"返回\",\n      textColor:['#ffffff', '#ffffff']\n  }]));\n  ChessData.map((v)=>{\n    return (\n      forMoveArray.push({ x:v.x, y:v.y }),\n      forAttackArray.push({ x:v.x, y:v.y })\n    );\n  });\n  EnemyChessData.map((v)=>{\n    return forMoveArray.push({ x:v.x, y:v.y });\n  });\n  const compareAttack = (\n    chessX,\n    chessY,\n    chessAtk\n  )=>{\n    let isAttack = false;\n    const isDebutEnemy = EnemyChessData.filter(v=>v.debut);\n    const limitPosition = { x:19, y:14 };\n    const positionRange = [];\n    for(let i=0; i < chessAtk; i++){\n      const getaddX = (chessX+(i+1)>=limitPosition.x) ? limitPosition.x : chessX+(i+1);\n      const getaddY = (chessY+(i+1)>=limitPosition.y) ? limitPosition.y : chessY+(i+1);\n      const getlessX = (chessX-(i+1)<=0) ? 0 : chessX-(i+1);\n      const getlessY = (chessY-(i+1)<=0) ? 0 : chessY-(i+1);\n      positionRange.push(\n        { x:getaddX, y:chessY },\n        { x:getlessX, y:chessY },\n        { x:chessX, y:getaddY },\n        { x:chessX, y:getlessY }\n      );\n    };\n    isDebutEnemy.map(val=>{\n      return positionRange.map(v=>{\n        if(val.x===v.x&&val.y===v.y){\n          return isAttack = true;\n        }else return null\n      })\n    });\n    return isAttack;\n  };\n  const compareUsed = (\n    chessX,\n    chessY,\n    checkType\n  )=>{\n    let isUnused = false;\n    const isDebutChess = ChessData.filter(v=>v.debut);\n    isDebutChess.map(val=>{\n      if(val.x===chessX&&val.y===chessY){\n        switch (checkType) {\n          case 'MOVE':\n          case 'ATTACK':\n            const moved = val.roundMove>0;\n            return isUnused = moved;\n          default:\n            return true;\n        };\n      }else return null;\n    });\n    return isUnused;\n  };\n  const CreateText = ({ noop })=>{\n    const isAttack = compareAttack(ChessVal.x,ChessVal.y,ChessVal.attack);\n    return textInforArray.map((val,key)=>{\n      const fetchInteractive = ()=>{\n        switch (val.get('id')) {\n          case 1:\n            return compareUsed(ChessVal.x,ChessVal.y,'MOVE');\n          case 2:\n            const result = isAttack && compareUsed(ChessVal.x,ChessVal.y,'ATTACK');\n            return result;\n          default:\n            return true;\n        };\n      }\n      return <Text\n        key={key}\n        interactive={fetchInteractive()}\n        buttonMode={true}\n        text={val.get('title')}\n        x={10}\n        y={5+(25*key)}\n        style={new PIXI.TextStyle({\n          fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 20,\n          fill:fetchInteractive()?val.get('textColor').toJS():'#8d99ae',\n        })}\n        pointerover={()=>{\n          setTextInforArray(prev=>\n            prev.setIn([key,'textColor',1],'#00ff99')\n          );\n        }}\n        pointerout={()=>{\n          setTextInforArray(prev=>\n            prev.setIn([key,'textColor',1],'#ffffff')\n          );\n        }}\n        pointertap={(e)=>{\n          switch (val.get('id')) {\n            case 1:\n              setCurrentChess({ \n                key:ChessKey,\n                type:\"MOVE\"\n              });\n              dispatch(GetMove({\n                position:{ \n                  x:ChessVal.x, \n                  y:ChessVal.y,\n                },\n                step:ChessVal.step,\n                changeColor:'0x06d6a0',\n                currentChessPositions: forMoveArray\n              }));\n              dispatch(chessSelected({\n                key:ChessKey\n              }));\n              break;\n            case 2:\n              setCurrentChess({ \n                key:ChessKey,\n                type:\"ATTACK\"\n              });\n              dispatch(chessSelected({\n                key:ChessKey\n              }));\n              dispatch(GetAttack({\n                position:{ \n                  x:ChessVal.x, \n                  y:ChessVal.y,\n                },\n                step:ChessVal.attack,\n                changeColor:'0x00bbf9',\n                currentChessPositions: forAttackArray\n              }));\n              break;\n            case 3:\n              setCurrentChess({ \n                key:ChessKey,\n                type:\"STATUS\"\n              });\n              dispatch(chessCheckStatus({\n                key:ChessKey\n              }));\n              dispatch(chessSelected({\n                key:ChessKey\n              }));\n              break;\n            case 4 :\n              setMoveStep(true);\n              dispatch(chessSelected({\n                key:ChessKey\n              }));\n              break;\n            default:\n              return console.log(e.target)\n          };\n        }}\n      />\n    }\n  )};\n  return <Graphics\n    x={positionX!==800?positionX:specialPosition.x}\n    y={(positionY!==560&&positionY!==520)?positionY:specialPosition.y}\n    zIndex={3}\n    draw={g=> {\n      g.lineStyle(1,`0xffffff`,1);\n      g.beginFill(`0x22223b`);\n      g.drawRoundedRect(0,0,60,110,8);\n      g.endFill();\n    }}\n  ><CreateText/></Graphics>\n};","import React from 'react';\nimport { Sprite, Graphics, Text } from '@inlet/react-pixi/animated';\nimport { loader } from '../DataLoader';\nimport * as PIXI from \"pixi.js\";\n\nexport const ChessStatus = ({\n  ChessData,\n  ChessKey,\n  CheckStatus,\n  setMoveStep,\n  dispatch\n})=> {\n  const CreateSkillList = ()=>{\n    return ChessData.skill.map((value,key)=>{\n        return <React.Fragment key={key}>\n        <Text\n          x={-40}\n          y={-70+(key*22)}\n          text={`${value.name}`}\n          style={new PIXI.TextStyle({\n            fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n            fontSize: 16,\n            fill:'#ffb700',\n          })}\n        />\n        <Text\n          x={-35+(value.name.length * 16)}\n          y={-70+(key*22)}\n          text={`ATK:${value.atk}(${value.sp}SP)`}\n          style={new PIXI.TextStyle({\n            fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n            fontSize: 14,\n            fill:'#ffffff',\n          })}\n        />\n      </React.Fragment>\n    });  \n  };\n  return <Graphics\n    x={400}\n    y={300}\n    zIndex={99}\n    draw={g=> {\n      g.lineStyle(1,`0xffffff`,1);\n      g.beginFill(`0x22223b`);\n      g.drawRoundedRect(-250,-150,500,300,8);\n      g.endFill();\n    }}\n  >\n    <Graphics\n      x={220}\n      y={-120}\n      interactive={true}\n      buttonMode={true}\n      pointertap={(e)=>{\n        setMoveStep(true);\n        dispatch(CheckStatus({\n          key:ChessKey\n        }));\n      }}\n      draw={g=> {\n        g.beginFill(`0x02040f`);\n        g.drawRoundedRect(-15,-15,30,30,50);\n        g.endFill();\n      }}\n    >\n      <Text\n        anchor={0.5}\n        text={`X`}\n        style={new PIXI.TextStyle({\n          fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 16,\n          fill:'#ffffff',\n        })}\n      />\n    </Graphics>\n    <Sprite\n      width={80}\n      height={80}\n      x={-200}\n      y={-90}\n      image={loader.resources[`${ChessData.name}-head-default`].data}\n    />\n    <Text\n      x={-200}\n      y={10}\n      text={ChessData.cn}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 16,\n        fill:'#ffffff',\n      })}\n    />\n    <Text\n      x={-200}\n      y={35}\n      text={`HP:`}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 16,\n        fill:'#ffffff',\n      })}\n    />\n    <Text\n      x={-170}\n      y={35}\n      text={`${ChessData.hp} / ${ChessData.fullValue.hp}`}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 16,\n        fill:'#ff6b6b',\n      })}\n    />\n    <Text\n      x={-200}\n      y={60}\n      text={`SP:`}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 16,\n        fill:'#ffffff',\n      })}\n    />\n    <Text\n      x={-170}\n      y={60}\n      text={`${ChessData.sp} / ${ChessData.fullValue.sp}`}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 16,\n        fill:'#0466c8',\n      })}\n    />\n    <Text\n      x={-50}\n      y={-95}\n      text={'招式'}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 16,\n        fill:'#ffffff',\n      })}\n    />\n    <CreateSkillList/>\n  </Graphics>\n};","import React from 'react';\nimport { Sprite } from '@inlet/react-pixi/animated';\nimport { loader } from '../DataLoader';\n// reducers\nimport { MoveSelect } from '../../reducer/map';\nimport { chessSelected, chessCheckStatus } from \"../../reducer/chess\";\n// other part\nimport { ChessUIBoard } from \"./ChessUIBoard\";\nimport { ChessStatus } from \"../Common/ChessStatus\";\n\nexport const Chess = ({\n  chessProps\n})=>{\n  const { \n    chess,\n    enemyChess,\n    moveStep=Boolean,\n    setMoveStep,\n    setCurrentChess,\n    dispatch\n  } = chessProps;\n  return chess.map((value,key)=>{\n    const roundMoveDone = value.roundMove===0;\n    return <React.Fragment key={key}>\n      {value.debut&&<Sprite\n        interactive={moveStep}\n        buttonMode={true}\n        width={40}\n        height={40}\n        x={value.x*40}\n        y={value.y*40}\n        zIndex={2}\n        tint={roundMoveDone?0x495057:0xffffff}\n        pointerover={()=>{\n          dispatch(MoveSelect({\n            position:{ \n              x:value.x, \n              y:value.y,\n            },\n            step:value.step,\n            changeColor:'0x06d6a0',\n            alphaVal:0.5\n          }));\n        }}\n        pointerout={()=>{\n          dispatch(MoveSelect({\n            position:{ \n              x:value.x, \n              y:value.y,\n            },\n            step:value.step,\n            changeColor:'0x383838',\n            alphaVal:0\n          }));\n        }}\n        pointertap={()=>{\n          setMoveStep(false);\n          dispatch(chessSelected({\n            key:key\n          }));\n          dispatch(MoveSelect({\n            position:{ \n              x:value.x, \n              y:value.y,\n            },\n            step:value.step,\n            changeColor:'0x383838',\n            alphaVal:0\n          }));\n        }}\n        image={loader.resources[`${value.name}-head-default`].data}\n      />}\n      {value.boardStatus&&<ChessUIBoard\n        ChessData={chess}\n        ChessVal={value}\n        ChessKey={key}\n        EnemyChessData={enemyChess}\n        positionX={(value.x*40)+40}\n        positionY={(value.y*40)}\n        setCurrentChess={setCurrentChess}\n        setMoveStep={setMoveStep}\n        dispatch={dispatch}\n      />}\n      {value.checkStatus&&<ChessStatus\n        ChessData={value}\n        ChessKey={key}\n        CheckStatus={chessCheckStatus}\n        setMoveStep={setMoveStep}\n        dispatch={dispatch}\n      />}\n    </React.Fragment>\n  })\n};","import React,{ useState } from 'react';\nimport { fromJS } from 'immutable';\nimport { Graphics, Text } from '@inlet/react-pixi/animated';\nimport { enemyChessSelected, enemyChessCheckStatus } from \"../../reducer/enemyChess\";\nimport * as PIXI from \"pixi.js\";\n\nexport const EnemyChessUIBoard = ({\n  ChessKey,\n  positionX,\n  positionY,\n  setMoveStep,\n  dispatch\n})=> {\n  const specialPosition = {\n    x: 720,\n    y: 535\n  };\n  const [textInforArray, setTextInforArray] = useState(fromJS([{\n      id:1,\n      title:\"狀態\",\n      textColor:['#ffffff', '#ffffff']\n    },{ \n      id:2,\n      title:\"返回\",\n      textColor:['#ffffff', '#ffffff']\n  }]));\n  const CreateText = ({ noop })=>{\n    return textInforArray.map((val,key)=>{\n      return <Text\n        key={key}\n        interactive={true}\n        buttonMode={true}\n        text={val.get('title')}\n        x={10}\n        y={5+(25*key)}\n        style={new PIXI.TextStyle({\n          fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 20,\n          fill:val.get('textColor').toJS(),\n        })}\n        pointerover={()=>{\n          setTextInforArray(prev=>\n            prev.setIn([key,'textColor',1],'#9d4edd')\n          );\n        }}\n        pointerout={()=>{\n          setTextInforArray(prev=>\n            prev.setIn([key,'textColor',1],'#ffffff')\n          );\n        }}\n        pointertap={(e)=>{\n          switch (val.get('id')) {\n            case 1:\n              dispatch(enemyChessCheckStatus({\n                key:ChessKey\n              }));\n              dispatch(enemyChessSelected({\n                key:ChessKey\n              }));\n              break;\n            case 2 :\n              setMoveStep(true);\n              dispatch(enemyChessSelected({\n                key:ChessKey\n              }));\n              break;\n            default:\n              return console.log(e.target)\n          };\n        }}\n      />\n    }\n  )};\n  return <Graphics\n    x={positionX!==800?positionX:specialPosition.x}\n    y={(positionY!==560&&positionY!==520)?positionY:specialPosition.y}\n    zIndex={3}\n    draw={g=> {\n      g.lineStyle(1,`0xffffff`,1);\n      g.beginFill(`0x22223b`);\n      g.drawRoundedRect(0,0,60,62,8);\n      g.endFill();\n    }}\n  ><CreateText/></Graphics>\n}","import React from 'react';\nimport { Sprite } from '@inlet/react-pixi/animated';\nimport { loader } from '../DataLoader';\n// reducers\nimport { enemyChessSelected, enemyChessCheckStatus } from \"../../reducer/enemyChess\";\n// other part\nimport { EnemyChessUIBoard } from \"./EnemyChessUIBoard\";\nimport { ChessStatus } from \"../Common/ChessStatus\";\n\nexport const EnemyChess = ({\n  enemyChessProps\n})=>{\n  const { \n    enemyChess,\n    moveStep=Boolean,\n    setMoveStep,\n    dispatch\n  } = enemyChessProps;\n  return enemyChess.map((value,key)=>{\n    return <React.Fragment key={key}>\n      {value.debut&&<Sprite\n        interactive={moveStep}\n        buttonMode={true}\n        width={40}\n        height={40}\n        x={value.x*40}\n        y={value.y*40}\n        zIndex={2}\n        pointertap={()=>{\n          setMoveStep(false);\n          dispatch(enemyChessSelected({\n            key:key\n          }));\n        }}\n        image={loader.resources[`${value.name}-head-default`].data}\n      />}\n      {value.boardStatus&&<EnemyChessUIBoard\n        ChessKey={key}\n        positionX={(value.x*40)+40}\n        positionY={(value.y*40)}\n        setMoveStep={setMoveStep}\n        dispatch={dispatch}\n      />}\n      {value.checkStatus&&<ChessStatus\n        ChessData={value}\n        ChessKey={key}\n        CheckStatus={enemyChessCheckStatus}\n        setMoveStep={setMoveStep}\n        dispatch={dispatch}\n      />}\n    </React.Fragment>\n  })\n};\n","import React,{ useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Stage, Container, Sprite } from '@inlet/react-pixi/animated';\n// reducers\nimport { stageDebut } from \"../reducer/chess\";\nimport { enemyStageDebut } from \"../reducer/enemyChess\";\n// other part\nimport { CreateCheckerboard } from './Common/Checkerboard';\nimport { ConfirmTip } from \"./Common/ConfirmTips\";\nimport { UsualTip } from \"./Common/UsualTip\";\nimport { BattleBoard } from \"./Common/BattleBoard\";\nimport { BattleAnimeShow } from \"./Common/BattleAnimeShow\";\nimport { Chess } from \"../components/Chess/Chess\";\nimport { EnemyChess } from \"../components/EnemyChess/EnemyChess\";\n// rule\nimport { stageRule } from \"../constants/stageRule\";\nimport { loader } from './DataLoader';\nexport const Canvas = ()=> {\n  const [ stageStatus, setStageStatus ] = useState('stageOne');\n  const [ currentChess, setCurrentChess ] = useState({\n    key:0,\n    type:\"MOVE\"\n  });\n  const [ usualTip, setUsualTip ] = useState({\n    title:``,\n    status:false,\n  })\n  const [ tipStatus, setTipStatus ] = useState({\n    title:``,\n    status:false,\n    position:{\n      x:0,y:0\n    },\n  });\n  const [ battleInfo, setBattleInfo ] = useState({\n    status:false,\n    attacker:{ key:'' },\n    target:{ key:'' }\n  });\n\n  const [ animeShow, setAnimeShow ] = useState({\n    status:false,\n    type:'',\n    attacker:{ key:'', skill:{}, prevSP:0 },\n    target:{ key:'', isHit:false, prevLife:0 }\n  });\n  const [ moveStep, setMoveStep ] = useState(true);\n\n  // const [ animeShow, setAnimeShow ] = useState({\n  //   status:true,\n  //   type:'USER',\n  //   isHit:true,\n  //   attacker:{ key:0, skill:{\n  //     name: \"斬擊\", atk: 50, sp: 0, hitfix: 0\n  //   }, prevSP:100 },\n  //   target:{ key:0, isHit:false, prevLife:2000 }\n  // });\n  // const [ moveStep, setMoveStep ] = useState(false);\n\n  const chessMap = useSelector(state=>state.chessMap);\n  const chess = useSelector(state=>state.chess);\n  const enemyChess = useSelector(state=>state.enemyChess);\n  const dispatch = useDispatch();\n  // debut\n  useEffect(()=>{\n    dispatch(stageDebut({ \n      isDebutChess:stageRule.getIn([stageStatus,'debutChess'])\n    }));\n    dispatch(enemyStageDebut({ \n      isDebutChess:stageRule.getIn([stageStatus,'debutEnemyChess'])\n    }));\n  },[ dispatch, stageStatus ]);\n  return <Stage\n    width={800}\n    height={600}\n    options={{\n      autoDensity: true, \n      antialias: true,\n      backgroundColor:0x01262a\n    }}>\n    <Container sortableChildren={true}>\n      <Sprite\n        width={800}\n        height={600}\n        zIndex={1}\n        image={loader.resources[`${stageStatus}-main-BG`].data}\n      />\n      <CreateCheckerboard reduxProps={{ \n        chess,\n        enemyChess,\n        chessMap,\n        currentChess,\n        dispatch,\n        setTipStatus,\n        setMoveStep,\n        setBattleInfo\n      }}/>\n      <Chess chessProps={{\n        chess,\n        enemyChess,\n        moveStep,\n        setMoveStep,\n        setCurrentChess,\n        dispatch\n      }}/>\n      <EnemyChess enemyChessProps={{\n         enemyChess,\n         moveStep,\n         setMoveStep,\n         dispatch\n      }}/>\n    </Container>\n    {tipStatus.status&&<ConfirmTip \n      props={{\n        chess,\n        currentChess,\n        tipStatus,\n        dispatch,\n        setMoveStep,\n        setTipStatus\n      }}\n    />}\n    {usualTip.status&&\n      <UsualTip\n        props={{\n          stageStatus,\n          chess,\n          currentChess,\n          enemyChess,\n          usualTip,\n          setMoveStep,\n          setUsualTip,\n          setCurrentChess\n        }}\n      />}\n    {battleInfo.status&&\n      <BattleBoard\n        props={{\n          battleInfo,\n          setMoveStep,\n          setBattleInfo,\n          setAnimeShow,\n          dispatch\n        }}\n      />}\n    {animeShow.status&&\n      <BattleAnimeShow \n        props={{\n          stageStatus,\n          animeShow,\n          chess,\n          enemyChess,\n          setMoveStep,\n          setAnimeShow,\n          setUsualTip,\n          dispatch\n        }}\n      />}\n  </Stage>\n};","import React, { useState, useEffect } from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport { Canvas } from './Canvas';\nimport { loader } from './DataLoader';\nconst GlobalStyle = createGlobalStyle`\n  body { background:#1d2430; }\n`;\nconst StyledApp = styled.div`\n  position: relative;\n  display:flex;\n  align-items:center;\n  justify-content:center;\n  width:100%;\n  height:100vh;\n  .loading {\n    color: #fff;\n    font-size:24px;\n  }\n`;\nexport const App = ()=> {\n  const [ dataIsDone, setDataIsDone ] = useState(false);\n  useEffect(()=>{\n    loader.onComplete.add(()=>{\n      setDataIsDone(true);\n    });\n  });\n  return <StyledApp>\n    <GlobalStyle/>\n    {dataIsDone?<Canvas />:\n      <span className=\"loading\">Loading..</span>}\n  </StyledApp>\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, combineReducers } from 'redux';\nimport chess from './chess';\nimport chessMap from './map';\nimport enemyChess from './enemyChess';\nconst rootReducer = combineReducers({\n  chess,\n  chessMap,\n  enemyChess\n});\nexport const store = createStore(rootReducer);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './reducer/index';\n\nReactDOM.render(<Provider store={store}><App /></Provider>,document.getElementById('root'));\nreportWebVitals();\n"],"sourceRoot":""}