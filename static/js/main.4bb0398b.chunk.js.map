{"version":3,"sources":["reducer/chess.js","reducer/enemyChess.js","reducer/map.js","components/Common/Checkerboard.js","components/Common/ConfirmTips.js","constants/stageRule.js","components/Common/UsualTip.js","components/DataLoader.js","components/Common/ProbabilityCount.js","components/Common/BattleBoard.js","constants/ChessSkillShow.js","components/Common/BattleAnimeShow.js","components/Chess/ChessUIBoard.js","components/Common/ChessStatus.js","components/Chess/Chess.js","components/EnemyChess/EnemyChessUIBoard.js","components/EnemyChess/EnemyChess.js","components/Canvas.js","components/App.js","reportWebVitals.js","reducer/index.js","index.js"],"names":["basicCommon","x","y","checkStatus","boardStatus","debut","roundAttack","chess","createSlice","name","initialState","cn","step","attack","hp","sp","dodge","fullValue","skill","atk","hitfix","reducers","stageDebut","state","actions","isDebutChess","payload","map","value","key","v","get","chessMove","changeX","changeY","chessSelected","chessCheckStatus","chessAttackResult","lessSp","enemyChess","enemyStageDebut","enemyChessSelected","enemyChessCheckStatus","enemyChessDefense","damage","enemyChessDead","mapLimit","createInitialState","method","list","i","push","createStraightLine","traverse","color","alpha","zIndex","isInteractive","chessMap","MoveSelect","action","position","changeColor","alphaVal","GetMove","currentChessPositions","GetAttack","texture","PIXI","WHITE","CreateCheckerboard","reduxProps","currentChess","dispatch","setTipStatus","setMoveStep","setBattleInfo","Fragment","k","interactive","buttonMode","width","height","tint","pointertap","type","title","status","isMatch","checkMatchAttackPosition","targetData","item","getCurrentEnemy","attacker","target","acttack","ConfirmTip","props","tipStatus","draw","g","lineStyle","beginFill","drawRoundedRect","endFill","text","anchor","style","fontFamily","fontSize","fill","prev","stageRule","fromJS","stageOne","debutChess","debutEnemyChess","isWin","enemyList","totalLife","isLose","chessList","stageTwo","UsualTip","stageStatus","usualTip","setUsualTip","setCurrentChess","useState","textColor","setTextColor","checkWin","getIn","checkLose","loader","hostname","window","location","add","load","BattleBoard","battleInfo","setAnimeShow","atkSelectd","setAtkSelectd","CreateAttackerInfo","pX","pY","data","sortableChildren","image","resources","skillCanUse","fontWeight","CreateTargetInfo","ForecastInfo","attackerHit","targetDodge","isHit","Math","round","random","prevSP","prevLife","ChessSkillShow","setBGstatus","skillName","attackerName","TanjirouSkill","tension","setPosition","useEffect","step1","timeout","setTimeout","step2","clearTimeout","step3","steps","from","to","config","mass","friction","BattleAnimeShow","animeShow","targetHp","TopBar","Bottombar","CreateContent","BGstatus","toX","duration","BGprop","setBGpops","SkBGprop","setSkBGpops","onRest","ChessUIBoard","ChessData","ChessVal","ChessKey","EnemyChessData","positionX","positionY","specialPosition","forMoveArray","forAttackArray","id","textInforArray","setTextInforArray","CreateText","noop","isAttack","chessX","chessY","chessAtk","isDebutEnemy","filter","limitPosition","positionRange","getaddX","getaddY","getlessX","getlessY","val","compareAttack","toJS","pointerover","setIn","pointerout","e","console","log","ChessStatus","CheckStatus","CreateSkillList","length","Chess","chessProps","moveStep","Boolean","EnemyChessUIBoard","EnemyChess","enemyChessProps","Canvas","useSelector","useDispatch","options","autoDensity","antialias","backgroundColor","GlobalStyle","createGlobalStyle","StyledApp","styled","div","App","dataIsDone","setDataIsDone","onComplete","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4bb0398b.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nconst basicCommon = {\n  x:0,\n  y:0,\n  checkStatus:false,\n  boardStatus:false,\n  debut:false,\n  roundAttack:false,\n};\nconst chess = createSlice({\n  name:'chess',\n  initialState:[\n    {\n      name:'Tanjirou',\n      cn:'竃門 碳治郎',\n      step:3,\n      attack:2,\n      hp:1500,\n      sp:100,\n      dodge:65,\n      fullValue:{\n        hp:1500,\n        sp:100\n      },\n      skill:[{ \n        name:'斬擊',\n        atk:50,\n        sp:0,\n        hitfix:0\n      },{ \n        name:'叄之型―流流舞',\n        atk:200,\n        sp:5,\n        hitfix:10\n      },{ \n        name:'捌之型―滝壺',\n        atk:200,\n        sp:5,\n        hitfix:5\n      },{\n        name:'拾之型―生生流轉',\n        atk:500,\n        sp:10,\n        hitfix:20\n      }],\n      ...basicCommon\n    },{\n      name:'Nezuko',\n      step:2,\n      attack:1,\n      hp:2200,\n      sp:200,\n      dodge:50,\n      fullValue:{\n        hp:2200,\n        sp:200\n      },\n      skill:[{ \n        name:'爪擊',\n        atk:50,\n        sp:0,\n        hitfix:0\n      },{ \n        name:'踢擊',\n        atk:120,\n        sp:5,\n        hitfix:0\n      },{ \n        name:'血鬼術',\n        atk:1000,\n        sp:100,\n        hitfix:0\n      }],\n      ...basicCommon\n    },{\n      name:'Inosuke',\n      cn:'嘴平 伊之助',\n      step:4,\n      attack:3,\n      hp:1800,\n      sp:80,\n      dodge:40,\n      fullValue:{\n        hp:1800,\n        sp:80\n      },\n      skill:[{ \n        name:'斬擊',\n        atk:50,\n        sp:0,\n        hitfix:0\n      },{ \n        name:'壹之牙―穿透刺射',\n        atk:120,\n        sp:2,\n        hitfix:0\n      },{ \n        name:'貳之牙―利刃對劈',\n        atk:200,\n        sp:5,\n        hitfix:0\n      },{\n        name:'叄之牙―獠牙撕扯',\n        atk:400,\n        sp:8,\n        hitfix:0\n      }],\n      ...basicCommon\n    }\n  ],\n  reducers:{\n    stageDebut:(state, actions)=> {\n      const { isDebutChess } = actions.payload;\n      state.map((value,key)=>{\n        return isDebutChess.map(v=>{\n          if(value.name===v.get('name')){\n            return (\n              state[key].debut = true,\n              state[key].x = v.get('x'),\n              state[key].y = v.get('y')\n            );\n          }else return null;\n        })\n      })\n    },\n    chessMove: (state, actions)=>{\n      const { key, changeX, changeY } = actions.payload;\n      state[key].x = changeX;\n      state[key].y = changeY;\n    },\n    chessSelected: (state, actions)=>{\n      const { key } = actions.payload;\n      state[key].boardStatus = !state[key].boardStatus;\n    },\n    chessCheckStatus: (state, actions)=> {\n      const { key } = actions.payload;\n      state[key].checkStatus = !state[key].checkStatus;\n    },\n    chessAttackResult: (state, actions)=> {\n      const { key, lessSp } = actions.payload;\n      state[key].sp -= lessSp;\n    }\n  }\n});\nexport default chess.reducer;\nexport const { \n  stageDebut, chessMove, chessSelected, chessCheckStatus, chessAttackResult \n} = chess.actions;","import { createSlice } from '@reduxjs/toolkit';\nconst basicCommon = {\n  x:0,\n  y:0,\n  checkStatus:false,\n  boardStatus:false,\n  debut:false,\n  roundAttack:false,\n};\nconst enemyChess = createSlice({\n  name:'enemyChess',\n  initialState:[\n    {\n      name:'Teoni',\n      cn:'手鬼',\n      hp:2000,\n      sp:100,\n      dodge:20,\n      fullValue:{\n        hp:2000,\n        sp:100\n      },\n      skill:[{ \n        name:'胡亂毆打',\n        atk:50,\n        sp:0,\n        hitfix:10\n      },{ \n        name:'你是第十四個',\n        atk:300,\n        sp:10,\n        hitfix:20\n      }],\n      ...basicCommon\n    },{\n      name:'Nomanooni',\n      cn:'沼鬼',\n      hp:1500,\n      sp:200,\n      dodge:30,\n      fullValue:{\n        hp:1500,\n        sp:200\n      },\n      skill:[{ \n        name:'爪擊',\n        atk:70,\n        sp:0,\n        hitfix:15\n      },{ \n        name:'分身攻擊',\n        atk:600,\n        sp:15,\n        hitfix:30\n      }],\n      ...basicCommon\n    }\n  ],\n  reducers:{\n    enemyStageDebut:(state, actions)=> {\n      const { isDebutChess } = actions.payload;\n      state.map((value,key)=>{\n        return isDebutChess.map(v=>{\n          if(value.name===v.get('name')){\n            return (\n              state[key].debut = true,\n              state[key].x = v.get('x'),\n              state[key].y = v.get('y')\n            );\n          }else return null;\n        })\n      })\n    },\n    enemyChessSelected: (state, actions)=>{\n      const { key } = actions.payload;\n      state[key].boardStatus = !state[key].boardStatus;\n    },\n    enemyChessCheckStatus: (state, actions)=> {\n      const { key } = actions.payload;\n      state[key].checkStatus = !state[key].checkStatus;\n    },\n    enemyChessDefense: (state, actions)=> {\n      const { key, damage } = actions.payload;\n      state[key].hp -= damage;\n    },\n    enemyChessDead: (state, actions)=> {\n      const { key } = actions.payload;\n      state[key].debut = false;\n      state[key].hp = state[key].fullValue.hp;\n      state[key].sp = state[key].fullValue.sp;\n    }\n  }\n});\nexport default enemyChess.reducer;\nexport const { enemyStageDebut, enemyChessSelected, enemyChessCheckStatus, enemyChessDefense, enemyChessDead } = enemyChess.actions;","import { createSlice } from '@reduxjs/toolkit';\nconst mapLimit = { x:20, y:15 };\nconst createTraverseLine = (traverse=0,color='')=>{\n  const list = [];\n  for(let i=0;i<mapLimit.x;i++){\n    list.push({\n      x:i,\n      y:traverse,\n      color:color,\n      alpha:1,\n      zIndex:1,\n      isInteractive:false\n    });\n  };\n  return list;\n};\nconst createStraightLine = ( method=()=>{} )=>{\n  const list = [];\n  for(let i=0;i<mapLimit.y;i++){\n    list.push(method(i,'0x383838'));\n  };\n  return list;\n};\nconst createInitialState = createStraightLine(createTraverseLine);\nconst chessMap = createSlice({\n  name:'chessMap',\n  initialState: createInitialState,\n  reducers:{\n    MoveSelect:(state, action)=>{\n      const { position, step, changeColor, alphaVal=1} = action.payload;\n      for(let i=0;i<(step+1);i++){\n        if(position.x+i<=(mapLimit.x-1)){\n          state[position.y][position.x+i].color=changeColor;\n          state[position.y][position.x+i].isInteractive=false;\n          state[position.y][position.x+i].alpha=alphaVal;\n          state[position.y][position.x+i].zIndex=1;\n        };\n        if(position.y+i<=(mapLimit.y-1)){\n          state[position.y+i][position.x].color=changeColor;\n          state[position.y+i][position.x].isInteractive=false;\n          state[position.y+i][position.x].alpha=alphaVal;\n          state[position.y+i][position.x].zIndex=1;\n        };\n        if(position.x-i>=0){\n          state[position.y][position.x-i].color=changeColor;\n          state[position.y][position.x-i].isInteractive=false;\n          state[position.y][position.x-i].alpha=alphaVal;\n          state[position.y][position.x-i].zIndex=1;\n        };\n        if(position.y-i>=0){\n          state[position.y-i][position.x].color=changeColor;\n          state[position.y-i][position.x].isInteractive=false;\n          state[position.y-i][position.x].alpha=alphaVal;\n          state[position.y-i][position.x].zIndex=1;\n        };\n      }\n    },\n    GetMove:(state, action)=>{\n      const { position, step, changeColor, currentChessPositions } = action.payload;\n      for(let i=0;i<(step+1);i++){\n        if(position.x+i<=(mapLimit.x-1)){\n          state[position.y][position.x+i].color=changeColor;\n          state[position.y][position.x+i].isInteractive=true;\n          state[position.y][position.x+i].alpha=1;\n          state[position.y][position.x+i].zIndex=1;\n        };\n        if(position.y+i<=(mapLimit.y-1)){\n          state[position.y+i][position.x].color=changeColor;\n          state[position.y+i][position.x].isInteractive=true;\n          state[position.y+i][position.x].alpha=1;\n          state[position.y+i][position.x].zIndex=1;\n          state[position.y][position.x-i].alpha=1;\n          state[position.y][position.x-i].zIndex=1;\n        };\n        if(position.x-i>=0){\n          state[position.y][position.x-i].color=changeColor;\n          state[position.y][position.x-i].isInteractive=true;\n        };\n        if(position.y-i>=0){\n          state[position.y-i][position.x].color=changeColor;\n          state[position.y-i][position.x].isInteractive=true;\n          state[position.y-i][position.x].alpha=1;\n          state[position.y-i][position.x].zIndex=1;\n        };\n      }\n      currentChessPositions.map(v=>{\n        return state[v.y][v.x].isInteractive=false;\n      });\n    },\n    GetAttack:(state, action)=>{\n      const { position, step, changeColor, currentChessPositions } = action.payload;\n      for(let i=0;i<(step+1);i++){\n        if(position.x+i<=(mapLimit.x-1)){\n          state[position.y][position.x+i].color=changeColor;\n          state[position.y][position.x+i].isInteractive=true;\n          state[position.y][position.x+i].alpha=0.5;\n          state[position.y][position.x+i].zIndex=3;\n        };\n        if(position.y+i<=(mapLimit.y-1)){\n          state[position.y+i][position.x].color=changeColor;\n          state[position.y+i][position.x].isInteractive=true;\n          state[position.y+i][position.x].alpha=0.5;\n          state[position.y+i][position.x].zIndex=3;\n        };\n        if(position.x-i>=0){\n          state[position.y][position.x-i].color=changeColor;\n          state[position.y][position.x-i].isInteractive=true;\n          state[position.y][position.x-i].alpha=0.5;\n          state[position.y][position.x-i].zIndex=3;\n        };\n        if(position.y-i>=0){\n          state[position.y-i][position.x].color=changeColor;\n          state[position.y-i][position.x].isInteractive=true;\n          state[position.y-i][position.x].alpha=0.5;\n          state[position.y-i][position.x].zIndex=3;\n        };\n      }\n      currentChessPositions.map(v=>{\n        return (\n          state[v.y][v.x].isInteractive=false,\n          state[v.y][v.x].zIndex=1\n        )\n      });\n    }\n  }\n});\nexport default chessMap.reducer;\nexport const { MoveSelect, GetMove, GetAttack } = chessMap.actions;\n","import React, {} from 'react';\nimport * as PIXI from \"pixi.js\";\nimport { Sprite } from '@inlet/react-pixi/animated';\nimport { MoveSelect } from '../../reducer/map';\nconst texture = PIXI.Texture.WHITE;\nexport const CreateCheckerboard = ({\n  reduxProps\n})=>{\n  const { \n    chess, enemyChess, chessMap, currentChess, dispatch, \n    setTipStatus, setMoveStep, setBattleInfo\n  } = reduxProps;\n  const checkMatchAttackPosition = (x,y)=>{\n    let isMatch = false;\n    enemyChess.map(v=>{\n      const checkMatch = v.debut&&(x===v.x)&&(y===v.y);\n      if(checkMatch){\n        return isMatch=true;\n      }else return null;\n    });\n    return isMatch;\n  };\n  const getCurrentEnemy = (x,y)=>{\n    let item = {};\n    enemyChess.map((v,k)=>{\n      const checkMatch = v.debut&&(x===v.x)&&(y===v.y);\n      if(checkMatch){\n        return item={...v,key:k}\n      }else return null;\n    });\n    return item;\n  };\n  return <React.Fragment>\n    {chessMap.map(value=> {\n      return value.map((v,k)=>{\n        return <Sprite\n          interactive={v.isInteractive}\n          buttonMode={v.isInteractive}\n          zIndex={v.zIndex}\n          key={k}\n          width={40}\n          height={40}\n          x={v.x*40}\n          y={v.y*40}\n          tint={v.color}\n          alpha={v.alpha}\n          texture={texture}\n          pointertap={()=>{\n            switch (currentChess.type) {\n              case \"MOVE\":\n                setTipStatus({\n                  title:'確定移動?',\n                  status:true,\n                  position:{\n                    x:v.x, y:v.y\n                  }\n                });\n                dispatch(MoveSelect({\n                  position:{ \n                    x:chess[currentChess.key].x, \n                    y:chess[currentChess.key].y,\n                  },\n                  step:chess[currentChess.key].step,\n                  changeColor:'0x06d6a0'\n                }));\n                break;\n              case \"ATTACK\":\n                if(checkMatchAttackPosition(v.x,v.y)){\n                  const targetData = getCurrentEnemy(v.x,v.y);\n                  setBattleInfo({\n                    status:true,\n                    attacker:{ \n                      key: currentChess.key,\n                      ...chess[currentChess.key]\n                    },\n                    target:{\n                      key: targetData.key,\n                      ...targetData\n                    }\n                  });\n                  dispatch(MoveSelect({\n                    position:{ \n                      x:chess[currentChess.key].x, \n                      y:chess[currentChess.key].y,\n                    },\n                    step:chess[currentChess.key].attack,\n                    changeColor:'0x383838',\n                  }));\n                }else {\n                  setMoveStep(true);\n                  dispatch(MoveSelect({\n                    position:{ \n                      x:chess[currentChess.key].x, \n                      y:chess[currentChess.key].y,\n                    },\n                    step:chess[currentChess.key].acttack,\n                    changeColor:'0x383838'\n                  }));\n                };\n                break;\n              default:\n                return;\n            }; \n          }}\n        />\n      });\n    })}\n  </React.Fragment>\n};","import React from 'react';\n// import { fromJS } from 'immutable';\nimport { Graphics, Text } from '@inlet/react-pixi/animated';\nimport { chessMove } from \"../../reducer/chess\";\nimport { MoveSelect } from '../../reducer/map';\nimport * as PIXI from \"pixi.js\";\n\nexport const ConfirmTip = ({\n  props,\n})=> {\n  const { \n    chess,\n    currentChess,\n    tipStatus,\n    dispatch,\n    setMoveStep, \n    setTipStatus\n  } = props;\n  return <Graphics\n    x={400}\n    y={300}\n    draw={g=> {\n      g.lineStyle(1,`0xffffff`,1);\n      g.beginFill(`0x22223b`);\n      g.drawRoundedRect(-90,-50,180,100,8);\n      g.endFill();\n    }}\n  >\n    <Text\n      text={tipStatus.title}\n      anchor={0.5}\n      x={0}\n      y={-20}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 20,\n        fill:['#ffffff', '#ffffff'],\n      })}\n    />\n    <Text\n      interactive={true}\n      buttonMode={true}\n      anchor={0.5}\n      text={'確定'}\n      x={-30}\n      y={20}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 20,\n        fill:['#ffffff', '#ffffff'],\n      })}\n      pointertap={()=>{\n        switch (currentChess.type) {\n          case \"MOVE\":\n            dispatch(chessMove({\n              key: currentChess.key,\n              changeX:tipStatus.position.x,\n              changeY:tipStatus.position.y\n            }));\n            dispatch(MoveSelect({\n              position:{ \n                x:chess[currentChess.key].x, \n                y:chess[currentChess.key].y,\n              },\n              step:chess[currentChess.key].step,\n              changeColor:'0x383838'\n            }));\n            setMoveStep(true);\n            setTipStatus(prev=>{\n              return {...prev, status:false }\n            });\n            break;\n          default:\n            return;\n        }\n      }}\n    />\n    <Text\n      interactive={true}\n      buttonMode={true}\n      anchor={0.5}\n      text={'取消'}\n      x={30}\n      y={20}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 20,\n        fill:['#ffffff', '#ffffff'],\n      })}\n      pointertap={()=>{\n        switch (currentChess.type) {\n          case \"MOVE\":\n            dispatch(MoveSelect({\n              position:{ \n                x:chess[currentChess.key].x, \n                y:chess[currentChess.key].y,\n              },\n              step:chess[currentChess.key].step,\n              changeColor:'0x383838'\n            }));\n            setMoveStep(true);\n            setTipStatus(prev=>{\n              return {...prev, status:false }\n            })\n            break;\n          default:\n            return;\n        }\n      }}\n    />\n  </Graphics>\n};","import { fromJS } from \"immutable\";\n\nexport const stageRule = fromJS({\n  stageOne: {\n    debutChess:[\n      { \n        name:'Tanjirou',\n        x:3,\n        y:7\n      },\n    ],\n    debutEnemyChess:[\n      {\n        name:'Teoni',\n        x:16,\n        y:7\n      },\n    ],\n    isWin: enemyList => {\n      let totalLife = 0;\n        enemyList.map(v => {\n          if(v.debut){\n            return totalLife += v.hp;\n          }return null;\n        });\n      return totalLife>0 ? false : true ;\n    },\n    isLose: chessList => {\n      let totalLife = 0;\n        chessList.map(v => {\n          if(v.debut){\n            return totalLife += v.hp;\n          }return null;\n        });\n      return totalLife>0 ? false : true ;\n    }\n  },\n  stageTwo: {\n    debutChess:[\n      { \n        name:'Tanjirou',\n        x:3,\n        y:9\n      }, { \n        name:'Nezuko',\n        x:3,\n        y:11\n      }\n    ],\n    debutEnemyChess:[\n      {\n        name:'Nomanooni',\n        x:16,\n        y:7\n      }\n    ]\n  }\n});","import React,{ useState } from 'react';\n// import { fromJS } from 'immutable';\nimport { Graphics, Text } from '@inlet/react-pixi/animated';\nimport * as PIXI from \"pixi.js\";\n// rule\nimport { stageRule } from \"../../constants/stageRule\";\n\nexport const UsualTip = ({\n  props,\n})=> {\n  const {\n    stageStatus, chess, currentChess, enemyChess,\n    usualTip, setMoveStep, setUsualTip, setCurrentChess } = props;\n    const [ textColor, setTextColor ] = useState(['#ffffff', '#ffffff']);\n  return <Graphics\n    x={400}\n    y={300}\n    draw={g=> {\n      g.lineStyle(1,`0xffffff`,1);\n      g.beginFill(`0x22223b`);\n      g.drawRoundedRect(-90,-50,180,100,8);\n      g.endFill();\n    }}\n  >\n    <Text\n      text={usualTip.title}\n      anchor={0.5}\n      x={0}\n      y={-20}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 20,\n        fill: textColor,\n      })}\n    />\n    <Text\n      interactive={true}\n      buttonMode={true}\n      anchor={0.5}\n      text={'確定'}\n      x={0}\n      y={20}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 20,\n        fill:['#ffffff', '#ffffff'],\n      })}\n      pointertap={()=>{\n        switch (currentChess.type) {\n          case \"ATTACK\":\n            const checkWin = stageRule.getIn([stageStatus,'isWin']);\n            const checkLose = stageRule.getIn([stageStatus,'isLose']);\n            if(checkWin(enemyChess)){\n              setTextColor(['#ffffff', '#06d6a0']);\n              setCurrentChess({\n                key:0,\n                type:\"CHECKWIN\"\n              });\n              setUsualTip({\n                title:`作戰獲勝!`,\n                status:true,\n              });\n            }else if(checkLose(chess)){\n              setTextColor(['#dc2f02', '#d00000']);\n              setCurrentChess({\n                key:0,\n                type:\"CHECKLOSE\"\n              });\n              setUsualTip({\n                title:`作戰失敗!`,\n                status:true,\n              });\n            }else {\n              setMoveStep(true);\n              setUsualTip({\n                title:``,\n                status:false,\n              });\n            }\n            break;\n          case \"CHECKWIN\":\n            setMoveStep(true);\n            setTextColor(['#ffffff', '#ffffff']);\n            setUsualTip({\n              title:``,\n              status:false,\n            });\n            break;\n          case \"CHECKLOSE\":\n            setMoveStep(true);\n            setTextColor(['#ffffff', '#ffffff']);\n            setUsualTip({\n              title:``,\n              status:false,\n            });\n            break;\n          default:\n            return;\n        }\n      }}\n    />\n  </Graphics>\n};","import * as PIXI from \"pixi.js\";\nexport const loader = new PIXI.Loader();\nconst hostname = window.location.hostname==='localhost'?'./Demon-Slayer/':'./';\n\nloader\n  .add('Tanjirou-head-default',`${hostname}imgs/Tanjirou/head-default.jpg`)\n  .add('Tanjirou-fight',`${hostname}imgs/Tanjirou/fight.png`)\n  .add('Nezuko-head-default',`${hostname}imgs/Nezuko/head-default.jpg`)\n  .add('Nezuko-fight',`${hostname}imgs/Nezuko/fight.png`)\n  .add('Inosuke-head-default',`${hostname}imgs/Inosuke/head-default.jpg`)\n  .add('Inosuke-fight',`${hostname}imgs/Inosuke/fight.png`)\n  .add('Teoni-head-default',`${hostname}imgs/Teoni/head-default.jpg`)\n  .add('Teoni-fight',`${hostname}imgs/Teoni/fight.png`)\n  .add('Nomanooni-head-default',`${hostname}imgs/Nomanooni/head-default.jpg`)\n  .add('Nomanooni-fight',`${hostname}imgs/Nomanooni/fight.png`)\n  .add('stageOne-BG',`${hostname}imgs/background/stage1-background.png`)\n  .load();\n","export const ProbabilityCount = (\n  attackerHit,\n  targetDodge\n)=>{\n  const basicHit = 100;\n  const hitProbability = basicHit + attackerHit - targetDodge;\n  const checkRamdom = Math.round(Math.random()*100 + 1);\n  if(hitProbability < checkRamdom) {\n    return false\n  }else return true;\n};","import React,{ useState } from 'react';\nimport { Container, Sprite, Graphics, Text } from '@inlet/react-pixi/animated';\nimport { loader } from '../DataLoader';\nimport * as PIXI from \"pixi.js\";\nimport { ProbabilityCount } from \"../Common/ProbabilityCount\";\nimport { chessAttackResult } from \"../../reducer/chess\";\nimport { enemyChessDefense } from \"../../reducer/enemyChess\";\n\nexport const BattleBoard = ({ props })=>{\n  const { \n    battleInfo, setMoveStep, setBattleInfo, setAnimeShow, dispatch\n  } = props;\n  const [ atkSelectd, setAtkSelectd ] = useState({\n    key:0,\n  });\n  const CreateAttackerInfo = ({ pX=0, pY=0, data })=>{\n    return <Container x={pX} y={pY} sortableChildren={true}>\n      <Text\n        text={'攻'}\n        x={220}\n        y={0}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 30,\n          fill:['#ffffff', '#00ff99'],\n        })}\n      />\n      <Text\n        text={data.cn}\n        x={60}\n        y={-3}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 16,\n          fill:'#ffffff',\n        })}\n      />\n      <Text\n        text={`${data.hp} / ${data.fullValue.hp}`}\n        x={60}\n        y={17}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 16,\n          fill:'#ff6b6b',\n        })}\n      />\n      <Text\n        text={`${data.sp} / ${data.fullValue.sp}`}\n        x={60}\n        y={34}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 16,\n          fill:'#0466c8',\n        })}\n      />\n      <Sprite\n        width={50}\n        height={50}\n        x={0}\n        y={0}\n        image={loader.resources[`${data.name}-head-default`].data}\n      />\n      <Text\n        text={`招式選擇：`}\n        x={0}\n        y={80}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 16,\n          fill:'#ffffff',\n        })}\n      />\n      <Graphics\n        x={0}\n        y={115}\n        zIndex={1}\n        draw={g=> {\n          g.lineStyle(1,`0xffffff`,1);\n          g.beginFill(`0x0f0f1b`);\n          g.drawRoundedRect(0,0,240,180,8);\n          g.endFill();\n        }}\n      />\n      {data.skill.map((value,key)=>{\n        const skillCanUse = data.sp - value.sp >= 0;\n        return <React.Fragment key={key}>\n          <Text\n            zIndex={2}\n            interactive={skillCanUse}\n            buttonMode={true}\n            text={value.name}\n            x={20}\n            y={130+(key*24)}\n            style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n              fontSize: 16,\n              fill: ((atkSelectd.key===key)&&skillCanUse) ? ['#ffffff', '#00ff99'] :  \n                skillCanUse ? '#ffffff' : '#8d99ae',\n              fontWeight: (atkSelectd.key===key) ? 600 : 300\n            })}\n            pointertap={()=>setAtkSelectd({\n              key: key\n            })}\n          />\n        </React.Fragment>\n      })}\n    </Container>\n  };\n  const CreateTargetInfo = ({ pX=0, pY=0, data })=>{\n    return <Container x={pX} y={pY} sortableChildren={true}>\n      <Text\n        text={'防'}\n        x={0}\n        y={0}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 30,\n          fill:['#ffffff', '#ee6c4d'],\n        })}\n      />\n      <Text\n        text={data.cn}\n        anchor={{x:1,y:0}}\n        x={190}\n        y={-3}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 16,\n          fill:'#ffffff',\n        })}\n      />\n      <Text\n        text={`${data.hp} / ${data.fullValue.hp}`}\n        anchor={{x:1,y:0}}\n        x={190}\n        y={17}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 16,\n          fill:'#ff6b6b',\n        })}\n      />\n      <Text\n        text={`${data.sp} / ${data.fullValue.sp}`}\n        anchor={{x:1,y:0}}\n        x={190}\n        y={34}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 16,\n          fill:'#0466c8',\n        })}\n      />\n      <Sprite\n        width={50}\n        height={50}\n        x={200}\n        y={0}\n        image={loader.resources[`${data.name}-head-default`].data}\n      />\n    </Container>\n  };\n  const ForecastInfo = ({ pX, pY, data })=>{\n    return <Container x={pX} y={pY} sortableChildren={true}>\n      <Graphics\n        x={0}\n        y={0}\n        zIndex={1}\n        draw={g=> {\n          g.lineStyle(1,`0x00ff99`,1);\n          g.beginFill(`0x0f0f1b`);\n          g.drawRoundedRect(0,0,265,215,8);\n          g.endFill();\n        }}\n      />\n      <Text\n        text={`招式：`}\n        zIndex={2}\n        x={20}\n        y={20}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 20,\n          fill:'#ffffff'\n        })}\n      />\n      <Text\n        text={`${data.attacker.skill[atkSelectd.key].name}`}\n        zIndex={2}\n        x={80}\n        y={22}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 16,\n          fill:'#00ff99'\n        })}\n      />\n      <Text\n        text={`攻擊力：`}\n        zIndex={2}\n        x={20}\n        y={50}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 20,\n          fill:'#ffffff'\n        })}\n      />\n      <Text\n        text={`${data.attacker.skill[atkSelectd.key].atk}`}\n        zIndex={2}\n        x={100}\n        y={52}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 18,\n          fill:'#fdc500'\n        })}\n      />\n      <Text\n        text={`命中率：`}\n        zIndex={2}\n        x={20}\n        y={80}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 20,\n          fill:'#ffffff'\n        })}\n      />\n      <Text\n        text={`${\n          100 +\n          data.attacker.skill[atkSelectd.key].hitfix -\n          data.target.dodge\n        }%`}\n        zIndex={2}\n        x={100}\n        y={82}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 18,\n          fill:'#ffffff'\n        })}\n      />\n      <Text\n        text={`消耗：`}\n        zIndex={2}\n        x={20}\n        y={110}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 20,\n          fill:'#ffffff'\n        })}\n      />\n      <Text\n        text={`${data.attacker.skill[atkSelectd.key].sp}`}\n        zIndex={2}\n        x={80}\n        y={110}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 18,\n          fill:'#0466c8'\n        })}\n      />\n    </Container>\n  };\n  return <Graphics\n    x={400}\n    y={300}\n    zIndex={99}\n    draw={g=> {\n      g.lineStyle(1,`0xffffff`,1);\n      g.beginFill(`0x22223b`);\n      g.drawRoundedRect(-300,-200,600,400,8);\n      g.endFill();\n    }}\n  >\n    <CreateAttackerInfo\n      pX={-270}\n      pY={-180}\n      data={battleInfo.attacker}\n    />\n    <CreateTargetInfo\n      pX={20}\n      pY={-180}\n      data={battleInfo.target}\n    />\n    <ForecastInfo\n      pX={0}\n      pY={-100}\n      data={battleInfo}\n    />\n    <Text\n      interactive={true}\n      buttonMode={true}\n      text={'攻擊'}\n      anchor={0.5}\n      x={180}\n      y={160}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 20,\n        fill:'#ffffff',\n      })}\n      pointertap={()=>{\n        const isHit = ProbabilityCount(\n          battleInfo.attacker.skill[atkSelectd.key].hitfix,\n          battleInfo.target.dodge\n        );\n        dispatch(chessAttackResult({\n          key: battleInfo.attacker.key,\n          lessSp: battleInfo.attacker.skill[atkSelectd.key].sp\n        }));\n        if(isHit){\n          dispatch(enemyChessDefense({\n            key: battleInfo.target.key,\n            damage: battleInfo.attacker.skill[atkSelectd.key].atk\n          }));\n        };\n        setAnimeShow({\n          status:true,\n          type:'USER',\n          attacker:{ \n            key:battleInfo.attacker.key,\n            skill:battleInfo.attacker.skill[atkSelectd.key],\n            prevSP:battleInfo.attacker.sp\n          },\n          target:{ \n            key:battleInfo.target.key,\n            isHit:isHit,\n            prevLife:battleInfo.target.hp\n          }\n        });\n        setBattleInfo({\n          status:false,\n          attacker:{ key:'' },\n          target:{ key:'' }\n        });\n      }}\n    />\n    <Text\n      interactive={true}\n      buttonMode={true}\n      text={'取消'}\n      anchor={0.5}\n      x={240}\n      y={160}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 20,\n        fill:'#ffffff',\n      })}\n      pointertap={()=>{\n        setMoveStep(true);\n        setBattleInfo({\n          status:false,\n          attacker:{ key:'' },\n          target:{ key:'' }\n        })\n      }}\n    />\n  </Graphics>\n};","import React,{ useState, useEffect } from \"react\";\nimport { loader } from '../components/DataLoader';\nimport { Spring } from 'react-spring/renderprops';\nimport { Sprite } from '@inlet/react-pixi/animated';\n\nexport const ChessSkillShow = ({\n  attacker={},\n  skill={},\n  setBGstatus\n})=>{\n  switch (attacker.name) {\n    case `Tanjirou`:\n      return <TanjirouSkill\n        skillName={skill.name}\n        attackerName={attacker.name}\n        setBGstatus={setBGstatus}\n      />\n    default:\n      return;\n  };\n};\n// Tanjirou\nconst TanjirouSkill = ({\n  skillName,\n  attackerName,\n  setBGstatus\n})=>{\n  const [ position, setPosition ] = useState({ x:0, y:0, tension:170 });\n  const steps = (\n    skillName,\n    setPosition,\n    setBGstatus\n  ) => {\n    switch (skillName) {\n      default:\n        setPosition({ x:550,y:50,tension:100 });\n        const start = ()=>{\n          const timeout = setTimeout(() => {\n            setPosition({ x:250, y:50, tension:100 });\n            // callback\n            step1();\n          },2000);\n          return ()=> clearTimeout(timeout);\n        };\n        const step1 = ()=>{\n          const timeout = setTimeout(() => {\n            setPosition({ x:0, y:50, tension:100 });\n            setBGstatus({ type:'SKILL' });\n            // callback\n            step2();\n          },3000);\n          return ()=> clearTimeout(timeout);\n        };\n        const step2 = ()=>{\n          const timeout = setTimeout(() => {\n            setPosition({ x:-250, y:50, tension:1000 });\n            setBGstatus({ type:'STANDBY' });\n            // callback\n            step3();\n          },3000);\n          return ()=> clearTimeout(timeout);\n        };\n        const step3 = ()=>{\n          const timeout = setTimeout(() => {\n            setPosition({ x:550,y:50, tension:50 });\n          },3000);\n          return ()=> clearTimeout(timeout);\n        };\n        start();\n        break;\n    }\n  };\n  useEffect(()=>{\n    steps(skillName,setPosition,setBGstatus);\n  },[ skillName, setBGstatus ]);\n  switch (skillName) {\n    case `斬擊`:\n      return <Spring\n          from={{ x:550, y:50 }}\n          to={{ x:position.x, y:position.y }}\n          config={{ \n            mass:1,\n            tension: position.tension,\n            friction:20,\n          }}\n        >\n        {props => \n          <Sprite\n            zIndex={2}\n            width={200}\n            height={200}\n            anchor={0.5}\n            image={loader.resources[`${attackerName}-fight`].data}\n            {...props}\n          />}\n        </Spring>\n    default:\n      return <Spring\n        from={{ x:550, y:50 }}\n        to={{ x:position.x, y:position.y }}\n        config={{ \n          mass:1,\n          tension: position.tension,\n          friction:20,\n        }}\n      >\n      {props => \n        <Sprite\n          zIndex={2}\n          width={200}\n          height={200}\n          anchor={0.5}\n          image={loader.resources[`${attackerName}-fight`].data}\n          {...props}\n        />}\n      </Spring>\n  };\n};\n","import React,{ useState } from 'react';\nimport { Container, Sprite, Graphics, Text } from '@inlet/react-pixi/animated';\nimport { loader } from '../DataLoader';\nimport * as PIXI from \"pixi.js\";\nimport { Spring } from 'react-spring/renderprops';\nimport { enemyChessDead } from \"../../reducer/enemyChess\";\n// skill\nimport { ChessSkillShow } from \"../../constants/ChessSkillShow\";\n\nexport const BattleAnimeShow = ({\n  props\n}) =>{\n  const { stageStatus, animeShow, chess, enemyChess, \n    setMoveStep, setAnimeShow, setUsualTip, dispatch } = props;\n  const { target } = animeShow;\n  const [ targetHp, setTargetHp ] = useState(animeShow.target.prevLife);\n  // TopBar\n  const TopBar = ({\n    attacker={},\n    target={},\n  })=> {\n    return <Graphics \n      x={-400}\n      y={-300}\n      zIndex={98}\n      draw={g=> {\n        g.beginFill(`0x000f23`);\n        g.drawRoundedRect(0,0,800,80,0);\n        g.endFill();\n      }}\n    >\n      <Container sortableChildren={true}>\n        <Graphics\n          x={370}\n          y={40}\n          draw={g=> {\n            g.beginFill(`0x364958`);\n            g.drawRoundedRect(-21,-21,42,42,50);\n            g.endFill();\n          }}\n        >\n          <Text \n            text={`守`} \n            x={0} y={0}\n            anchor={0.5}\n            style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n              fontSize: 24,\n              fill:'#ffffff',\n            })}/>\n        </Graphics>\n        <Graphics\n          x={420}\n          y={40}\n          draw={g=> {\n            g.beginFill(`0xfe7f2d`);\n            g.drawRoundedRect(-21,-21,42,42,50);\n            g.endFill();\n          }}\n        >\n          <Text \n            text={`攻`} \n            x={0} y={0}\n            anchor={0.5}\n            style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n              fontSize: 24,\n              fill:'#ffffff',\n            })}/>\n        </Graphics>\n        {/* target */}\n        <Sprite\n          width={50}\n          height={50}\n          x={50}\n          y={15}\n          image={loader.resources[`${target.name}-head-default`].data}\n        />\n        <Text \n          text={`${targetHp} / ${target.fullValue.hp}`}\n          anchor={{x:1,y:0}} \n          x={320} y={10}\n          style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n            fontSize: 18,\n            fill:'#e71d36',\n          })}/>\n        <Graphics\n          x={320} y={35}\n          zIndex={1}\n          draw={g=> {\n            g.beginFill(`0x333533`);\n            g.drawRoundedRect(0,0,-200,10,0);\n            g.endFill();\n          }}\n        />\n        <Graphics\n          x={320} y={35}\n          zIndex={2}\n          draw={g=> {\n            g.beginFill(`0xe71d36`);\n            g.drawRoundedRect(0,0,-200,10,0);\n            g.endFill();\n          }}\n        />\n        {/* attacker */}\n        <Sprite\n          width={50}\n          height={50}\n          x={690}\n          y={15}\n          image={loader.resources[`${attacker.name}-head-default`].data}\n        />\n        <Text \n          text={`${attacker.hp} / ${attacker.fullValue.hp}`}\n          anchor={{x:1,y:0}} \n          x={670} y={10}\n          style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n            fontSize: 18,\n            fill:'#e71d36',\n          })}/>\n        <Graphics\n          x={670} y={35}\n          zIndex={1}\n          draw={g=> {\n            g.beginFill(`0x333533`);\n            g.drawRoundedRect(0,0,-200,10,0);\n            g.endFill();\n          }}\n        />\n        <Graphics\n          x={670} y={35}\n          zIndex={2}\n          draw={g=> {\n            g.beginFill(`0xe71d36`);\n            g.drawRoundedRect(0,0,-200,10,0);\n            g.endFill();\n          }}\n        />\n      </Container>\n    </Graphics>\n  };\n  // Bottombar\n  const Bottombar = ()=> {\n    return <Graphics \n      x={-400}\n      y={150}\n      zIndex={98}\n      draw={g=> {\n        g.beginFill(`0x000f23`);\n        g.drawRoundedRect(0,0,800,150,0);\n        g.endFill();\n      }}\n    ></Graphics>\n  };\n  // CreateContent\n  const CreateContent = ()=>{\n    const [ BGstatus, setBGstatus ] = useState({ type:'STANDBY' });\n    const [ BGprop, setBGpops ] = useState({ toX:400, duration: 20000 });\n    const [ SkBGprop, setSkBGpops ] = useState({ toX:400, duration: 500 });\n    return <Container sortableChildren={true}>\n      {BGstatus.type==='STANDBY'&&<Spring\n        from={{ x:-400, y:-100 }}\n        to={{ x: BGprop.toX, y:-100 }}\n        config={{ duration: BGprop.duration }}\n        onRest={()=>{\n          if(BGprop.toX===-400){\n            setBGpops({\n              toX:400,\n              duration: 20000\n            });\n          }else {\n            setBGpops({\n              toX:-400,\n              duration:-1000\n            });\n          };\n        }}\n      >\n        {props => \n          <Sprite\n            zIndex={1}\n            width={1600}\n            height={500}\n            anchor={0.5}\n            image={loader.resources[`${stageStatus}-BG`].data}\n            {...props}\n        />}\n      </Spring>}\n      {BGstatus.type==='SKILL'&&<Spring\n        from={{ x:-400, y:-100 }}\n        to={{ x: SkBGprop.toX, y:-100 }}\n        config={{ duration: SkBGprop.duration }}\n        onRest={()=>{\n          if(SkBGprop.toX===-400){\n            setSkBGpops({\n              toX:400,\n              duration: 500\n            });\n          }else {\n            setSkBGpops({\n              toX:-400,\n              duration:-1000\n            });\n          };\n        }}\n      >\n        {props => \n          <Sprite\n            zIndex={1}\n            width={1600}\n            height={500}\n            anchor={0.5}\n            image={loader.resources[`${stageStatus}-BG`].data}\n            {...props}\n        />}\n      </Spring>}\n      {animeShow.type===\"USER\"?\n        <TopBar\n          attacker={chess[typeof(animeShow.attacker.key)!=='number'?0:animeShow.attacker.key]}\n          target={enemyChess[typeof(animeShow.target.key)!=='number'?0:animeShow.target.key]}\n        />:\n        <TopBar\n          attacker={enemyChess[typeof(animeShow.target.key)!=='number'?0:animeShow.target.key]}\n          target={chess[typeof(animeShow.attacker.key)!=='number'?0:animeShow.attacker.key]}\n        />\n      }\n      <ChessSkillShow\n        attacker={chess[typeof(animeShow.attacker.key)!=='number'?0:animeShow.attacker.key]}\n        skill={animeShow.attacker.skill}\n        setBGstatus={setBGstatus}\n      />\n      <Bottombar/>\n      <Graphics\n        zIndex={99}\n        interactive={true}\n        buttonMode={true}\n        x={315}\n        y={255}\n        draw={g=> {\n          g.beginFill(`0x586f7c`);\n          g.drawRoundedRect(-6,-3,75,30,6);\n          g.endFill();\n        }}\n        pointertap={()=>{\n          setAnimeShow({\n            status:false,\n            type:'',\n            attacker:{ key:'', skill:{}, prevSP:0 },\n            target:{ key:'', isHit:false, prevLife:0 }\n          });\n          // result check line\n          if(animeShow.type===\"USER\" &&\n            enemyChess[target.key].hp <= 0\n          ){\n            dispatch(enemyChessDead({ key:target.key }));\n            setUsualTip({\n              title:`已擊敗 ${enemyChess[target.key].cn}!`,\n              status:true,\n            });\n          }else {\n            setMoveStep(true);\n          };\n        }}\n      >\n        <Text text={`戰鬥 off`} x={0} y={0}\n          style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n            fontSize: 18,\n            fill:'#c0fdff',\n          })}\n        />\n      </Graphics>\n    </Container>\n  };\n  return <Graphics\n    x={400}\n    y={300}\n    zIndex={99}\n    draw={g=> {\n      g.beginFill(`0x011627`);\n      g.drawRoundedRect(-400,-300,800,600,0);\n      g.endFill();\n    }}\n  >\n    <CreateContent/>\n  </Graphics>\n};","import React,{ useState } from 'react';\nimport { fromJS } from 'immutable';\nimport { Graphics, Text } from '@inlet/react-pixi/animated';\nimport { GetMove, GetAttack } from '../../reducer/map';\nimport { chessSelected, chessCheckStatus } from \"../../reducer/chess\";\nimport * as PIXI from \"pixi.js\";\n\nexport const ChessUIBoard = ({\n  ChessData,\n  ChessVal,\n  ChessKey,\n  EnemyChessData,\n  positionX,\n  positionY,\n  setCurrentChess,\n  setMoveStep,\n  dispatch\n})=> {\n  const specialPosition = {\n    x: 720,\n    y: 490\n  };\n  const forMoveArray = [];\n  const forAttackArray = [];\n  const [textInforArray, setTextInforArray] = useState(fromJS([{\n      id:1, \n      title:\"移動\",\n      textColor:['#ffffff', '#ffffff']\n    },{ \n      id:2,\n      title:\"攻擊\",\n      textColor:['#ffffff', '#ffffff']\n    },{ \n      id:3,\n      title:\"狀態\",\n      textColor:['#ffffff', '#ffffff']\n    },{ \n      id:4,\n      title:\"返回\",\n      textColor:['#ffffff', '#ffffff']\n  }]));\n  ChessData.map((v)=>{\n    return (\n      forMoveArray.push({ x:v.x, y:v.y }),\n      forAttackArray.push({ x:v.x, y:v.y })\n    );\n  });\n  EnemyChessData.map((v)=>{\n    return forMoveArray.push({ x:v.x, y:v.y });\n  });\n  const compareAttack = (\n    chessX,\n    chessY,\n    chessAtk\n  )=>{\n    let isAttack = false;\n    const isDebutEnemy = EnemyChessData.filter(v=>v.debut);\n    const limitPosition = { x:19, y:14 };\n    const positionRange = [];\n    for(let i=0; i < chessAtk; i++){\n      const getaddX = (chessX+(i+1)>=limitPosition.x) ? limitPosition.x : chessX+(i+1);\n      const getaddY = (chessY+(i+1)>=limitPosition.y) ? limitPosition.y : chessY+(i+1);\n      const getlessX = (chessX-(i+1)<=0) ? 0 : chessX-(i+1);\n      const getlessY = (chessY-(i+1)<=0) ? 0 : chessY-(i+1);\n      positionRange.push(\n        { x:getaddX, y:chessY },\n        { x:getlessX, y:chessY },\n        { x:chessX, y:getaddY },\n        { x:chessX, y:getlessY }\n      );\n    };\n    isDebutEnemy.map(val=>{\n      return positionRange.map(v=>{\n        if(val.x===v.x&&val.y===v.y){\n          return isAttack = true;\n        }else return null\n      })\n    });\n    return isAttack;\n  };\n  const CreateText = ({ noop })=>{\n    const isAttack = compareAttack(ChessVal.x,ChessVal.y,ChessVal.attack);\n    return textInforArray.map((val,key)=>{\n      return <Text\n        key={key}\n        interactive={\n          (val.get('id')===2)?\n          isAttack : true\n        }\n        buttonMode={true}\n        text={val.get('title')}\n        x={10}\n        y={5+(25*key)}\n        style={new PIXI.TextStyle({\n          fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 20,\n          fill:((val.get('id')===2)&&!isAttack)? '#8d99ae' :val.get('textColor').toJS(),\n        })}\n        pointerover={()=>{\n          setTextInforArray(prev=>\n            prev.setIn([key,'textColor',1],'#00ff99')\n          );\n        }}\n        pointerout={()=>{\n          setTextInforArray(prev=>\n            prev.setIn([key,'textColor',1],'#ffffff')\n          );\n        }}\n        pointertap={(e)=>{\n          switch (val.get('id')) {\n            case 1:\n              setCurrentChess({ \n                key:ChessKey,\n                type:\"MOVE\"\n              });\n              dispatch(GetMove({\n                position:{ \n                  x:ChessVal.x, \n                  y:ChessVal.y,\n                },\n                step:ChessVal.step,\n                changeColor:'0x06d6a0',\n                currentChessPositions: forMoveArray\n              }));\n              dispatch(chessSelected({\n                key:ChessKey\n              }));\n              break;\n            case 2:\n              setCurrentChess({ \n                key:ChessKey,\n                type:\"ATTACK\"\n              });\n              dispatch(chessSelected({\n                key:ChessKey\n              }));\n              dispatch(GetAttack({\n                position:{ \n                  x:ChessVal.x, \n                  y:ChessVal.y,\n                },\n                step:ChessVal.attack,\n                changeColor:'0x00bbf9',\n                currentChessPositions: forAttackArray\n              }));\n              break;\n            case 3:\n              setCurrentChess({ \n                key:ChessKey,\n                type:\"STATUS\"\n              });\n              dispatch(chessCheckStatus({\n                key:ChessKey\n              }));\n              dispatch(chessSelected({\n                key:ChessKey\n              }));\n              break;\n            case 4 :\n              setMoveStep(true);\n              dispatch(chessSelected({\n                key:ChessKey\n              }));\n              break;\n            default:\n              return console.log(e.target)\n          };\n        }}\n      />\n    }\n  )};\n  return <Graphics\n    x={positionX!==800?positionX:specialPosition.x}\n    y={(positionY!==560&&positionY!==520)?positionY:specialPosition.y}\n    zIndex={3}\n    draw={g=> {\n      g.lineStyle(1,`0xffffff`,1);\n      g.beginFill(`0x22223b`);\n      g.drawRoundedRect(0,0,60,110,8);\n      g.endFill();\n    }}\n  ><CreateText/></Graphics>\n};","import React from 'react';\nimport { Sprite, Graphics, Text } from '@inlet/react-pixi/animated';\nimport { loader } from '../DataLoader';\nimport * as PIXI from \"pixi.js\";\n\nexport const ChessStatus = ({\n  ChessData,\n  ChessKey,\n  CheckStatus,\n  setMoveStep,\n  dispatch\n})=> {\n  const CreateSkillList = ()=>{\n    return ChessData.skill.map((value,key)=>{\n        return <React.Fragment key={key}>\n        <Text\n          x={-40}\n          y={-70+(key*22)}\n          text={`${value.name}`}\n          style={new PIXI.TextStyle({\n            fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n            fontSize: 16,\n            fill:'#ffb700',\n          })}\n        />\n        <Text\n          x={-35+(value.name.length * 16)}\n          y={-70+(key*22)}\n          text={`ATK:${value.atk}(${value.sp}SP)`}\n          style={new PIXI.TextStyle({\n            fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n            fontSize: 14,\n            fill:'#ffffff',\n          })}\n        />\n      </React.Fragment>\n    });  \n  };\n  return <Graphics\n    x={400}\n    y={300}\n    zIndex={99}\n    draw={g=> {\n      g.lineStyle(1,`0xffffff`,1);\n      g.beginFill(`0x22223b`);\n      g.drawRoundedRect(-250,-150,500,300,8);\n      g.endFill();\n    }}\n  >\n    <Graphics\n      x={220}\n      y={-120}\n      interactive={true}\n      buttonMode={true}\n      pointertap={(e)=>{\n        setMoveStep(true);\n        dispatch(CheckStatus({\n          key:ChessKey\n        }));\n      }}\n      draw={g=> {\n        g.beginFill(`0x02040f`);\n        g.drawRoundedRect(-15,-15,30,30,50);\n        g.endFill();\n      }}\n    >\n      <Text\n        anchor={0.5}\n        text={`X`}\n        style={new PIXI.TextStyle({\n          fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 16,\n          fill:'#ffffff',\n        })}\n      />\n    </Graphics>\n    <Sprite\n      width={80}\n      height={80}\n      x={-200}\n      y={-90}\n      image={loader.resources[`${ChessData.name}-head-default`].data}\n    />\n    <Text\n      x={-200}\n      y={10}\n      text={ChessData.cn}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 16,\n        fill:'#ffffff',\n      })}\n    />\n    <Text\n      x={-200}\n      y={35}\n      text={`HP:`}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 16,\n        fill:'#ffffff',\n      })}\n    />\n    <Text\n      x={-170}\n      y={35}\n      text={`${ChessData.hp} / ${ChessData.fullValue.hp}`}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 16,\n        fill:'#ff6b6b',\n      })}\n    />\n    <Text\n      x={-200}\n      y={60}\n      text={`SP:`}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 16,\n        fill:'#ffffff',\n      })}\n    />\n    <Text\n      x={-170}\n      y={60}\n      text={`${ChessData.sp} / ${ChessData.fullValue.sp}`}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 16,\n        fill:'#0466c8',\n      })}\n    />\n    <Text\n      x={-50}\n      y={-95}\n      text={'招式'}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 16,\n        fill:'#ffffff',\n      })}\n    />\n    <CreateSkillList/>\n  </Graphics>\n};","import React from 'react';\nimport { Sprite } from '@inlet/react-pixi/animated';\nimport { loader } from '../DataLoader';\n// reducers\nimport { MoveSelect } from '../../reducer/map';\nimport { chessSelected, chessCheckStatus } from \"../../reducer/chess\";\n// other part\nimport { ChessUIBoard } from \"./ChessUIBoard\";\nimport { ChessStatus } from \"../Common/ChessStatus\";\n\nexport const Chess = ({\n  chessProps\n})=>{\n  const { \n    chess,\n    enemyChess,\n    moveStep=Boolean,\n    setMoveStep,\n    setCurrentChess,\n    dispatch\n  } = chessProps;\n  return chess.map((value,key)=>{\n    return <React.Fragment key={key}>\n      {value.debut&&<Sprite\n        interactive={moveStep}\n        buttonMode={true}\n        width={40}\n        height={40}\n        x={value.x*40}\n        y={value.y*40}\n        zIndex={2}\n        pointerover={()=>{\n          dispatch(MoveSelect({\n            position:{ \n              x:value.x, \n              y:value.y,\n            },\n            step:value.step,\n            changeColor:'0x06d6a0'\n          }));\n        }}\n        pointerout={()=>{\n          dispatch(MoveSelect({\n            position:{ \n              x:value.x, \n              y:value.y,\n            },\n            step:value.step,\n            changeColor:'0x383838'\n          }));\n        }}\n        pointertap={()=>{\n          setMoveStep(false);\n          dispatch(chessSelected({\n            key:key\n          }));\n          dispatch(MoveSelect({\n            position:{ \n              x:value.x, \n              y:value.y,\n            },\n            step:value.step,\n            changeColor:'0x383838'\n          }));\n        }}\n        image={loader.resources[`${value.name}-head-default`].data}\n      />}\n      {value.boardStatus&&<ChessUIBoard\n        ChessData={chess}\n        ChessVal={value}\n        ChessKey={key}\n        EnemyChessData={enemyChess}\n        positionX={(value.x*40)+40}\n        positionY={(value.y*40)}\n        setCurrentChess={setCurrentChess}\n        setMoveStep={setMoveStep}\n        dispatch={dispatch}\n      />}\n      {value.checkStatus&&<ChessStatus\n        ChessData={value}\n        ChessKey={key}\n        CheckStatus={chessCheckStatus}\n        setMoveStep={setMoveStep}\n        dispatch={dispatch}\n      />}\n    </React.Fragment>\n  })\n};","import React,{ useState } from 'react';\nimport { fromJS } from 'immutable';\nimport { Graphics, Text } from '@inlet/react-pixi/animated';\nimport { enemyChessSelected, enemyChessCheckStatus } from \"../../reducer/enemyChess\";\nimport * as PIXI from \"pixi.js\";\n\nexport const EnemyChessUIBoard = ({\n  ChessKey,\n  positionX,\n  positionY,\n  setMoveStep,\n  dispatch\n})=> {\n  const specialPosition = {\n    x: 720,\n    y: 535\n  };\n  const [textInforArray, setTextInforArray] = useState(fromJS([{\n      id:1,\n      title:\"狀態\",\n      textColor:['#ffffff', '#ffffff']\n    },{ \n      id:2,\n      title:\"返回\",\n      textColor:['#ffffff', '#ffffff']\n  }]));\n  const CreateText = ({ noop })=>{\n    return textInforArray.map((val,key)=>{\n      return <Text\n        key={key}\n        interactive={true}\n        buttonMode={true}\n        text={val.get('title')}\n        x={10}\n        y={5+(25*key)}\n        style={new PIXI.TextStyle({\n          fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 20,\n          fill:val.get('textColor').toJS(),\n        })}\n        pointerover={()=>{\n          setTextInforArray(prev=>\n            prev.setIn([key,'textColor',1],'#9d4edd')\n          );\n        }}\n        pointerout={()=>{\n          setTextInforArray(prev=>\n            prev.setIn([key,'textColor',1],'#ffffff')\n          );\n        }}\n        pointertap={(e)=>{\n          switch (val.get('id')) {\n            case 1:\n              dispatch(enemyChessCheckStatus({\n                key:ChessKey\n              }));\n              dispatch(enemyChessSelected({\n                key:ChessKey\n              }));\n              break;\n            case 2 :\n              setMoveStep(true);\n              dispatch(enemyChessSelected({\n                key:ChessKey\n              }));\n              break;\n            default:\n              return console.log(e.target)\n          };\n        }}\n      />\n    }\n  )};\n  return <Graphics\n    x={positionX!==800?positionX:specialPosition.x}\n    y={(positionY!==560&&positionY!==520)?positionY:specialPosition.y}\n    zIndex={3}\n    draw={g=> {\n      g.lineStyle(1,`0xffffff`,1);\n      g.beginFill(`0x22223b`);\n      g.drawRoundedRect(0,0,60,62,8);\n      g.endFill();\n    }}\n  ><CreateText/></Graphics>\n}","import React from 'react';\nimport { Sprite } from '@inlet/react-pixi/animated';\nimport { loader } from '../DataLoader';\n// reducers\nimport { enemyChessSelected, enemyChessCheckStatus } from \"../../reducer/enemyChess\";\n// other part\nimport { EnemyChessUIBoard } from \"./EnemyChessUIBoard\";\nimport { ChessStatus } from \"../Common/ChessStatus\";\n\nexport const EnemyChess = ({\n  enemyChessProps\n})=>{\n  const { \n    enemyChess,\n    moveStep=Boolean,\n    setMoveStep,\n    dispatch\n  } = enemyChessProps;\n  return enemyChess.map((value,key)=>{\n    return <React.Fragment key={key}>\n      {value.debut&&<Sprite\n        interactive={moveStep}\n        buttonMode={true}\n        width={40}\n        height={40}\n        x={value.x*40}\n        y={value.y*40}\n        zIndex={2}\n        pointertap={()=>{\n          setMoveStep(false);\n          dispatch(enemyChessSelected({\n            key:key\n          }));\n        }}\n        image={loader.resources[`${value.name}-head-default`].data}\n      />}\n      {value.boardStatus&&<EnemyChessUIBoard\n        ChessKey={key}\n        positionX={(value.x*40)+40}\n        positionY={(value.y*40)}\n        setMoveStep={setMoveStep}\n        dispatch={dispatch}\n      />}\n      {value.checkStatus&&<ChessStatus\n        ChessData={value}\n        ChessKey={key}\n        CheckStatus={enemyChessCheckStatus}\n        setMoveStep={setMoveStep}\n        dispatch={dispatch}\n      />}\n    </React.Fragment>\n  })\n};\n","import React,{ useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Stage, Container } from '@inlet/react-pixi/animated';\n// reducers\nimport { stageDebut } from \"../reducer/chess\";\nimport { enemyStageDebut } from \"../reducer/enemyChess\";\n// other part\nimport { CreateCheckerboard } from './Common/Checkerboard';\nimport { ConfirmTip } from \"./Common/ConfirmTips\";\nimport { UsualTip } from \"./Common/UsualTip\";\nimport { BattleBoard } from \"./Common/BattleBoard\";\nimport { BattleAnimeShow } from \"./Common/BattleAnimeShow\";\nimport { Chess } from \"../components/Chess/Chess\";\nimport { EnemyChess } from \"../components/EnemyChess/EnemyChess\";\n// rule\nimport { stageRule } from \"../constants/stageRule\";\nexport const Canvas = ()=> {\n  const [ stageStatus, setStageStatus ] = useState('stageOne');\n  const [ currentChess, setCurrentChess ] = useState({\n    key:0,\n    type:\"MOVE\"\n  });\n  const [ usualTip, setUsualTip ] = useState({\n    title:``,\n    status:false,\n  })\n  const [ tipStatus, setTipStatus ] = useState({\n    title:``,\n    status:false,\n    position:{\n      x:0,y:0\n    },\n  });\n  const [ battleInfo, setBattleInfo ] = useState({\n    status:false,\n    attacker:{ key:'' },\n    target:{ key:'' }\n  });\n  const [ animeShow, setAnimeShow ] = useState({\n    status:false,\n    type:'',\n    attacker:{ key:'', skill:{}, prevSP:0 },\n    target:{ key:'', isHit:false, prevLife:0 }\n  });\n\n  // const [ animeShow, setAnimeShow ] = useState({\n  //   status:true,\n  //   type:'USER',\n  //   attacker:{ key:0, skill:{\n  //     name: \"斬擊\", atk: 50, sp: 0, hitfix: 0\n  //   }, prevSP:100 },\n  //   target:{ key:0, isHit:false, prevLife:2000 }\n  // });\n\n\n  const [ moveStep, setMoveStep ] = useState(true);\n  const chessMap = useSelector(state=>state.chessMap);\n  const chess = useSelector(state=>state.chess);\n  const enemyChess = useSelector(state=>state.enemyChess);\n  const dispatch = useDispatch();\n  // debut\n  useEffect(()=>{\n    dispatch(stageDebut({ \n      isDebutChess:stageRule.getIn([stageStatus,'debutChess'])\n    }));\n    dispatch(enemyStageDebut({ \n      isDebutChess:stageRule.getIn([stageStatus,'debutEnemyChess'])\n    }));\n  },[ dispatch, stageStatus ]);\n  return <Stage\n    width={800}\n    height={600}\n    options={{\n      autoDensity: true, \n      antialias: true,\n      backgroundColor:0x01262a\n    }}>\n    <Container sortableChildren={true}>\n      <CreateCheckerboard reduxProps={{ \n        chess,\n        enemyChess,\n        chessMap,\n        currentChess,\n        dispatch,\n        setTipStatus,\n        setMoveStep,\n        setBattleInfo\n      }}/>\n      <Chess chessProps={{\n        chess,\n        enemyChess,\n        moveStep,\n        setMoveStep,\n        setCurrentChess,\n        dispatch\n      }}/>\n      <EnemyChess enemyChessProps={{\n         enemyChess,\n         moveStep,\n         setMoveStep,\n         dispatch\n      }}/>\n    </Container>\n    {tipStatus.status&&<ConfirmTip \n      props={{\n        chess,\n        currentChess,\n        tipStatus,\n        dispatch,\n        setMoveStep,\n        setTipStatus\n      }}\n    />}\n    {usualTip.status&&\n      <UsualTip\n        props={{\n          stageStatus,\n          chess,\n          currentChess,\n          enemyChess,\n          usualTip,\n          setMoveStep,\n          setUsualTip,\n          setCurrentChess\n        }}\n      />}\n    {battleInfo.status&&\n      <BattleBoard\n        props={{\n          battleInfo,\n          setMoveStep,\n          setBattleInfo,\n          setAnimeShow,\n          dispatch\n        }}\n      />}\n    {animeShow.status&&\n      <BattleAnimeShow \n        props={{\n          stageStatus,\n          animeShow,\n          chess,\n          enemyChess,\n          setMoveStep,\n          setAnimeShow,\n          setUsualTip,\n          dispatch\n        }}\n      />}\n  </Stage>\n};","import React, { useState, useEffect } from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport { Canvas } from './Canvas';\nimport { loader } from './DataLoader';\nconst GlobalStyle = createGlobalStyle`\n  body { background:#1d2430; }\n`;\nconst StyledApp = styled.div`\n  position: relative;\n  display:flex;\n  align-items:center;\n  justify-content:center;\n  width:100%;\n  height:100vh;\n  .loading {\n    color: #fff;\n    font-size:24px;\n  }\n`;\nexport const App = ()=> {\n  const [ dataIsDone, setDataIsDone ] = useState(false);\n  useEffect(()=>{\n    loader.onComplete.add(()=>{\n      setDataIsDone(true);\n    });\n  });\n  return <StyledApp>\n    <GlobalStyle/>\n    {dataIsDone?<Canvas />:\n      <span className=\"loading\">Loading..</span>}\n  </StyledApp>\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, combineReducers } from 'redux';\nimport chess from './chess';\nimport chessMap from './map';\nimport enemyChess from './enemyChess';\nconst rootReducer = combineReducers({\n  chess,\n  chessMap,\n  enemyChess\n});\nexport const store = createStore(rootReducer);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './reducer/index';\n\nReactDOM.render(<Provider store={store}><App /></Provider>,document.getElementById('root'));\nreportWebVitals();\n"],"sourceRoot":""}