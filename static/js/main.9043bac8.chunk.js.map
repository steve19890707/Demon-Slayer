{"version":3,"sources":["components/Checkerboard.js","components/reducer/map.js","components/DataLoader.js","components/Canvas.js","components/App.js","reportWebVitals.js","components/reducer/chess.js","components/reducer/index.js","index.js"],"names":["texture","PIXI","WHITE","CreateCheckerboard","chessMap","reduxProps","map","value","key","v","k","interactive","isInteractive","buttonMode","width","height","x","y","tint","color","mapLimit","createInitialState","method","list","i","push","createStraightLine","traverse","createSlice","name","initialState","reducers","MoveSelect","state","action","payload","position","step","changeColor","actions","loader","hostname","window","location","add","load","Canvas","useSelector","chess","dispatch","useDispatch","options","autoDensity","antialias","backgroundColor","pointerover","pointerout","pointertap","console","log","image","resources","data","GlobalStyle","createGlobalStyle","StyledApp","styled","div","App","useState","dataIsDone","setDataIsDone","useEffect","onComplete","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","chessMove","rootReducer","combineReducers","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9043bac8.chunk.js","sourcesContent":["import React, {} from 'react';\nimport * as PIXI from \"pixi.js\";\nimport { Sprite, Container } from '@inlet/react-pixi';\nconst texture = PIXI.Texture.WHITE;\nexport const CreateCheckerboard = ({\n  reduxProps\n})=>{\n  const { chessMap } = reduxProps;\n  return <Container>\n    {chessMap.map((value,key)=> {\n      return value.map((v,k)=>{\n        return <Sprite\n          interactive={v.isInteractive}\n          buttonMode={v.isInteractive}\n          key={k}\n          width={40}\n          height={40}\n          x={v.x*40}\n          y={v.y*40}\n          tint={v.color}\n          texture={texture}\n        />\n      });\n    })}\n  </Container>\n};","import { createSlice } from '@reduxjs/toolkit';\nconst mapLimit = { x:20, y:15 };\nconst createTraverseLine = (traverse=0,color='')=>{\n  const list = [];\n  for(let i=0;i<mapLimit.x;i++){\n    list.push({\n      x:i,\n      y:traverse,\n      color:color,\n      isInteractive:false\n    });\n  };\n  return list;\n};\nconst createStraightLine = ( method=()=>{} )=>{\n  const list = [];\n  for(let i=0;i<mapLimit.y;i++){\n    list.push(method(i,'0x383838'));\n  };\n  return list;\n};\nconst createInitialState = createStraightLine(createTraverseLine);\nconst chessMap = createSlice({\n  name:'chessMap',\n  initialState: createInitialState,\n  reducers:{\n    MoveSelect: (state, action)=>{\n      const { position, step, changeColor } = action.payload;\n      for(let i=0;i<(step+1);i++){\n        if(position.x+i<=(mapLimit.x-1)){\n          state[position.y][position.x+i].color=changeColor;\n        };\n        if(position.y+i<=(mapLimit.y-1)){\n          state[position.y+i][position.x].color=changeColor;\n        };\n        if(position.x-i>=0){\n          state[position.y][position.x-i].color=changeColor;\n        };\n        if(position.y-i>=0){\n          state[position.y-i][position.x].color=changeColor;\n        };\n      }\n    }\n  }\n});\nexport default chessMap.reducer;\nexport const { MoveSelect } = chessMap.actions;\n","import * as PIXI from \"pixi.js\";\nexport const loader = new PIXI.Loader();\nconst hostname = window.location.hostname==='localhost'?'./Demon-Slayer/':'./';\n\nloader\n  .add('Tanjirou-head-default',`${hostname}imgs/Tanjirou/head-default.jpg`)\n  .add('Tanjirou-fight',`${hostname}imgs/Tanjirou/fight.png`)\n  .add('Nezuko-head-default',`${hostname}imgs/Nezuko/head-default.jpg`)\n  .add('Nezuko-fight',`${hostname}imgs/Nezuko/fight.png`)\n  .add('Inosuke-head-default',`${hostname}imgs/Inosuke/head-default.jpg`)\n  .add('Inosuke-fight',`${hostname}imgs/Inosuke/fight.png`)\n  .load();\n","import React from 'react';\nimport { Stage, Sprite } from '@inlet/react-pixi/animated';\nimport { CreateCheckerboard } from '../components/Checkerboard';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { MoveSelect } from '../components/reducer/map';\nimport { loader } from './DataLoader';\nexport const Canvas = ()=> {\n  const chessMap = useSelector(state=>state.chessMap);\n  const chess = useSelector(state=>state.chess);\n  const dispatch = useDispatch();\n  return <Stage\n    width={800}\n    height={600}\n    options={{\n      autoDensity: true, \n      antialias: true,\n      backgroundColor:0x01262a\n    }}>\n    <CreateCheckerboard reduxProps={{ chessMap }}/>\n    {chess.map((value,key)=>{\n      return <Sprite\n        interactive={true}\n        buttonMode={true}\n        key={key}\n        width={40}\n        height={40}\n        x={value.x*40}\n        y={value.y*40}\n        pointerover={()=>{\n          dispatch(MoveSelect({\n            position:{ \n              x:value.x, \n              y:value.y,\n            },\n            step:value.step,\n            changeColor:'0x8bc34a'\n          }));\n        }}\n        pointerout={()=>{\n          dispatch(MoveSelect({\n            position:{ \n              x:value.x, \n              y:value.y,\n            },\n            step:value.step,\n            changeColor:'0x383838'\n          }));\n        }}\n        pointertap={()=>console.log(`click`)}\n        image={loader.resources[`${value.name}-head-default`].data}\n    />})}\n  </Stage>\n};","import React, { useState, useEffect } from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport { Canvas } from './Canvas';\nimport { loader } from './DataLoader';\nconst GlobalStyle = createGlobalStyle`\n  body { background:#1d2430; }\n`;\nconst StyledApp = styled.div`\n  position: relative;\n  display:flex;\n  align-items:center;\n  justify-content:center;\n  width:100%;\n  height:100vh;\n  .loading {\n    color: #fff;\n    font-size:24px;\n  }\n`;\nexport const App = ()=> {\n  const [ dataIsDone, setDataIsDone ] = useState(false);\n  useEffect(()=>{\n    loader.onComplete.add(()=>{\n      setDataIsDone(true);\n    });\n  });\n  return <StyledApp>\n    <GlobalStyle/>\n    {dataIsDone?<Canvas />:\n      <span className=\"loading\">Loading..</span>}\n  </StyledApp>\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createSlice } from '@reduxjs/toolkit';\nconst chess = createSlice({\n  name:'chess',\n  initialState:[\n    {\n      name:'Tanjirou',\n      x:3,\n      y:10,\n      step:3\n    },{\n      name:'Nezuko',\n      x:3,\n      y:12,\n      step:2\n    },{\n      name:'Inosuke',\n      x:4,\n      y:11,\n      step:4\n    }\n  ],\n  reducers:{\n    chessMove: (state, action)=>{\n      console.log(state)\n    }\n  }\n});\nexport default chess.reducer;\nexport const { chessMove } = chess.actions;","import { createStore, combineReducers } from 'redux';\nimport chess from './chess';\nimport chessMap from './map';\nconst rootReducer = combineReducers({\n  chess,\n  chessMap\n});\nexport const store = createStore(rootReducer);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './components/reducer/index';\n\nReactDOM.render(<Provider store={store}><App /></Provider>,document.getElementById('root'));\nreportWebVitals();\n"],"sourceRoot":""}