{"version":3,"sources":["reducer/chess.js","reducer/enemyChess.js","reducer/map.js","components/Common/Checkerboard.js","components/Common/ConfirmTips.js","components/DataLoader.js","components/Common/BattleBoard.js","components/Chess/ChessUIBoard.js","components/Common/ChessStatus.js","components/Chess/Chess.js","components/EnemyChess/EnemyChessUIBoard.js","components/EnemyChess/EnemyChess.js","constants/stageRule.js","components/Canvas.js","components/App.js","reportWebVitals.js","reducer/index.js","index.js"],"names":["basicCommon","x","y","checkStatus","boardStatus","debut","roundAttack","chess","createSlice","name","initialState","cn","step","attack","hp","sp","dodge","fullValue","skill","atk","hitfix","reducers","stageDebut","state","actions","isDebutChess","payload","map","value","key","v","get","chessMove","changeX","changeY","chessSelected","chessCheckStatus","enemyChess","enemyStageDebut","enemyChessSelected","enemyChessCheckStatus","mapLimit","createInitialState","method","list","i","push","createStraightLine","traverse","color","alpha","zIndex","isInteractive","chessMap","MoveSelect","action","position","changeColor","alphaVal","GetMove","currentChessPositions","GetAttack","texture","PIXI","WHITE","CreateCheckerboard","reduxProps","currentChess","dispatch","setTipStatus","setMoveStep","setBattleInfo","Fragment","k","interactive","buttonMode","width","height","tint","pointertap","type","title","status","isMatch","checkMatchAttackPosition","targetData","item","getCurrentEnemy","attaker","target","acttack","ConfirmTip","props","tipStatus","draw","g","lineStyle","beginFill","drawRoundedRect","endFill","text","anchor","style","fontFamily","fontSize","fill","prev","loader","hostname","window","location","add","load","BattleBoard","battleInfo","useState","atkSelectd","setAtkSelectd","CreateAttakerInfo","pX","pY","data","sortableChildren","image","resources","skillCanUse","fontWeight","CreateTargetInfo","ForecastInfo","ChessUIBoard","ChessData","ChessVal","ChessKey","EnemyChessData","positionX","positionY","setCurrentChess","specialPosition","forMoveArray","forAttackArray","fromJS","id","textColor","textInforArray","setTextInforArray","CreateText","noop","isAttack","chessX","chessY","chessAtk","isDebutEnemy","filter","limitPosition","positionRange","getaddX","getaddY","getlessX","getlessY","val","compareAttack","toJS","pointerover","setIn","pointerout","e","console","log","ChessStatus","CheckStatus","CreateSkillList","length","Chess","chessProps","moveStep","Boolean","EnemyChessUIBoard","EnemyChess","enemyChessProps","stageRule","stageOne","debutChess","debutEnemyChess","stageTwo","Canvas","stageStatus","useSelector","useDispatch","useEffect","getIn","options","autoDensity","antialias","backgroundColor","GlobalStyle","createGlobalStyle","StyledApp","styled","div","App","dataIsDone","setDataIsDone","onComplete","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.85e8d73d.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nconst basicCommon = {\n  x:0,\n  y:0,\n  checkStatus:false,\n  boardStatus:false,\n  debut:false,\n  roundAttack:false,\n};\nconst chess = createSlice({\n  name:'chess',\n  initialState:[\n    {\n      name:'Tanjirou',\n      cn:'竃門 碳治郎',\n      step:3,\n      attack:2,\n      hp:1500,\n      sp:100,\n      dodge:65,\n      fullValue:{\n        hp:1500,\n        sp:100\n      },\n      skill:[{ \n        name:'斬擊',\n        atk:50,\n        sp:0,\n        hitfix:0\n      },{ \n        name:'叄之型―流流舞',\n        atk:200,\n        sp:5,\n        hitfix:10\n      },{ \n        name:'捌之型―滝壺',\n        atk:200,\n        sp:5,\n        hitfix:5\n      },{\n        name:'拾之型―生生流轉',\n        atk:500,\n        sp:10,\n        hitfix:20\n      }],\n      ...basicCommon\n    },{\n      name:'Nezuko',\n      step:2,\n      attack:1,\n      hp:2200,\n      sp:200,\n      dodge:50,\n      fullValue:{\n        hp:2200,\n        sp:200\n      },\n      skill:[{ \n        name:'爪擊',\n        atk:50,\n        sp:0,\n        hitfix:0\n      },{ \n        name:'踢擊',\n        atk:120,\n        sp:5,\n        hitfix:0\n      },{ \n        name:'血鬼術',\n        atk:1000,\n        sp:100,\n        hitfix:0\n      }],\n      ...basicCommon\n    },{\n      name:'Inosuke',\n      cn:'嘴平 伊之助',\n      step:4,\n      attack:3,\n      hp:1800,\n      sp:80,\n      dodge:40,\n      fullValue:{\n        hp:1800,\n        sp:80\n      },\n      skill:[{ \n        name:'斬擊',\n        atk:50,\n        sp:0,\n        hitfix:0\n      },{ \n        name:'壹之牙―穿透刺射',\n        atk:120,\n        sp:2,\n        hitfix:0\n      },{ \n        name:'貳之牙―利刃對劈',\n        atk:200,\n        sp:5,\n        hitfix:0\n      },{\n        name:'叄之牙―獠牙撕扯',\n        atk:400,\n        sp:8,\n        hitfix:0\n      }],\n      ...basicCommon\n    }\n  ],\n  reducers:{\n    stageDebut:(state, actions)=> {\n      const { isDebutChess } = actions.payload;\n      state.map((value,key)=>{\n        return isDebutChess.map(v=>{\n          if(value.name===v.get('name')){\n            return (\n              state[key].debut = true,\n              state[key].x = v.get('x'),\n              state[key].y = v.get('y')\n            );\n          }else return null;\n        })\n      })\n    },\n    chessMove: (state, actions)=>{\n      const { key, changeX, changeY } = actions.payload;\n      state[key].x = changeX;\n      state[key].y = changeY;\n    },\n    chessSelected: (state, actions)=>{\n      const { key } = actions.payload;\n      state[key].boardStatus = !state[key].boardStatus;\n    },\n    chessCheckStatus: (state, actions)=> {\n      const { key } = actions.payload;\n      state[key].checkStatus = !state[key].checkStatus;\n    }\n  }\n});\nexport default chess.reducer;\nexport const { \n  stageDebut, chessMove, chessSelected, chessCheckStatus \n} = chess.actions;","import { createSlice } from '@reduxjs/toolkit';\nconst basicCommon = {\n  x:0,\n  y:0,\n  checkStatus:false,\n  boardStatus:false,\n  debut:false,\n  roundAttack:false,\n};\nconst enemyChess = createSlice({\n  name:'enemyChess',\n  initialState:[\n    {\n      name:'Teoni',\n      cn:'手鬼',\n      hp:2000,\n      sp:100,\n      dodge:20,\n      fullValue:{\n        hp:2000,\n        sp:100\n      },\n      skill:[{ \n        name:'胡亂毆打',\n        atk:50,\n        sp:0,\n        hitfix:10\n      },{ \n        name:'你是第十四個',\n        atk:300,\n        sp:10,\n        hitfix:20\n      }],\n      ...basicCommon\n    },{\n      name:'Nomanooni',\n      cn:'沼鬼',\n      hp:1500,\n      sp:200,\n      dodge:30,\n      fullValue:{\n        hp:1500,\n        sp:200\n      },\n      skill:[{ \n        name:'爪擊',\n        atk:70,\n        sp:0,\n        hitfix:0\n      },{ \n        name:'分身攻擊',\n        atk:600,\n        sp:15,\n        hitfix:0\n      }],\n      ...basicCommon\n    }\n  ],\n  reducers:{\n    enemyStageDebut:(state, actions)=> {\n      const { isDebutChess } = actions.payload;\n      state.map((value,key)=>{\n        return isDebutChess.map(v=>{\n          if(value.name===v.get('name')){\n            return (\n              state[key].debut = true,\n              state[key].x = v.get('x'),\n              state[key].y = v.get('y')\n            );\n          }else return null;\n        })\n      })\n    },\n    enemyChessSelected: (state, actions)=>{\n      const { key } = actions.payload;\n      state[key].boardStatus = !state[key].boardStatus;\n    },\n    enemyChessCheckStatus: (state, actions)=> {\n      const { key } = actions.payload;\n      state[key].checkStatus = !state[key].checkStatus;\n    }\n  }\n});\nexport default enemyChess.reducer;\nexport const { enemyStageDebut, enemyChessSelected, enemyChessCheckStatus } = enemyChess.actions;","import { createSlice } from '@reduxjs/toolkit';\nconst mapLimit = { x:20, y:15 };\nconst createTraverseLine = (traverse=0,color='')=>{\n  const list = [];\n  for(let i=0;i<mapLimit.x;i++){\n    list.push({\n      x:i,\n      y:traverse,\n      color:color,\n      alpha:1,\n      zIndex:1,\n      isInteractive:false\n    });\n  };\n  return list;\n};\nconst createStraightLine = ( method=()=>{} )=>{\n  const list = [];\n  for(let i=0;i<mapLimit.y;i++){\n    list.push(method(i,'0x383838'));\n  };\n  return list;\n};\nconst createInitialState = createStraightLine(createTraverseLine);\nconst chessMap = createSlice({\n  name:'chessMap',\n  initialState: createInitialState,\n  reducers:{\n    MoveSelect:(state, action)=>{\n      const { position, step, changeColor, alphaVal=1} = action.payload;\n      for(let i=0;i<(step+1);i++){\n        if(position.x+i<=(mapLimit.x-1)){\n          state[position.y][position.x+i].color=changeColor;\n          state[position.y][position.x+i].isInteractive=false;\n          state[position.y][position.x+i].alpha=alphaVal;\n          state[position.y][position.x+i].zIndex=1;\n        };\n        if(position.y+i<=(mapLimit.y-1)){\n          state[position.y+i][position.x].color=changeColor;\n          state[position.y+i][position.x].isInteractive=false;\n          state[position.y+i][position.x].alpha=alphaVal;\n          state[position.y+i][position.x].zIndex=1;\n        };\n        if(position.x-i>=0){\n          state[position.y][position.x-i].color=changeColor;\n          state[position.y][position.x-i].isInteractive=false;\n          state[position.y][position.x-i].alpha=alphaVal;\n          state[position.y][position.x-i].zIndex=1;\n        };\n        if(position.y-i>=0){\n          state[position.y-i][position.x].color=changeColor;\n          state[position.y-i][position.x].isInteractive=false;\n          state[position.y-i][position.x].alpha=alphaVal;\n          state[position.y-i][position.x].zIndex=1;\n        };\n      }\n    },\n    GetMove:(state, action)=>{\n      const { position, step, changeColor, currentChessPositions } = action.payload;\n      for(let i=0;i<(step+1);i++){\n        if(position.x+i<=(mapLimit.x-1)){\n          state[position.y][position.x+i].color=changeColor;\n          state[position.y][position.x+i].isInteractive=true;\n          state[position.y][position.x+i].alpha=1;\n          state[position.y][position.x+i].zIndex=1;\n        };\n        if(position.y+i<=(mapLimit.y-1)){\n          state[position.y+i][position.x].color=changeColor;\n          state[position.y+i][position.x].isInteractive=true;\n          state[position.y+i][position.x].alpha=1;\n          state[position.y+i][position.x].zIndex=1;\n          state[position.y][position.x-i].alpha=1;\n          state[position.y][position.x-i].zIndex=1;\n        };\n        if(position.x-i>=0){\n          state[position.y][position.x-i].color=changeColor;\n          state[position.y][position.x-i].isInteractive=true;\n        };\n        if(position.y-i>=0){\n          state[position.y-i][position.x].color=changeColor;\n          state[position.y-i][position.x].isInteractive=true;\n          state[position.y-i][position.x].alpha=1;\n          state[position.y-i][position.x].zIndex=1;\n        };\n      }\n      currentChessPositions.map(v=>{\n        return state[v.y][v.x].isInteractive=false;\n      });\n    },\n    GetAttack:(state, action)=>{\n      const { position, step, changeColor, currentChessPositions } = action.payload;\n      for(let i=0;i<(step+1);i++){\n        if(position.x+i<=(mapLimit.x-1)){\n          state[position.y][position.x+i].color=changeColor;\n          state[position.y][position.x+i].isInteractive=true;\n          state[position.y][position.x+i].alpha=0.5;\n          state[position.y][position.x+i].zIndex=3;\n        };\n        if(position.y+i<=(mapLimit.y-1)){\n          state[position.y+i][position.x].color=changeColor;\n          state[position.y+i][position.x].isInteractive=true;\n          state[position.y+i][position.x].alpha=0.5;\n          state[position.y+i][position.x].zIndex=3;\n        };\n        if(position.x-i>=0){\n          state[position.y][position.x-i].color=changeColor;\n          state[position.y][position.x-i].isInteractive=true;\n          state[position.y][position.x-i].alpha=0.5;\n          state[position.y][position.x-i].zIndex=3;\n        };\n        if(position.y-i>=0){\n          state[position.y-i][position.x].color=changeColor;\n          state[position.y-i][position.x].isInteractive=true;\n          state[position.y-i][position.x].alpha=0.5;\n          state[position.y-i][position.x].zIndex=3;\n        };\n      }\n      currentChessPositions.map(v=>{\n        return (\n          state[v.y][v.x].isInteractive=false,\n          state[v.y][v.x].zIndex=1\n        )\n      });\n    }\n  }\n});\nexport default chessMap.reducer;\nexport const { MoveSelect, GetMove, GetAttack } = chessMap.actions;\n","import React, {} from 'react';\nimport * as PIXI from \"pixi.js\";\nimport { Sprite } from '@inlet/react-pixi';\nimport { MoveSelect } from '../../reducer/map';\nconst texture = PIXI.Texture.WHITE;\nexport const CreateCheckerboard = ({\n  reduxProps\n})=>{\n  const { \n    chess, enemyChess, chessMap, currentChess, dispatch, \n    setTipStatus, setMoveStep, setBattleInfo\n  } = reduxProps;\n  const checkMatchAttackPosition = (x,y)=>{\n    let isMatch = false;\n    enemyChess.map(v=>{\n      const checkMatch = v.debut&&(x===v.x)&&(y===v.y);\n      if(checkMatch){\n        return isMatch=true;\n      }else return null;\n    });\n    return isMatch;\n  };\n  const getCurrentEnemy = (x,y)=>{\n    let item = {};\n    enemyChess.map((v,k)=>{\n      const checkMatch = v.debut&&(x===v.x)&&(y===v.y);\n      if(checkMatch){\n        return item={...v,key:k}\n      }else return null;\n    });\n    return item;\n  };\n  return <React.Fragment>\n    {chessMap.map(value=> {\n      return value.map((v,k)=>{\n        return <Sprite\n          interactive={v.isInteractive}\n          buttonMode={v.isInteractive}\n          zIndex={v.zIndex}\n          key={k}\n          width={40}\n          height={40}\n          x={v.x*40}\n          y={v.y*40}\n          tint={v.color}\n          alpha={v.alpha}\n          texture={texture}\n          pointertap={()=>{\n            switch (currentChess.type) {\n              case \"MOVE\":\n                setTipStatus({\n                  title:'確定移動?',\n                  status:true,\n                  position:{\n                    x:v.x, y:v.y\n                  }\n                });\n                dispatch(MoveSelect({\n                  position:{ \n                    x:chess[currentChess.key].x, \n                    y:chess[currentChess.key].y,\n                  },\n                  step:chess[currentChess.key].step,\n                  changeColor:'0x06d6a0'\n                }));\n                break;\n              case \"ATTACK\":\n                if(checkMatchAttackPosition(v.x,v.y)){\n                  const targetData = getCurrentEnemy(v.x,v.y);\n                  setBattleInfo({\n                    status:true,\n                    attaker:{ \n                      key: currentChess.key,\n                      ...chess[currentChess.key]\n                    },\n                    target:{\n                      key: targetData.key,\n                      ...targetData\n                    }\n                  });\n                  dispatch(MoveSelect({\n                    position:{ \n                      x:chess[currentChess.key].x, \n                      y:chess[currentChess.key].y,\n                    },\n                    step:chess[currentChess.key].attack,\n                    changeColor:'0x383838',\n                  }));\n                }else {\n                  setMoveStep(true);\n                  dispatch(MoveSelect({\n                    position:{ \n                      x:chess[currentChess.key].x, \n                      y:chess[currentChess.key].y,\n                    },\n                    step:chess[currentChess.key].acttack,\n                    changeColor:'0x383838'\n                  }));\n                };\n                break;\n              default:\n                return;\n            }; \n          }}\n        />\n      });\n    })}\n  </React.Fragment>\n};","import React from 'react';\n// import { fromJS } from 'immutable';\nimport { Graphics, Text } from '@inlet/react-pixi/animated';\nimport { chessMove } from \"../../reducer/chess\";\nimport { MoveSelect } from '../../reducer/map';\nimport * as PIXI from \"pixi.js\";\n\nexport const ConfirmTip = ({\n  props,\n})=> {\n  const { \n    chess,\n    currentChess,\n    tipStatus,\n    dispatch,\n    setMoveStep, \n    setTipStatus\n  } = props;\n  return <Graphics\n    x={400}\n    y={300}\n    draw={g=> {\n      g.lineStyle(1,`0xffffff`,1);\n      g.beginFill(`0x22223b`);\n      g.drawRoundedRect(-90,-50,180,100,8);\n      g.endFill();\n    }}\n  >\n    <Text\n      text={tipStatus.title}\n      anchor={0.5}\n      x={0}\n      y={-20}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 20,\n        fill:['#ffffff', '#ffffff'],\n      })}\n    />\n    <Text\n      interactive={true}\n      buttonMode={true}\n      anchor={0.5}\n      text={'確定'}\n      x={-30}\n      y={20}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 20,\n        fill:['#ffffff', '#ffffff'],\n      })}\n      pointertap={()=>{\n        switch (currentChess.type) {\n          case \"MOVE\":\n            dispatch(chessMove({\n              key: currentChess.key,\n              changeX:tipStatus.position.x,\n              changeY:tipStatus.position.y\n            }));\n            dispatch(MoveSelect({\n              position:{ \n                x:chess[currentChess.key].x, \n                y:chess[currentChess.key].y,\n              },\n              step:chess[currentChess.key].step,\n              changeColor:'0x383838'\n            }));\n            setMoveStep(true);\n            setTipStatus(prev=>{\n              return {...prev, status:false }\n            });\n            break;\n          default:\n            return;\n        }\n      }}\n    />\n    <Text\n      interactive={true}\n      buttonMode={true}\n      anchor={0.5}\n      text={'取消'}\n      x={30}\n      y={20}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 20,\n        fill:['#ffffff', '#ffffff'],\n      })}\n      pointertap={()=>{\n        switch (currentChess.type) {\n          case \"MOVE\":\n            dispatch(MoveSelect({\n              position:{ \n                x:chess[currentChess.key].x, \n                y:chess[currentChess.key].y,\n              },\n              step:chess[currentChess.key].step,\n              changeColor:'0x383838'\n            }));\n            setMoveStep(true);\n            setTipStatus(prev=>{\n              return {...prev, status:false }\n            })\n            break;\n          default:\n            return;\n        }\n      }}\n    />\n  </Graphics>\n};","import * as PIXI from \"pixi.js\";\nexport const loader = new PIXI.Loader();\nconst hostname = window.location.hostname==='localhost'?'./Demon-Slayer/':'./';\n\nloader\n  .add('Tanjirou-head-default',`${hostname}imgs/Tanjirou/head-default.jpg`)\n  .add('Tanjirou-fight',`${hostname}imgs/Tanjirou/fight.png`)\n  .add('Nezuko-head-default',`${hostname}imgs/Nezuko/head-default.jpg`)\n  .add('Nezuko-fight',`${hostname}imgs/Nezuko/fight.png`)\n  .add('Inosuke-head-default',`${hostname}imgs/Inosuke/head-default.jpg`)\n  .add('Inosuke-fight',`${hostname}imgs/Inosuke/fight.png`)\n  .add('Teoni-head-default',`${hostname}imgs/Teoni/head-default.jpg`)\n  .add('Teoni-fight',`${hostname}imgs/Teoni/fight.png`)\n  .add('Nomanooni-head-default',`${hostname}imgs/Nomanooni/head-default.jpg`)\n  .add('Nomanooni-fight',`${hostname}imgs/Nomanooni/fight.png`)\n  .load();\n","import React,{ useState } from 'react';\nimport { Container, Sprite, Graphics, Text } from '@inlet/react-pixi/animated';\nimport { loader } from '../DataLoader';\nimport * as PIXI from \"pixi.js\";\n\nexport const BattleBoard = ({ props })=>{\n  const { \n    battleInfo, setMoveStep, setBattleInfo\n  } = props;\n  const [ atkSelectd, setAtkSelectd ] = useState({\n    key:0,\n  });\n  const CreateAttakerInfo = ({ pX=0, pY=0, data })=>{\n    return <Container x={pX} y={pY} sortableChildren={true}>\n      <Text\n        text={'攻'}\n        x={220}\n        y={0}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 30,\n          fill:['#ffffff', '#00ff99'],\n        })}\n      />\n      <Text\n        text={data.cn}\n        x={60}\n        y={-3}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 16,\n          fill:'#ffffff',\n        })}\n      />\n      <Text\n        text={`${data.hp} / ${data.fullValue.hp}`}\n        x={60}\n        y={17}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 16,\n          fill:'#ff6b6b',\n        })}\n      />\n      <Text\n        text={`${data.sp} / ${data.fullValue.sp}`}\n        x={60}\n        y={34}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 16,\n          fill:'#0466c8',\n        })}\n      />\n      <Sprite\n        width={50}\n        height={50}\n        x={0}\n        y={0}\n        image={loader.resources[`${data.name}-head-default`].data}\n      />\n      <Text\n        text={`招式選擇：`}\n        x={0}\n        y={80}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 16,\n          fill:'#ffffff',\n        })}\n      />\n      <Graphics\n        x={0}\n        y={115}\n        zIndex={1}\n        draw={g=> {\n          g.lineStyle(1,`0xffffff`,1);\n          g.beginFill(`0x0f0f1b`);\n          g.drawRoundedRect(0,0,240,180,8);\n          g.endFill();\n        }}\n      />\n      {data.skill.map((value,key)=>{\n        const skillCanUse = data.sp - value.sp >= 0;\n        return <React.Fragment key={key}>\n          <Text\n            zIndex={2}\n            interactive={skillCanUse}\n            buttonMode={true}\n            text={value.name}\n            x={20}\n            y={130+(key*24)}\n            style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n              fontSize: 16,\n              fill: ((atkSelectd.key===key)&&skillCanUse) ? ['#ffffff', '#00ff99'] :  \n                skillCanUse ? '#ffffff' : '#8d99ae',\n              fontWeight: (atkSelectd.key===key) ? 600 : 300\n            })}\n            pointertap={()=>setAtkSelectd({\n              key: key\n            })}\n          />\n        </React.Fragment>\n      })}\n    </Container>\n  };\n  const CreateTargetInfo = ({ pX=0, pY=0, data })=>{\n    return <Container x={pX} y={pY} sortableChildren={true}>\n      <Text\n        text={'防'}\n        x={0}\n        y={0}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 30,\n          fill:['#ffffff', '#ee6c4d'],\n        })}\n      />\n      <Text\n        text={data.cn}\n        anchor={{x:1,y:0}}\n        x={190}\n        y={-3}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 16,\n          fill:'#ffffff',\n        })}\n      />\n      <Text\n        text={`${data.hp} / ${data.fullValue.hp}`}\n        anchor={{x:1,y:0}}\n        x={190}\n        y={17}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 16,\n          fill:'#ff6b6b',\n        })}\n      />\n      <Text\n        text={`${data.sp} / ${data.fullValue.sp}`}\n        anchor={{x:1,y:0}}\n        x={190}\n        y={34}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 16,\n          fill:'#0466c8',\n        })}\n      />\n      <Sprite\n        width={50}\n        height={50}\n        x={200}\n        y={0}\n        image={loader.resources[`${data.name}-head-default`].data}\n      />\n    </Container>\n  };\n  const ForecastInfo = ({ pX, pY, data })=>{\n    return <Container x={pX} y={pY} sortableChildren={true}>\n      <Graphics\n        x={0}\n        y={0}\n        zIndex={1}\n        draw={g=> {\n          g.lineStyle(1,`0x00ff99`,1);\n          g.beginFill(`0x0f0f1b`);\n          g.drawRoundedRect(0,0,265,215,8);\n          g.endFill();\n        }}\n      />\n      <Text\n        text={`招式：`}\n        zIndex={2}\n        x={20}\n        y={20}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 20,\n          fill:'#ffffff'\n        })}\n      />\n      <Text\n        text={`${data.attaker.skill[atkSelectd.key].name}`}\n        zIndex={2}\n        x={80}\n        y={22}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 16,\n          fill:'#00ff99'\n        })}\n      />\n      <Text\n        text={`攻擊力：`}\n        zIndex={2}\n        x={20}\n        y={50}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 20,\n          fill:'#ffffff'\n        })}\n      />\n      <Text\n        text={`${data.attaker.skill[atkSelectd.key].atk}`}\n        zIndex={2}\n        x={100}\n        y={52}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 18,\n          fill:'#fdc500'\n        })}\n      />\n      <Text\n        text={`命中率：`}\n        zIndex={2}\n        x={20}\n        y={80}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 20,\n          fill:'#ffffff'\n        })}\n      />\n      <Text\n        text={`${\n          100 +\n          data.attaker.skill[atkSelectd.key].hitfix -\n          data.target.dodge\n        }%`}\n        zIndex={2}\n        x={100}\n        y={82}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 18,\n          fill:'#ffffff'\n        })}\n      />\n      <Text\n        text={`消耗：`}\n        zIndex={2}\n        x={20}\n        y={110}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 20,\n          fill:'#ffffff'\n        })}\n      />\n      <Text\n        text={`${data.attaker.skill[atkSelectd.key].sp}`}\n        zIndex={2}\n        x={80}\n        y={110}\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 18,\n          fill:'#0466c8'\n        })}\n      />\n    </Container>\n  };\n  return <Graphics\n    x={400}\n    y={300}\n    zIndex={99}\n    draw={g=> {\n      g.lineStyle(1,`0xffffff`,1);\n      g.beginFill(`0x22223b`);\n      g.drawRoundedRect(-300,-200,600,400,8);\n      g.endFill();\n    }}\n  >\n    <CreateAttakerInfo\n      pX={-270}\n      pY={-180}\n      data={battleInfo.attaker}\n    />\n    <CreateTargetInfo\n      pX={20}\n      pY={-180}\n      data={battleInfo.target}\n    />\n    <ForecastInfo\n      pX={0}\n      pY={-100}\n      data={battleInfo}\n    />\n    <Text\n      interactive={true}\n      buttonMode={true}\n      text={'攻擊'}\n      anchor={0.5}\n      x={180}\n      y={160}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 20,\n        fill:'#ffffff',\n      })}\n    />\n    <Text\n      interactive={true}\n      buttonMode={true}\n      text={'取消'}\n      anchor={0.5}\n      x={240}\n      y={160}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 20,\n        fill:'#ffffff',\n      })}\n      pointertap={()=>{\n        setMoveStep(true);\n        setBattleInfo({\n          status:false,\n          attaker:{ key:'' },\n          target:{ key:'' }\n        })\n      }}\n    />\n  </Graphics>\n};","import React,{ useState } from 'react';\nimport { fromJS } from 'immutable';\nimport { Graphics, Text } from '@inlet/react-pixi/animated';\nimport { GetMove, GetAttack } from '../../reducer/map';\nimport { chessSelected, chessCheckStatus } from \"../../reducer/chess\";\nimport * as PIXI from \"pixi.js\";\n\nexport const ChessUIBoard = ({\n  ChessData,\n  ChessVal,\n  ChessKey,\n  EnemyChessData,\n  positionX,\n  positionY,\n  setCurrentChess,\n  setMoveStep,\n  dispatch\n})=> {\n  const specialPosition = {\n    x: 720,\n    y: 490\n  };\n  const forMoveArray = [];\n  const forAttackArray = [];\n  const [textInforArray, setTextInforArray] = useState(fromJS([{\n      id:1, \n      title:\"移動\",\n      textColor:['#ffffff', '#ffffff']\n    },{ \n      id:2,\n      title:\"攻擊\",\n      textColor:['#ffffff', '#ffffff']\n    },{ \n      id:3,\n      title:\"狀態\",\n      textColor:['#ffffff', '#ffffff']\n    },{ \n      id:4,\n      title:\"返回\",\n      textColor:['#ffffff', '#ffffff']\n  }]));\n  ChessData.map((v)=>{\n    return (\n      forMoveArray.push({ x:v.x, y:v.y }),\n      forAttackArray.push({ x:v.x, y:v.y })\n    );\n  });\n  EnemyChessData.map((v)=>{\n    return forMoveArray.push({ x:v.x, y:v.y });\n  });\n  const compareAttack = (\n    chessX,\n    chessY,\n    chessAtk\n  )=>{\n    let isAttack = false;\n    const isDebutEnemy = EnemyChessData.filter(v=>v.debut);\n    const limitPosition = { x:19, y:14 };\n    const positionRange = [];\n    for(let i=0; i < chessAtk; i++){\n      const getaddX = (chessX+(i+1)>=limitPosition.x) ? limitPosition.x : chessX+(i+1);\n      const getaddY = (chessY+(i+1)>=limitPosition.y) ? limitPosition.y : chessY+(i+1);\n      const getlessX = (chessX-(i+1)<=0) ? 0 : chessX-(i+1);\n      const getlessY = (chessY-(i+1)<=0) ? 0 : chessY-(i+1);\n      positionRange.push(\n        { x:getaddX, y:chessY },\n        { x:getlessX, y:chessY },\n        { x:chessX, y:getaddY },\n        { x:chessX, y:getlessY }\n      );\n    };\n    isDebutEnemy.map(val=>{\n      return positionRange.map(v=>{\n        if(val.x===v.x&&val.y===v.y){\n          return isAttack = true;\n        }else return null\n      })\n    });\n    return isAttack;\n  };\n  const CreateText = ({ noop })=>{\n    const isAttack = compareAttack(ChessVal.x,ChessVal.y,ChessVal.attack);\n    return textInforArray.map((val,key)=>{\n      return <Text\n        key={key}\n        interactive={\n          (val.get('id')===2)?\n          isAttack : true\n        }\n        buttonMode={true}\n        text={val.get('title')}\n        x={10}\n        y={5+(25*key)}\n        style={new PIXI.TextStyle({\n          fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 20,\n          fill:((val.get('id')===2)&&!isAttack)? '#8d99ae' :val.get('textColor').toJS(),\n        })}\n        pointerover={()=>{\n          setTextInforArray(prev=>\n            prev.setIn([key,'textColor',1],'#00ff99')\n          );\n        }}\n        pointerout={()=>{\n          setTextInforArray(prev=>\n            prev.setIn([key,'textColor',1],'#ffffff')\n          );\n        }}\n        pointertap={(e)=>{\n          switch (val.get('id')) {\n            case 1:\n              setCurrentChess({ \n                key:ChessKey,\n                type:\"MOVE\"\n              });\n              dispatch(GetMove({\n                position:{ \n                  x:ChessVal.x, \n                  y:ChessVal.y,\n                },\n                step:ChessVal.step,\n                changeColor:'0x06d6a0',\n                currentChessPositions: forMoveArray\n              }));\n              dispatch(chessSelected({\n                key:ChessKey\n              }));\n              break;\n            case 2:\n              setCurrentChess({ \n                key:ChessKey,\n                type:\"ATTACK\"\n              });\n              dispatch(chessSelected({\n                key:ChessKey\n              }));\n              dispatch(GetAttack({\n                position:{ \n                  x:ChessVal.x, \n                  y:ChessVal.y,\n                },\n                step:ChessVal.attack,\n                changeColor:'0x00bbf9',\n                currentChessPositions: forAttackArray\n              }));\n              break;\n            case 3:\n              setCurrentChess({ \n                key:ChessKey,\n                type:\"STATUS\"\n              });\n              dispatch(chessCheckStatus({\n                key:ChessKey\n              }));\n              dispatch(chessSelected({\n                key:ChessKey\n              }));\n              break;\n            case 4 :\n              setMoveStep(true);\n              dispatch(chessSelected({\n                key:ChessKey\n              }));\n              break;\n            default:\n              return console.log(e.target)\n          };\n        }}\n      />\n    }\n  )};\n  return <Graphics\n    x={positionX!==800?positionX:specialPosition.x}\n    y={(positionY!==560&&positionY!==520)?positionY:specialPosition.y}\n    zIndex={3}\n    draw={g=> {\n      g.lineStyle(1,`0xffffff`,1);\n      g.beginFill(`0x22223b`);\n      g.drawRoundedRect(0,0,60,110,8);\n      g.endFill();\n    }}\n  ><CreateText/></Graphics>\n};","import React from 'react';\nimport { Sprite, Graphics, Text } from '@inlet/react-pixi/animated';\nimport { loader } from '../DataLoader';\nimport * as PIXI from \"pixi.js\";\n\nexport const ChessStatus = ({\n  ChessData,\n  ChessKey,\n  CheckStatus,\n  setMoveStep,\n  dispatch\n})=> {\n  const CreateSkillList = ()=>{\n    return ChessData.skill.map((value,key)=>{\n        return <React.Fragment key={key}>\n        <Text\n          x={-40}\n          y={-70+(key*22)}\n          text={`${value.name}`}\n          style={new PIXI.TextStyle({\n            fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n            fontSize: 16,\n            fill:'#ffb700',\n          })}\n        />\n        <Text\n          x={-35+(value.name.length * 16)}\n          y={-70+(key*22)}\n          text={`ATK:${value.atk}(${value.sp}SP)`}\n          style={new PIXI.TextStyle({\n            fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n            fontSize: 14,\n            fill:'#ffffff',\n          })}\n        />\n      </React.Fragment>\n    });  \n  };\n  return <Graphics\n    x={400}\n    y={300}\n    zIndex={99}\n    draw={g=> {\n      g.lineStyle(1,`0xffffff`,1);\n      g.beginFill(`0x22223b`);\n      g.drawRoundedRect(-250,-150,500,300,8);\n      g.endFill();\n    }}\n  >\n    <Graphics\n      x={220}\n      y={-120}\n      interactive={true}\n      buttonMode={true}\n      pointertap={(e)=>{\n        setMoveStep(true);\n        dispatch(CheckStatus({\n          key:ChessKey\n        }));\n      }}\n      draw={g=> {\n        g.beginFill(`0x02040f`);\n        g.drawRoundedRect(-15,-15,30,30,50);\n        g.endFill();\n      }}\n    >\n      <Text\n        anchor={0.5}\n        text={`X`}\n        style={new PIXI.TextStyle({\n          fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 16,\n          fill:'#ffffff',\n        })}\n      />\n    </Graphics>\n    <Sprite\n      width={80}\n      height={80}\n      x={-200}\n      y={-90}\n      image={loader.resources[`${ChessData.name}-head-default`].data}\n    />\n    <Text\n      x={-200}\n      y={10}\n      text={ChessData.cn}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 16,\n        fill:'#ffffff',\n      })}\n    />\n    <Text\n      x={-200}\n      y={35}\n      text={`HP:`}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 16,\n        fill:'#ffffff',\n      })}\n    />\n    <Text\n      x={-170}\n      y={35}\n      text={`${ChessData.hp} / ${ChessData.fullValue.hp}`}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 16,\n        fill:'#ff6b6b',\n      })}\n    />\n    <Text\n      x={-200}\n      y={60}\n      text={`SP:`}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 16,\n        fill:'#ffffff',\n      })}\n    />\n    <Text\n      x={-170}\n      y={60}\n      text={`${ChessData.sp} / ${ChessData.fullValue.sp}`}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 16,\n        fill:'#0466c8',\n      })}\n    />\n    <Text\n      x={-50}\n      y={-95}\n      text={'招式'}\n      style={new PIXI.TextStyle({\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n        fontSize: 16,\n        fill:'#ffffff',\n      })}\n    />\n    <CreateSkillList/>\n  </Graphics>\n};","import React from 'react';\nimport { Sprite } from '@inlet/react-pixi/animated';\nimport { loader } from '../DataLoader';\n// reducers\nimport { MoveSelect } from '../../reducer/map';\nimport { chessSelected, chessCheckStatus } from \"../../reducer/chess\";\n// other part\nimport { ChessUIBoard } from \"./ChessUIBoard\";\nimport { ChessStatus } from \"../Common/ChessStatus\";\n\nexport const Chess = ({\n  chessProps\n})=>{\n  const { \n    chess,\n    enemyChess,\n    moveStep=Boolean,\n    setMoveStep,\n    setCurrentChess,\n    dispatch\n  } = chessProps;\n  return chess.map((value,key)=>{\n    return <React.Fragment key={key}>\n      {value.debut&&<Sprite\n        interactive={moveStep}\n        buttonMode={true}\n        width={40}\n        height={40}\n        x={value.x*40}\n        y={value.y*40}\n        zIndex={2}\n        pointerover={()=>{\n          dispatch(MoveSelect({\n            position:{ \n              x:value.x, \n              y:value.y,\n            },\n            step:value.step,\n            changeColor:'0x06d6a0'\n          }));\n        }}\n        pointerout={()=>{\n          dispatch(MoveSelect({\n            position:{ \n              x:value.x, \n              y:value.y,\n            },\n            step:value.step,\n            changeColor:'0x383838'\n          }));\n        }}\n        pointertap={()=>{\n          setMoveStep(false);\n          dispatch(chessSelected({\n            key:key\n          }));\n          dispatch(MoveSelect({\n            position:{ \n              x:value.x, \n              y:value.y,\n            },\n            step:value.step,\n            changeColor:'0x383838'\n          }));\n        }}\n        image={loader.resources[`${value.name}-head-default`].data}\n      />}\n      {value.boardStatus&&<ChessUIBoard\n        ChessData={chess}\n        ChessVal={value}\n        ChessKey={key}\n        EnemyChessData={enemyChess}\n        positionX={(value.x*40)+40}\n        positionY={(value.y*40)}\n        setCurrentChess={setCurrentChess}\n        setMoveStep={setMoveStep}\n        dispatch={dispatch}\n      />}\n      {value.checkStatus&&<ChessStatus\n        ChessData={value}\n        ChessKey={key}\n        CheckStatus={chessCheckStatus}\n        setMoveStep={setMoveStep}\n        dispatch={dispatch}\n      />}\n    </React.Fragment>\n  })\n};","import React,{ useState } from 'react';\nimport { fromJS } from 'immutable';\nimport { Graphics, Text } from '@inlet/react-pixi/animated';\nimport { enemyChessSelected, enemyChessCheckStatus } from \"../../reducer/enemyChess\";\nimport * as PIXI from \"pixi.js\";\n\nexport const EnemyChessUIBoard = ({\n  ChessKey,\n  positionX,\n  positionY,\n  setMoveStep,\n  dispatch\n})=> {\n  const specialPosition = {\n    x: 720,\n    y: 535\n  };\n  const [textInforArray, setTextInforArray] = useState(fromJS([{\n      id:1,\n      title:\"狀態\",\n      textColor:['#ffffff', '#ffffff']\n    },{ \n      id:2,\n      title:\"返回\",\n      textColor:['#ffffff', '#ffffff']\n  }]));\n  const CreateText = ({ noop })=>{\n    return textInforArray.map((val,key)=>{\n      return <Text\n        key={key}\n        interactive={true}\n        buttonMode={true}\n        text={val.get('title')}\n        x={10}\n        y={5+(25*key)}\n        style={new PIXI.TextStyle({\n          fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n          fontSize: 20,\n          fill:val.get('textColor').toJS(),\n        })}\n        pointerover={()=>{\n          setTextInforArray(prev=>\n            prev.setIn([key,'textColor',1],'#9d4edd')\n          );\n        }}\n        pointerout={()=>{\n          setTextInforArray(prev=>\n            prev.setIn([key,'textColor',1],'#ffffff')\n          );\n        }}\n        pointertap={(e)=>{\n          switch (val.get('id')) {\n            case 1:\n              dispatch(enemyChessCheckStatus({\n                key:ChessKey\n              }));\n              dispatch(enemyChessSelected({\n                key:ChessKey\n              }));\n              break;\n            case 2 :\n              setMoveStep(true);\n              dispatch(enemyChessSelected({\n                key:ChessKey\n              }));\n              break;\n            default:\n              return console.log(e.target)\n          };\n        }}\n      />\n    }\n  )};\n  return <Graphics\n    x={positionX!==800?positionX:specialPosition.x}\n    y={(positionY!==560&&positionY!==520)?positionY:specialPosition.y}\n    zIndex={3}\n    draw={g=> {\n      g.lineStyle(1,`0xffffff`,1);\n      g.beginFill(`0x22223b`);\n      g.drawRoundedRect(0,0,60,62,8);\n      g.endFill();\n    }}\n  ><CreateText/></Graphics>\n}","import React from 'react';\nimport { Sprite } from '@inlet/react-pixi/animated';\nimport { loader } from '../DataLoader';\n// reducers\nimport { enemyChessSelected, enemyChessCheckStatus } from \"../../reducer/enemyChess\";\n// other part\nimport { EnemyChessUIBoard } from \"./EnemyChessUIBoard\";\nimport { ChessStatus } from \"../Common/ChessStatus\";\n\nexport const EnemyChess = ({\n  enemyChessProps\n})=>{\n  const { \n    enemyChess,\n    moveStep=Boolean,\n    setMoveStep,\n    dispatch\n  } = enemyChessProps;\n  return enemyChess.map((value,key)=>{\n    return <React.Fragment key={key}>\n      {value.debut&&<Sprite\n        interactive={moveStep}\n        buttonMode={true}\n        width={40}\n        height={40}\n        x={value.x*40}\n        y={value.y*40}\n        zIndex={2}\n        pointertap={()=>{\n          setMoveStep(false);\n          dispatch(enemyChessSelected({\n            key:key\n          }));\n        }}\n        image={loader.resources[`${value.name}-head-default`].data}\n      />}\n      {value.boardStatus&&<EnemyChessUIBoard\n        ChessKey={key}\n        positionX={(value.x*40)+40}\n        positionY={(value.y*40)}\n        setMoveStep={setMoveStep}\n        dispatch={dispatch}\n      />}\n      {value.checkStatus&&<ChessStatus\n        ChessData={value}\n        ChessKey={key}\n        CheckStatus={enemyChessCheckStatus}\n        setMoveStep={setMoveStep}\n        dispatch={dispatch}\n      />}\n    </React.Fragment>\n  })\n};\n","import { fromJS } from \"immutable\";\n\nexport const stageRule = fromJS({\n  stageOne: {\n    debutChess:[\n      { \n        name:'Tanjirou',\n        x:3,\n        y:7\n      },\n    ],\n    debutEnemyChess:[\n      {\n        name:'Teoni',\n        x:16,\n        y:7\n      },\n    ]\n  },\n  stageTwo: {\n    debutChess:[\n      { \n        name:'Tanjirou',\n        x:3,\n        y:9\n      }, { \n        name:'Nezuko',\n        x:3,\n        y:11\n      }\n    ],\n    debutEnemyChess:[\n      {\n        name:'Nomanooni',\n        x:16,\n        y:7\n      }\n    ]\n  }\n});","import React,{ useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Stage, Container } from '@inlet/react-pixi/animated';\n// reducers\nimport { stageDebut } from \"../reducer/chess\";\nimport { enemyStageDebut } from \"../reducer/enemyChess\";\n// other part\nimport { CreateCheckerboard } from './Common/Checkerboard';\nimport { ConfirmTip } from \"./Common/ConfirmTips\";\nimport { BattleBoard } from \"./Common/BattleBoard\";\nimport { Chess } from \"../components/Chess/Chess\";\nimport { EnemyChess } from \"../components/EnemyChess/EnemyChess\";\n// rule\nimport { stageRule } from \"../constants/stageRule\";\nexport const Canvas = ()=> {\n  const [ stageStatus, setStageStatus ] = useState('stageOne');\n  const [ currentChess, setCurrentChess ] = useState({\n    key:0,\n    type:\"MOVE\"\n  });\n  const [ tipStatus, setTipStatus ] = useState({\n    title:``,\n    status:false,\n    position:{\n      x:0,y:0\n    },\n  });\n  const [ battleInfo, setBattleInfo ] = useState({\n    status:false,\n    attaker:{ key:'' },\n    target:{ key:'' }\n  });\n  const [ moveStep, setMoveStep ] = useState(true);\n  const chessMap = useSelector(state=>state.chessMap);\n  const chess = useSelector(state=>state.chess);\n  const enemyChess = useSelector(state=>state.enemyChess);\n  const dispatch = useDispatch();\n  // debut\n  useEffect(()=>{\n    dispatch(stageDebut({ \n      isDebutChess:stageRule.getIn([stageStatus,'debutChess'])\n    }));\n    dispatch(enemyStageDebut({ \n      isDebutChess:stageRule.getIn([stageStatus,'debutEnemyChess'])\n    }));\n  },[ dispatch, stageStatus ])\n  return <Stage\n    width={800}\n    height={600}\n    options={{\n      autoDensity: true, \n      antialias: true,\n      backgroundColor:0x01262a\n    }}>\n    <Container sortableChildren={true}>\n      <CreateCheckerboard reduxProps={{ \n        chess,\n        enemyChess,\n        chessMap,\n        currentChess,\n        dispatch,\n        setTipStatus,\n        setMoveStep,\n        setBattleInfo\n      }}/>\n      <Chess chessProps={{\n        chess,\n        enemyChess,\n        moveStep,\n        setMoveStep,\n        setCurrentChess,\n        dispatch\n      }}/>\n      <EnemyChess enemyChessProps={{\n         enemyChess,\n         moveStep,\n         setMoveStep,\n         dispatch\n      }}/>\n    </Container>\n    {tipStatus.status&&<ConfirmTip \n      props={{\n        chess,\n        currentChess,\n        tipStatus,\n        dispatch,\n        setMoveStep,\n        setTipStatus\n      }}\n    />}\n    {battleInfo.status&&\n      <BattleBoard\n        props={{\n          battleInfo,\n          setMoveStep,\n          setBattleInfo\n        }}\n      />}\n  </Stage>\n};","import React, { useState, useEffect } from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport { Canvas } from './Canvas';\nimport { loader } from './DataLoader';\nconst GlobalStyle = createGlobalStyle`\n  body { background:#1d2430; }\n`;\nconst StyledApp = styled.div`\n  position: relative;\n  display:flex;\n  align-items:center;\n  justify-content:center;\n  width:100%;\n  height:100vh;\n  .loading {\n    color: #fff;\n    font-size:24px;\n  }\n`;\nexport const App = ()=> {\n  const [ dataIsDone, setDataIsDone ] = useState(false);\n  useEffect(()=>{\n    loader.onComplete.add(()=>{\n      setDataIsDone(true);\n    });\n  });\n  return <StyledApp>\n    <GlobalStyle/>\n    {dataIsDone?<Canvas />:\n      <span className=\"loading\">Loading..</span>}\n  </StyledApp>\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, combineReducers } from 'redux';\nimport chess from './chess';\nimport chessMap from './map';\nimport enemyChess from './enemyChess';\nconst rootReducer = combineReducers({\n  chess,\n  chessMap,\n  enemyChess\n});\nexport const store = createStore(rootReducer);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './reducer/index';\n\nReactDOM.render(<Provider store={store}><App /></Provider>,document.getElementById('root'));\nreportWebVitals();\n"],"sourceRoot":""}