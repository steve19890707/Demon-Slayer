{"version":3,"sources":["reducer/chess.js","reducer/enemyChess.js","reducer/map.js","components/Common/Checkerboard.js","components/Common/ConfirmTips.js","constants/stageRule.js","components/Common/UsualTip.js","components/DataLoader.js","components/Common/ProbabilityCount.js","components/Common/BattleBoard.js","components/Common/BattleAnimeShow/AinmeShowBG.js","components/Common/BattleAnimeShow/TopBar.js","constants/lines.js","components/Common/BattleAnimeShow/BottomBar.js","constants/SkillShowProtoType.js","constants/ChessSkillShow/TanjirouSkill/steps.js","constants/ChessSkillShow/TanjirouSkill/ShowType.js","constants/ChessSkillShow/TanjirouSkill/Index.js","constants/ChessSkillShow/Nezuko/steps.js","constants/ChessSkillShow/Nezuko/ShowType.js","constants/ChessSkillShow/Nezuko/Index.js","constants/ChessSkillShow/Index.js","constants/EnemyChessSkillShow/TeoniSkill/steps.js","constants/EnemyChessSkillShow/TeoniSkill/ShowType.js","constants/EnemyChessSkillShow/TeoniSkill/Index.js","constants/EnemyChessSkillShow/Index.js","components/Common/BattleAnimeShow/Index.js","components/Common/OtherTab.js","components/Common/EnemyRoundTab/EnemyList.js","components/Common/EnemyRoundTab/ChessList.js","components/Common/EnemyRoundTab/Information.js","components/Common/EnemyRoundTab/Index.js","components/Chess/ChessUIBoard.js","components/Common/ChessStatus.js","components/Chess/Chess.js","components/EnemyChess/EnemyChessUIBoard.js","components/EnemyChess/EnemyChess.js","components/Canvas.js","components/App.js","reportWebVitals.js","reducer/index.js","index.js"],"names":["basicCommon","x","y","checkStatus","boardStatus","debut","roundMove","chess","createSlice","name","initialState","cn","id","step","attack","hp","sp","dodge","fullValue","skill","atk","hitfix","reducers","stageDebut","state","actions","isDebutChess","payload","map","value","key","v","get","chessMove","changeX","changeY","chessSelected","chessCheckStatus","chessDefense","damage","chessAttackResult","lessSp","chessDead","chessMoved","chessRoundRest","i","length","roundAttack","enemyChess","enemyStageDebut","enemyChessSelected","enemyChessCheckStatus","enemyChessDefense","enemyChessAttackResult","enemyChessDead","mapLimit","createInitialState","method","list","push","createStraightLine","traverse","color","alpha","zIndex","isInteractive","chessMap","MoveSelect","action","position","changeColor","alphaVal","GetMove","currentChessPositions","GetAttack","texture","PIXI","WHITE","CreateCheckerboard","reduxProps","currentChess","dispatch","setTipStatus","setMoveStep","setBattleInfo","Fragment","k","interactive","buttonMode","width","height","tint","pointertap","type","title","status","isMatch","checkMatchAttackPosition","targetData","item","getCurrentEnemy","attacker","target","acttack","ConfirmTip","props","tipStatus","setOtherTab","setRoundNum","setUsualTip","draw","g","lineStyle","beginFill","drawRoundedRect","endFill","text","anchor","style","fontFamily","fontSize","fill","prev","stageRule","fromJS","stageOne","debutChess","debutEnemyChess","ruleText","win","lose","isWin","enemyList","totalLife","isLose","chessList","stageTwo","UsualTip","stageStatus","usualTip","setCurrentChess","setEnemyRoundTab","useState","textColor","setTextColor","checkWin","getIn","checkLose","oder","loader","hostname","window","location","add","load","ProbabilityCount","attackerHit","targetDodge","Math","round","random","BattleBoard","battleInfo","currentBGM","setAnimeShow","setCurrentBGM","atkSelectd","setAtkSelectd","CreateAttackerInfo","pX","pY","data","sortableChildren","image","resources","skillCanUse","fontWeight","CreateTargetInfo","ForecastInfo","battleBGM","loop","currentTime","play","getBGMPlay","isHit","prevSP","prevLife","AnimeShowBG","BGstatus","BGprop","SkBGprop","setSkBGpops","setBGpops","from","to","toX","config","duration","onRest","TopBar","right","left","showType","targetHp","attackerSp","hpBarCount","full","Number","spBarCount","lines","default","def","dead","BottomBar","linesStatus","showCharacter","character","randomSize","size","SkillShowProtoType","skillName","attackerName","targetLife","resultLife","resultSp","setBGstatus","setAnimeIsDone","setTargetHp","setAttackerSp","setLinesStatus","setShowSkill","defXPostion","steps","ShowType","mass","friction","tension","setPosition","useEffect","defence","timeout","clearTimeout","isHitStep","setTimeout","isDead","next","seconds","isDodge","isDeadStep2","end","skill3step1","skill3step2","run","number","TweenMax","onUpdate","numeral","format","callback","skill3step3","step1","step2","step3","step4","TanjirouSkill","NezukoSkill","ChessSkillShow","defaultprops","TeoniSkill","EnemyChessSkillShow","BattleAnimeShow","animeShow","CreateContent","animeIsDone","showSkill","fetchChessType","CreateSkillSprite","video","videoDom","baseTexture","resource","source","onended","clearAllTimeouts","OtherTab","roundNum","EnemyList","enemyRandomSkill","ChessList","defChess","setDefChess","distance","Information","atkEnemy","EnemyRoundTab","enemyRoundTab","filter","enemySkill","enemySp","totalSize","getAtkSkill","getCurrentChessKey","getKey","find","ChessUIBoard","ChessData","ChessVal","ChessKey","EnemyChessData","positionX","positionY","specialPosition","forMoveArray","forAttackArray","textInforArray","setTextInforArray","compareUsed","chessX","chessY","checkType","isUnused","val","moved","CreateText","noop","isAttack","chessAtk","isDebutEnemy","limitPosition","positionRange","getaddX","getaddY","getlessX","getlessY","compareAttack","fetchInteractive","toJS","pointerover","setIn","pointerout","e","console","log","ChessStatus","CheckStatus","CreateSkillList","Chess","chessProps","moveStep","Boolean","roundMoveDone","EnemyChessUIBoard","EnemyChess","enemyChessProps","Canvas","otherTab","useSelector","useDispatch","options","autoDensity","antialias","backgroundColor","GlobalStyle","createGlobalStyle","StyledApp","styled","div","App","dataIsDone","setDataIsDone","progress","setProgress","onProgress","floor","onComplete","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.aa3fc894.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nconst basicCommon = {\r\n  x:0,\r\n  y:0,\r\n  checkStatus:false,\r\n  boardStatus:false,\r\n  debut:false,\r\n  roundMove:1\r\n};\r\nconst chess = createSlice({\r\n  name:'chess',\r\n  initialState:[\r\n    {\r\n      name:'Tanjirou',\r\n      cn:'竈門 炭治郎',\r\n      id:1,\r\n      step:3,\r\n      attack:2,\r\n      hp:1500,\r\n      sp:125,\r\n      dodge:80,\r\n      fullValue:{\r\n        hp:1500,\r\n        sp:125\r\n      },\r\n      skill:[{ \r\n        name:'斬擊',\r\n        atk:200,\r\n        sp:0,\r\n        hitfix:0\r\n      },{ \r\n        name:'叄之型―流流舞',\r\n        atk:350,\r\n        sp:15,\r\n        hitfix:10\r\n      },{ \r\n        name:'捌之型―滝壺',\r\n        atk:500,\r\n        sp:25,\r\n        hitfix:5\r\n      },{\r\n        name:'拾之型―生生流轉',\r\n        atk:850,\r\n        sp:50,\r\n        hitfix:20\r\n      }],\r\n      ...basicCommon\r\n    },{\r\n      name:'Nezuko',\r\n      cn:'竈門 禰豆子',\r\n      id:2,\r\n      step:2,\r\n      attack:1,\r\n      hp:2200,\r\n      sp:200,\r\n      dodge:80,\r\n      fullValue:{\r\n        hp:2200,\r\n        sp:200\r\n      },\r\n      skill:[{ \r\n        name:'爪擊',\r\n        atk:150,\r\n        sp:0,\r\n        hitfix:0\r\n      },{ \r\n        name:'踢擊',\r\n        atk:250,\r\n        sp:10,\r\n        hitfix:15\r\n      },{ \r\n        name:'血鬼術',\r\n        atk:1000,\r\n        sp:80,\r\n        hitfix:35\r\n      }],\r\n      ...basicCommon\r\n    },{\r\n      name:'Inosuke',\r\n      cn:'嘴平 伊之助',\r\n      id:3,\r\n      step:4,\r\n      attack:3,\r\n      hp:1800,\r\n      sp:80,\r\n      dodge:40,\r\n      fullValue:{\r\n        hp:1800,\r\n        sp:80\r\n      },\r\n      skill:[{ \r\n        name:'斬擊',\r\n        atk:50,\r\n        sp:0,\r\n        hitfix:0\r\n      },{ \r\n        name:'壹之牙―穿透刺射',\r\n        atk:120,\r\n        sp:2,\r\n        hitfix:0\r\n      },{ \r\n        name:'貳之牙―利刃對劈',\r\n        atk:200,\r\n        sp:5,\r\n        hitfix:0\r\n      },{\r\n        name:'叄之牙―獠牙撕扯',\r\n        atk:400,\r\n        sp:8,\r\n        hitfix:0\r\n      }],\r\n      ...basicCommon\r\n    }\r\n  ],\r\n  reducers:{\r\n    stageDebut:(state, actions)=> {\r\n      const { isDebutChess } = actions.payload;\r\n      state.map((value,key)=>{\r\n        return isDebutChess.map(v=>{\r\n          if(value.name===v.get('name')){\r\n            return (\r\n              state[key].debut = true,\r\n              state[key].x = v.get('x'),\r\n              state[key].y = v.get('y')\r\n            );\r\n          }else return null;\r\n        })\r\n      })\r\n    },\r\n    chessMove: (state, actions)=>{\r\n      const { key, changeX, changeY } = actions.payload;\r\n      state[key].x = changeX;\r\n      state[key].y = changeY;\r\n    },\r\n    chessSelected: (state, actions)=>{\r\n      const { key } = actions.payload;\r\n      state[key].boardStatus = !state[key].boardStatus;\r\n    },\r\n    chessCheckStatus: (state, actions)=> {\r\n      const { key } = actions.payload;\r\n      state[key].checkStatus = !state[key].checkStatus;\r\n    },\r\n    chessDefense: (state, actions)=>{\r\n      const { key, damage } = actions.payload;\r\n      state[key].hp -= damage;\r\n    },\r\n    chessAttackResult: (state, actions)=> {\r\n      const { key, lessSp } = actions.payload;\r\n      state[key].sp -= lessSp;\r\n    },\r\n    chessDead: (state, actions)=> {\r\n      const { key } = actions.payload;\r\n      state[key].debut = false;\r\n      state[key].hp = state[key].fullValue.hp;\r\n      state[key].sp = state[key].fullValue.sp;\r\n    },\r\n    chessMoved: (state, actions)=>{\r\n      const { key } = actions.payload;\r\n      state[key].roundMove -= 1;\r\n    },\r\n    chessRoundRest:(state)=>{\r\n      for(let i=0;i<state.length;i++){\r\n        state[i].roundMove = 1;\r\n      };\r\n    },\r\n  }\r\n});\r\nexport default chess.reducer;\r\nexport const { \r\n  stageDebut, chessMove, chessSelected, chessCheckStatus, chessAttackResult, \r\n  chessDead, chessMoved, chessDefense, chessRoundRest\r\n} = chess.actions;","import { createSlice } from '@reduxjs/toolkit';\r\nconst basicCommon = {\r\n  x:0,\r\n  y:0,\r\n  checkStatus:false,\r\n  boardStatus:false,\r\n  debut:false,\r\n  roundAttack:false,\r\n};\r\nconst enemyChess = createSlice({\r\n  name:'enemyChess',\r\n  initialState:[\r\n    {\r\n      name:'Teoni',\r\n      cn:'手鬼',\r\n      id:1,\r\n      hp:2000,\r\n      sp:100,\r\n      dodge:25,\r\n      fullValue:{\r\n        hp:2000,\r\n        sp:100\r\n      },\r\n      skill:[{ \r\n        name:'胡亂毆打',\r\n        atk:150,\r\n        sp:0,\r\n        hitfix:10\r\n      },{ \r\n        name:'你是第十四個',\r\n        atk:500,\r\n        sp:25,\r\n        hitfix:20\r\n      }],\r\n      ...basicCommon\r\n    },{\r\n      name:'Nomanooni',\r\n      cn:'沼鬼',\r\n      id:2,\r\n      hp:1500,\r\n      sp:200,\r\n      dodge:30,\r\n      fullValue:{\r\n        hp:1500,\r\n        sp:200\r\n      },\r\n      skill:[{ \r\n        name:'爪擊',\r\n        atk:70,\r\n        sp:0,\r\n        hitfix:15\r\n      },{ \r\n        name:'分身攻擊',\r\n        atk:600,\r\n        sp:15,\r\n        hitfix:30\r\n      }],\r\n      ...basicCommon\r\n    }\r\n  ],\r\n  reducers:{\r\n    enemyStageDebut:(state, actions)=> {\r\n      const { isDebutChess } = actions.payload;\r\n      state.map((value,key)=>{\r\n        return isDebutChess.map(v=>{\r\n          if(value.name===v.get('name')){\r\n            return (\r\n              state[key].debut = true,\r\n              state[key].x = v.get('x'),\r\n              state[key].y = v.get('y')\r\n            );\r\n          }else return null;\r\n        })\r\n      })\r\n    },\r\n    enemyChessSelected: (state, actions)=>{\r\n      const { key } = actions.payload;\r\n      state[key].boardStatus = !state[key].boardStatus;\r\n    },\r\n    enemyChessCheckStatus: (state, actions)=> {\r\n      const { key } = actions.payload;\r\n      state[key].checkStatus = !state[key].checkStatus;\r\n    },\r\n    enemyChessDefense: (state, actions)=> {\r\n      const { key, damage } = actions.payload;\r\n      state[key].hp -= damage;\r\n    },\r\n    enemyChessAttackResult: (state, actions)=> {\r\n      const { key, lessSp } = actions.payload;\r\n      state[key].sp -= lessSp;\r\n    },\r\n    enemyChessDead: (state, actions)=> {\r\n      const { key } = actions.payload;\r\n      state[key].debut = false;\r\n      state[key].hp = state[key].fullValue.hp;\r\n      state[key].sp = state[key].fullValue.sp;\r\n    },\r\n  }\r\n});\r\nexport default enemyChess.reducer;\r\nexport const { \r\n  enemyStageDebut, enemyChessSelected, enemyChessCheckStatus, enemyChessDefense, \r\n  enemyChessAttackResult, enemyChessDead \r\n} = enemyChess.actions;","import { createSlice } from '@reduxjs/toolkit';\r\nconst mapLimit = { x:20, y:15 };\r\nconst createTraverseLine = (traverse=0,color='')=>{\r\n  const list = [];\r\n  for(let i=0;i<mapLimit.x;i++){\r\n    list.push({\r\n      x:i,\r\n      y:traverse,\r\n      color:color,\r\n      alpha:0,\r\n      zIndex:1,\r\n      isInteractive:false\r\n    });\r\n  };\r\n  return list;\r\n};\r\nconst createStraightLine = ( method=()=>{} )=>{\r\n  const list = [];\r\n  for(let i=0;i<mapLimit.y;i++){\r\n    list.push(method(i,'0x383838'));\r\n  };\r\n  return list;\r\n};\r\nconst createInitialState = createStraightLine(createTraverseLine);\r\nconst chessMap = createSlice({\r\n  name:'chessMap',\r\n  initialState: createInitialState,\r\n  reducers:{\r\n    MoveSelect:(state, action)=>{\r\n      const { position, step, changeColor, alphaVal=1} = action.payload;\r\n      for(let i=0;i<(step+1);i++){\r\n        if(position.x+i<=(mapLimit.x-1)){\r\n          state[position.y][position.x+i].color=changeColor;\r\n          state[position.y][position.x+i].isInteractive=false;\r\n          state[position.y][position.x+i].alpha=alphaVal;\r\n          state[position.y][position.x+i].zIndex=1;\r\n        };\r\n        if(position.y+i<=(mapLimit.y-1)){\r\n          state[position.y+i][position.x].color=changeColor;\r\n          state[position.y+i][position.x].isInteractive=false;\r\n          state[position.y+i][position.x].alpha=alphaVal;\r\n          state[position.y+i][position.x].zIndex=1;\r\n        };\r\n        if(position.x-i>=0){\r\n          state[position.y][position.x-i].color=changeColor;\r\n          state[position.y][position.x-i].isInteractive=false;\r\n          state[position.y][position.x-i].alpha=alphaVal;\r\n          state[position.y][position.x-i].zIndex=1;\r\n        };\r\n        if(position.y-i>=0){\r\n          state[position.y-i][position.x].color=changeColor;\r\n          state[position.y-i][position.x].isInteractive=false;\r\n          state[position.y-i][position.x].alpha=alphaVal;\r\n          state[position.y-i][position.x].zIndex=1;\r\n        };\r\n      }\r\n    },\r\n    GetMove:(state, action)=>{\r\n      const { position, step, changeColor, currentChessPositions } = action.payload;\r\n      for(let i=0;i<(step+1);i++){\r\n        if(position.x+i<=(mapLimit.x-1)){\r\n          state[position.y][position.x+i].color=changeColor;\r\n          state[position.y][position.x+i].isInteractive=true;\r\n          state[position.y][position.x+i].alpha=0.5;\r\n          state[position.y][position.x+i].zIndex=1;\r\n        };\r\n        if(position.y+i<=(mapLimit.y-1)){\r\n          state[position.y+i][position.x].color=changeColor;\r\n          state[position.y+i][position.x].isInteractive=true;\r\n          state[position.y+i][position.x].alpha=0.5;\r\n          state[position.y+i][position.x].zIndex=1;\r\n        };\r\n        if(position.x-i>=0){\r\n          state[position.y][position.x-i].color=changeColor;\r\n          state[position.y][position.x-i].isInteractive=true;\r\n          state[position.y][position.x-i].alpha=0.5;\r\n          state[position.y][position.x-i].zIndex=1;\r\n        };\r\n        if(position.y-i>=0){\r\n          state[position.y-i][position.x].color=changeColor;\r\n          state[position.y-i][position.x].isInteractive=true;\r\n          state[position.y-i][position.x].alpha=0.5;\r\n          state[position.y-i][position.x].zIndex=1;\r\n        };\r\n      }\r\n      currentChessPositions.map(v=>{\r\n        return state[v.y][v.x].isInteractive=false;\r\n      });\r\n    },\r\n    GetAttack:(state, action)=>{\r\n      const { position, step, changeColor, currentChessPositions } = action.payload;\r\n      for(let i=0;i<(step+1);i++){\r\n        if(position.x+i<=(mapLimit.x-1)){\r\n          state[position.y][position.x+i].color=changeColor;\r\n          state[position.y][position.x+i].isInteractive=true;\r\n          state[position.y][position.x+i].alpha=0.5;\r\n          state[position.y][position.x+i].zIndex=3;\r\n        };\r\n        if(position.y+i<=(mapLimit.y-1)){\r\n          state[position.y+i][position.x].color=changeColor;\r\n          state[position.y+i][position.x].isInteractive=true;\r\n          state[position.y+i][position.x].alpha=0.5;\r\n          state[position.y+i][position.x].zIndex=3;\r\n        };\r\n        if(position.x-i>=0){\r\n          state[position.y][position.x-i].color=changeColor;\r\n          state[position.y][position.x-i].isInteractive=true;\r\n          state[position.y][position.x-i].alpha=0.5;\r\n          state[position.y][position.x-i].zIndex=3;\r\n        };\r\n        if(position.y-i>=0){\r\n          state[position.y-i][position.x].color=changeColor;\r\n          state[position.y-i][position.x].isInteractive=true;\r\n          state[position.y-i][position.x].alpha=0.5;\r\n          state[position.y-i][position.x].zIndex=3;\r\n        };\r\n      }\r\n      currentChessPositions.map(v=>{\r\n        return (\r\n          state[v.y][v.x].isInteractive=false,\r\n          state[v.y][v.x].zIndex=1\r\n        )\r\n      });\r\n    }\r\n  }\r\n});\r\nexport default chessMap.reducer;\r\nexport const { MoveSelect, GetMove, GetAttack } = chessMap.actions;\r\n","import React, {} from 'react';\r\nimport * as PIXI from \"pixi.js\";\r\nimport { Sprite } from '@inlet/react-pixi/animated';\r\nimport { MoveSelect } from '../../reducer/map';\r\nconst texture = PIXI.Texture.WHITE;\r\nexport const CreateCheckerboard = ({\r\n  reduxProps\r\n})=>{\r\n  const { \r\n    chess, enemyChess, chessMap, currentChess, dispatch, \r\n    setTipStatus, setMoveStep, setBattleInfo\r\n  } = reduxProps;\r\n  const checkMatchAttackPosition = (x,y)=>{\r\n    let isMatch = false;\r\n    enemyChess.map(v=>{\r\n      const checkMatch = v.debut&&(x===v.x)&&(y===v.y);\r\n      if(checkMatch){\r\n        return isMatch=true;\r\n      }else return null;\r\n    });\r\n    return isMatch;\r\n  };\r\n  const getCurrentEnemy = (x,y)=>{\r\n    let item = {};\r\n    enemyChess.map((v,k)=>{\r\n      const checkMatch = v.debut&&(x===v.x)&&(y===v.y);\r\n      if(checkMatch){\r\n        return item={...v,key:k}\r\n      }else return null;\r\n    });\r\n    return item;\r\n  };\r\n  return <React.Fragment>\r\n    {chessMap.map(value=> {\r\n      return value.map((v,k)=>{\r\n        return <Sprite\r\n          interactive={v.isInteractive}\r\n          buttonMode={v.isInteractive}\r\n          zIndex={v.zIndex}\r\n          key={k}\r\n          width={40}\r\n          height={40}\r\n          x={v.x*40}\r\n          y={v.y*40}\r\n          tint={v.color}\r\n          alpha={v.alpha}\r\n          texture={texture}\r\n          pointertap={()=>{\r\n            switch (currentChess.type) {\r\n              case \"MOVE\":\r\n                setTipStatus({\r\n                  title:'確定移動?',\r\n                  status:true,\r\n                  position:{\r\n                    x:v.x, y:v.y\r\n                  }\r\n                });\r\n                dispatch(MoveSelect({\r\n                  position:{ \r\n                    x:chess[currentChess.key].x, \r\n                    y:chess[currentChess.key].y,\r\n                  },\r\n                  step:chess[currentChess.key].step,\r\n                  changeColor:'0x06d6a0',\r\n                  alphaVal:0.5\r\n                }));\r\n                break;\r\n              case \"ATTACK\":\r\n                if(checkMatchAttackPosition(v.x,v.y)){\r\n                  const targetData = getCurrentEnemy(v.x,v.y);\r\n                  setBattleInfo({\r\n                    status:true,\r\n                    attacker:{ \r\n                      key: currentChess.key,\r\n                      ...chess[currentChess.key]\r\n                    },\r\n                    target:{\r\n                      key: targetData.key,\r\n                      ...targetData\r\n                    }\r\n                  });\r\n                  dispatch(MoveSelect({\r\n                    position:{ \r\n                      x:chess[currentChess.key].x, \r\n                      y:chess[currentChess.key].y,\r\n                    },\r\n                    step:chess[currentChess.key].attack,\r\n                    changeColor:'0x383838',\r\n                    alphaVal:0\r\n                  }));\r\n                }else {\r\n                  setMoveStep(true);\r\n                  dispatch(MoveSelect({\r\n                    position:{ \r\n                      x:chess[currentChess.key].x, \r\n                      y:chess[currentChess.key].y,\r\n                    },\r\n                    step:chess[currentChess.key].acttack,\r\n                    changeColor:'0x383838',\r\n                    alphaVal:0\r\n                  }));\r\n                };\r\n                break;\r\n              default:\r\n                return;\r\n            }; \r\n          }}\r\n        />\r\n      });\r\n    })}\r\n  </React.Fragment>\r\n};","import React from 'react';\r\n// import { fromJS } from 'immutable';\r\nimport { Graphics, Text } from '@inlet/react-pixi/animated';\r\nimport { chessMove, chessMoved } from \"../../reducer/chess\";\r\nimport { MoveSelect } from '../../reducer/map';\r\nimport * as PIXI from \"pixi.js\";\r\n\r\nexport const ConfirmTip = ({\r\n  props,\r\n})=> {\r\n  const { \r\n    chess,\r\n    currentChess,\r\n    tipStatus,\r\n    dispatch,\r\n    setMoveStep, \r\n    setTipStatus,\r\n    setOtherTab,\r\n    setRoundNum,\r\n    setUsualTip\r\n  } = props;\r\n  return <Graphics\r\n    x={400}\r\n    y={300}\r\n    draw={g=> {\r\n      g.lineStyle(1,`0xffffff`,1);\r\n      g.beginFill(`0x22223b`);\r\n      g.drawRoundedRect(-90,-50,180,100,8);\r\n      g.endFill();\r\n    }}\r\n  >\r\n    <Text\r\n      text={tipStatus.title}\r\n      anchor={0.5}\r\n      x={0}\r\n      y={-20}\r\n      style={new PIXI.TextStyle({\r\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 20,\r\n        fill:['#ffffff', '#ffffff'],\r\n      })}\r\n    />\r\n    <Text\r\n      interactive={true}\r\n      buttonMode={true}\r\n      anchor={0.5}\r\n      text={'確定'}\r\n      x={-30}\r\n      y={20}\r\n      style={new PIXI.TextStyle({\r\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 20,\r\n        fill:['#ffffff', '#ffffff'],\r\n      })}\r\n      pointertap={()=>{\r\n        switch (currentChess.type) {\r\n          case \"MOVE\":\r\n            dispatch(chessMove({\r\n              key: currentChess.key,\r\n              changeX:tipStatus.position.x,\r\n              changeY:tipStatus.position.y\r\n            }));\r\n            dispatch(chessMoved({\r\n              key: currentChess.key,\r\n            }));\r\n            dispatch(MoveSelect({\r\n              position:{ \r\n                x:chess[currentChess.key].x, \r\n                y:chess[currentChess.key].y,\r\n              },\r\n              step:chess[currentChess.key].step,\r\n              changeColor:'0x383838',\r\n              alphaVal:0\r\n            }));\r\n            setMoveStep(true);\r\n            setTipStatus(prev=>{\r\n              return {...prev, status:false }\r\n            });\r\n            break;\r\n          case \"ENDROUND\":\r\n            setOtherTab(false);\r\n            setRoundNum(prev=>prev+=1);\r\n            setTipStatus(prev=>{\r\n              return {...prev, status:false }\r\n            });\r\n            setUsualTip({\r\n              title:'敵方回合',\r\n              status:true\r\n            })\r\n            break;\r\n          default:\r\n            return;\r\n        }\r\n      }}\r\n    />\r\n    <Text\r\n      interactive={true}\r\n      buttonMode={true}\r\n      anchor={0.5}\r\n      text={'取消'}\r\n      x={30}\r\n      y={20}\r\n      style={new PIXI.TextStyle({\r\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 20,\r\n        fill:['#ffffff', '#ffffff'],\r\n      })}\r\n      pointertap={()=>{\r\n        switch (currentChess.type) {\r\n          case \"MOVE\":\r\n            dispatch(MoveSelect({\r\n              position:{ \r\n                x:chess[currentChess.key].x, \r\n                y:chess[currentChess.key].y,\r\n              },\r\n              step:chess[currentChess.key].step,\r\n              changeColor:'0x383838',\r\n              alphaVal:0\r\n            }));\r\n            setMoveStep(true);\r\n            setTipStatus(prev=>{\r\n              return {...prev, status:false }\r\n            });\r\n            break;\r\n          case \"ENDROUND\":\r\n            setTipStatus(prev=>{\r\n              return {...prev, status:false }\r\n            });\r\n            break;\r\n          default:\r\n            return;\r\n        }\r\n      }}\r\n    />\r\n  </Graphics>\r\n};","import { fromJS } from \"immutable\";\r\n\r\nexport const stageRule = fromJS({\r\n  stageOne: {\r\n    debutChess:[\r\n      { \r\n        name:'Tanjirou',\r\n        x:3,\r\n        y:7\r\n      },{ \r\n        name:'Nezuko',\r\n        x:3,\r\n        y:9\r\n      }\r\n    ],\r\n    debutEnemyChess:[\r\n      {\r\n        name:'Teoni',\r\n        x:16,\r\n        y:7\r\n      }\r\n    ],\r\n    ruleText:{\r\n      win:'擊敗手鬼。',\r\n      lose:'竃門 碳治郎 戰敗。'\r\n    },\r\n    isWin: enemyList => {\r\n      let totalLife = 0;\r\n        enemyList.map(v => {\r\n          if(v.debut){\r\n            return totalLife += v.hp;\r\n          }return null;\r\n        });\r\n      return totalLife>0 ? false : true ;\r\n    },\r\n    isLose: chessList => {\r\n      let totalLife = 0;\r\n        chessList.map(v => {\r\n          if(v.debut){\r\n            return totalLife += v.hp;\r\n          }return null;\r\n        });\r\n      return totalLife>0 ? false : true ;\r\n    }\r\n  },\r\n  stageTwo: {\r\n    debutChess:[\r\n      { \r\n        name:'Tanjirou',\r\n        x:3,\r\n        y:9\r\n      }, { \r\n        name:'Nezuko',\r\n        x:3,\r\n        y:11\r\n      }\r\n    ],\r\n    debutEnemyChess:[\r\n      {\r\n        name:'Nomanooni',\r\n        x:16,\r\n        y:7\r\n      }\r\n    ]\r\n  }\r\n});","import React,{ useState } from 'react';\r\n// import { fromJS } from 'immutable';\r\nimport { Graphics, Text } from '@inlet/react-pixi/animated';\r\nimport * as PIXI from \"pixi.js\";\r\n// rule\r\nimport { stageRule } from \"../../constants/stageRule\";\r\n\r\nexport const UsualTip = ({\r\n  props,\r\n})=> {\r\n  const {\r\n    stageStatus, chess, currentChess, enemyChess,\r\n    usualTip, setMoveStep, setUsualTip, setCurrentChess, setEnemyRoundTab } = props;\r\n    const [ textColor, setTextColor ] = useState(['#ffffff', '#ffffff']);\r\n  return <Graphics\r\n    x={400}\r\n    y={300}\r\n    draw={g=> {\r\n      g.lineStyle(1,`0xffffff`,1);\r\n      g.beginFill(`0x22223b`);\r\n      g.drawRoundedRect(-90,-50,180,100,8);\r\n      g.endFill();\r\n    }}\r\n  >\r\n    <Text\r\n      text={usualTip.title}\r\n      anchor={0.5}\r\n      x={0}\r\n      y={-20}\r\n      style={new PIXI.TextStyle({\r\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 20,\r\n        fill: textColor,\r\n      })}\r\n    />\r\n    <Text\r\n      interactive={true}\r\n      buttonMode={true}\r\n      anchor={0.5}\r\n      text={'確定'}\r\n      x={0}\r\n      y={20}\r\n      style={new PIXI.TextStyle({\r\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 20,\r\n        fill:['#ffffff', '#ffffff'],\r\n      })}\r\n      pointertap={()=>{\r\n        switch (currentChess.type) {\r\n          case \"ATTACK\":\r\n            const checkWin = stageRule.getIn([stageStatus,'isWin']);\r\n            const checkLose = stageRule.getIn([stageStatus,'isLose']);\r\n            if(checkWin(enemyChess)){\r\n              setTextColor(['#ffffff', '#06d6a0']);\r\n              setCurrentChess({\r\n                key:0,\r\n                type:\"CHECKWIN\"\r\n              });\r\n              setUsualTip({\r\n                title:`作戰獲勝!`,\r\n                status:true,\r\n              });\r\n            }else if(checkLose(chess)){\r\n              setTextColor(['#dc2f02', '#d00000']);\r\n              setCurrentChess({\r\n                key:0,\r\n                type:\"CHECKLOSE\"\r\n              });\r\n              setUsualTip({\r\n                title:`作戰失敗!`,\r\n                status:true,\r\n              });\r\n            }else {\r\n              setMoveStep(true);\r\n              setUsualTip({\r\n                title:``,\r\n                status:false,\r\n              });\r\n            }\r\n            break;\r\n          case \"CHECKWIN\":\r\n            setMoveStep(true);\r\n            setTextColor(['#ffffff', '#ffffff']);\r\n            setUsualTip({\r\n              title:``,\r\n              status:false,\r\n            });\r\n            break;\r\n          case \"CHECKLOSE\":\r\n            setMoveStep(true);\r\n            setTextColor(['#ffffff', '#ffffff']);\r\n            setUsualTip({\r\n              title:``,\r\n              status:false,\r\n            });\r\n            break;\r\n          case \"ENDROUND\":\r\n            setEnemyRoundTab({\r\n              oder:0,\r\n              status:true\r\n            });\r\n            setUsualTip({\r\n              title:``,\r\n              status:false\r\n            });\r\n            break;\r\n          default:\r\n            return;\r\n        }\r\n      }}\r\n    />\r\n  </Graphics>\r\n};","import * as PIXI from \"pixi.js\";\r\nexport const loader = new PIXI.Loader();\r\nconst hostname = window.location.hostname==='localhost'?'./Demon-Slayer/':'./';\r\n\r\nloader\r\n  .add('Tanjirou-head-default',`${hostname}imgs/Tanjirou/head-default.png`)\r\n  .add('Tanjirou-talk-default',`${hostname}imgs/Tanjirou/talk-default.jpg`)\r\n  .add('Tanjirou-talk-attack',`${hostname}imgs/Tanjirou/talk-attack.jpg`)\r\n  .add('Tanjirou-talk-def',`${hostname}imgs/Tanjirou/talk-def.jpg`)\r\n  .add('Tanjirou-talk-dodge',`${hostname}imgs/Tanjirou/talk-dodge.jpg`)\r\n  .add('Tanjirou-talk-dead',`${hostname}imgs/Tanjirou/talk-dead.jpg`)\r\n  .add('Tanjirou-fight-typeA',`${hostname}imgs/Tanjirou/fight-typeA.png`)\r\n  .add('Tanjirou-fight-typeB',`${hostname}imgs/Tanjirou/fight-typeB.png`)\r\n  .add('Tanjirou-skill3-show',`${hostname}imgs/Tanjirou/skill/skill3.mp4`)\r\n  .add('Nezuko-head-default',`${hostname}imgs/Nezuko/head-default.jpg`)\r\n  .add('Nezuko-talk-default',`${hostname}imgs/Nezuko/talk-default.jpg`)\r\n  .add('Nezuko-talk-attack',`${hostname}imgs/Nezuko/talk-attack.jpg`)\r\n  .add('Nezuko-talk-def',`${hostname}imgs/Nezuko/talk-def.jpg`)\r\n  .add('Nezuko-talk-dodge',`${hostname}imgs/Nezuko/talk-dodge.jpg`)\r\n  .add('Nezuko-talk-dead',`${hostname}imgs/Nezuko/talk-dead.jpg`)\r\n  .add('Nezuko-fight',`${hostname}imgs/Nezuko/fight.png`)\r\n  .add('Inosuke-head-default',`${hostname}imgs/Inosuke/head-default.jpg`)\r\n  .add('Inosuke-fight',`${hostname}imgs/Inosuke/fight.png`)\r\n  .add('Teoni-head-default',`${hostname}imgs/Teoni/head-default.png`)\r\n  .add('Teoni-talk-default',`${hostname}imgs/Teoni/talk-default.jpg`)\r\n  .add('Teoni-talk-attack',`${hostname}imgs/Teoni/talk-attack.jpg`)\r\n  .add('Teoni-talk-def',`${hostname}imgs/Teoni/talk-def.jpg`)\r\n  .add('Teoni-talk-dodge',`${hostname}imgs/Teoni/talk-dodge.jpg`)\r\n  .add('Teoni-talk-dead',`${hostname}imgs/Teoni/talk-dead.jpg`)\r\n  .add('Teoni-fight',`${hostname}imgs/Teoni/fight.png`)\r\n  .add('Nomanooni-head-default',`${hostname}imgs/Nomanooni/head-default.jpg`)\r\n  .add('Nomanooni-fight',`${hostname}imgs/Nomanooni/fight.png`)\r\n  .add('stageOne-BG',`${hostname}imgs/background/stage1-background.png`)\r\n  .add('stageOne-main-BG',`${hostname}imgs/background/stage1-main-background.jpg`)\r\n  .add('atkIcon',`${hostname}imgs/common/atk.png`)\r\n  .add('defIcon',`${hostname}imgs/common/def.png`)\r\n  .add('otherIcon',`${hostname}imgs/common/other.png`)\r\n  .add('closeIcon',`${hostname}imgs/common/close.png`)\r\n  .add('endBtn',`${hostname}imgs/common/end.png`)\r\n  .add('fightOff',`${hostname}imgs/common/fightOff.png`)\r\n  .add('fightDef',`${hostname}imgs/common/fightDef.png`)\r\n  .add('bgm-KimetsuNoYaiba',`${hostname}audio/bgm-KimetsuNoYaiba.mp3`)\r\n  .load();\r\n","export const ProbabilityCount = (\r\n  attackerHit,\r\n  targetDodge\r\n)=>{\r\n  const basicHit = 100;\r\n  const hitProbability = basicHit + attackerHit - targetDodge;\r\n  const checkRamdom = Math.round(Math.random()*100 + 1);\r\n  if(hitProbability < checkRamdom) {\r\n    return false\r\n  }else return true;\r\n};","import React,{ useState } from 'react';\r\nimport { Container, Sprite, Graphics, Text } from '@inlet/react-pixi/animated';\r\nimport { loader } from '../DataLoader';\r\nimport * as PIXI from \"pixi.js\";\r\nimport { ProbabilityCount } from \"../Common/ProbabilityCount\";\r\nimport { chessAttackResult, chessMoved } from \"../../reducer/chess\";\r\nimport { enemyChessDefense } from \"../../reducer/enemyChess\";\r\n\r\nexport const BattleBoard = ({ props })=>{\r\n  const { \r\n    battleInfo, currentBGM, \r\n    setMoveStep, setBattleInfo, setAnimeShow, setCurrentBGM, dispatch\r\n  } = props;\r\n  const [ atkSelectd, setAtkSelectd ] = useState({\r\n    key:0,\r\n  });\r\n  const getBGMPlay = (type='')=>{\r\n    if(currentBGM===type){ return };\r\n    setCurrentBGM(type);\r\n    let battleBGM;\r\n    switch (type) {\r\n      default:\r\n        battleBGM = loader.resources[`bgm-KimetsuNoYaiba`].data;\r\n        battleBGM.loop = true;\r\n        battleBGM.currentTime = 0;\r\n        battleBGM.play();\r\n        break;\r\n    };\r\n  };\r\n  const CreateAttackerInfo = ({ pX=0, pY=0, data })=>{\r\n    return <Container x={pX} y={pY} sortableChildren={true}>\r\n      <Text\r\n        text={'攻'}\r\n        x={220}\r\n        y={0}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 30,\r\n          fill:['#ffffff', '#00ff99'],\r\n        })}\r\n      />\r\n      <Text\r\n        text={data.cn}\r\n        x={60}\r\n        y={-3}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 16,\r\n          fill:'#ffffff',\r\n        })}\r\n      />\r\n      <Text\r\n        text={`${data.hp} / ${data.fullValue.hp}`}\r\n        x={60}\r\n        y={17}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 16,\r\n          fill:'#ff6b6b',\r\n        })}\r\n      />\r\n      <Text\r\n        text={`${data.sp} / ${data.fullValue.sp}`}\r\n        x={60}\r\n        y={34}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 16,\r\n          fill:'#0466c8',\r\n        })}\r\n      />\r\n      <Sprite\r\n        width={50}\r\n        height={50}\r\n        x={0}\r\n        y={0}\r\n        image={loader.resources[`${data.name}-head-default`].data}\r\n      />\r\n      <Text\r\n        text={`招式選擇：`}\r\n        x={0}\r\n        y={80}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 16,\r\n          fill:'#ffffff',\r\n        })}\r\n      />\r\n      <Graphics\r\n        x={0}\r\n        y={115}\r\n        zIndex={1}\r\n        draw={g=> {\r\n          g.lineStyle(1,`0xffffff`,1);\r\n          g.beginFill(`0x0f0f1b`);\r\n          g.drawRoundedRect(0,0,240,180,8);\r\n          g.endFill();\r\n        }}\r\n      />\r\n      {data.skill.map((value,key)=>{\r\n        const skillCanUse = data.sp - value.sp >= 0;\r\n        return <React.Fragment key={key}>\r\n          <Text\r\n            zIndex={2}\r\n            interactive={skillCanUse}\r\n            buttonMode={true}\r\n            text={value.name}\r\n            x={20}\r\n            y={130+(key*24)}\r\n            style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n              fontSize: 16,\r\n              fill: ((atkSelectd.key===key)&&skillCanUse) ? ['#ffffff', '#00ff99'] :  \r\n                skillCanUse ? '#ffffff' : '#8d99ae',\r\n              fontWeight: (atkSelectd.key===key) ? 600 : 300\r\n            })}\r\n            pointertap={()=>setAtkSelectd({\r\n              key: key\r\n            })}\r\n          />\r\n        </React.Fragment>\r\n      })}\r\n    </Container>\r\n  };\r\n  const CreateTargetInfo = ({ pX=0, pY=0, data })=>{\r\n    return <Container x={pX} y={pY} sortableChildren={true}>\r\n      <Text\r\n        text={'防'}\r\n        x={0}\r\n        y={0}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 30,\r\n          fill:['#ffffff', '#ee6c4d'],\r\n        })}\r\n      />\r\n      <Text\r\n        text={data.cn}\r\n        anchor={{x:1,y:0}}\r\n        x={190}\r\n        y={-3}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 16,\r\n          fill:'#ffffff',\r\n        })}\r\n      />\r\n      <Text\r\n        text={`${data.hp} / ${data.fullValue.hp}`}\r\n        anchor={{x:1,y:0}}\r\n        x={190}\r\n        y={17}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 16,\r\n          fill:'#ff6b6b',\r\n        })}\r\n      />\r\n      <Text\r\n        text={`${data.sp} / ${data.fullValue.sp}`}\r\n        anchor={{x:1,y:0}}\r\n        x={190}\r\n        y={34}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 16,\r\n          fill:'#0466c8',\r\n        })}\r\n      />\r\n      <Sprite\r\n        width={50}\r\n        height={50}\r\n        x={200}\r\n        y={0}\r\n        image={loader.resources[`${data.name}-head-default`].data}\r\n      />\r\n    </Container>\r\n  };\r\n  const ForecastInfo = ({ pX, pY, data })=>{\r\n    return <Container x={pX} y={pY} sortableChildren={true}>\r\n      <Graphics\r\n        x={0}\r\n        y={0}\r\n        zIndex={1}\r\n        draw={g=> {\r\n          g.lineStyle(1,`0x00ff99`,1);\r\n          g.beginFill(`0x0f0f1b`);\r\n          g.drawRoundedRect(0,0,265,215,8);\r\n          g.endFill();\r\n        }}\r\n      />\r\n      <Text\r\n        text={`招式：`}\r\n        zIndex={2}\r\n        x={20}\r\n        y={20}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 20,\r\n          fill:'#ffffff'\r\n        })}\r\n      />\r\n      <Text\r\n        text={`${data.attacker.skill[atkSelectd.key].name}`}\r\n        zIndex={2}\r\n        x={80}\r\n        y={22}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 16,\r\n          fill:'#00ff99'\r\n        })}\r\n      />\r\n      <Text\r\n        text={`攻擊力：`}\r\n        zIndex={2}\r\n        x={20}\r\n        y={50}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 20,\r\n          fill:'#ffffff'\r\n        })}\r\n      />\r\n      <Text\r\n        text={`${data.attacker.skill[atkSelectd.key].atk}`}\r\n        zIndex={2}\r\n        x={100}\r\n        y={52}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 18,\r\n          fill:'#fdc500'\r\n        })}\r\n      />\r\n      <Text\r\n        text={`命中率：`}\r\n        zIndex={2}\r\n        x={20}\r\n        y={80}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 20,\r\n          fill:'#ffffff'\r\n        })}\r\n      />\r\n      <Text\r\n        text={`${\r\n          100 +\r\n          ((data.attacker.skill[atkSelectd.key].hitfix - data.target.dodge)>=0 ? 0 :\r\n            (data.attacker.skill[atkSelectd.key].hitfix - data.target.dodge))\r\n        }%`}\r\n        zIndex={2}\r\n        x={100}\r\n        y={82}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 18,\r\n          fill:'#ffffff'\r\n        })}\r\n      />\r\n      <Text\r\n        text={`消耗：`}\r\n        zIndex={2}\r\n        x={20}\r\n        y={110}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 20,\r\n          fill:'#ffffff'\r\n        })}\r\n      />\r\n      <Text\r\n        text={`${data.attacker.skill[atkSelectd.key].sp}`}\r\n        zIndex={2}\r\n        x={80}\r\n        y={110}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 18,\r\n          fill:'#0466c8'\r\n        })}\r\n      />\r\n    </Container>\r\n  };\r\n  return <Graphics\r\n    x={400}\r\n    y={300}\r\n    zIndex={99}\r\n    draw={g=> {\r\n      g.lineStyle(1,`0xffffff`,1);\r\n      g.beginFill(`0x22223b`);\r\n      g.drawRoundedRect(-300,-200,600,400,8);\r\n      g.endFill();\r\n    }}\r\n  >\r\n    <CreateAttackerInfo\r\n      pX={-270}\r\n      pY={-180}\r\n      data={battleInfo.attacker}\r\n    />\r\n    <CreateTargetInfo\r\n      pX={20}\r\n      pY={-180}\r\n      data={battleInfo.target}\r\n    />\r\n    <ForecastInfo\r\n      pX={0}\r\n      pY={-100}\r\n      data={battleInfo}\r\n    />\r\n    <Text\r\n      interactive={true}\r\n      buttonMode={true}\r\n      text={'攻擊'}\r\n      anchor={0.5}\r\n      x={180}\r\n      y={160}\r\n      style={new PIXI.TextStyle({\r\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 20,\r\n        fill:'#ffffff',\r\n      })}\r\n      pointertap={()=>{\r\n        getBGMPlay('KimetsuNoYaiba');\r\n        const isHit = ProbabilityCount(\r\n          battleInfo.attacker.skill[atkSelectd.key].hitfix,\r\n          battleInfo.target.dodge\r\n        );\r\n        dispatch(chessAttackResult({\r\n          key: battleInfo.attacker.key,\r\n          lessSp: battleInfo.attacker.skill[atkSelectd.key].sp\r\n        }));\r\n        dispatch(chessMoved({\r\n          key: battleInfo.attacker.key,\r\n        }));\r\n        if(isHit){\r\n          dispatch(enemyChessDefense({\r\n            key: battleInfo.target.key,\r\n            damage: battleInfo.attacker.skill[atkSelectd.key].atk\r\n          }));\r\n        };\r\n        setAnimeShow({\r\n          status:true,\r\n          type:'USER',\r\n          isHit: isHit,\r\n          attacker:{ \r\n            key:battleInfo.attacker.key,\r\n            skill:battleInfo.attacker.skill[atkSelectd.key],\r\n            prevSP:battleInfo.attacker.sp\r\n          },\r\n          target:{ \r\n            key:battleInfo.target.key,\r\n            isHit:isHit,\r\n            prevLife:battleInfo.target.hp\r\n          }\r\n        });\r\n        setBattleInfo({\r\n          status:false,\r\n          attacker:{ key:'' },\r\n          target:{ key:'' }\r\n        });\r\n      }}\r\n    />\r\n    <Text\r\n      interactive={true}\r\n      buttonMode={true}\r\n      text={'取消'}\r\n      anchor={0.5}\r\n      x={240}\r\n      y={160}\r\n      style={new PIXI.TextStyle({\r\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 20,\r\n        fill:'#ffffff',\r\n      })}\r\n      pointertap={()=>{\r\n        setMoveStep(true);\r\n        setBattleInfo({\r\n          status:false,\r\n          attacker:{ key:'' },\r\n          target:{ key:'' }\r\n        })\r\n      }}\r\n    />\r\n  </Graphics>\r\n};","import React from 'react';\r\nimport { Sprite } from '@inlet/react-pixi/animated';\r\nimport { Spring } from 'react-spring/renderprops';\r\nimport { loader } from '../../DataLoader';\r\n\r\nexport const AnimeShowBG = ({\r\n  props,\r\n})=>{\r\n  const { stageStatus, BGstatus, BGprop, SkBGprop, \r\n    setSkBGpops, setBGpops } = props;\r\n  return <>\r\n    {BGstatus.type==='STOP'&&<Sprite\r\n      x={-400}\r\n      y={-100}\r\n      zIndex={1}\r\n      width={1600}\r\n      height={500}\r\n      anchor={0.5}\r\n      image={loader.resources[`${stageStatus}-BG`].data}\r\n    />}\r\n    {BGstatus.type==='STANDBY'&&<Spring\r\n      from={{ x:-400, y:-100 }}\r\n      to={{ x: BGprop.toX, y:-100 }}\r\n      config={{ duration: BGprop.duration }}\r\n      onRest={()=>{\r\n        if(BGprop.toX===-400){\r\n          setBGpops({\r\n            toX:400,\r\n            duration: 20000\r\n          });\r\n        }else {\r\n          setBGpops({\r\n            toX:-400,\r\n            duration:-1000\r\n          });\r\n        };\r\n      }}\r\n    >\r\n      {props => \r\n        <Sprite\r\n          zIndex={1}\r\n          width={1600}\r\n          height={500}\r\n          anchor={0.5}\r\n          image={loader.resources[`${stageStatus}-BG`].data}\r\n          {...props}\r\n      />}\r\n    </Spring>}\r\n    {BGstatus.type==='ENEMYSTANDBY'&&<Spring\r\n      from={{ x:400, y:-100 }}\r\n      to={{ x: -BGprop.toX, y:-100 }}\r\n      config={{ duration: BGprop.duration }}\r\n      onRest={()=>{\r\n        if(-BGprop.toX===400){\r\n          setBGpops({\r\n            toX:400,\r\n            duration: 20000\r\n          });\r\n        }else {\r\n          setBGpops({\r\n            toX:-400,\r\n            duration:-1000\r\n          });\r\n        };\r\n      }}\r\n    >\r\n      {props => \r\n        <Sprite\r\n          zIndex={1}\r\n          width={1600}\r\n          height={500}\r\n          anchor={0.5}\r\n          image={loader.resources[`${stageStatus}-BG`].data}\r\n          {...props}\r\n      />}\r\n    </Spring>}\r\n    {BGstatus.type==='SKILL'&&<Spring\r\n      from={{ x:-400, y:-100 }}\r\n      to={{ x: SkBGprop.toX, y:-100 }}\r\n      config={{ duration: SkBGprop.duration }}\r\n      onRest={()=>{\r\n        if(SkBGprop.toX===-400){\r\n          setSkBGpops({\r\n            toX:400,\r\n            duration: 500\r\n          });\r\n        }else {\r\n          setSkBGpops({\r\n            toX:-400,\r\n            duration:-1000\r\n          });\r\n        };\r\n      }}\r\n    >\r\n      {props => \r\n        <Sprite\r\n          zIndex={1}\r\n          width={1600}\r\n          height={500}\r\n          anchor={0.5}\r\n          image={loader.resources[`${stageStatus}-BG`].data}\r\n          {...props}\r\n      />}\r\n    </Spring>}\r\n    {BGstatus.type==='ENEMYSKILL'&&<Spring\r\n      from={{ x:400, y:-100 }}\r\n      to={{ x: -SkBGprop.toX, y:-100 }}\r\n      config={{ duration: SkBGprop.duration }}\r\n      onRest={()=>{\r\n        if(-SkBGprop.toX===400){\r\n          setSkBGpops({\r\n            toX:400,\r\n            duration: 500\r\n          });\r\n        }else {\r\n          setSkBGpops({\r\n            toX:-400,\r\n            duration:-1000\r\n          });\r\n        };\r\n      }}\r\n    >\r\n      {props => \r\n        <Sprite\r\n          zIndex={1}\r\n          width={1600}\r\n          height={500}\r\n          anchor={0.5}\r\n          image={loader.resources[`${stageStatus}-BG`].data}\r\n          {...props}\r\n      />}\r\n    </Spring>}\r\n  </>\r\n};","import React from 'react';\r\nimport { Container, Sprite, Graphics, Text } from '@inlet/react-pixi/animated';\r\nimport * as PIXI from \"pixi.js\";\r\nimport { loader } from '../../DataLoader';\r\nexport const TopBar = ({\r\n  right={},\r\n  left={},\r\n  showType='',\r\n  targetHp=0,\r\n  attackerSp=0\r\n})=> {\r\n  const hpBarCount = (hp,full)=>{\r\n    const leftVal =  Number(full) - Number(hp);\r\n    const percentage = Number(full) / 200;\r\n    const result = leftVal / percentage;\r\n    return result;\r\n  };\r\n  const spBarCount = (sp,full)=>{\r\n    const leftVal =  Number(full) - Number(sp);\r\n    const percentage = Number(full) / 100;\r\n    const result = leftVal / percentage;\r\n    return result;\r\n  };\r\n  return <Graphics \r\n    x={-400}\r\n    y={-300}\r\n    zIndex={98}\r\n    draw={g=> {\r\n      g.beginFill(`0x000f23`);\r\n      g.drawRoundedRect(0,0,800,80,0);\r\n      g.endFill();\r\n    }}\r\n  >\r\n    <Container sortableChildren={true}>\r\n      <Sprite\r\n        width={42}\r\n        height={42}\r\n        x={370}\r\n        y={40}\r\n        anchor={0.5} \r\n        image={loader.resources[`${showType===\"USER\" ? 'defIcon' : 'atkIcon' }`].data}\r\n      />\r\n      <Sprite\r\n        width={42}\r\n        height={42}\r\n        x={420}\r\n        y={40}\r\n        anchor={0.5} \r\n        image={loader.resources[`${showType===\"USER\" ? 'atkIcon' : 'defIcon' }`].data}\r\n      />\r\n      {/* left */}\r\n      <Sprite\r\n        width={50}\r\n        height={50}\r\n        x={50}\r\n        y={15}\r\n        image={loader.resources[`${left.name}-head-default`].data}\r\n      />\r\n      <Text \r\n        text={`${showType===\"USER\"?targetHp:left.hp} / ${left.fullValue.hp}`}\r\n        anchor={{x:1,y:0}} \r\n        x={320} y={10}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 18,\r\n          fill:'#e71d36',\r\n        })}/>\r\n      <Graphics\r\n        x={320} y={35}\r\n        zIndex={1}\r\n        draw={g=> {\r\n          g.beginFill(`0xe71d36`);\r\n          g.drawRoundedRect(0,0,-200,10,0);\r\n          g.endFill();\r\n        }}\r\n      />\r\n      <Graphics\r\n        x={320} y={35}\r\n        zIndex={2}\r\n        draw={g=> {\r\n          g.beginFill(`0x333533`);\r\n          g.drawRoundedRect(-200,0,hpBarCount(showType===\"USER\"?targetHp:left.hp,left.fullValue.hp),10,0);\r\n          g.endFill();\r\n        }}\r\n      />\r\n      <Text \r\n        text={`${showType===\"USER\"? left.sp : attackerSp} / ${left.fullValue.sp}`}\r\n        anchor={{x:1,y:0.3}} \r\n        x={210} y={55}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 18,\r\n          fill:'#4A86E8',\r\n        })}/>\r\n      <Graphics\r\n        x={320} y={55}\r\n        zIndex={1}\r\n        draw={g=> {\r\n          g.beginFill(`0x4A86E8`);\r\n          g.drawRoundedRect(0,0,-100,10,0);\r\n          g.endFill();\r\n        }}\r\n      />\r\n      <Graphics\r\n        x={220} y={55}\r\n        zIndex={2}\r\n        draw={g=> {\r\n          g.beginFill(`0x333533`);\r\n          g.drawRoundedRect(0,0,spBarCount(showType===\"USER\"?left.sp:attackerSp,left.fullValue.sp),10,0);\r\n          g.endFill();\r\n        }}\r\n      />\r\n      {/* right */}\r\n      <Sprite\r\n        width={50}\r\n        height={50}\r\n        x={690}\r\n        y={15}\r\n        image={loader.resources[`${right.name}-head-default`].data}\r\n      />\r\n      <Text \r\n        text={`${showType===\"USER\"?right.hp:targetHp} / ${right.fullValue.hp}`}\r\n        anchor={{x:1,y:0}} \r\n        x={670} y={10}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 18,\r\n          fill:'#e71d36',\r\n        })}/>\r\n      <Graphics\r\n        x={670} y={35}\r\n        zIndex={1}\r\n        draw={g=> {\r\n          g.beginFill(`0xe71d36`);\r\n          g.drawRoundedRect(0,0,-200,10,0);\r\n          g.endFill();\r\n        }}\r\n      />\r\n      <Graphics\r\n        x={670} y={35}\r\n        zIndex={2}\r\n        draw={g=> {\r\n          g.beginFill(`0x333533`);\r\n          g.drawRoundedRect(-200,0,hpBarCount(showType===\"USER\"?right.hp:targetHp,right.fullValue.hp),10,0);\r\n          g.endFill();\r\n        }}\r\n      />\r\n      <Text \r\n        text={`${showType===\"USER\"? attackerSp : right.sp} / ${right.fullValue.sp}`}\r\n        anchor={{x:1,y:0.3}} \r\n        x={560} y={55}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 18,\r\n          fill:'#4A86E8',\r\n        })}/>\r\n      <Graphics\r\n        x={670} y={55}\r\n        zIndex={1}\r\n        draw={g=> {\r\n          g.beginFill(`0x4A86E8`);\r\n          g.drawRoundedRect(0,0,-100,10,0);\r\n          g.endFill();\r\n        }}\r\n      />\r\n      <Graphics\r\n        x={570} y={55}\r\n        zIndex={2}\r\n        draw={g=> {\r\n          g.beginFill(`0x333533`);\r\n          g.drawRoundedRect(0,0,spBarCount(showType===\"USER\"?attackerSp:right.sp,right.fullValue.sp),10,0);\r\n          g.endFill();\r\n        }}\r\n      />\r\n    </Container>\r\n  </Graphics>\r\n};","import { fromJS } from \"immutable\";\r\nexport const lines = fromJS({\r\n  'Tanjirou': {\r\n    default:[\r\n      '(備戰中)',\r\n      '(備戰中)'\r\n    ],\r\n    attack:[\r\n      '我要成為強者，用強者的力量去保護弱者。',\r\n      '無論鬼奪走多少生命，人類的意志是怎樣都不會被打敗！'\r\n    ],\r\n    dodge:[\r\n      '危險!!',\r\n      '冷靜下來! 可以戰勝的。'\r\n    ],\r\n    def:[\r\n      '鬼殺隊不會被一點小傷給打倒!',\r\n      '不好了! 調整呼吸。'\r\n    ],\r\n    dead:[\r\n      '對不起....鱗瀧師傅..',\r\n      '禰豆子...'\r\n    ]\r\n  },\r\n  'Nezuko': {\r\n    default:[\r\n      '(備戰中)',\r\n      '(備戰中)'\r\n    ],\r\n    attack:[\r\n      '......!!(人類是家人)',\r\n      '......!!(打倒惡鬼)'\r\n    ],\r\n    dodge:[\r\n      '......!!(危險)',\r\n      '......!!(沒事的)'\r\n    ],\r\n    def:[\r\n      '......!!(危險)',\r\n      '......!!(沒事的)'\r\n    ],\r\n    dead:[\r\n      '......!?',\r\n      '.....(哥哥)'\r\n    ]\r\n  },\r\n  'Teoni': {\r\n    default:[\r\n      '(備戰中)',\r\n      '(備戰中)'\r\n    ],\r\n    attack:[\r\n      '獵鬼人是最上等的食物!!',\r\n      '看我吃了你!!'\r\n    ],\r\n    dodge:[\r\n      '沒用沒用 哈哈哈哈!',\r\n      '就這點程度嗎? 可悲的劍士。'\r\n    ],\r\n    def:[\r\n      '不久就輪到你的死期了!',\r\n      '我會吃了你!!'\r\n    ],\r\n    dead:[\r\n      '甚麼!?.....我竟然會死在獵鬼人手上.....',\r\n      '甚麼!?.....我竟然會死在獵鬼人手上.....'\r\n    ]\r\n  }\r\n});","import React, { useState } from 'react';\r\nimport { Container, Graphics, Sprite, Text } from '@inlet/react-pixi/animated';\r\nimport * as PIXI from \"pixi.js\";\r\nimport { loader } from '../../DataLoader';\r\nimport { lines } from \"../../../constants/lines\";\r\nexport const BottomBar = ({\r\n  right={},\r\n  left={},\r\n  linesStatus={}\r\n})=> {\r\n  const showCharacter = linesStatus.character===\"USER\" ? right.name : left.name;\r\n  const randomSize = lines.getIn([showCharacter,linesStatus.status]).size-1;\r\n  const [ random ] = useState(Math.round(Math.random()*randomSize));\r\n  return <Graphics \r\n    x={-400}\r\n    y={150}\r\n    zIndex={98}\r\n    draw={g=> {\r\n      g.beginFill(`0x000f23`);\r\n      g.drawRoundedRect(0,0,800,150,0);\r\n      g.endFill();\r\n    }}\r\n  >\r\n    <Container sortableChildren={true}>\r\n      <Sprite\r\n        width={100}\r\n        height={100}\r\n        x={50}\r\n        y={25}\r\n        image={loader.resources[`${showCharacter}-talk-${linesStatus.status}`].data}\r\n      />\r\n      <Text \r\n        text={lines.getIn([showCharacter,linesStatus.status,random])}\r\n        anchor={{x:0,y:0}} \r\n        x={170} y={60}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 18,\r\n          fill:'#ffff',\r\n        })}/>\r\n    </Container>\r\n  </Graphics>\r\n};","import React,{ useState, useEffect } from \"react\";\r\nexport const SkillShowProtoType = ({\r\n  skillName,\r\n  attackerName,\r\n  isHit,\r\n  targetLife,\r\n  attackerSp,\r\n  resultLife,\r\n  resultSp,\r\n  BGstatus,\r\n  setBGstatus,\r\n  setAnimeIsDone,\r\n  setTargetHp,\r\n  setAttackerSp,\r\n  setLinesStatus,\r\n  setShowSkill,\r\n  defXPostion,\r\n  steps,\r\n  ShowType\r\n})=>{\r\n  const [ position, setPosition ] = useState({ x:0, y:0, tint:0xffffff, alpha:1, mass:1, friction:20, tension:170 });\r\n  // def\r\n  useEffect(()=>{\r\n    if(BGstatus.defence && skillName==='防禦'){\r\n      const timeout = steps({\r\n        skillName:skillName,\r\n        isHit:isHit,\r\n        BGstatus:BGstatus,\r\n        resultLife:resultLife,\r\n        setAnimeIsDone:setAnimeIsDone,\r\n        setLinesStatus:setLinesStatus,\r\n        setPosition:setPosition,\r\n      });\r\n      return ()=> clearTimeout(timeout);\r\n    };\r\n  },[ BGstatus, skillName, isHit, resultLife, setAnimeIsDone, steps, setLinesStatus ])\r\n  // atk\r\n  useEffect(()=>{\r\n    if(skillName==='防禦'){ \r\n      setPosition(prev=>{return{ ...prev, x: defXPostion, y:10 }});\r\n      return;\r\n    };\r\n    const timeout = steps({\r\n      skillName:skillName,\r\n      isHit:isHit,\r\n      targetLife:targetLife,\r\n      attackerSp:attackerSp,\r\n      resultLife:resultLife,\r\n      resultSp:resultSp,\r\n      setBGstatus:setBGstatus,\r\n      setTargetHp:setTargetHp,\r\n      setAttackerSp:setAttackerSp,\r\n      setLinesStatus:setLinesStatus,\r\n      setShowSkill:setShowSkill,\r\n      setPosition:setPosition\r\n    });\r\n    return ()=> clearTimeout(timeout);\r\n  },[ skillName, isHit, targetLife, attackerSp, resultLife, resultSp,\r\n    setBGstatus, setTargetHp, setAttackerSp, defXPostion, steps, setLinesStatus, setShowSkill ]);\r\n  return <ShowType\r\n    skillName={skillName}\r\n    attackerName={attackerName}\r\n    position={position}\r\n  />\r\n};\r\n","import { TweenMax } from 'gsap';\r\nimport numeral from \"numeral\";\r\nimport { loader } from '../../../components/DataLoader';\r\nexport const steps = ({\r\n  skillName='',\r\n  isHit=false,\r\n  targetLife=0,\r\n  attackerSp=0,\r\n  resultLife=0,\r\n  resultSp=0,\r\n  BGstatus={},\r\n  setBGstatus=null,\r\n  setAnimeIsDone=null,\r\n  setTargetHp=null,\r\n  setAttackerSp=null,\r\n  setLinesStatus=null,\r\n  setPosition=null,\r\n  setShowSkill=null\r\n}) => {\r\n  // 技能動畫:\r\n  switch (skillName) {\r\n    case '防禦':\r\n      setPosition(prev=>{return{ ...prev, x:200, y:50, tension:100 }});\r\n      const defStart = ()=>{\r\n        if(isHit){\r\n          return isHitStep();\r\n        }else return isDodge();\r\n      };\r\n      const isHitStep = ()=> {\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:250, y:50, mass:2, \r\n            friction:5, tension:1000, tint:0xd00000}});\r\n          // callback\r\n          if(resultLife<=0){\r\n            return isDead({ type:'dead' });\r\n          }else return next({ type:'def' });\r\n        },BGstatus.seconds);\r\n        return timeout;\r\n      };\r\n      const isDodge = ()=>{\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:250, y:0 }});\r\n          // callback\r\n          next({ type:'dodge' });\r\n        },BGstatus.seconds);\r\n        return timeout;\r\n      };\r\n      const isDead = ({ type })=> {\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:200, y:50, \r\n            friction:2, tint:0x03071e\r\n          }});\r\n          setLinesStatus(prev=>{ \r\n            return { \r\n              status: type,\r\n              character: prev.character===\"USER\" ? \"ENEMY\" : \"USER\"\r\n            };\r\n          });\r\n          // callback\r\n          isDeadStep2();\r\n        },5000);\r\n        return timeout;\r\n      };\r\n      const isDeadStep2 = ()=>{\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return { ...prev, alpha:0 }});\r\n          // callback\r\n          end();\r\n        },3000);\r\n        return timeout;\r\n      };\r\n      const next = ({ type })=>{\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:200, y:50, mass:1, \r\n            friction:20, tension:170, tint:0xffffff}});\r\n          setLinesStatus(prev=>{ \r\n            return { \r\n              status: type,\r\n              character: prev.character===\"USER\" ? \"ENEMY\" : \"USER\"\r\n            };\r\n          });\r\n          // callback\r\n          end();\r\n        },5000);\r\n        return timeout;\r\n      };\r\n      const end = ()=> {\r\n        const timeout = setTimeout(() => {\r\n          // callback\r\n          setAnimeIsDone(true);\r\n        },3000);\r\n        return timeout;\r\n      };\r\n      return defStart();\r\n    // ATK\r\n    case '捌之型―滝壺':\r\n      setBGstatus({ type:'STANDBY', defence:false, seconds:0 });\r\n      setPosition(prev=>{return{ ...prev, x:550,y:50,tension:100 }});\r\n      const skill3atkStart = ()=>{\r\n        setPosition(prev=>{return{ ...prev, x:250, y:50, tension:100 }});\r\n        // callback\r\n        return skill3step1();\r\n      };\r\n      const skill3step1 = ()=>{\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:0, y:-100, tension:100 }});\r\n          setBGstatus(prev=>{return{ ...prev, type:'SKILL' }});\r\n          // callback\r\n          skill3step2();\r\n        },3000);\r\n        return timeout;\r\n      };\r\n      const skill3step2 = ()=>{\r\n        const run =  { number: attackerSp };\r\n        TweenMax.to(run, 0.8, {\r\n          number: resultSp,\r\n          onUpdate: () => {\r\n            setAttackerSp(numeral(run.number).format(\"0\"))\r\n          },\r\n        });\r\n        setLinesStatus(prev=>{ return { ...prev, status:'attack' }});\r\n        setShowSkill(prev=>{\r\n          const video = loader.resources[`${prev.name}-skill${`3`}-show`].data;\r\n          video.play();\r\n          return { ...prev, \r\n            status:true, \r\n            type:'3',\r\n            callback:()=>{\r\n              setBGstatus(prev=>{return{ ...prev, type:'STOP', defence:true }});\r\n              setPosition(prev=>{return{ ...prev, x:-400, y:50, tension:1000 }});\r\n              skill3step3();\r\n            }\r\n          };\r\n        });\r\n      };\r\n      const skill3step3 = ()=>{\r\n        const run = { number: targetLife };\r\n        if(isHit) {\r\n          TweenMax.to(run, 0.8, {\r\n            number: resultLife<0 ? 0 : resultLife,\r\n            onUpdate: () => {\r\n              setTargetHp(numeral(run.number).format(\"0\"))\r\n            },\r\n          });\r\n        };\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:550, y:50, tension:50 }});\r\n        },3000);\r\n        return timeout;\r\n      };\r\n      return skill3atkStart();\r\n    default:\r\n      setBGstatus({ type:'STANDBY', defence:false, seconds:1200 });\r\n      setPosition(prev=>{return{ ...prev, x:550,y:50,tension:100 }});\r\n      const atkStart = ()=>{\r\n        setPosition(prev=>{return{ ...prev, x:250, y:50, tension:100 }});\r\n        // callback\r\n        return step1();\r\n      };\r\n      const step1 = ()=>{\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:0, y:50, tension:100 }});\r\n          setBGstatus(prev=>{return{ ...prev, type:'SKILL' }});\r\n          // callback\r\n          step2();\r\n        },3000);\r\n        return timeout;\r\n      };\r\n      const step2 = ()=>{\r\n        const run =  { number: attackerSp };\r\n        TweenMax.to(run, 0.8, {\r\n          number: resultSp,\r\n          onUpdate: () => {\r\n            setAttackerSp(numeral(run.number).format(\"0\"))\r\n          },\r\n        });\r\n        setLinesStatus(prev=>{ return { ...prev, status:'attack' }});\r\n        const timeout = setTimeout(() => {\r\n          setBGstatus(prev=>{return{ ...prev, type:'STOP', defence:true }});\r\n          // callback\r\n          step3();\r\n        },3000);\r\n        return timeout;\r\n      };\r\n      const step3 = ()=>{\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:-250, y:50, tension:1000 }});\r\n          // callback\r\n          step4();\r\n        },1000);\r\n        return timeout;\r\n      };\r\n      const step4 = ()=>{\r\n        const run = { number: targetLife };\r\n        if(isHit) {\r\n          TweenMax.to(run, 0.8, {\r\n            number: resultLife<0 ? 0 : resultLife,\r\n            onUpdate: () => {\r\n              setTargetHp(numeral(run.number).format(\"0\"))\r\n            },\r\n          });\r\n        };\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:550, y:50, tension:50 }});\r\n        },3000);\r\n        return timeout;\r\n      };\r\n      return atkStart();\r\n  }\r\n};","import React from \"react\";\r\nimport { loader } from '../../../components/DataLoader';\r\nimport { Spring } from 'react-spring/renderprops';\r\nimport { Sprite } from '@inlet/react-pixi/animated';\r\n\r\nexport const ShowType = ({\r\n  skillName,\r\n  attackerName,\r\n  position,\r\n}) =>{\r\n  switch (skillName) {\r\n    case `斬擊`:\r\n      return <Spring\r\n        from={{ x:550, y:50 }}\r\n        to={{ x:position.x, y:position.y }}\r\n        config={{ \r\n          mass:1,\r\n          tension: position.tension,\r\n          friction:20,\r\n        }}\r\n      >\r\n      {props => \r\n        <Sprite\r\n          zIndex={3}\r\n          width={200}\r\n          height={200}\r\n          anchor={0.5}\r\n          image={loader.resources[`${attackerName}-fight-typeA`].data}\r\n          {...props}\r\n        />}\r\n      </Spring>\r\n    case `防禦`:\r\n      return <Spring\r\n        from={{ x:650, y:50 }}\r\n        to={{ x:position.x, y:position.y }}\r\n        config={{ \r\n          mass:1,\r\n          tension: position.tension,\r\n          friction:20,\r\n        }}\r\n      >\r\n      {props => \r\n        <Sprite\r\n          zIndex={2}\r\n          width={200}\r\n          height={200}\r\n          anchor={0.5}\r\n          alpha={position.alpha}\r\n          tint={position.tint}\r\n          image={loader.resources[`${attackerName}-fight-typeA`].data}\r\n          {...props}\r\n        />}\r\n      </Spring>\r\n    default:\r\n      return <Spring\r\n        from={{ x:550, y:50 }}\r\n        to={{ x:position.x, y:position.y }}\r\n        config={{ \r\n          mass:1,\r\n          tension: position.tension,\r\n          friction:20,\r\n        }}\r\n      >\r\n      {props => \r\n        <Sprite\r\n          zIndex={3}\r\n          width={200}\r\n          height={200}\r\n          anchor={0.5}\r\n          image={loader.resources[`${attackerName}-fight-typeA`].data}\r\n          {...props}\r\n        />}\r\n      </Spring>\r\n    };\r\n};","import React from \"react\";\r\n// part\r\nimport { SkillShowProtoType } from \"../../SkillShowProtoType\";\r\nimport { steps } from \"./steps\";\r\nimport { ShowType } from \"./ShowType\";\r\n\r\nexport const TanjirouSkill = ( props )=>{\r\n  return <SkillShowProtoType \r\n    {...props}\r\n    defXPostion={550}\r\n    steps={steps}\r\n    ShowType={ShowType}\r\n  />\r\n};","import { TweenMax } from 'gsap';\r\nimport numeral from \"numeral\";\r\nexport const steps = ({\r\n  skillName='',\r\n  isHit=false,\r\n  targetLife=0,\r\n  attackerSp=0,\r\n  resultLife=0,\r\n  resultSp=0,\r\n  BGstatus={},\r\n  setBGstatus=null,\r\n  setAnimeIsDone=null,\r\n  setTargetHp=null,\r\n  setAttackerSp=null,\r\n  setLinesStatus=null,\r\n  setPosition=null,\r\n  setShowSkill=null\r\n}) => {\r\n  // 技能動畫:\r\n  switch (skillName) {\r\n    case '防禦':\r\n      setPosition(prev=>{return{ ...prev, x:200, y:50, tension:100 }});\r\n      const defStart = ()=>{\r\n        if(isHit){\r\n          return isHitStep();\r\n        }else return isDodge();\r\n      };\r\n      const isHitStep = ()=> {\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:250, y:50, mass:2, \r\n            friction:5, tension:1000, tint:0xd00000}});\r\n          // callback\r\n          if(resultLife<=0){\r\n            return isDead({ type:'dead' });\r\n          }else return next({ type:'def' });\r\n        },BGstatus.seconds);\r\n        return timeout;\r\n      };\r\n      const isDodge = ()=>{\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:250, y:0 }});\r\n          // callback\r\n          next({ type:'dodge' });\r\n        },BGstatus.seconds);\r\n        return timeout;\r\n      };\r\n      const isDead = ({ type })=> {\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:200, y:50, \r\n            friction:2, tint:0x03071e\r\n          }});\r\n          setLinesStatus(prev=>{ \r\n            return { \r\n              status: type,\r\n              character: prev.character===\"USER\" ? \"ENEMY\" : \"USER\"\r\n            };\r\n          });\r\n          // callback\r\n          isDeadStep2();\r\n        },5000);\r\n        return timeout;\r\n      };\r\n      const isDeadStep2 = ()=>{\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return { ...prev, alpha:0 }});\r\n          // callback\r\n          end();\r\n        },3000);\r\n        return timeout;\r\n      };\r\n      const next = ({ type })=>{\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:200, y:50, mass:1, \r\n            friction:20, tension:170, tint:0xffffff}});\r\n          setLinesStatus(prev=>{ \r\n            return { \r\n              status: type,\r\n              character: prev.character===\"USER\" ? \"ENEMY\" : \"USER\"\r\n            };\r\n          });\r\n          // callback\r\n          end();\r\n        },5000);\r\n        return timeout;\r\n      };\r\n      const end = ()=> {\r\n        const timeout = setTimeout(() => {\r\n          // callback\r\n          setAnimeIsDone(true);\r\n        },3000);\r\n        return timeout;\r\n      };\r\n      return defStart();\r\n    // ATK\r\n    default:\r\n      setBGstatus({ type:'STANDBY', defence:false, seconds:1200 });\r\n      setPosition(prev=>{return{ ...prev, x:550,y:50,tension:100 }});\r\n      const atkStart = ()=>{\r\n        setPosition(prev=>{return{ ...prev, x:250, y:50, tension:100 }});\r\n        // callback\r\n        return step1();\r\n      };\r\n      const step1 = ()=>{\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:0, y:50, tension:100 }});\r\n          setBGstatus(prev=>{return{ ...prev, type:'SKILL' }});\r\n          // callback\r\n          step2();\r\n        },3000);\r\n        return timeout;\r\n      };\r\n      const step2 = ()=>{\r\n        const run =  { number: attackerSp };\r\n        TweenMax.to(run, 0.8, {\r\n          number: resultSp,\r\n          onUpdate: () => {\r\n            setAttackerSp(numeral(run.number).format(\"0\"))\r\n          },\r\n        });\r\n        setLinesStatus(prev=>{ return { ...prev, status:'attack' }});\r\n        const timeout = setTimeout(() => {\r\n          setBGstatus(prev=>{return{ ...prev, type:'STOP', defence:true }});\r\n          // callback\r\n          step3();\r\n        },3000);\r\n        return timeout;\r\n      };\r\n      const step3 = ()=>{\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:-250, y:50, tension:1000 }});\r\n          // callback\r\n          step4();\r\n        },1000);\r\n        return timeout;\r\n      };\r\n      const step4 = ()=>{\r\n        const run = { number: targetLife };\r\n        if(isHit) {\r\n          TweenMax.to(run, 0.8, {\r\n            number: resultLife<0 ? 0 : resultLife,\r\n            onUpdate: () => {\r\n              setTargetHp(numeral(run.number).format(\"0\"))\r\n            },\r\n          });\r\n        };\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:550, y:50, tension:50 }});\r\n        },3000);\r\n        return timeout;\r\n      };\r\n      return atkStart();\r\n  }\r\n};","import React from \"react\";\r\nimport { loader } from '../../../components/DataLoader';\r\nimport { Spring } from 'react-spring/renderprops';\r\nimport { Sprite } from '@inlet/react-pixi/animated';\r\n\r\nexport const ShowType = ({\r\n  skillName,\r\n  attackerName,\r\n  position,\r\n}) =>{\r\n  switch (skillName) {\r\n    case `防禦`:\r\n      return <Spring\r\n        from={{ x:650, y:50 }}\r\n        to={{ x:position.x, y:position.y }}\r\n        config={{ \r\n          mass:1,\r\n          tension: position.tension,\r\n          friction:20,\r\n        }}\r\n      >\r\n      {props => \r\n        <Sprite\r\n          zIndex={2}\r\n          width={200}\r\n          height={200}\r\n          anchor={0.5}\r\n          alpha={position.alpha}\r\n          tint={position.tint}\r\n          image={loader.resources[`${attackerName}-fight`].data}\r\n          {...props}\r\n        />}\r\n      </Spring>\r\n    default:\r\n      return <Spring\r\n        from={{ x:550, y:50 }}\r\n        to={{ x:position.x, y:position.y }}\r\n        config={{ \r\n          mass:1,\r\n          tension: position.tension,\r\n          friction:20,\r\n        }}\r\n      >\r\n      {props => \r\n        <Sprite\r\n          zIndex={3}\r\n          width={200}\r\n          height={200}\r\n          anchor={0.5}\r\n          image={loader.resources[`${attackerName}-fight`].data}\r\n          {...props}\r\n        />}\r\n      </Spring>\r\n    };\r\n};","import React from \"react\";\r\n// part\r\nimport { SkillShowProtoType } from \"../../SkillShowProtoType\";\r\nimport { steps } from \"./steps\";\r\nimport { ShowType } from \"./ShowType\";\r\n\r\nexport const NezukoSkill = ( props )=>{\r\n  return <SkillShowProtoType \r\n    {...props}\r\n    defXPostion={550}\r\n    steps={steps}\r\n    ShowType={ShowType}\r\n  />\r\n};","import React from \"react\";\r\nimport { TanjirouSkill } from \"./TanjirouSkill/Index\";\r\nimport { NezukoSkill } from \"./Nezuko/Index\";\r\nexport const ChessSkillShow = ({\r\n  attacker={},\r\n  skill={},\r\n  BGstatus,\r\n  isHit=false,\r\n  targetLife=0,\r\n  attackerSp=0,\r\n  resultLife=0,\r\n  resultSp=0,\r\n  setBGstatus,\r\n  setAnimeIsDone,\r\n  setTargetHp,\r\n  setAttackerSp,\r\n  setLinesStatus,\r\n  setShowSkill\r\n})=>{\r\n  const defaultprops = {\r\n    skillName: skill.name,\r\n    attackerName: attacker.name,\r\n    isHit: isHit,\r\n    targetLife: targetLife,\r\n    attackerSp: attackerSp,\r\n    resultLife: resultLife,\r\n    resultSp: resultSp,\r\n    BGstatus: BGstatus,\r\n    setBGstatus: setBGstatus,\r\n    setAnimeIsDone: setAnimeIsDone,\r\n    setTargetHp: setTargetHp,\r\n    setAttackerSp: setAttackerSp,\r\n    setLinesStatus: setLinesStatus,\r\n    setShowSkill: setShowSkill\r\n  }\r\n  switch (attacker.name) {\r\n    case `Tanjirou`:\r\n      return <TanjirouSkill {...defaultprops}/>\r\n    case `Nezuko`:\r\n      return <NezukoSkill {...defaultprops}/>\r\n    default:\r\n      return;\r\n  };\r\n};\r\n\r\n","import { TweenMax } from 'gsap';\r\nimport numeral from \"numeral\";\r\nexport const steps = ({\r\n  skillName='',\r\n  isHit=false,\r\n  targetLife=0,\r\n  attackerSp=0,\r\n  resultLife=0,\r\n  resultSp=0,\r\n  BGstatus={},\r\n  setBGstatus=null,\r\n  setAnimeIsDone=null,\r\n  setTargetHp=null,\r\n  setAttackerSp=null,\r\n  setLinesStatus=null,\r\n  setPosition=null,\r\n  setShowSkill=null\r\n}) => {\r\n  switch (skillName) {\r\n    case '防禦':\r\n      setPosition(prev=>{return{ ...prev, x:-200, tension:150 }});\r\n      const defStart = ()=>{\r\n        if(isHit){\r\n          return isHitStep();\r\n        }else return isDodge();\r\n      };\r\n      const isHitStep = ()=> {\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:-235, y:20, mass:2, \r\n            friction:5, tension:1000, tint:0xd00000}});\r\n          // callback\r\n          if(resultLife<=0){\r\n            return isDead({ type:'dead' });\r\n          }else return next({ type:'def' });\r\n        },BGstatus.seconds);\r\n        return timeout;\r\n      }\r\n      const isDodge = ()=>{\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:-235, y:-10 }});\r\n          // callback\r\n          next({ type:'dodge' });\r\n        },BGstatus.seconds);\r\n        return timeout;\r\n      };\r\n      const isDead = ({ type })=> {\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:-200, y:10, \r\n            friction:2, tint:0x03071e\r\n          }});\r\n          setLinesStatus(prev=>{ \r\n            return { \r\n              status: type,\r\n              character: prev.character===\"USER\" ? \"ENEMY\" : \"USER\"\r\n            };\r\n          });\r\n          // callback\r\n          isDeadStep2();\r\n        },5000);\r\n        return timeout;\r\n      };\r\n      const isDeadStep2 = ()=>{\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return { ...prev, alpha:0 }});\r\n          // callback\r\n          end();\r\n        },3000);\r\n        return timeout;\r\n      };\r\n      const next = ({ type })=>{\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:-200, y:10, mass:1, \r\n            friction:20, tension:170, tint:0xffffff}});\r\n          setLinesStatus(prev=>{ \r\n            return { \r\n              status: type,\r\n              character: prev.character===\"USER\" ? \"ENEMY\" : \"USER\"\r\n            };\r\n          });\r\n          // callback\r\n          end();\r\n        },5000);\r\n        return timeout;\r\n      };\r\n      const end = ()=> {\r\n        const timeout = setTimeout(() => {\r\n          // callback\r\n          setAnimeIsDone(true);\r\n        },3000);\r\n        return timeout;\r\n      };\r\n      return defStart();\r\n    // ATK\r\n    default:\r\n      setBGstatus({ type:'ENEMYSTANDBY', defence:false, seconds:1200 });\r\n      setPosition(prev=>{return{ ...prev, x:-600, tension:100 }});\r\n      const atkStart = ()=>{\r\n        setPosition(prev=>{\r\n          return{ ...prev, x:-200, tension:100 }});\r\n        // callback\r\n        return step1();\r\n      };\r\n      const step1 = ()=>{\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:0, tension:100 }});\r\n          setBGstatus(prev=>{return{ ...prev, type:'ENEMYSKILL' }});\r\n          // callback\r\n          step2();\r\n        },3000);\r\n        return timeout;\r\n      };\r\n      const step2 = ()=>{\r\n        const run =  { number: attackerSp };\r\n        TweenMax.to(run, 0.8, {\r\n          number: resultSp,\r\n          onUpdate: () => {\r\n            setAttackerSp(numeral(run.number).format(\"0\"))\r\n          },\r\n        });\r\n        setLinesStatus(prev=>{ return { ...prev, status:'attack' }});\r\n        const timeout = setTimeout(() => {\r\n          setBGstatus(prev=>{return{ ...prev, type:'STOP', defence:true }});\r\n          // callback\r\n          step3();\r\n        },3000);\r\n        return timeout;\r\n      };\r\n      const step3 = ()=>{\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:175, tension:1000 }});\r\n          // callback\r\n          step4();\r\n        },1000);\r\n        return timeout;\r\n      };\r\n      const step4 = ()=>{\r\n        const run = { number: targetLife };\r\n        if(isHit) {\r\n          TweenMax.to(run, 0.8, {\r\n            number: resultLife<0 ? 0 : resultLife,\r\n            onUpdate: () => {\r\n              setTargetHp(numeral(run.number).format(\"0\"))\r\n            },\r\n          });\r\n        };\r\n        const timeout = setTimeout(() => {\r\n          setPosition(prev=>{return{ ...prev, x:-600, tension:50 }});\r\n        },3000);\r\n        return timeout;\r\n      };\r\n      return atkStart();\r\n  }\r\n};","import React from \"react\";\r\nimport { loader } from '../../../components/DataLoader';\r\nimport { Spring } from 'react-spring/renderprops';\r\nimport { Sprite } from '@inlet/react-pixi/animated';\r\n\r\nexport const ShowType = ({\r\n  skillName,\r\n  attackerName,\r\n  position,\r\n}) =>{\r\n  switch (skillName) {\r\n    case '防禦':\r\n      return <Spring\r\n        from={{ x:-600, y:10 }}\r\n        to={{ x:position.x, y:position.y }}\r\n        config={{ \r\n          mass: position.mass,\r\n          tension: position.tension,\r\n          friction: position.friction,\r\n        }}\r\n      >\r\n      {props => \r\n        <Sprite\r\n          zIndex={2}\r\n          width={300}\r\n          height={300}\r\n          anchor={0.5}\r\n          alpha={position.alpha}\r\n          tint={position.tint}\r\n          image={loader.resources[`${attackerName}-fight`].data}\r\n          {...props}\r\n        />}\r\n      </Spring>\r\n    default:\r\n      return <Spring\r\n        from={{ x:-600, y:50 }}\r\n        to={{ x:position.x, y:position.y }}\r\n        config={{ \r\n          mass:1,\r\n          tension: position.tension,\r\n          friction:20,\r\n        }}\r\n      >\r\n      {props => \r\n        <Sprite\r\n          zIndex={3}\r\n          width={300}\r\n          height={300}\r\n          anchor={0.5}\r\n          image={loader.resources[`${attackerName}-fight`].data}\r\n          {...props}\r\n        />}\r\n      </Spring>\r\n  }\r\n};","import React from \"react\";\r\n// part\r\nimport { SkillShowProtoType } from \"../../SkillShowProtoType\";\r\nimport { steps } from \"./steps\";\r\nimport { ShowType } from \"./ShowType\";\r\n\r\nexport const TeoniSkill = ( props )=>{\r\n  return <SkillShowProtoType \r\n    {...props}\r\n    defXPostion={-600}\r\n    steps={steps}\r\n    ShowType={ShowType}\r\n  />\r\n};\r\n","import React from \"react\";\r\nimport { TeoniSkill } from \"./TeoniSkill/Index\";\r\nexport const EnemyChessSkillShow = ({\r\n  attacker={},\r\n  skill={},\r\n  BGstatus,\r\n  isHit=false,\r\n  targetLife=0,\r\n  attackerSp=0,\r\n  resultLife=0,\r\n  resultSp=0,\r\n  setBGstatus,\r\n  setAnimeIsDone,\r\n  setTargetHp,\r\n  setAttackerSp,\r\n  setLinesStatus,\r\n  setShowSkill\r\n})=>{\r\n  const defaultprops = {\r\n    skillName: skill.name,\r\n    attackerName: attacker.name,\r\n    isHit: isHit,\r\n    targetLife: targetLife,\r\n    attackerSp: attackerSp,\r\n    resultLife: resultLife,\r\n    resultSp: resultSp,\r\n    BGstatus: BGstatus,\r\n    setBGstatus: setBGstatus,\r\n    setAnimeIsDone: setAnimeIsDone,\r\n    setTargetHp: setTargetHp,\r\n    setAttackerSp: setAttackerSp,\r\n    setLinesStatus: setLinesStatus,\r\n    setShowSkill: setShowSkill\r\n  }\r\n  switch (attacker.name) {\r\n    case `Teoni`:\r\n      return <TeoniSkill {...defaultprops}/>\r\n    default:\r\n      return;\r\n  };\r\n};\r\n","import React,{ useState, useEffect } from 'react';\r\nimport * as PIXI from \"pixi.js\";\r\nimport { Container, Graphics, Sprite } from '@inlet/react-pixi/animated';\r\nimport { chessDead, chessRoundRest } from \"../../../reducer/chess\";\r\nimport { enemyChessDead } from \"../../../reducer/enemyChess\";\r\nimport { loader } from '../../DataLoader';\r\n// part\r\nimport { AnimeShowBG } from \"./AinmeShowBG\";\r\nimport { TopBar } from \"./TopBar\";\r\nimport { BottomBar } from \"./BottomBar\";\r\n// skill\r\nimport { ChessSkillShow } from \"../../../constants/ChessSkillShow/Index\";\r\nimport { EnemyChessSkillShow } from \"../../../constants/EnemyChessSkillShow/Index\";\r\nexport const BattleAnimeShow = ({\r\n  props\r\n}) =>{\r\n  const { stageStatus, animeShow, chess, enemyChess, \r\n    setMoveStep, setAnimeShow, setUsualTip, dispatch } = props;\r\n  const { target, attacker } = animeShow;\r\n  // CreateContent\r\n  const CreateContent = ()=>{\r\n    const [ BGstatus, setBGstatus ] = useState({ \r\n      type:'STANDBY',\r\n      defence: false,\r\n      seconds: 1200\r\n    });\r\n    const [ BGprop, setBGpops ] = useState({ toX:400, duration: 20000 });\r\n    const [ SkBGprop, setSkBGpops ] = useState({ toX:400, duration: 500 });\r\n    const [ targetHp, setTargetHp ] = useState(target.prevLife);\r\n    const [ attackerSp, setAttackerSp ] = useState(attacker.prevSP);\r\n    const [ animeIsDone, setAnimeIsDone ] = useState(false);\r\n    const [ linesStatus, setLinesStatus ] = useState({ \r\n      character: animeShow.type,\r\n      status:'default'\r\n    });\r\n    const [ showSkill, setShowSkill ] = useState({ \r\n      status:false,\r\n      type:'0',\r\n      name: chess[attacker.key].name,\r\n      callback: null\r\n    });\r\n    const fetchChessType = ( type='' )=>{\r\n      switch (type) {\r\n        case 'CHESS':\r\n          if(animeShow.type===\"USER\"){\r\n            return chess[typeof(animeShow.attacker.key)!=='number'?0:animeShow.attacker.key];\r\n          }else return chess[typeof(animeShow.target.key)!=='number'?0:animeShow.target.key];\r\n        case 'ENEMYCHESS':\r\n          if(animeShow.type===\"USER\"){\r\n            return enemyChess[typeof(animeShow.target.key)!=='number'?0:animeShow.target.key];\r\n          }else return enemyChess[typeof(animeShow.attacker.key)!=='number'?0:animeShow.attacker.key];\r\n        default:\r\n          break;\r\n      }; \r\n    };\r\n    const CreateSkillSprite = ({}) => {\r\n      const video = PIXI.Texture.from(loader.resources[`${chess[attacker.key].name}-skill${showSkill.type}-show`].data);\r\n      const videoDom = video.baseTexture.resource.source;\r\n      videoDom.onended = function() {\r\n        setShowSkill(prev=>{\r\n          videoDom.currentTime = 0;\r\n          return { ...prev, status:false }\r\n        });\r\n        showSkill.callback();\r\n      };\r\n      return <Sprite\r\n        zIndex={99}\r\n        width={600}\r\n        height={370}\r\n        anchor={0.5}\r\n        x={0}\r\n        y={-35}\r\n        image={loader.resources[`${chess[attacker.key].name}-talk-attack`].data}\r\n        texture={video}\r\n      />\r\n    }\r\n    //  關閉動畫判斷\r\n    useEffect(()=>{\r\n      if(!animeIsDone){ return };\r\n      setAnimeShow({\r\n        status:false,\r\n        type:'',\r\n        isHit:false,\r\n        attacker:{ key:'', skill:{}, prevSP:0 },\r\n        target:{ key:'', isHit:false, prevLife:0 }\r\n      });\r\n      // result check line\r\n      if(animeShow.type===\"USER\" &&\r\n        enemyChess[target.key].hp <= 0\r\n      ){\r\n        dispatch(enemyChessDead({ key:target.key }));\r\n        setUsualTip({\r\n          title:`已擊敗 ${enemyChess[target.key].cn}!`,\r\n          status:true,\r\n        });\r\n      }else if(animeShow.type===\"ENEMY\" &&\r\n        chess[target.key].hp <= 0\r\n      ){\r\n        dispatch(chessDead({ key:target.key }));\r\n        setUsualTip({\r\n          title:`${chess[target.key].cn} 戰敗`,\r\n          status:true,\r\n        });\r\n      }else {\r\n        setMoveStep(true);\r\n      };\r\n      if(animeShow.type===\"ENEMY\"){\r\n        dispatch(chessRoundRest());\r\n      };\r\n    },[ animeIsDone ]);\r\n    return <Container sortableChildren={true}>\r\n      <AnimeShowBG\r\n        props={{stageStatus, BGstatus, BGprop, SkBGprop, setBGpops, setSkBGpops}}\r\n      />\r\n      <TopBar\r\n        right={fetchChessType('CHESS')}\r\n        left={fetchChessType('ENEMYCHESS')}\r\n        showType={animeShow.type}\r\n        targetHp={targetHp}\r\n        attackerSp={attackerSp}\r\n      />\r\n      <ChessSkillShow\r\n        attacker={fetchChessType('CHESS')}\r\n        skill={\r\n          animeShow.type===\"USER\"?\r\n          animeShow.attacker.skill:\r\n          { name:'防禦' }\r\n        }\r\n        BGstatus={BGstatus}\r\n        isHit={animeShow.isHit}\r\n        targetLife={target.prevLife}\r\n        attackerSp={attacker.prevSP}\r\n        resultLife={\r\n          target.prevLife -\r\n          animeShow.attacker.skill.atk \r\n        }\r\n        resultSp={\r\n          attacker.prevSP -\r\n          animeShow.attacker.skill.sp\r\n        }\r\n        setBGstatus={setBGstatus}\r\n        setAnimeIsDone={setAnimeIsDone}\r\n        setTargetHp={setTargetHp}\r\n        setAttackerSp={setAttackerSp}\r\n        setLinesStatus={setLinesStatus}\r\n        setShowSkill={setShowSkill}\r\n      />\r\n      <EnemyChessSkillShow\r\n        attacker={fetchChessType('ENEMYCHESS')}\r\n        skill={\r\n          animeShow.type===\"USER\"?\r\n          { name:'防禦' }:\r\n          animeShow.attacker.skill\r\n        }\r\n        BGstatus={BGstatus}\r\n        isHit={animeShow.isHit}\r\n        targetLife={target.prevLife}\r\n        attackerSp={attacker.prevSP}\r\n        resultLife={\r\n          target.prevLife -\r\n          animeShow.attacker.skill.atk \r\n        }\r\n        resultSp={\r\n          attacker.prevSP -\r\n          animeShow.attacker.skill.sp\r\n        }\r\n        setBGstatus={setBGstatus}\r\n        setAnimeIsDone={setAnimeIsDone}\r\n        setTargetHp={setTargetHp}\r\n        setAttackerSp={setAttackerSp}\r\n        setLinesStatus={setLinesStatus}\r\n        setShowSkill={setShowSkill}\r\n      />\r\n      {showSkill.status && <CreateSkillSprite/>}\r\n      <BottomBar\r\n        right={fetchChessType('CHESS')}\r\n        left={fetchChessType('ENEMYCHESS')}\r\n        linesStatus={linesStatus}\r\n      />\r\n      <Sprite\r\n        zIndex={99}\r\n        interactive={true}\r\n        buttonMode={true}\r\n        width={75}\r\n        height={35}\r\n        x={310}\r\n        y={240}\r\n        image={loader.resources[`fightOff`].data}\r\n        pointertap={()=>{\r\n          setAnimeShow({\r\n            status:false,\r\n            type:'',\r\n            isHit:false,\r\n            attacker:{ key:'', skill:{}, prevSP:0 },\r\n            target:{ key:'', isHit:false, prevLife:0 }\r\n          });\r\n          // result check line\r\n          if(animeShow.type===\"USER\" &&\r\n            enemyChess[target.key].hp <= 0\r\n          ){\r\n            dispatch(enemyChessDead({ key:target.key }));\r\n            setUsualTip({\r\n              title:`已擊敗 ${enemyChess[target.key].cn}!`,\r\n              status:true,\r\n            });\r\n          }else if(animeShow.type===\"ENEMY\" &&\r\n            chess[target.key].hp <= 0\r\n          ){\r\n            dispatch(chessDead({ key:target.key }));\r\n            setUsualTip({\r\n              title:`${chess[target.key].cn} 戰敗`,\r\n              status:true,\r\n            });\r\n          }else {\r\n            setMoveStep(true);\r\n          };\r\n          if(animeShow.type===\"ENEMY\"){\r\n            dispatch(chessRoundRest());\r\n          };\r\n          const clearAllTimeouts = ()=>{\r\n            let id = window.setTimeout(null,0);\r\n            while (id--) { window.clearTimeout(id); };\r\n          };\r\n          clearAllTimeouts();\r\n        }}\r\n      />\r\n    </Container>\r\n  };\r\n  return <Graphics\r\n    x={400}\r\n    y={300}\r\n    zIndex={99}\r\n    draw={g=> {\r\n      g.beginFill(`0x011627`);\r\n      g.drawRoundedRect(-400,-300,800,600,0);\r\n      g.endFill();\r\n    }}\r\n  >\r\n    <CreateContent/>\r\n  </Graphics>\r\n};","import React from 'react';\r\nimport { Sprite, Graphics, Text } from '@inlet/react-pixi/animated';\r\nimport { loader } from '../DataLoader';\r\nimport * as PIXI from \"pixi.js\";\r\nimport { stageRule } from \"../../constants/stageRule\";\r\nexport const OtherTab = ({ props })=> {\r\n  const {\r\n    stageStatus='',\r\n    roundNum=Number,\r\n    setMoveStep,\r\n    setOtherTab,\r\n    setTipStatus,\r\n    setCurrentChess\r\n  } = props;\r\n  return <Graphics\r\n    x={400}\r\n    y={300}\r\n    draw={g=> {\r\n      g.lineStyle(1,`0xffffff`,1);\r\n      g.beginFill(`0x22223b`);\r\n      g.drawRoundedRect(-200,-150,400,300,8);\r\n      g.endFill();\r\n    }}\r\n  >\r\n    <Sprite\r\n      interactive={true}\r\n      buttonMode={true}\r\n      width={25}\r\n      height={25}\r\n      anchor={0.5}\r\n      x={175}\r\n      y={-125}\r\n      image={loader.resources[`closeIcon`].data}\r\n      pointertap={()=>{\r\n        setMoveStep(true);\r\n        setOtherTab(false);\r\n        setTipStatus(prev=>{\r\n          return {...prev, status:false }\r\n        });\r\n      }}\r\n    />\r\n    <Sprite\r\n      interactive={true}\r\n      buttonMode={true}\r\n      width={75}\r\n      height={35}\r\n      x={105}\r\n      y={90}\r\n      image={loader.resources[`endBtn`].data}\r\n      pointertap={()=>{\r\n        setCurrentChess({\r\n          key:0,\r\n          type:\"ENDROUND\"\r\n        });\r\n        setTipStatus(prev=>{\r\n          return {...prev,\r\n            title:`結束回合?`, \r\n            status:true\r\n          }\r\n        });\r\n      }}\r\n    />\r\n    <Text\r\n      text={'作戰目的'}\r\n      x={-170}\r\n      y={-125}\r\n      style={new PIXI.TextStyle({\r\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 18,\r\n        fill:['#ffffff', '#00ff99'],\r\n      })}\r\n    />\r\n    <Text\r\n      text={stageRule.getIn([stageStatus,'ruleText','win'])}\r\n      x={-150}\r\n      y={-90}\r\n      style={new PIXI.TextStyle({\r\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 16,\r\n        fill:['#ffffff', '#ffffff'],\r\n      })}\r\n    />\r\n    <Text\r\n      text={'戰敗條件'}\r\n      x={-170}\r\n      y={-40}\r\n      style={new PIXI.TextStyle({\r\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 18,\r\n        fill:['#ffffff', '#ee6c4d'],\r\n      })}\r\n    />\r\n    <Text\r\n      text={stageRule.getIn([stageStatus,'ruleText','lose'])}\r\n      x={-150}\r\n      y={-5}\r\n      style={new PIXI.TextStyle({\r\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 16,\r\n        fill:['#ffffff', '#ffffff'],\r\n      })}\r\n    />\r\n    <Text\r\n      text={'回合數'}\r\n      x={-170}\r\n      y={45}\r\n      style={new PIXI.TextStyle({\r\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 18,\r\n        fill:['#ffffff', '#8d99ae'],\r\n      })}\r\n    />\r\n    <Text\r\n      text={`第 ${roundNum} 回`}\r\n      x={-150}\r\n      y={80}\r\n      style={new PIXI.TextStyle({\r\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 16,\r\n        fill:['#ffffff', '#ffffff'],\r\n      })}\r\n    />\r\n  </Graphics>\r\n};\r\n\r\n","import React from 'react';\r\nimport { Container, Sprite, Text } from '@inlet/react-pixi/animated';\r\nimport { loader } from '../../DataLoader';\r\nimport * as PIXI from \"pixi.js\";\r\nexport const EnemyList = ({ \r\n  oder=0,\r\n  enemyRandomSkill=0,\r\n  enemyList=[]\r\n})=>{\r\n  const skill = enemyList[oder].skill;\r\n  return <Container sortableChildren={true}>\r\n    <Sprite\r\n      width={65}\r\n      height={65}\r\n      anchor={0.5}\r\n      x={175}\r\n      y={-75}\r\n      image={loader.resources[`${enemyList[oder].name}-head-default`].data}\r\n    />\r\n    <Text \r\n      text={`${enemyList[oder].cn} / 技能`}\r\n      anchor={{x:0.5}}\r\n      x={175} y={-30}\r\n      style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 18,\r\n        fill:'#ffffff',\r\n      })}/>\r\n    <Text \r\n      text={`${skill[enemyRandomSkill].name}`}\r\n      anchor={{x:0.5}}\r\n      x={175} y={10}\r\n      style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 20,\r\n        fill:['#f15bb5','#e0aaff'],\r\n      })}/>\r\n    <Text \r\n      text={`ATK / ${skill[enemyRandomSkill].atk}`}\r\n      anchor={{x:0.5}}\r\n      x={175} y={40}\r\n      style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 18,\r\n        fill:['#f15bb5','#e0aaff'],\r\n      })}/>\r\n  </Container>\r\n};","import React from 'react';\r\nimport { Container, Graphics, Sprite } from '@inlet/react-pixi/animated';\r\nimport { loader } from '../../DataLoader';\r\nexport const ChessList = ({\r\n  chessList,\r\n  defChess,\r\n  setDefChess\r\n})=>{\r\n  return <Container sortableChildren={true}>\r\n    <Graphics\r\n      x={-250}\r\n      y={-180}\r\n      zIndex={1}\r\n      draw={g=> {\r\n        g.lineStyle(1,`0xffffff`,1);\r\n        g.beginFill(`0x0f0f1b`);\r\n        g.drawRoundedRect(0,0,100,360,8);\r\n        g.endFill();\r\n      }}\r\n    />\r\n    {chessList.map((v,k)=>{\r\n      const distance = k * 85;\r\n      return <React.Fragment key={k}>\r\n        <Sprite\r\n          interactive={true}\r\n          buttonMode={true}\r\n          width={65}\r\n          height={65}\r\n          anchor={0.5}\r\n          zIndex={2}\r\n          x={-200}\r\n          y={-125 + distance}\r\n          image={loader.resources[`${v.name}-head-default`].data}\r\n          pointertap={()=>setDefChess(k)}\r\n        />\r\n        {k===defChess&&<Graphics\r\n          anchor={0.5}\r\n          x={-200}\r\n          y={-125 + distance}\r\n          zIndex={1}\r\n          draw={g=> {\r\n            g.beginFill(`0x7b2cbf`);\r\n            g.drawRoundedRect(-38,-38,76,76,5);\r\n            g.endFill();\r\n          }}\r\n        />}\r\n      </React.Fragment>\r\n    })}\r\n  </Container>\r\n};","import React from 'react';\r\nimport { Container, Graphics, Text } from '@inlet/react-pixi/animated';\r\nimport * as PIXI from \"pixi.js\";\r\n\r\nexport const Information = ({\r\n  defChess, chessList, atkEnemy\r\n})=>{\r\n  const dodge = chessList[defChess].dodge - atkEnemy.hitfix>=0 ? chessList[defChess].dodge - atkEnemy.hitfix : 0;\r\n  return <Container sortableChildren={true}>\r\n    <Graphics\r\n      x={-125} y={-150}\r\n    >\r\n      <Text \r\n        text={`選擇防禦：${chessList[defChess].cn}`}\r\n        anchor={{x:0}}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 18,\r\n          fill:'#ffffff',\r\n        })}/>\r\n      <Text \r\n        text={`HP：${chessList[defChess].hp}`}\r\n        anchor={{x:0}}\r\n        y={30}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 18,\r\n          fill:'#ff6b6b',\r\n        })}/>\r\n      <Text \r\n        text={`迴避率：${dodge}%`}\r\n        anchor={{x:0}}\r\n        y={60}\r\n        style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 18,\r\n          fill:['#ffffff', '#4cc9f0'],\r\n        })}/>\r\n    </Graphics>\r\n  </Container>\r\n}","import React,{ useState } from 'react';\r\nimport { Graphics, Sprite } from '@inlet/react-pixi/animated';\r\nimport { loader } from '../../DataLoader';\r\nimport { ProbabilityCount } from \"../../Common/ProbabilityCount\";\r\nimport { chessDefense } from \"../../../reducer/chess\";\r\nimport { enemyChessAttackResult } from \"../../../reducer/enemyChess\";\r\n// common part\r\nimport { EnemyList } from \"./EnemyList\";\r\nimport { ChessList } from \"./ChessList\";\r\nimport { Information } from \"./Information\";\r\nexport const EnemyRoundTab = ({ props })=> {\r\n  const [ defChess, setDefChess ] = useState(0);\r\n  const { enemyRoundTab, chess, enemyChess,\r\n    setEnemyRoundTab, setAnimeShow, setCurrentChess, dispatch } = props;\r\n  const chessList = chess.filter(v=>v.debut);\r\n  const enemyList = enemyChess.filter(v=>v.debut);\r\n  const enemySkill = enemyList[enemyRoundTab.oder].skill;\r\n  const enemySp = enemyList[enemyRoundTab.oder].sp;\r\n  const getAtkSkill = ()=>{\r\n    const totalSize = enemySkill.length-1;\r\n    const random = Math.round(Math.random()*totalSize);\r\n    const checkSp = (enemySp===0)||(enemySkill[random].sp>enemySp);\r\n    return checkSp ? 0 : random;\r\n  };\r\n  const enemyRandomSkill = getAtkSkill();\r\n  const getCurrentChessKey = ({ chess, debut, key })=>{\r\n    let getKey;\r\n    chess.find((v,k)=>{\r\n      if(v.id===debut[key].id){\r\n        return getKey = k;\r\n      }else return null;\r\n    });\r\n    return getKey;\r\n  };\r\n  return <Graphics\r\n    x={400}\r\n    y={300}\r\n    zIndex={99}\r\n    draw={g=> {\r\n      g.lineStyle(1,`0xffffff`,1);\r\n      g.beginFill(`0x22223b`);\r\n      g.drawRoundedRect(-300,-200,600,400,8);\r\n      g.endFill();\r\n    }}\r\n  >\r\n    <ChessList\r\n      chessList={chessList}\r\n      defChess={defChess}\r\n      setDefChess={setDefChess}\r\n    />\r\n    <Information\r\n      defChess={defChess}\r\n      chessList={chessList}\r\n      atkEnemy={enemyList[enemyRoundTab.oder].skill[enemyRandomSkill]}\r\n    />\r\n    <EnemyList\r\n      oder={enemyRoundTab.oder}\r\n      enemyRandomSkill={enemyRandomSkill}\r\n      enemyList={enemyList}\r\n    />\r\n    <Sprite\r\n      interactive={true}\r\n      buttonMode={true}\r\n      width={90}\r\n      height={42}\r\n      anchor={0.5}\r\n      zIndex={2}\r\n      x={230}\r\n      y={155}\r\n      image={loader.resources[`fightDef`].data}\r\n      pointertap={()=>{\r\n        const isHit = ProbabilityCount(\r\n          enemyList[enemyRoundTab.oder].skill[enemyRandomSkill].hitfix,\r\n          chessList[defChess].dodge\r\n        );\r\n        setCurrentChess(prev=>{return{...prev,type:\"ATTACK\"}});\r\n        dispatch(enemyChessAttackResult({\r\n          key: getCurrentChessKey({\r\n            chess: enemyChess,\r\n            debut: enemyList,\r\n            key: enemyRoundTab.oder\r\n          }),\r\n          lessSp:enemyList[enemyRoundTab.oder].skill[enemyRandomSkill].sp\r\n        }));\r\n        if(isHit){\r\n          dispatch(chessDefense({\r\n            key: getCurrentChessKey({\r\n              chess: chess,\r\n              debut: chessList,\r\n              key: defChess\r\n            }),\r\n            damage: enemyList[enemyRoundTab.oder].skill[enemyRandomSkill].atk\r\n          }));\r\n        };\r\n        setEnemyRoundTab(prev=>{return{...prev, status:false}});\r\n        setAnimeShow({\r\n          status:true,\r\n          type:'ENEMY',\r\n          isHit: isHit,\r\n          attacker:{ \r\n            key: getCurrentChessKey({\r\n              chess: enemyChess,\r\n              debut: enemyList,\r\n              key: enemyRoundTab.oder\r\n            }),\r\n            skill:enemyList[enemyRoundTab.oder].skill[enemyRandomSkill],\r\n            prevSP:enemyList[enemyRoundTab.oder].sp\r\n          },\r\n          target:{ \r\n            key: getCurrentChessKey({\r\n              chess: chess,\r\n              debut: chessList,\r\n              key: defChess\r\n            }),\r\n            isHit:isHit,\r\n            prevLife:chessList[defChess].hp\r\n          }\r\n        });\r\n      }}\r\n    />\r\n  </Graphics>\r\n};","import React,{ useState } from 'react';\r\nimport { fromJS } from 'immutable';\r\nimport { Graphics, Text } from '@inlet/react-pixi/animated';\r\nimport { GetMove, GetAttack } from '../../reducer/map';\r\nimport { chessSelected, chessCheckStatus } from \"../../reducer/chess\";\r\nimport * as PIXI from \"pixi.js\";\r\n\r\nexport const ChessUIBoard = ({\r\n  ChessData,\r\n  ChessVal,\r\n  ChessKey,\r\n  EnemyChessData,\r\n  positionX,\r\n  positionY,\r\n  setCurrentChess,\r\n  setMoveStep,\r\n  dispatch\r\n})=> {\r\n  const specialPosition = {\r\n    x: 720,\r\n    y: 490\r\n  };\r\n  const forMoveArray = [];\r\n  const forAttackArray = [];\r\n  const [textInforArray, setTextInforArray] = useState(fromJS([{\r\n      id:1, \r\n      title:\"移動\",\r\n      textColor:['#ffffff', '#ffffff']\r\n    },{ \r\n      id:2,\r\n      title:\"攻擊\",\r\n      textColor:['#ffffff', '#ffffff']\r\n    },{ \r\n      id:3,\r\n      title:\"狀態\",\r\n      textColor:['#ffffff', '#ffffff']\r\n    },{ \r\n      id:4,\r\n      title:\"返回\",\r\n      textColor:['#ffffff', '#ffffff']\r\n  }]));\r\n  ChessData.map((v)=>{\r\n    return (\r\n      forMoveArray.push({ x:v.x, y:v.y }),\r\n      forAttackArray.push({ x:v.x, y:v.y })\r\n    );\r\n  });\r\n  EnemyChessData.map((v)=>{\r\n    return forMoveArray.push({ x:v.x, y:v.y });\r\n  });\r\n  const compareAttack = (\r\n    chessX,\r\n    chessY,\r\n    chessAtk\r\n  )=>{\r\n    let isAttack = false;\r\n    const isDebutEnemy = EnemyChessData.filter(v=>v.debut);\r\n    const limitPosition = { x:19, y:14 };\r\n    const positionRange = [];\r\n    for(let i=0; i < chessAtk; i++){\r\n      const getaddX = (chessX+(i+1)>=limitPosition.x) ? limitPosition.x : chessX+(i+1);\r\n      const getaddY = (chessY+(i+1)>=limitPosition.y) ? limitPosition.y : chessY+(i+1);\r\n      const getlessX = (chessX-(i+1)<=0) ? 0 : chessX-(i+1);\r\n      const getlessY = (chessY-(i+1)<=0) ? 0 : chessY-(i+1);\r\n      positionRange.push(\r\n        { x:getaddX, y:chessY },\r\n        { x:getlessX, y:chessY },\r\n        { x:chessX, y:getaddY },\r\n        { x:chessX, y:getlessY }\r\n      );\r\n    };\r\n    isDebutEnemy.map(val=>{\r\n      return positionRange.map(v=>{\r\n        if(val.x===v.x&&val.y===v.y){\r\n          return isAttack = true;\r\n        }else return null\r\n      })\r\n    });\r\n    return isAttack;\r\n  };\r\n  const compareUsed = (\r\n    chessX,\r\n    chessY,\r\n    checkType\r\n  )=>{\r\n    let isUnused = false;\r\n    const isDebutChess = ChessData.filter(v=>v.debut);\r\n    isDebutChess.map(val=>{\r\n      if(val.x===chessX&&val.y===chessY){\r\n        switch (checkType) {\r\n          case 'MOVE':\r\n          case 'ATTACK':\r\n            const moved = val.roundMove>0;\r\n            return isUnused = moved;\r\n          default:\r\n            return true;\r\n        };\r\n      }else return null;\r\n    });\r\n    return isUnused;\r\n  };\r\n  const CreateText = ({ noop })=>{\r\n    const isAttack = compareAttack(ChessVal.x,ChessVal.y,ChessVal.attack);\r\n    return textInforArray.map((val,key)=>{\r\n      const fetchInteractive = ()=>{\r\n        switch (val.get('id')) {\r\n          case 1:\r\n            return compareUsed(ChessVal.x,ChessVal.y,'MOVE');\r\n          case 2:\r\n            const result = isAttack && compareUsed(ChessVal.x,ChessVal.y,'ATTACK');\r\n            return result;\r\n          default:\r\n            return true;\r\n        };\r\n      }\r\n      return <Text\r\n        key={key}\r\n        interactive={fetchInteractive()}\r\n        buttonMode={true}\r\n        text={val.get('title')}\r\n        x={10}\r\n        y={5+(25*key)}\r\n        style={new PIXI.TextStyle({\r\n          fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 20,\r\n          fill:fetchInteractive()?val.get('textColor').toJS():'#8d99ae',\r\n        })}\r\n        pointerover={()=>{\r\n          setTextInforArray(prev=>\r\n            prev.setIn([key,'textColor',1],'#00ff99')\r\n          );\r\n        }}\r\n        pointerout={()=>{\r\n          setTextInforArray(prev=>\r\n            prev.setIn([key,'textColor',1],'#ffffff')\r\n          );\r\n        }}\r\n        pointertap={(e)=>{\r\n          switch (val.get('id')) {\r\n            case 1:\r\n              setCurrentChess({ \r\n                key:ChessKey,\r\n                type:\"MOVE\"\r\n              });\r\n              dispatch(GetMove({\r\n                position:{ \r\n                  x:ChessVal.x, \r\n                  y:ChessVal.y,\r\n                },\r\n                step:ChessVal.step,\r\n                changeColor:'0x06d6a0',\r\n                currentChessPositions: forMoveArray\r\n              }));\r\n              dispatch(chessSelected({\r\n                key:ChessKey\r\n              }));\r\n              break;\r\n            case 2:\r\n              setCurrentChess({ \r\n                key:ChessKey,\r\n                type:\"ATTACK\"\r\n              });\r\n              dispatch(chessSelected({\r\n                key:ChessKey\r\n              }));\r\n              dispatch(GetAttack({\r\n                position:{ \r\n                  x:ChessVal.x, \r\n                  y:ChessVal.y,\r\n                },\r\n                step:ChessVal.attack,\r\n                changeColor:'0x00bbf9',\r\n                currentChessPositions: forAttackArray\r\n              }));\r\n              break;\r\n            case 3:\r\n              setCurrentChess({ \r\n                key:ChessKey,\r\n                type:\"STATUS\"\r\n              });\r\n              dispatch(chessCheckStatus({\r\n                key:ChessKey\r\n              }));\r\n              dispatch(chessSelected({\r\n                key:ChessKey\r\n              }));\r\n              break;\r\n            case 4 :\r\n              setMoveStep(true);\r\n              dispatch(chessSelected({\r\n                key:ChessKey\r\n              }));\r\n              break;\r\n            default:\r\n              return console.log(e.target)\r\n          };\r\n        }}\r\n      />\r\n    }\r\n  )};\r\n  return <Graphics\r\n    x={positionX!==800?positionX:specialPosition.x}\r\n    y={(positionY!==560&&positionY!==520)?positionY:specialPosition.y}\r\n    zIndex={3}\r\n    draw={g=> {\r\n      g.lineStyle(1,`0xffffff`,1);\r\n      g.beginFill(`0x22223b`);\r\n      g.drawRoundedRect(0,0,60,110,8);\r\n      g.endFill();\r\n    }}\r\n  ><CreateText/></Graphics>\r\n};","import React from 'react';\r\nimport { Sprite, Graphics, Text } from '@inlet/react-pixi/animated';\r\nimport { loader } from '../DataLoader';\r\nimport * as PIXI from \"pixi.js\";\r\n\r\nexport const ChessStatus = ({\r\n  ChessData,\r\n  ChessKey,\r\n  CheckStatus,\r\n  setMoveStep,\r\n  dispatch\r\n})=> {\r\n  const CreateSkillList = ()=>{\r\n    return ChessData.skill.map((value,key)=>{\r\n        return <React.Fragment key={key}>\r\n        <Text\r\n          x={-40}\r\n          y={-70+(key*22)}\r\n          text={`${value.name}`}\r\n          style={new PIXI.TextStyle({\r\n            fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n            fontSize: 16,\r\n            fill:'#ffb700',\r\n          })}\r\n        />\r\n        <Text\r\n          x={-35+(value.name.length * 16)}\r\n          y={-70+(key*22)}\r\n          text={`ATK:${value.atk}(${value.sp}SP)`}\r\n          style={new PIXI.TextStyle({\r\n            fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n            fontSize: 14,\r\n            fill:'#ffffff',\r\n          })}\r\n        />\r\n      </React.Fragment>\r\n    });  \r\n  };\r\n  return <Graphics\r\n    x={400}\r\n    y={300}\r\n    zIndex={99}\r\n    draw={g=> {\r\n      g.lineStyle(1,`0xffffff`,1);\r\n      g.beginFill(`0x22223b`);\r\n      g.drawRoundedRect(-250,-150,500,300,8);\r\n      g.endFill();\r\n    }}\r\n  >\r\n    <Sprite\r\n      interactive={true}\r\n      buttonMode={true}\r\n      width={25}\r\n      height={25}\r\n      anchor={0.5}\r\n      x={220}\r\n      y={-120}\r\n      image={loader.resources[`closeIcon`].data}\r\n      pointertap={()=>{\r\n        setMoveStep(true);\r\n        dispatch(CheckStatus({\r\n          key:ChessKey\r\n        }));\r\n      }}\r\n    />\r\n    <Sprite\r\n      width={80}\r\n      height={80}\r\n      x={-200}\r\n      y={-90}\r\n      image={loader.resources[`${ChessData.name}-head-default`].data}\r\n    />\r\n    <Text\r\n      x={-200}\r\n      y={10}\r\n      text={ChessData.cn}\r\n      style={new PIXI.TextStyle({\r\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 16,\r\n        fill:'#ffffff',\r\n      })}\r\n    />\r\n    <Text\r\n      x={-200}\r\n      y={35}\r\n      text={`HP:`}\r\n      style={new PIXI.TextStyle({\r\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 16,\r\n        fill:'#ffffff',\r\n      })}\r\n    />\r\n    <Text\r\n      x={-170}\r\n      y={35}\r\n      text={`${ChessData.hp} / ${ChessData.fullValue.hp}`}\r\n      style={new PIXI.TextStyle({\r\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 16,\r\n        fill:'#ff6b6b',\r\n      })}\r\n    />\r\n    <Text\r\n      x={-200}\r\n      y={60}\r\n      text={`SP:`}\r\n      style={new PIXI.TextStyle({\r\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 16,\r\n        fill:'#ffffff',\r\n      })}\r\n    />\r\n    <Text\r\n      x={-170}\r\n      y={60}\r\n      text={`${ChessData.sp} / ${ChessData.fullValue.sp}`}\r\n      style={new PIXI.TextStyle({\r\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 16,\r\n        fill:'#0466c8',\r\n      })}\r\n    />\r\n    <Text\r\n      x={-50}\r\n      y={-95}\r\n      text={'招式'}\r\n      style={new PIXI.TextStyle({\r\n        fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n        fontSize: 16,\r\n        fill:'#ffffff',\r\n      })}\r\n    />\r\n    <CreateSkillList/>\r\n  </Graphics>\r\n};","import React from 'react';\r\nimport { Sprite } from '@inlet/react-pixi/animated';\r\nimport { loader } from '../DataLoader';\r\n// reducers\r\nimport { MoveSelect } from '../../reducer/map';\r\nimport { chessSelected, chessCheckStatus } from \"../../reducer/chess\";\r\n// other part\r\nimport { ChessUIBoard } from \"./ChessUIBoard\";\r\nimport { ChessStatus } from \"../Common/ChessStatus\";\r\n\r\nexport const Chess = ({\r\n  chessProps\r\n})=>{\r\n  const { \r\n    chess,\r\n    enemyChess,\r\n    moveStep=Boolean,\r\n    setMoveStep,\r\n    setCurrentChess,\r\n    dispatch\r\n  } = chessProps;\r\n  return chess.map((value,key)=>{\r\n    const roundMoveDone = value.roundMove===0;\r\n    return <React.Fragment key={key}>\r\n      {value.debut&&<Sprite\r\n        interactive={moveStep}\r\n        buttonMode={true}\r\n        width={40}\r\n        height={40}\r\n        x={value.x*40}\r\n        y={value.y*40}\r\n        zIndex={2}\r\n        tint={roundMoveDone?0x495057:0xffffff}\r\n        pointerover={()=>{\r\n          dispatch(MoveSelect({\r\n            position:{ \r\n              x:value.x, \r\n              y:value.y,\r\n            },\r\n            step:value.step,\r\n            changeColor:'0x06d6a0',\r\n            alphaVal:0.5\r\n          }));\r\n        }}\r\n        pointerout={()=>{\r\n          dispatch(MoveSelect({\r\n            position:{ \r\n              x:value.x, \r\n              y:value.y,\r\n            },\r\n            step:value.step,\r\n            changeColor:'0x383838',\r\n            alphaVal:0\r\n          }));\r\n        }}\r\n        pointertap={()=>{\r\n          setMoveStep(false);\r\n          dispatch(chessSelected({\r\n            key:key\r\n          }));\r\n          dispatch(MoveSelect({\r\n            position:{ \r\n              x:value.x, \r\n              y:value.y,\r\n            },\r\n            step:value.step,\r\n            changeColor:'0x383838',\r\n            alphaVal:0\r\n          }));\r\n        }}\r\n        image={loader.resources[`${value.name}-head-default`].data}\r\n      />}\r\n      {value.boardStatus&&<ChessUIBoard\r\n        ChessData={chess}\r\n        ChessVal={value}\r\n        ChessKey={key}\r\n        EnemyChessData={enemyChess}\r\n        positionX={(value.x*40)+40}\r\n        positionY={(value.y*40)}\r\n        setCurrentChess={setCurrentChess}\r\n        setMoveStep={setMoveStep}\r\n        dispatch={dispatch}\r\n      />}\r\n      {value.checkStatus&&<ChessStatus\r\n        ChessData={value}\r\n        ChessKey={key}\r\n        CheckStatus={chessCheckStatus}\r\n        setMoveStep={setMoveStep}\r\n        dispatch={dispatch}\r\n      />}\r\n    </React.Fragment>\r\n  })\r\n};","import React,{ useState } from 'react';\r\nimport { fromJS } from 'immutable';\r\nimport { Graphics, Text } from '@inlet/react-pixi/animated';\r\nimport { enemyChessSelected, enemyChessCheckStatus } from \"../../reducer/enemyChess\";\r\nimport * as PIXI from \"pixi.js\";\r\n\r\nexport const EnemyChessUIBoard = ({\r\n  ChessKey,\r\n  positionX,\r\n  positionY,\r\n  setMoveStep,\r\n  dispatch\r\n})=> {\r\n  const specialPosition = {\r\n    x: 720,\r\n    y: 535\r\n  };\r\n  const [textInforArray, setTextInforArray] = useState(fromJS([{\r\n      id:1,\r\n      title:\"狀態\",\r\n      textColor:['#ffffff', '#ffffff']\r\n    },{ \r\n      id:2,\r\n      title:\"返回\",\r\n      textColor:['#ffffff', '#ffffff']\r\n  }]));\r\n  const CreateText = ({ noop })=>{\r\n    return textInforArray.map((val,key)=>{\r\n      return <Text\r\n        key={key}\r\n        interactive={true}\r\n        buttonMode={true}\r\n        text={val.get('title')}\r\n        x={10}\r\n        y={5+(25*key)}\r\n        style={new PIXI.TextStyle({\r\n          fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\r\n          fontSize: 20,\r\n          fill:val.get('textColor').toJS(),\r\n        })}\r\n        pointerover={()=>{\r\n          setTextInforArray(prev=>\r\n            prev.setIn([key,'textColor',1],'#9d4edd')\r\n          );\r\n        }}\r\n        pointerout={()=>{\r\n          setTextInforArray(prev=>\r\n            prev.setIn([key,'textColor',1],'#ffffff')\r\n          );\r\n        }}\r\n        pointertap={(e)=>{\r\n          switch (val.get('id')) {\r\n            case 1:\r\n              dispatch(enemyChessCheckStatus({\r\n                key:ChessKey\r\n              }));\r\n              dispatch(enemyChessSelected({\r\n                key:ChessKey\r\n              }));\r\n              break;\r\n            case 2 :\r\n              setMoveStep(true);\r\n              dispatch(enemyChessSelected({\r\n                key:ChessKey\r\n              }));\r\n              break;\r\n            default:\r\n              return console.log(e.target)\r\n          };\r\n        }}\r\n      />\r\n    }\r\n  )};\r\n  return <Graphics\r\n    x={positionX!==800?positionX:specialPosition.x}\r\n    y={(positionY!==560&&positionY!==520)?positionY:specialPosition.y}\r\n    zIndex={3}\r\n    draw={g=> {\r\n      g.lineStyle(1,`0xffffff`,1);\r\n      g.beginFill(`0x22223b`);\r\n      g.drawRoundedRect(0,0,60,62,8);\r\n      g.endFill();\r\n    }}\r\n  ><CreateText/></Graphics>\r\n}","import React from 'react';\r\nimport { Sprite } from '@inlet/react-pixi/animated';\r\nimport { loader } from '../DataLoader';\r\n// reducers\r\nimport { enemyChessSelected, enemyChessCheckStatus } from \"../../reducer/enemyChess\";\r\n// other part\r\nimport { EnemyChessUIBoard } from \"./EnemyChessUIBoard\";\r\nimport { ChessStatus } from \"../Common/ChessStatus\";\r\n\r\nexport const EnemyChess = ({\r\n  enemyChessProps\r\n})=>{\r\n  const { \r\n    enemyChess,\r\n    moveStep=Boolean,\r\n    setMoveStep,\r\n    dispatch\r\n  } = enemyChessProps;\r\n  return enemyChess.map((value,key)=>{\r\n    return <React.Fragment key={key}>\r\n      {value.debut&&<Sprite\r\n        interactive={moveStep}\r\n        buttonMode={true}\r\n        width={40}\r\n        height={40}\r\n        x={value.x*40}\r\n        y={value.y*40}\r\n        zIndex={2}\r\n        pointertap={()=>{\r\n          setMoveStep(false);\r\n          dispatch(enemyChessSelected({\r\n            key:key\r\n          }));\r\n        }}\r\n        image={loader.resources[`${value.name}-head-default`].data}\r\n      />}\r\n      {value.boardStatus&&<EnemyChessUIBoard\r\n        ChessKey={key}\r\n        positionX={(value.x*40)+40}\r\n        positionY={(value.y*40)}\r\n        setMoveStep={setMoveStep}\r\n        dispatch={dispatch}\r\n      />}\r\n      {value.checkStatus&&<ChessStatus\r\n        ChessData={value}\r\n        ChessKey={key}\r\n        CheckStatus={enemyChessCheckStatus}\r\n        setMoveStep={setMoveStep}\r\n        dispatch={dispatch}\r\n      />}\r\n    </React.Fragment>\r\n  })\r\n};\r\n","import React,{ useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Stage, Container, Sprite } from '@inlet/react-pixi/animated';\r\n// reducers\r\nimport { stageDebut } from \"../reducer/chess\";\r\nimport { enemyStageDebut } from \"../reducer/enemyChess\";\r\n// other part\r\nimport { CreateCheckerboard } from './Common/Checkerboard';\r\nimport { ConfirmTip } from \"./Common/ConfirmTips\";\r\nimport { UsualTip } from \"./Common/UsualTip\";\r\nimport { BattleBoard } from \"./Common/BattleBoard\";\r\nimport { BattleAnimeShow } from \"./Common/BattleAnimeShow/Index\";\r\nimport { OtherTab } from \"./Common/OtherTab\";\r\nimport { EnemyRoundTab } from \"./Common/EnemyRoundTab/Index\";\r\nimport { Chess } from \"../components/Chess/Chess\";\r\nimport { EnemyChess } from \"../components/EnemyChess/EnemyChess\";\r\n// rule\r\nimport { stageRule } from \"../constants/stageRule\";\r\nimport { loader } from './DataLoader';\r\nexport const Canvas = ()=> {\r\n  const [ stageStatus, setStageStatus ] = useState('stageOne');\r\n  const [ roundNum, setRoundNum ] = useState(1);\r\n  const [ otherTab, setOtherTab ] = useState(false);\r\n  const [ enemyRoundTab, setEnemyRoundTab ] = useState({\r\n    oder:0,\r\n    status:false\r\n  });\r\n  const [ currentChess, setCurrentChess ] = useState({\r\n    key:0,\r\n    type:\"MOVE\"\r\n  });\r\n  const [ usualTip, setUsualTip ] = useState({\r\n    title:``,\r\n    status:false,\r\n  });\r\n  const [ tipStatus, setTipStatus ] = useState({\r\n    title:``,\r\n    status:false,\r\n    position:{\r\n      x:0,y:0\r\n    },\r\n  });\r\n  const [ battleInfo, setBattleInfo ] = useState({\r\n    status:false,\r\n    attacker:{ key:'' },\r\n    target:{ key:'' }\r\n  });\r\n  const [ animeShow, setAnimeShow ] = useState({\r\n    status:false,\r\n    type:'',\r\n    attacker:{ key:'', skill:{}, prevSP:0 },\r\n    target:{ key:'', isHit:false, prevLife:0 }\r\n  });\r\n  const [ moveStep, setMoveStep ] = useState(true);\r\n  const [ currentBGM, setCurrentBGM ] = useState('');\r\n  const chessMap = useSelector(state=>state.chessMap);\r\n  const chess = useSelector(state=>state.chess);\r\n  const enemyChess = useSelector(state=>state.enemyChess);\r\n  const dispatch = useDispatch();\r\n  // debut\r\n  useEffect(()=>{\r\n    dispatch(stageDebut({ \r\n      isDebutChess:stageRule.getIn([stageStatus,'debutChess'])\r\n    }));\r\n    dispatch(enemyStageDebut({ \r\n      isDebutChess:stageRule.getIn([stageStatus,'debutEnemyChess'])\r\n    }));\r\n  },[ dispatch, stageStatus ]);\r\n  return <Stage\r\n    width={800}\r\n    height={600}\r\n    options={{\r\n      autoDensity: true, \r\n      antialias: true,\r\n      backgroundColor:0x01262a\r\n    }}>\r\n    <Container sortableChildren={true}>\r\n      <Sprite\r\n        width={30}\r\n        height={30}\r\n        anchor={0.5} \r\n        x={760}\r\n        y={40}\r\n        zIndex={99}\r\n        interactive={moveStep}\r\n        buttonMode={true}\r\n        image={loader.resources[`otherIcon`].data}\r\n        pointertap={()=>{\r\n          setOtherTab(true);\r\n          setMoveStep(false);\r\n        }}\r\n      />\r\n      <Sprite\r\n        width={800}\r\n        height={600}\r\n        zIndex={1}\r\n        image={loader.resources[`${stageStatus}-main-BG`].data}\r\n      />\r\n      <CreateCheckerboard reduxProps={{ \r\n        chess,\r\n        enemyChess,\r\n        chessMap,\r\n        currentChess,\r\n        dispatch,\r\n        setTipStatus,\r\n        setMoveStep,\r\n        setBattleInfo\r\n      }}/>\r\n      <Chess chessProps={{\r\n        chess,\r\n        enemyChess,\r\n        moveStep,\r\n        setMoveStep,\r\n        setCurrentChess,\r\n        dispatch\r\n      }}/>\r\n      <EnemyChess enemyChessProps={{\r\n        enemyChess,\r\n        moveStep,\r\n        setMoveStep,\r\n        dispatch\r\n      }}/>\r\n    </Container>\r\n    {otherTab&&\r\n      <OtherTab\r\n        props={{\r\n          stageStatus,\r\n          roundNum,\r\n          setMoveStep,\r\n          setOtherTab,\r\n          setTipStatus,\r\n          setCurrentChess\r\n        }}\r\n      />}\r\n    {tipStatus.status&&\r\n      <ConfirmTip \r\n        props={{\r\n          chess,\r\n          currentChess,\r\n          tipStatus,\r\n          dispatch,\r\n          setMoveStep,\r\n          setTipStatus,\r\n          setOtherTab,\r\n          setRoundNum,\r\n          setUsualTip\r\n        }}\r\n      />}\r\n    {usualTip.status&&\r\n      <UsualTip\r\n        props={{\r\n          stageStatus,\r\n          chess,\r\n          currentChess,\r\n          enemyChess,\r\n          usualTip,\r\n          setMoveStep,\r\n          setUsualTip,\r\n          setCurrentChess,\r\n          setEnemyRoundTab\r\n        }}\r\n      />}\r\n    {battleInfo.status&&\r\n      <BattleBoard\r\n        props={{\r\n          battleInfo,\r\n          currentBGM,\r\n          setMoveStep,\r\n          setBattleInfo,\r\n          setAnimeShow,\r\n          setCurrentBGM,\r\n          dispatch\r\n        }}\r\n      />}\r\n    {animeShow.status&&\r\n      <BattleAnimeShow \r\n        props={{\r\n          stageStatus,\r\n          animeShow,\r\n          chess,\r\n          enemyChess,\r\n          setMoveStep,\r\n          setAnimeShow,\r\n          setUsualTip,\r\n          dispatch\r\n        }}\r\n      />}\r\n    {enemyRoundTab.status&&\r\n      <EnemyRoundTab\r\n        props={{\r\n          enemyRoundTab,\r\n          chess,\r\n          enemyChess,\r\n          setEnemyRoundTab,\r\n          setAnimeShow,\r\n          setCurrentChess,\r\n          dispatch\r\n        }}\r\n      />}\r\n  </Stage>\r\n};","import React, { useState, useEffect } from 'react';\r\nimport styled, { createGlobalStyle } from 'styled-components';\r\nimport { Canvas } from './Canvas';\r\nimport { loader } from './DataLoader';\r\nconst GlobalStyle = createGlobalStyle`\r\n  body { background:#1d2430; }\r\n`;\r\nconst StyledApp = styled.div`\r\n  position: relative;\r\n  display:flex;\r\n  align-items:center;\r\n  justify-content:center;\r\n  width:100%;\r\n  height:100vh;\r\n  .loading {\r\n    color: #fff;\r\n    font-size:24px;\r\n  }\r\n`;\r\nexport const App = ()=> {\r\n  const [ dataIsDone, setDataIsDone ] = useState(false);\r\n  const [ progress, setProgress ] = useState(0);\r\n  useEffect(()=>{\r\n    loader.onProgress.add((loader)=>{\r\n      setProgress(Math.floor(loader.progress));\r\n    });\r\n    loader.onComplete.add((loader,resources)=>{\r\n      setDataIsDone(true);\r\n    });\r\n  });\r\n  return <StyledApp>\r\n    <GlobalStyle/>\r\n    {dataIsDone?<Canvas />:\r\n      <span className=\"loading\">Loading {progress}%..</span>}\r\n  </StyledApp>\r\n};\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { createStore, combineReducers } from 'redux';\r\nimport chess from './chess';\r\nimport chessMap from './map';\r\nimport enemyChess from './enemyChess';\r\nconst rootReducer = combineReducers({\r\n  chess,\r\n  chessMap,\r\n  enemyChess\r\n});\r\nexport const store = createStore(rootReducer);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { App } from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './reducer/index';\r\n\r\nReactDOM.render(<Provider store={store}><App /></Provider>,document.getElementById('root'));\r\nreportWebVitals();\r\n"],"sourceRoot":""}