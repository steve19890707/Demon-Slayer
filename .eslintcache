[{"/Users/steve0639/Desktop/工作資料夾/github/Demon-Slayer/src/reducer/map.js":"1","/Users/steve0639/Desktop/工作資料夾/github/Demon-Slayer/src/components/Canvas.js":"2","/Users/steve0639/Desktop/工作資料夾/github/Demon-Slayer/src/components/Common/BattleAnimeShow.js":"3","/Users/steve0639/Desktop/工作資料夾/github/Demon-Slayer/src/components/Common/AinmeShowBG.js":"4","/Users/steve0639/Desktop/工作資料夾/github/Demon-Slayer/src/components/Common/BattleBoard.js":"5","/Users/steve0639/Desktop/工作資料夾/github/Demon-Slayer/src/constants/ChessSkillShow/Index.js":"6","/Users/steve0639/Desktop/工作資料夾/github/Demon-Slayer/src/constants/ChessSkillShow/TanjirouSkill.js":"7","/Users/steve0639/Desktop/工作資料夾/github/Demon-Slayer/src/constants/EnemyChessSkillShow/Index.js":"8","/Users/steve0639/Desktop/工作資料夾/github/Demon-Slayer/src/constants/EnemyChessSkillShow/TeoniSkill.js":"9","/Users/steve0639/Desktop/工作資料夾/github/Demon-Slayer/src/reducer/index.js":"10","/Users/steve0639/Desktop/工作資料夾/github/Demon-Slayer/src/reducer/chess.js":"11","/Users/steve0639/Desktop/工作資料夾/github/Demon-Slayer/src/components/Common/UsualTip.js":"12","/Users/steve0639/Desktop/工作資料夾/github/Demon-Slayer/src/components/Common/ConfirmTips.js":"13","/Users/steve0639/Desktop/工作資料夾/github/Demon-Slayer/src/components/Common/ChessStatus.js":"14","/Users/steve0639/Desktop/工作資料夾/github/Demon-Slayer/src/components/Chess/Chess.js":"15"},{"size":4835,"mtime":1609291477480,"results":"16","hashOfConfig":"17"},{"size":4091,"mtime":1609321072858,"results":"18","hashOfConfig":"17"},{"size":8759,"mtime":1609321033754,"results":"19","hashOfConfig":"17"},{"size":1833,"mtime":1609312076516,"results":"20","hashOfConfig":"17"},{"size":9474,"mtime":1609323872071,"results":"21","hashOfConfig":"17"},{"size":574,"mtime":1609321284618,"results":"22","hashOfConfig":"17"},{"size":3724,"mtime":1609322363306,"results":"23","hashOfConfig":"17"},{"size":565,"mtime":1609321544903,"results":"24","hashOfConfig":"17"},{"size":4366,"mtime":1609322575693,"results":"25","hashOfConfig":"17"},{"size":274,"mtime":1608692669676,"results":"26","hashOfConfig":"17"},{"size":3177,"mtime":1609323883444,"results":"27","hashOfConfig":"17"},{"size":2776,"mtime":1609212152278,"results":"28","hashOfConfig":"17"},{"size":2835,"mtime":1609291477467,"results":"29","hashOfConfig":"17"},{"size":3429,"mtime":1609212152278,"results":"30","hashOfConfig":"17"},{"size":2441,"mtime":1609324192029,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"qp2hqy",{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/steve0639/Desktop/工作資料夾/github/Demon-Slayer/src/reducer/map.js",[],"/Users/steve0639/Desktop/工作資料夾/github/Demon-Slayer/src/components/Canvas.js",["64"],"/Users/steve0639/Desktop/工作資料夾/github/Demon-Slayer/src/components/Common/BattleAnimeShow.js",["65"],"import React,{ useState, useEffect } from 'react';\nimport { Container, Sprite, Graphics, Text } from '@inlet/react-pixi/animated';\nimport { loader } from '../DataLoader';\nimport * as PIXI from \"pixi.js\";\nimport { enemyChessDead } from \"../../reducer/enemyChess\";\n// bg\nimport { AnimeShowBG } from \"./AinmeShowBG\";\n// skill\nimport { ChessSkillShow } from \"../../constants/ChessSkillShow/Index\";\nimport { EnemyChessSkillShow } from \"../../constants/EnemyChessSkillShow/Index\";\n\nexport const BattleAnimeShow = ({\n  props\n}) =>{\n  const { stageStatus, animeShow, chess, enemyChess, \n    setMoveStep, setAnimeShow, setUsualTip, dispatch } = props;\n  const { target } = animeShow;\n  const [ targetHp, setTargetHp ] = useState(target.prevLife);\n  // TopBar\n  const TopBar = ({\n    attacker={},\n    target={},\n  })=> {\n    return <Graphics \n      x={-400}\n      y={-300}\n      zIndex={98}\n      draw={g=> {\n        g.beginFill(`0x000f23`);\n        g.drawRoundedRect(0,0,800,80,0);\n        g.endFill();\n      }}\n    >\n      <Container sortableChildren={true}>\n        <Graphics\n          x={370}\n          y={40}\n          draw={g=> {\n            g.beginFill(`0x364958`);\n            g.drawRoundedRect(-21,-21,42,42,50);\n            g.endFill();\n          }}\n        >\n          <Text \n            text={`守`} \n            x={0} y={0}\n            anchor={0.5}\n            style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n              fontSize: 24,\n              fill:'#ffffff',\n            })}/>\n        </Graphics>\n        <Graphics\n          x={420}\n          y={40}\n          draw={g=> {\n            g.beginFill(`0xfe7f2d`);\n            g.drawRoundedRect(-21,-21,42,42,50);\n            g.endFill();\n          }}\n        >\n          <Text \n            text={`攻`} \n            x={0} y={0}\n            anchor={0.5}\n            style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n              fontSize: 24,\n              fill:'#ffffff',\n            })}/>\n        </Graphics>\n        {/* target */}\n        <Sprite\n          width={50}\n          height={50}\n          x={50}\n          y={15}\n          image={loader.resources[`${target.name}-head-default`].data}\n        />\n        <Text \n          text={`${targetHp} / ${target.fullValue.hp}`}\n          anchor={{x:1,y:0}} \n          x={320} y={10}\n          style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n            fontSize: 18,\n            fill:'#e71d36',\n          })}/>\n        <Graphics\n          x={320} y={35}\n          zIndex={1}\n          draw={g=> {\n            g.beginFill(`0x333533`);\n            g.drawRoundedRect(0,0,-200,10,0);\n            g.endFill();\n          }}\n        />\n        <Graphics\n          x={320} y={35}\n          zIndex={2}\n          draw={g=> {\n            g.beginFill(`0xe71d36`);\n            g.drawRoundedRect(0,0,-200,10,0);\n            g.endFill();\n          }}\n        />\n        {/* attacker */}\n        <Sprite\n          width={50}\n          height={50}\n          x={690}\n          y={15}\n          image={loader.resources[`${attacker.name}-head-default`].data}\n        />\n        <Text \n          text={`${attacker.hp} / ${attacker.fullValue.hp}`}\n          anchor={{x:1,y:0}} \n          x={670} y={10}\n          style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n            fontSize: 18,\n            fill:'#e71d36',\n          })}/>\n        <Graphics\n          x={670} y={35}\n          zIndex={1}\n          draw={g=> {\n            g.beginFill(`0x333533`);\n            g.drawRoundedRect(0,0,-200,10,0);\n            g.endFill();\n          }}\n        />\n        <Graphics\n          x={670} y={35}\n          zIndex={2}\n          draw={g=> {\n            g.beginFill(`0xe71d36`);\n            g.drawRoundedRect(0,0,-200,10,0);\n            g.endFill();\n          }}\n        />\n      </Container>\n    </Graphics>\n  };\n  // Bottombar\n  const Bottombar = ()=> {\n    return <Graphics \n      x={-400}\n      y={150}\n      zIndex={98}\n      draw={g=> {\n        g.beginFill(`0x000f23`);\n        g.drawRoundedRect(0,0,800,150,0);\n        g.endFill();\n      }}\n    ></Graphics>\n  };\n  // CreateContent\n  const CreateContent = ()=>{\n    const [ BGstatus, setBGstatus ] = useState({ \n      type:'STANDBY',\n      defence: false\n    });\n    const [ BGprop, setBGpops ] = useState({ toX:400, duration: 20000 });\n    const [ SkBGprop, setSkBGpops ] = useState({ toX:400, duration: 500 });\n    const [ animeIsDone, setAnimeIsDone ] = useState(false);\n    //  關閉動畫判斷\n    useEffect(()=>{\n      if(!animeIsDone){ return };\n      setAnimeShow({\n        status:false,\n        type:'',\n        isHit:false,\n        attacker:{ key:'', skill:{}, prevSP:0 },\n        target:{ key:'', isHit:false, prevLife:0 }\n      });\n      // result check line\n      if(animeShow.type===\"USER\" &&\n        enemyChess[target.key].hp <= 0\n      ){\n        dispatch(enemyChessDead({ key:target.key }));\n        setUsualTip({\n          title:`已擊敗 ${enemyChess[target.key].cn}!`,\n          status:true,\n        });\n      }else {\n        setMoveStep(true);\n      };\n    },[ animeIsDone ])\n    return <Container sortableChildren={true}>\n      <AnimeShowBG\n        props={{stageStatus, BGstatus, BGprop, SkBGprop, \n          setBGpops, setSkBGpops}}\n      />\n      {animeShow.type===\"USER\"?\n        <TopBar\n          attacker={chess[typeof(animeShow.attacker.key)!=='number'?0:animeShow.attacker.key]}\n          target={enemyChess[typeof(animeShow.target.key)!=='number'?0:animeShow.target.key]}\n        />:\n        <TopBar\n          attacker={enemyChess[typeof(animeShow.target.key)!=='number'?0:animeShow.target.key]}\n          target={chess[typeof(animeShow.attacker.key)!=='number'?0:animeShow.attacker.key]}\n        />\n      }\n      {animeShow.type===\"USER\"?\n        <>\n          <EnemyChessSkillShow\n            attacker={enemyChess[typeof(animeShow.target.key)!=='number'?0:animeShow.target.key]}\n            skill={{ name:'防禦' }}\n            BGstatus={BGstatus}\n            isHit={animeShow.isHit}\n            resultLife={\n              target.prevLife -\n              animeShow.attacker.skill.atk \n            }\n            setBGstatus={setBGstatus}\n            setAnimeIsDone={setAnimeIsDone}\n          />\n          <ChessSkillShow\n            attacker={chess[typeof(animeShow.attacker.key)!=='number'?0:animeShow.attacker.key]}\n            skill={animeShow.attacker.skill}\n            BGstatus={BGstatus}\n            setBGstatus={setBGstatus}\n            setAnimeIsDone={setAnimeIsDone}\n          />\n        </>:\n        <>\n         <ChessSkillShow\n            attacker={chess[typeof(animeShow.target.key)!=='number'?0:animeShow.target.key]}\n            skill={{ name:'防禦' }}\n            BGstatus={BGstatus}\n            isHit={animeShow.isHit}\n            resultLife={\n              target.prevLife -\n              animeShow.attacker.skill.atk \n            }\n            setBGstatus={setBGstatus}\n            setAnimeIsDone={setAnimeIsDone}\n         />\n         <EnemyChessSkillShow\n          attacker={enemyChess[typeof(animeShow.attacker.key)!=='number'?0:animeShow.attacker.key]}\n          skill={animeShow.attacker.skill}\n          BGstatus={BGstatus}\n          setBGstatus={setBGstatus}\n          setAnimeIsDone={setAnimeIsDone}\n         />\n       </>}\n      <Bottombar/>\n      <Graphics\n        zIndex={99}\n        interactive={true}\n        buttonMode={true}\n        x={315}\n        y={255}\n        draw={g=> {\n          g.beginFill(`0x586f7c`);\n          g.drawRoundedRect(-6,-3,75,30,6);\n          g.endFill();\n        }}\n        pointertap={()=>{\n          setAnimeShow({\n            status:false,\n            type:'',\n            isHit:false,\n            attacker:{ key:'', skill:{}, prevSP:0 },\n            target:{ key:'', isHit:false, prevLife:0 }\n          });\n          // result check line\n          if(animeShow.type===\"USER\" &&\n            enemyChess[target.key].hp <= 0\n          ){\n            dispatch(enemyChessDead({ key:target.key }));\n            setUsualTip({\n              title:`已擊敗 ${enemyChess[target.key].cn}!`,\n              status:true,\n            });\n          }else {\n            setMoveStep(true);\n          };\n        }}\n      >\n        <Text text={`戰鬥 off`} x={0} y={0}\n          style={new PIXI.TextStyle({ fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n            fontSize: 18,\n            fill:'#c0fdff',\n          })}\n        />\n      </Graphics>\n    </Container>\n  };\n  return <Graphics\n    x={400}\n    y={300}\n    zIndex={99}\n    draw={g=> {\n      g.beginFill(`0x011627`);\n      g.drawRoundedRect(-400,-300,800,600,0);\n      g.endFill();\n    }}\n  >\n    <CreateContent/>\n  </Graphics>\n};",["66","67"],"/Users/steve0639/Desktop/工作資料夾/github/Demon-Slayer/src/components/Common/AinmeShowBG.js",[],"/Users/steve0639/Desktop/工作資料夾/github/Demon-Slayer/src/components/Common/BattleBoard.js",[],"/Users/steve0639/Desktop/工作資料夾/github/Demon-Slayer/src/constants/ChessSkillShow/Index.js",[],"/Users/steve0639/Desktop/工作資料夾/github/Demon-Slayer/src/constants/ChessSkillShow/TanjirouSkill.js",[],"/Users/steve0639/Desktop/工作資料夾/github/Demon-Slayer/src/constants/EnemyChessSkillShow/Index.js",[],"/Users/steve0639/Desktop/工作資料夾/github/Demon-Slayer/src/constants/EnemyChessSkillShow/TeoniSkill.js",[],"/Users/steve0639/Desktop/工作資料夾/github/Demon-Slayer/src/reducer/index.js",[],"/Users/steve0639/Desktop/工作資料夾/github/Demon-Slayer/src/reducer/chess.js",[],"/Users/steve0639/Desktop/工作資料夾/github/Demon-Slayer/src/components/Common/UsualTip.js",[],"/Users/steve0639/Desktop/工作資料夾/github/Demon-Slayer/src/components/Common/ConfirmTips.js",[],"/Users/steve0639/Desktop/工作資料夾/github/Demon-Slayer/src/components/Common/ChessStatus.js",[],"/Users/steve0639/Desktop/工作資料夾/github/Demon-Slayer/src/components/Chess/Chess.js",[],{"ruleId":"68","severity":1,"message":"69","line":19,"column":24,"nodeType":"70","messageId":"71","endLine":19,"endColumn":38},{"ruleId":"68","severity":1,"message":"72","line":18,"column":21,"nodeType":"70","messageId":"71","endLine":18,"endColumn":32},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},"no-unused-vars","'setStageStatus' is assigned a value but never used.","Identifier","unusedVar","'setTargetHp' is assigned a value but never used.","no-native-reassign",["77"],"no-negated-in-lhs",["78"],"no-global-assign","no-unsafe-negation"]